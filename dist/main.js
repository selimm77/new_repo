(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["main"],{

/***/ "./package.json":
/*!**********************!*\
  !*** ./package.json ***!
  \**********************/
/*! exports provided: name, version, license, scripts, private, dependencies, devDependencies, default */
/***/ (function(module) {

module.exports = {"name":"angular-ngrx-material-starter","version":"7.2.0","license":"MIT","scripts":{"ng":"ng","start":"ng serve --port 4545 --open","build":"ng build","lint":"ng lint","watch":"ng test --configuration=test --browsers ChromeHeadless --watch","build:prod":"ng build --prod --vendor-chunk","clean":"rimraf ./dist/","server":"node ./server.js","prod":"npm run clean && npm run build:prod && npm run server"},"private":true,"dependencies":{"@ag-grid-community/angular":"~22.1.0","@ag-grid-enterprise/all-modules":"~22.1.0","@agm/core":"1.0.0-beta.5","@angular/animations":"^7.0.3","@angular/cdk":"^7.0.2","@angular/common":"^7.0.3","@angular/compiler":"^7.0.3","@angular/core":"^7.0.3","@angular/flex-layout":"^7.0.0-beta.19","@angular/forms":"^7.0.3","@angular/http":"^7.0.3","@angular/material":"^7.3.7","@angular/platform-browser":"^7.0.3","@angular/platform-browser-dynamic":"^7.0.3","@angular/router":"^7.0.3","@fortawesome/angular-fontawesome":"^0.3.0","@fortawesome/fontawesome-free":"^5.5.0","@fortawesome/fontawesome-svg-core":"^1.2.8","@fortawesome/free-brands-svg-icons":"^5.5.0","@fortawesome/free-solid-svg-icons":"^5.5.0","@ngrx/effects":"^7.0.0-beta.0","@ngrx/entity":"^7.0.0-beta.0","@ngrx/router-store":"^7.0.0-beta.0","@ngrx/store":"^7.0.0-beta.0","@ngrx/store-devtools":"^7.0.0-beta.0","@ngx-translate/core":"^11.0.0","@ngx-translate/http-loader":"^4.0.0","ag-grid-angular":"22.1.1","ag-grid-community":"22.1.1","angular-material":"^1.2.2","bootstrap":"^4.2.1","browser-detect":"^0.2.28","core-js":"^2.5.4","echarts":"^4.2.0-rc.2","hammerjs":"^2.0.8","jquery":"^3.3.1","lodash":"^4.17.11","ng-circle-progress":"^1.3.0","ng-drag-drop":"^5.0.0","ng-keyboard-shortcuts":"^6.1.1","ng-zorro-antd":"^7.0.0-rc.1","ng2-right-click-menu":"^1.1.0","ngrx-store-localstorage":"^5.1.0","ngx-drag-drop":"^1.1.0","ngx-echarts":"^4.1.0","ngx-file-drop":"^5.0.4","node-sass":"^4.13.1","primeicons":"^1.0.0","primeng":"^7.0.0","rxjs":"^6.3.3","uuid":"^3.3.2","web-animations-js":"^2.2.5","zone.js":"^0.8.26"},"devDependencies":{"@angular-devkit/build-angular":"^0.13","@angular-extensions/testing-library":"^3.0.3","@angular/cli":"^7.0.4","@angular/compiler-cli":"^7.0.3","@angular/language-service":"^7.0.3","@compodoc/compodoc":"^1.1.8","@ngrx/schematics":"^7.0.0","@types/echarts":"^4.1.3","@types/jasmine":"~2.8.9","@types/jasminewd2":"^2.0.5","@types/lodash":"^4.14.119","@types/node":"^10.12.2","all-contributors-cli":"^5.4.1","codelyzer":"~4.5.0","jasmine-core":"~3.2.1","jasmine-marbles":"^0.4.0","jasmine-spec-reporter":"~4.2.1","karma":"~3.0.0","karma-chrome-launcher":"~2.2.0","karma-coverage-istanbul-reporter":"~2.0.4","karma-jasmine":"~1.1.2","karma-jasmine-html-reporter":"~1.3.1","karma-spec-reporter":"~0.0.32","lint-staged":"^7.3.0","ngrx-store-freeze":"^0.2.4","npm-run-all":"^4.1.3","pa11y-ci":"^2.1.1","prettier":"^1.14.3","protractor":"^5.4.1","rimraf":"^2.6.2","standard-version":"4.2.0","ts-node":"~7.0.1","tslint":"~5.11.0","typescript":"3.2.4","webpack-bundle-analyzer":"^3.0.3"}};

/***/ }),

/***/ "./src/$$_lazy_route_resource lazy recursive":
/*!**********************************************************!*\
  !*** ./src/$$_lazy_route_resource lazy namespace object ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var map = {
	"./modules/administration/administration.module": [
		"./src/app/dcm/modules/administration/administration.module.ts",
		"common",
		"modules-administration-administration-module"
	],
	"./modules/locations/locations.module": [
		"./src/app/dcm/modules/locations/locations.module.ts",
		"common"
	],
	"./modules/matching/matching.module": [
		"./src/app/dcm/modules/matching/matching.module.ts",
		"default~app-dcm-dcm-module~modules-matching-matching-module",
		"common"
	],
	"./modules/upload/upload.module": [
		"./src/app/dcm/modules/upload/upload.module.ts",
		"default~app-dcm-dcm-module~modules-upload-upload-module",
		"common"
	],
	"app/dcm/dcm.module": [
		"./src/app/dcm/dcm.module.ts",
		"default~app-dcm-dcm-module~modules-upload-upload-module",
		"default~app-dcm-dcm-module~modules-matching-matching-module",
		"common",
		"app-dcm-dcm-module"
	]
};
function webpackAsyncContext(req) {
	var ids = map[req];
	if(!ids) {
		return Promise.resolve().then(function() {
			var e = new Error("Cannot find module '" + req + "'");
			e.code = 'MODULE_NOT_FOUND';
			throw e;
		});
	}
	return Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {
		var id = ids[0];
		return __webpack_require__(id);
	});
}
webpackAsyncContext.keys = function webpackAsyncContextKeys() {
	return Object.keys(map);
};
webpackAsyncContext.id = "./src/$$_lazy_route_resource lazy recursive";
module.exports = webpackAsyncContext;

/***/ }),

/***/ "./src/app/app-routing.module.ts":
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/*! exports provided: AppRoutingModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppRoutingModule", function() { return AppRoutingModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var routes = [
    {
        path: 'dcm',
        loadChildren: 'app/dcm/dcm.module#DcmModule'
    },
    {
        path: '',
        redirectTo: '/dcm/upload',
        pathMatch: 'full'
    },
    {
        path: '**',
        redirectTo: 'dcm'
    }
];
var AppRoutingModule = /** @class */ (function () {
    function AppRoutingModule() {
    }
    AppRoutingModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            // useHash supports github.io demo page, remove in your app
            imports: [
                _angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"].forRoot(routes, {
                    useHash: true,
                    scrollPositionRestoration: 'enabled'
                })
            ],
            exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__["RouterModule"]]
        })
    ], AppRoutingModule);
    return AppRoutingModule;
}());



/***/ }),

/***/ "./src/app/app.component.html":
/*!************************************!*\
  !*** ./src/app/app.component.html ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div [class]=\"'theme-wrapper ' + (theme$ | async)\">\r\n    <div class=\"wrapper\">\r\n      <div class=\"content\">\r\n        <router-outlet #o=\"outlet\"></router-outlet>\r\n      </div>\r\n    </div>\r\n\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/app.component.scss":
/*!************************************!*\
  !*** ./src/app/app.component.scss ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/**\n * Applies styles for users in high contrast mode. Note that this only applies\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n * attribute, however Chrome handles high contrast differently.\n * @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n *    `white-on-black` or `black-on-white`.\n */\n/* Theme for the ripple elements.*/\n/* stylelint-disable material/no-prefixes */\n/* stylelint-enable */\n.cdk-global-overlay-wrapper,.cdk-overlay-container{pointer-events:none;top:0;left:0;height:100%;width:100%}\n.cdk-overlay-container{position:fixed;z-index:1000}\n.cdk-overlay-container:empty{display:none}\n.cdk-global-overlay-wrapper{display:-ms-flexbox;display:flex;position:absolute;z-index:1000}\n.cdk-overlay-pane{position:absolute;pointer-events:auto;box-sizing:border-box;z-index:1000;display:-ms-flexbox;display:flex;max-width:100%;max-height:100%}\n.cdk-overlay-backdrop{position:absolute;top:0;bottom:0;left:0;right:0;z-index:1000;pointer-events:auto;-webkit-tap-highlight-color:transparent;transition:opacity .4s cubic-bezier(.25,.8,.25,1);opacity:0}\n.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:1}\n@media screen and (-ms-high-contrast:active){.cdk-overlay-backdrop.cdk-overlay-backdrop-showing{opacity:.6}}\n.cdk-overlay-dark-backdrop{background:rgba(0,0,0,.32)}\n.cdk-overlay-transparent-backdrop,.cdk-overlay-transparent-backdrop.cdk-overlay-backdrop-showing{opacity:0}\n.cdk-overlay-connected-position-bounding-box{position:absolute;z-index:1000;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;min-width:1px;min-height:1px}\n.cdk-global-scrollblock{position:fixed;width:100%;overflow-y:scroll}\n.theme-wrapper {\n  height: 100%;\n  width: 100%; }\n::ng-deep .ui-table-scrollable-body {\n  color: white !important; }\nmat-sidenav-container {\n  height: 100%;\n  width: 100%; }\nmat-sidenav-container .toolbar {\n    position: fixed;\n    width: 100%;\n    display: -ms-flexbox;\n    display: flex;\n    z-index: 10; }\nmat-sidenav-container .toolbar .nav-button {\n      margin: 0 10px 0 0; }\nmat-sidenav-container .toolbar fa-icon {\n      font-size: 24px; }\nmat-sidenav-container .toolbar .branding {\n      cursor: pointer;\n      overflow: hidden;\n      padding-top: 4px;\n      text-overflow: ellipsis; }\nmat-sidenav-container .toolbar .branding.center {\n        text-align: center; }\nmat-sidenav-container .toolbar .branding img {\n        position: relative;\n        top: -2px;\n        width: 48px;\n        height: 48px; }\nmat-sidenav-container .toolbar .mat-stroked-button {\n      margin-right: 10px; }\nmat-sidenav-container .toolbar .spacer {\n      -ms-flex: 1 1 auto;\n          flex: 1 1 auto; }\nmat-sidenav-container .toolbar mat-select {\n      margin: 0 0 0 20px;\n      width: 40px;\n      font-size: 14px; }\n@media (max-width: 992px) {\n      mat-sidenav-container .toolbar .nav-button {\n        min-width: 0;\n        padding: 0 10px; } }\nmat-sidenav-container .wrapper {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-direction: column;\n        flex-direction: column; }\nmat-sidenav-container .wrapper .content {\n      -ms-flex: 1 0 auto;\n          flex: 1 0 auto;\n      overflow: hidden; }\nmat-sidenav-container .wrapper .footer {\n      -ms-flex: 0 0 auto;\n          flex: 0 0 auto;\n      padding: 0 15px;\n      text-align: center; }\nmat-sidenav-container .wrapper .footer .row {\n        padding: 10px 0; }\nmat-sidenav-container .wrapper .footer .row .links a {\n          transition: padding 0.5s;\n          display: inline-block;\n          padding: 20px 5px; }\nmat-sidenav-container .wrapper .footer .row .links a:hover {\n            text-decoration: none; }\nmat-sidenav-container .wrapper .footer .row .links a fa-icon {\n            font-size: 30px;\n            width: 35px; }\nmat-sidenav-container .wrapper .footer .row .links a span {\n            display: inline-block;\n            width: 75px;\n            padding: 0 0 0 3px;\n            overflow: hidden;\n            text-align: left;\n            white-space: nowrap;\n            transition: width 0.5s; }\n@media (min-width: 992px) {\n          mat-sidenav-container .wrapper .footer .row .links a {\n            padding: 20px 10px; } }\n@media (max-width: 768px) {\n          mat-sidenav-container .wrapper .footer .row .links a {\n            padding: 20px; }\n            mat-sidenav-container .wrapper .footer .row .links a span {\n              width: 0;\n              padding: 0; } }\n@media (max-width: 576px) {\n          mat-sidenav-container .wrapper .footer .row .links a {\n            padding: 20px 5px; } }\n@media (min-width: 576px) {\n          mat-sidenav-container .wrapper .footer .row .signature {\n            position: relative; }\n            mat-sidenav-container .wrapper .footer .row .signature a {\n              position: absolute;\n              right: 15px; } }\nmat-sidenav {\n  width: 250px; }\nmat-sidenav .branding {\n    height: 64px;\n    padding: 8px 10px;\n    font-size: 20px;\n    font-weight: 500; }\nmat-sidenav .branding img {\n      height: 48px;\n      margin: 2px 10px 0 0; }\nmat-sidenav .branding span {\n      position: relative;\n      top: 3px; }\nmat-sidenav .mat-nav-list {\n    padding-top: 0; }\n\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/app.component.ts":
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/*! exports provided: AppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppComponent", function() { return AppComponent; });
/* harmony import */ var browser_detect__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! browser-detect */ "./node_modules/browser-detect/dist/browser-detect.es5.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var _env_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @env/environment */ "./src/environments/environment.ts");
/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./settings */ "./src/app/settings/index.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var AppComponent = /** @class */ (function () {
    function AppComponent(store, storageService) {
        this.store = store;
        this.storageService = storageService;
        this.isProd = _env_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].production;
        this.envName = _env_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].envName;
        this.version = _env_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].versions.app;
        this.year = new Date().getFullYear();
        this.logo = __webpack_require__(/*! ../assets/logo.png */ "./src/assets/logo.png");
        this.languages = ['en', 'de', 'sk', 'fr', 'es', 'pt-br'];
        this.navigation = [
            { link: 'about', label: 'anms.menu.about' },
            { link: 'features', label: 'anms.menu.features' },
            { link: 'examples', label: 'anms.menu.examples' }
        ];
        this.navigationSideMenu = this.navigation.concat([
            { link: 'settings', label: 'anms.menu.settings' }
        ]);
    }
    AppComponent_1 = AppComponent;
    AppComponent.isIEorEdgeOrSafari = function () {
        return ['ie', 'edge', 'safari'].includes(Object(browser_detect__WEBPACK_IMPORTED_MODULE_0__["default"])().name);
    };
    AppComponent.prototype.ngOnInit = function () {
        this.storageService.testLocalStorage();
        if (AppComponent_1.isIEorEdgeOrSafari()) {
            this.store.dispatch(new _settings__WEBPACK_IMPORTED_MODULE_5__["ActionSettingsChangeAnimationsPageDisabled"]({
                pageAnimationsDisabled: true
            }));
        }
        this.isAuthenticated$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_2__["select"])(_app_core__WEBPACK_IMPORTED_MODULE_3__["selectIsAuthenticated"]));
        this.stickyHeader$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_2__["select"])(_settings__WEBPACK_IMPORTED_MODULE_5__["selectSettingsStickyHeader"]));
        this.language$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_2__["select"])(_settings__WEBPACK_IMPORTED_MODULE_5__["selectSettingsLanguage"]));
        this.theme$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_2__["select"])(_settings__WEBPACK_IMPORTED_MODULE_5__["selectEffectiveTheme"]));
    };
    AppComponent.prototype.onLoginClick = function () {
        this.store.dispatch(new _app_core__WEBPACK_IMPORTED_MODULE_3__["ActionAuthLogin"]());
    };
    AppComponent.prototype.onLogoutClick = function () {
        this.store.dispatch(new _app_core__WEBPACK_IMPORTED_MODULE_3__["ActionAuthLogout"]());
    };
    AppComponent.prototype.onLanguageSelect = function (_a) {
        var language = _a.value;
        this.store.dispatch(new _settings__WEBPACK_IMPORTED_MODULE_5__["ActionSettingsChangeLanguage"]({ language: language }));
    };
    var AppComponent_1;
    AppComponent = AppComponent_1 = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'anms-root',
            template: __webpack_require__(/*! ./app.component.html */ "./src/app/app.component.html"),
            animations: [_app_core__WEBPACK_IMPORTED_MODULE_3__["routeAnimations"]],
            styles: [__webpack_require__(/*! ./app.component.scss */ "./src/app/app.component.scss")]
        }),
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_2__["Store"],
            _app_core__WEBPACK_IMPORTED_MODULE_3__["LocalStorageService"]])
    ], AppComponent);
    return AppComponent;
}());



/***/ }),

/***/ "./src/app/app.module.ts":
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/*! exports provided: AppModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppModule", function() { return AppModule; });
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser/animations */ "./node_modules/@angular/platform-browser/fesm5/animations.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _app_shared__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/shared */ "./src/app/shared/index.ts");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var _settings__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./settings */ "./src/app/settings/index.ts");
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./app-routing.module */ "./src/app/app-routing.module.ts");
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./app.component */ "./src/app/app.component.ts");
/* harmony import */ var ng_zorro_antd__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ng-zorro-antd */ "./node_modules/ng-zorro-antd/fesm5/ng-zorro-antd.js");
/* harmony import */ var _agm_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @agm/core */ "./node_modules/@agm/core/index.js");
/* harmony import */ var _ag_grid_community_angular__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ag-grid-community/angular */ "./node_modules/@ag-grid-community/angular/main.js");
/* harmony import */ var _ag_grid_community_angular__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_ag_grid_community_angular__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _dcm_components_header_component_sortable_header_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./dcm/components/header-component/sortable-header.component */ "./src/app/dcm/components/header-component/sortable-header.component.ts");
/* harmony import */ var _dcm_components_header_icons_component_edit_component_header_edit_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./dcm/components/header-icons-component/edit-component/header-edit.component */ "./src/app/dcm/components/header-icons-component/edit-component/header-edit.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};













var AppModule = /** @class */ (function () {
    function AppModule() {
    }
    AppModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
            imports: [
                _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__["BrowserAnimationsModule"],
                _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__["BrowserModule"],
                _app_core__WEBPACK_IMPORTED_MODULE_4__["CoreModule"],
                _app_shared__WEBPACK_IMPORTED_MODULE_3__["SharedModule"],
                _settings__WEBPACK_IMPORTED_MODULE_5__["SettingsModule"],
                _app_routing_module__WEBPACK_IMPORTED_MODULE_6__["AppRoutingModule"],
                _agm_core__WEBPACK_IMPORTED_MODULE_9__["AgmCoreModule"].forRoot({
                    apiKey: 'AIzaSyA5XcWLtQySo-jhIu-yf4nPzC-tqSPAtro'
                }),
                _ag_grid_community_angular__WEBPACK_IMPORTED_MODULE_10__["AgGridModule"].withComponents([_dcm_components_header_component_sortable_header_component__WEBPACK_IMPORTED_MODULE_11__["SortableHeaderComponent"], _dcm_components_header_icons_component_edit_component_header_edit_component__WEBPACK_IMPORTED_MODULE_12__["HeaderEditComponent"]])
            ],
            declarations: [_app_component__WEBPACK_IMPORTED_MODULE_7__["AppComponent"]],
            providers: [
                { provide: ng_zorro_antd__WEBPACK_IMPORTED_MODULE_8__["NZ_I18N"], useValue: ng_zorro_antd__WEBPACK_IMPORTED_MODULE_8__["en_US"] },
                _agm_core__WEBPACK_IMPORTED_MODULE_9__["GoogleMapsAPIWrapper"] // <---
            ],
            bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_7__["AppComponent"]]
        })
    ], AppModule);
    return AppModule;
}());



/***/ }),

/***/ "./src/app/core/animations/animations.service.ts":
/*!*******************************************************!*\
  !*** ./src/app/core/animations/animations.service.ts ***!
  \*******************************************************/
/*! exports provided: AnimationsService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AnimationsService", function() { return AnimationsService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var AnimationsService = /** @class */ (function () {
    function AnimationsService() {
        AnimationsService_1.routeAnimationType = 'NONE';
    }
    AnimationsService_1 = AnimationsService;
    AnimationsService.isRouteAnimationsType = function (type) {
        return AnimationsService_1.routeAnimationType === type;
    };
    AnimationsService.prototype.updateRouteAnimationType = function (pageAnimations, elementsAnimations) {
        AnimationsService_1.routeAnimationType =
            pageAnimations && elementsAnimations
                ? 'ALL'
                : pageAnimations
                    ? 'PAGE'
                    : elementsAnimations
                        ? 'ELEMENTS'
                        : 'NONE';
    };
    var AnimationsService_1;
    AnimationsService.routeAnimationType = 'NONE';
    AnimationsService = AnimationsService_1 = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], AnimationsService);
    return AnimationsService;
}());



/***/ }),

/***/ "./src/app/core/animations/route.animations.ts":
/*!*****************************************************!*\
  !*** ./src/app/core/animations/route.animations.ts ***!
  \*****************************************************/
/*! exports provided: ROUTE_ANIMATIONS_ELEMENTS, routeAnimations, isRouteAnimationsAll, isRouteAnimationsNone, isRouteAnimationsPage, isRouteAnimationsElements */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ROUTE_ANIMATIONS_ELEMENTS", function() { return ROUTE_ANIMATIONS_ELEMENTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "routeAnimations", function() { return routeAnimations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRouteAnimationsAll", function() { return isRouteAnimationsAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRouteAnimationsNone", function() { return isRouteAnimationsNone; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRouteAnimationsPage", function() { return isRouteAnimationsPage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isRouteAnimationsElements", function() { return isRouteAnimationsElements; });
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/animations */ "./node_modules/@angular/animations/fesm5/animations.js");
/* harmony import */ var _animations_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./animations.service */ "./src/app/core/animations/animations.service.ts");


var ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';
var STEPS_ALL = [
    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["query"])(':enter > *', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ opacity: 0, position: 'fixed' }), {
        optional: true
    }),
    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["query"])(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ opacity: 0 }), {
        optional: true
    }),
    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["sequence"])([
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["query"])(':leave > *', [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(0%)', opacity: 1 }),
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.2s ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(-3%)', opacity: 0 })),
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ position: 'fixed' })
        ], { optional: true }),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["query"])(':enter > *', [
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({
                transform: 'translateY(-3%)',
                opacity: 0,
                position: 'static'
            }),
            Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(0%)', opacity: 1 }))
        ], { optional: true })
    ]),
    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["query"])(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["stagger"])(75, [
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(10%)', opacity: 0 }),
        Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["animate"])('0.5s ease-in-out', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["style"])({ transform: 'translateY(0%)', opacity: 1 }))
    ]), { optional: true })
];
var STEPS_NONE = [];
var STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];
var STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];
var routeAnimations = Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["trigger"])('routeAnimations', [
    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(isRouteAnimationsAll, STEPS_ALL),
    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(isRouteAnimationsNone, STEPS_NONE),
    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(isRouteAnimationsPage, STEPS_PAGE),
    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_0__["transition"])(isRouteAnimationsElements, STEPS_ELEMENTS)
]);
function isRouteAnimationsAll() {
    return _animations_service__WEBPACK_IMPORTED_MODULE_1__["AnimationsService"].isRouteAnimationsType('ALL');
}
function isRouteAnimationsNone() {
    return _animations_service__WEBPACK_IMPORTED_MODULE_1__["AnimationsService"].isRouteAnimationsType('NONE');
}
function isRouteAnimationsPage() {
    return _animations_service__WEBPACK_IMPORTED_MODULE_1__["AnimationsService"].isRouteAnimationsType('PAGE');
}
function isRouteAnimationsElements() {
    return _animations_service__WEBPACK_IMPORTED_MODULE_1__["AnimationsService"].isRouteAnimationsType('ELEMENTS');
}


/***/ }),

/***/ "./src/app/core/auth/auth-guard.service.ts":
/*!*************************************************!*\
  !*** ./src/app/core/auth/auth-guard.service.ts ***!
  \*************************************************/
/*! exports provided: AuthGuardService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthGuardService", function() { return AuthGuardService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _auth_selectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./auth.selectors */ "./src/app/core/auth/auth.selectors.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var AuthGuardService = /** @class */ (function () {
    function AuthGuardService(store) {
        this.store = store;
    }
    AuthGuardService.prototype.canActivate = function () {
        return this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["select"])(_auth_selectors__WEBPACK_IMPORTED_MODULE_2__["selectIsAuthenticated"]));
    };
    AuthGuardService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"]])
    ], AuthGuardService);
    return AuthGuardService;
}());



/***/ }),

/***/ "./src/app/core/auth/auth.actions.ts":
/*!*******************************************!*\
  !*** ./src/app/core/auth/auth.actions.ts ***!
  \*******************************************/
/*! exports provided: AuthActionTypes, ActionAuthLogin, ActionAuthLogout */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthActionTypes", function() { return AuthActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionAuthLogin", function() { return ActionAuthLogin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionAuthLogout", function() { return ActionAuthLogout; });
var AuthActionTypes;
(function (AuthActionTypes) {
    AuthActionTypes["LOGIN"] = "[Auth] Login";
    AuthActionTypes["LOGOUT"] = "[Auth] Logout";
})(AuthActionTypes || (AuthActionTypes = {}));
var ActionAuthLogin = /** @class */ (function () {
    function ActionAuthLogin() {
        this.type = AuthActionTypes.LOGIN;
    }
    return ActionAuthLogin;
}());

var ActionAuthLogout = /** @class */ (function () {
    function ActionAuthLogout() {
        this.type = AuthActionTypes.LOGOUT;
    }
    return ActionAuthLogout;
}());



/***/ }),

/***/ "./src/app/core/auth/auth.effects.ts":
/*!*******************************************!*\
  !*** ./src/app/core/auth/auth.effects.ts ***!
  \*******************************************/
/*! exports provided: AUTH_KEY, AuthEffects */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AUTH_KEY", function() { return AUTH_KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AuthEffects", function() { return AuthEffects; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _ngrx_effects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngrx/effects */ "./node_modules/@ngrx/effects/fesm5/effects.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _local_storage_local_storage_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../local-storage/local-storage.service */ "./src/app/core/local-storage/local-storage.service.ts");
/* harmony import */ var _auth_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./auth.actions */ "./src/app/core/auth/auth.actions.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var AUTH_KEY = 'AUTH';
var AuthEffects = /** @class */ (function () {
    function AuthEffects(actions$, localStorageService, router) {
        var _this = this;
        this.actions$ = actions$;
        this.localStorageService = localStorageService;
        this.router = router;
        this.login = this.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_2__["ofType"])(_auth_actions__WEBPACK_IMPORTED_MODULE_5__["AuthActionTypes"].LOGIN), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function () {
            return _this.localStorageService.setItem(AUTH_KEY, { isAuthenticated: true });
        }));
        this.logout = this.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_2__["ofType"])(_auth_actions__WEBPACK_IMPORTED_MODULE_5__["AuthActionTypes"].LOGOUT), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function () {
            _this.router.navigate(['']);
            _this.localStorageService.setItem(AUTH_KEY, { isAuthenticated: false });
        }));
    }
    __decorate([
        Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_2__["Effect"])({ dispatch: false }),
        __metadata("design:type", Object)
    ], AuthEffects.prototype, "login", void 0);
    __decorate([
        Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_2__["Effect"])({ dispatch: false }),
        __metadata("design:type", Object)
    ], AuthEffects.prototype, "logout", void 0);
    AuthEffects = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_ngrx_effects__WEBPACK_IMPORTED_MODULE_2__["Actions"],
            _local_storage_local_storage_service__WEBPACK_IMPORTED_MODULE_4__["LocalStorageService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], AuthEffects);
    return AuthEffects;
}());



/***/ }),

/***/ "./src/app/core/auth/auth.reducer.ts":
/*!*******************************************!*\
  !*** ./src/app/core/auth/auth.reducer.ts ***!
  \*******************************************/
/*! exports provided: initialState, authReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "authReducer", function() { return authReducer; });
/* harmony import */ var _auth_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./auth.actions */ "./src/app/core/auth/auth.actions.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var initialState = {
    isAuthenticated: false
};
function authReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case _auth_actions__WEBPACK_IMPORTED_MODULE_0__["AuthActionTypes"].LOGIN:
            return __assign({}, state, { isAuthenticated: true });
        case _auth_actions__WEBPACK_IMPORTED_MODULE_0__["AuthActionTypes"].LOGOUT:
            return __assign({}, state, { isAuthenticated: false });
        default:
            return state;
    }
}


/***/ }),

/***/ "./src/app/core/auth/auth.selectors.ts":
/*!*********************************************!*\
  !*** ./src/app/core/auth/auth.selectors.ts ***!
  \*********************************************/
/*! exports provided: selectAuth, selectIsAuthenticated */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectAuth", function() { return selectAuth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectIsAuthenticated", function() { return selectIsAuthenticated; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _core_state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core.state */ "./src/app/core/core.state.ts");


var selectAuth = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(_core_state__WEBPACK_IMPORTED_MODULE_1__["selectAuthState"], function (state) { return state; });
var selectIsAuthenticated = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(_core_state__WEBPACK_IMPORTED_MODULE_1__["selectAuthState"], function (state) { return state.isAuthenticated; });


/***/ }),

/***/ "./src/app/core/core.module.ts":
/*!*************************************!*\
  !*** ./src/app/core/core.module.ts ***!
  \*************************************/
/*! exports provided: CoreModule, HttpLoaderFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CoreModule", function() { return CoreModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpLoaderFactory", function() { return HttpLoaderFactory; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _ngrx_effects__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngrx/effects */ "./node_modules/@ngrx/effects/fesm5/effects.js");
/* harmony import */ var _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngrx/store-devtools */ "./node_modules/@ngrx/store-devtools/fesm5/store-devtools.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ngx-translate/http-loader */ "./node_modules/@ngx-translate/http-loader/fesm5/ngx-translate-http-loader.js");
/* harmony import */ var _ngrx_router_store__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @ngrx/router-store */ "./node_modules/@ngrx/router-store/fesm5/router-store.js");
/* harmony import */ var _env_environment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @env/environment */ "./src/environments/environment.ts");
/* harmony import */ var _http_interceptors__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./http-interceptors */ "./src/app/core/http-interceptors/index.ts");
/* harmony import */ var _local_storage_local_storage_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./local-storage/local-storage.service */ "./src/app/core/local-storage/local-storage.service.ts");
/* harmony import */ var _auth_auth_effects__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./auth/auth.effects */ "./src/app/core/auth/auth.effects.ts");
/* harmony import */ var _auth_auth_guard_service__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./auth/auth-guard.service */ "./src/app/core/auth/auth-guard.service.ts");
/* harmony import */ var _animations_animations_service__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./animations/animations.service */ "./src/app/core/animations/animations.service.ts");
/* harmony import */ var _title_title_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./title/title.service */ "./src/app/core/title/title.service.ts");
/* harmony import */ var _core_state__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./core.state */ "./src/app/core/core.state.ts");
/* harmony import */ var _error_handler_app_error_handler_service__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./error-handler/app-error-handler.service */ "./src/app/core/error-handler/app-error-handler.service.ts");
/* harmony import */ var _router_custom_serializer__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./router/custom-serializer */ "./src/app/core/router/custom-serializer.ts");
/* harmony import */ var _notifications_notification_service__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./notifications/notification.service */ "./src/app/core/notifications/notification.service.ts");
/* harmony import */ var _google_analytics_google_analytics_effects__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./google-analytics/google-analytics.effects */ "./src/app/core/google-analytics/google-analytics.effects.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};





















var CoreModule = /** @class */ (function () {
    function CoreModule(parentModule) {
        if (parentModule) {
            throw new Error('CoreModule is already loaded. Import only in AppModule');
        }
    }
    CoreModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                // angular
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClientModule"],
                // ngrx
                _ngrx_store__WEBPACK_IMPORTED_MODULE_3__["StoreModule"].forRoot(_core_state__WEBPACK_IMPORTED_MODULE_16__["reducers"], { metaReducers: _core_state__WEBPACK_IMPORTED_MODULE_16__["metaReducers"] }),
                _ngrx_router_store__WEBPACK_IMPORTED_MODULE_8__["StoreRouterConnectingModule"].forRoot(),
                _ngrx_effects__WEBPACK_IMPORTED_MODULE_4__["EffectsModule"].forRoot([_auth_auth_effects__WEBPACK_IMPORTED_MODULE_12__["AuthEffects"], _google_analytics_google_analytics_effects__WEBPACK_IMPORTED_MODULE_20__["GoogleAnalyticsEffects"]]),
                _env_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].production
                    ? []
                    : _ngrx_store_devtools__WEBPACK_IMPORTED_MODULE_5__["StoreDevtoolsModule"].instrument({
                        name: 'DCM'
                    }),
                // 3rd party
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateModule"].forRoot({
                    loader: {
                        provide: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateLoader"],
                        useFactory: HttpLoaderFactory,
                        deps: [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]]
                    }
                })
            ],
            declarations: [],
            providers: [
                _notifications_notification_service__WEBPACK_IMPORTED_MODULE_19__["NotificationService"],
                _local_storage_local_storage_service__WEBPACK_IMPORTED_MODULE_11__["LocalStorageService"],
                _auth_auth_guard_service__WEBPACK_IMPORTED_MODULE_13__["AuthGuardService"],
                _animations_animations_service__WEBPACK_IMPORTED_MODULE_14__["AnimationsService"],
                _http_interceptors__WEBPACK_IMPORTED_MODULE_10__["httpInterceptorProviders"],
                _title_title_service__WEBPACK_IMPORTED_MODULE_15__["TitleService"],
                { provide: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ErrorHandler"], useClass: _error_handler_app_error_handler_service__WEBPACK_IMPORTED_MODULE_17__["AppErrorHandler"] },
                { provide: _ngrx_router_store__WEBPACK_IMPORTED_MODULE_8__["RouterStateSerializer"], useClass: _router_custom_serializer__WEBPACK_IMPORTED_MODULE_18__["CustomSerializer"] }
            ],
            exports: [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__["TranslateModule"]]
        }),
        __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Optional"])()),
        __param(0, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["SkipSelf"])()),
        __metadata("design:paramtypes", [CoreModule])
    ], CoreModule);
    return CoreModule;
}());

function HttpLoaderFactory(http) {
    return new _ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_7__["TranslateHttpLoader"](http, _env_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].i18nPrefix + "/assets/i18n/", '.json');
}


/***/ }),

/***/ "./src/app/core/core.state.ts":
/*!************************************!*\
  !*** ./src/app/core/core.state.ts ***!
  \************************************/
/*! exports provided: reducers, localStorageSyncReducer, metaReducers, selectAuthState, selectRouterState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reducers", function() { return reducers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "localStorageSyncReducer", function() { return localStorageSyncReducer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "metaReducers", function() { return metaReducers; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectAuthState", function() { return selectAuthState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectRouterState", function() { return selectRouterState; });
/* harmony import */ var ngrx_store_localstorage__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ngrx-store-localstorage */ "./node_modules/ngrx-store-localstorage/dist/index.js");
/* harmony import */ var ngrx_store_localstorage__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(ngrx_store_localstorage__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _ngrx_router_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngrx/router-store */ "./node_modules/@ngrx/router-store/fesm5/router-store.js");
/* harmony import */ var ngrx_store_freeze__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ngrx-store-freeze */ "./node_modules/ngrx-store-freeze/index.js");
/* harmony import */ var ngrx_store_freeze__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(ngrx_store_freeze__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _env_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @env/environment */ "./src/environments/environment.ts");
/* harmony import */ var _meta_reducers_init_state_from_local_storage_reducer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./meta-reducers/init-state-from-local-storage.reducer */ "./src/app/core/meta-reducers/init-state-from-local-storage.reducer.ts");
/* harmony import */ var _meta_reducers_debug_reducer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./meta-reducers/debug.reducer */ "./src/app/core/meta-reducers/debug.reducer.ts");
/* harmony import */ var _auth_auth_reducer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./auth/auth.reducer */ "./src/app/core/auth/auth.reducer.ts");








var reducers = {
    auth: _auth_auth_reducer__WEBPACK_IMPORTED_MODULE_7__["authReducer"],
    router: _ngrx_router_store__WEBPACK_IMPORTED_MODULE_2__["routerReducer"]
};
function localStorageSyncReducer(reducer) {
    return Object(ngrx_store_localstorage__WEBPACK_IMPORTED_MODULE_0__["localStorageSync"])({ keys: ['dcm'], rehydrate: true })(reducer);
}
var metaReducers = [
    localStorageSyncReducer,
    _meta_reducers_init_state_from_local_storage_reducer__WEBPACK_IMPORTED_MODULE_5__["initStateFromLocalStorage"]
];
if (!_env_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].production) {
    metaReducers.unshift(ngrx_store_freeze__WEBPACK_IMPORTED_MODULE_3__["storeFreeze"]);
    if (!_env_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].test) {
        metaReducers.unshift(_meta_reducers_debug_reducer__WEBPACK_IMPORTED_MODULE_6__["debug"]);
    }
}
var selectAuthState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createFeatureSelector"])('auth');
var selectRouterState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createFeatureSelector"])('router');


/***/ }),

/***/ "./src/app/core/error-handler/app-error-handler.service.ts":
/*!*****************************************************************!*\
  !*** ./src/app/core/error-handler/app-error-handler.service.ts ***!
  \*****************************************************************/
/*! exports provided: AppErrorHandler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AppErrorHandler", function() { return AppErrorHandler; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _env_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @env/environment */ "./src/environments/environment.ts");
/* harmony import */ var _notifications_notification_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../notifications/notification.service */ "./src/app/core/notifications/notification.service.ts");
var __extends = (undefined && undefined.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/** Application-wide error handler that adds a UI notification to the error handling
 * provided by the default Angular ErrorHandler.
 */
var AppErrorHandler = /** @class */ (function (_super) {
    __extends(AppErrorHandler, _super);
    function AppErrorHandler(notificationsService) {
        var _this = _super.call(this) || this;
        _this.notificationsService = notificationsService;
        return _this;
    }
    AppErrorHandler.prototype.handleError = function (error) {
        var displayMessage = 'An error occurred.';
        if (!_env_environment__WEBPACK_IMPORTED_MODULE_1__["environment"].production) {
            displayMessage += ' See console for details.';
        }
        /*
            this.notificationsService.error(displayMessage);
        */
        _super.prototype.handleError.call(this, error);
    };
    AppErrorHandler = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_notifications_notification_service__WEBPACK_IMPORTED_MODULE_2__["NotificationService"]])
    ], AppErrorHandler);
    return AppErrorHandler;
}(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ErrorHandler"]));



/***/ }),

/***/ "./src/app/core/google-analytics/google-analytics.effects.ts":
/*!*******************************************************************!*\
  !*** ./src/app/core/google-analytics/google-analytics.effects.ts ***!
  \*******************************************************************/
/*! exports provided: GoogleAnalyticsEffects */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GoogleAnalyticsEffects", function() { return GoogleAnalyticsEffects; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _ngrx_effects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngrx/effects */ "./node_modules/@ngrx/effects/fesm5/effects.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var GoogleAnalyticsEffects = /** @class */ (function () {
    function GoogleAnalyticsEffects(router) {
        this.router = router;
        this.pageView = this.router.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["filter"])(function (event) { return event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_1__["NavigationEnd"]; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (event) {
            window.ga('set', 'page', event.urlAfterRedirects);
            window.ga('send', 'pageview');
        }));
    }
    __decorate([
        Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_2__["Effect"])({ dispatch: false }),
        __metadata("design:type", Object)
    ], GoogleAnalyticsEffects.prototype, "pageView", void 0);
    GoogleAnalyticsEffects = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"]])
    ], GoogleAnalyticsEffects);
    return GoogleAnalyticsEffects;
}());



/***/ }),

/***/ "./src/app/core/http-interceptors/http-error.interceptor.ts":
/*!******************************************************************!*\
  !*** ./src/app/core/http-interceptors/http-error.interceptor.ts ***!
  \******************************************************************/
/*! exports provided: HttpErrorInterceptor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpErrorInterceptor", function() { return HttpErrorInterceptor; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



/** Passes HttpErrorResponse to application-wide error handler */
var HttpErrorInterceptor = /** @class */ (function () {
    function HttpErrorInterceptor(injector) {
        this.injector = injector;
    }
    HttpErrorInterceptor.prototype.intercept = function (request, next) {
        var _this = this;
        return next.handle(request).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["tap"])(null, function (err) {
            if (err instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpErrorResponse"]) {
                var appErrorHandler = _this.injector.get(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ErrorHandler"]);
                appErrorHandler.handleError(err);
            }
        }));
    };
    HttpErrorInterceptor = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injector"]])
    ], HttpErrorInterceptor);
    return HttpErrorInterceptor;
}());



/***/ }),

/***/ "./src/app/core/http-interceptors/index.ts":
/*!*************************************************!*\
  !*** ./src/app/core/http-interceptors/index.ts ***!
  \*************************************************/
/*! exports provided: httpInterceptorProviders */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "httpInterceptorProviders", function() { return httpInterceptorProviders; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _http_error_interceptor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./http-error.interceptor */ "./src/app/core/http-interceptors/http-error.interceptor.ts");
/* "Barrel" of Http Interceptors; see HttpClient docs and sample code for more info */


/** Http interceptor providers in outside-in order */
var httpInterceptorProviders = [
    { provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HTTP_INTERCEPTORS"], useClass: _http_error_interceptor__WEBPACK_IMPORTED_MODULE_1__["HttpErrorInterceptor"], multi: true }
];


/***/ }),

/***/ "./src/app/core/index.ts":
/*!*******************************!*\
  !*** ./src/app/core/index.ts ***!
  \*******************************/
/*! exports provided: LocalStorageService, ROUTE_ANIMATIONS_ELEMENTS, routeAnimations, isRouteAnimationsAll, isRouteAnimationsNone, isRouteAnimationsPage, isRouteAnimationsElements, AnimationsService, initialState, authReducer, AuthActionTypes, ActionAuthLogin, ActionAuthLogout, selectAuth, selectIsAuthenticated, AuthGuardService, NotificationService, TitleService, reducers, localStorageSyncReducer, metaReducers, selectAuthState, selectRouterState, CoreModule, HttpLoaderFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _local_storage_local_storage_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./local-storage/local-storage.service */ "./src/app/core/local-storage/local-storage.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LocalStorageService", function() { return _local_storage_local_storage_service__WEBPACK_IMPORTED_MODULE_0__["LocalStorageService"]; });

/* harmony import */ var _animations_route_animations__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./animations/route.animations */ "./src/app/core/animations/route.animations.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ROUTE_ANIMATIONS_ELEMENTS", function() { return _animations_route_animations__WEBPACK_IMPORTED_MODULE_1__["ROUTE_ANIMATIONS_ELEMENTS"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "routeAnimations", function() { return _animations_route_animations__WEBPACK_IMPORTED_MODULE_1__["routeAnimations"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRouteAnimationsAll", function() { return _animations_route_animations__WEBPACK_IMPORTED_MODULE_1__["isRouteAnimationsAll"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRouteAnimationsNone", function() { return _animations_route_animations__WEBPACK_IMPORTED_MODULE_1__["isRouteAnimationsNone"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRouteAnimationsPage", function() { return _animations_route_animations__WEBPACK_IMPORTED_MODULE_1__["isRouteAnimationsPage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "isRouteAnimationsElements", function() { return _animations_route_animations__WEBPACK_IMPORTED_MODULE_1__["isRouteAnimationsElements"]; });

/* harmony import */ var _animations_animations_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./animations/animations.service */ "./src/app/core/animations/animations.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AnimationsService", function() { return _animations_animations_service__WEBPACK_IMPORTED_MODULE_2__["AnimationsService"]; });

/* harmony import */ var _auth_auth_reducer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./auth/auth.reducer */ "./src/app/core/auth/auth.reducer.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return _auth_auth_reducer__WEBPACK_IMPORTED_MODULE_3__["initialState"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "authReducer", function() { return _auth_auth_reducer__WEBPACK_IMPORTED_MODULE_3__["authReducer"]; });

/* harmony import */ var _auth_auth_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./auth/auth.actions */ "./src/app/core/auth/auth.actions.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AuthActionTypes", function() { return _auth_auth_actions__WEBPACK_IMPORTED_MODULE_4__["AuthActionTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionAuthLogin", function() { return _auth_auth_actions__WEBPACK_IMPORTED_MODULE_4__["ActionAuthLogin"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionAuthLogout", function() { return _auth_auth_actions__WEBPACK_IMPORTED_MODULE_4__["ActionAuthLogout"]; });

/* harmony import */ var _auth_auth_selectors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./auth/auth.selectors */ "./src/app/core/auth/auth.selectors.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectAuth", function() { return _auth_auth_selectors__WEBPACK_IMPORTED_MODULE_5__["selectAuth"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectIsAuthenticated", function() { return _auth_auth_selectors__WEBPACK_IMPORTED_MODULE_5__["selectIsAuthenticated"]; });

/* harmony import */ var _auth_auth_guard_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./auth/auth-guard.service */ "./src/app/core/auth/auth-guard.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AuthGuardService", function() { return _auth_auth_guard_service__WEBPACK_IMPORTED_MODULE_6__["AuthGuardService"]; });

/* harmony import */ var _notifications_notification_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./notifications/notification.service */ "./src/app/core/notifications/notification.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NotificationService", function() { return _notifications_notification_service__WEBPACK_IMPORTED_MODULE_7__["NotificationService"]; });

/* harmony import */ var _title_title_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./title/title.service */ "./src/app/core/title/title.service.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TitleService", function() { return _title_title_service__WEBPACK_IMPORTED_MODULE_8__["TitleService"]; });

/* harmony import */ var _core_state__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./core.state */ "./src/app/core/core.state.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reducers", function() { return _core_state__WEBPACK_IMPORTED_MODULE_9__["reducers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "localStorageSyncReducer", function() { return _core_state__WEBPACK_IMPORTED_MODULE_9__["localStorageSyncReducer"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "metaReducers", function() { return _core_state__WEBPACK_IMPORTED_MODULE_9__["metaReducers"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectAuthState", function() { return _core_state__WEBPACK_IMPORTED_MODULE_9__["selectAuthState"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectRouterState", function() { return _core_state__WEBPACK_IMPORTED_MODULE_9__["selectRouterState"]; });

/* harmony import */ var _core_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./core.module */ "./src/app/core/core.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CoreModule", function() { return _core_module__WEBPACK_IMPORTED_MODULE_10__["CoreModule"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HttpLoaderFactory", function() { return _core_module__WEBPACK_IMPORTED_MODULE_10__["HttpLoaderFactory"]; });














/***/ }),

/***/ "./src/app/core/local-storage/local-storage.service.ts":
/*!*************************************************************!*\
  !*** ./src/app/core/local-storage/local-storage.service.ts ***!
  \*************************************************************/
/*! exports provided: LocalStorageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocalStorageService", function() { return LocalStorageService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var APP_PREFIX = 'ANMS-';
var LocalStorageService = /** @class */ (function () {
    function LocalStorageService() {
    }
    LocalStorageService.loadInitialState = function () {
        return Object.keys(localStorage).reduce(function (state, storageKey) {
            if (storageKey.includes(APP_PREFIX)) {
                var stateKeys_1 = storageKey
                    .replace(APP_PREFIX, '')
                    .toLowerCase()
                    .split('.')
                    .map(function (key) {
                    return key
                        .split('-')
                        .map(function (token, index) {
                        return index === 0
                            ? token
                            : token.charAt(0).toUpperCase() + token.slice(1);
                    })
                        .join('');
                });
                var currentStateRef_1 = state;
                stateKeys_1.forEach(function (key, index) {
                    if (index === stateKeys_1.length - 1) {
                        currentStateRef_1[key] = JSON.parse(localStorage.getItem(storageKey));
                        return;
                    }
                    currentStateRef_1[key] = currentStateRef_1[key] || {};
                    currentStateRef_1 = currentStateRef_1[key];
                });
            }
            return state;
        }, {});
    };
    LocalStorageService.prototype.setItem = function (key, value) {
        localStorage.setItem("" + APP_PREFIX + key, JSON.stringify(value));
    };
    LocalStorageService.prototype.getItem = function (key) {
        return JSON.parse(localStorage.getItem("" + APP_PREFIX + key));
    };
    LocalStorageService.prototype.removeItem = function (key) {
        localStorage.removeItem("" + APP_PREFIX + key);
    };
    /** Tests that localStorage exists, can be written to, and read from. */
    LocalStorageService.prototype.testLocalStorage = function () {
        var testValue = 'testValue';
        var testKey = 'testKey';
        var retrievedValue;
        var errorMessage = 'localStorage did not return expected value';
        this.setItem(testKey, testValue);
        retrievedValue = this.getItem(testKey);
        this.removeItem(testKey);
        if (retrievedValue !== testValue) {
            throw new Error(errorMessage);
        }
    };
    LocalStorageService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [])
    ], LocalStorageService);
    return LocalStorageService;
}());



/***/ }),

/***/ "./src/app/core/meta-reducers/debug.reducer.ts":
/*!*****************************************************!*\
  !*** ./src/app/core/meta-reducers/debug.reducer.ts ***!
  \*****************************************************/
/*! exports provided: debug */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "debug", function() { return debug; });
function debug(reducer) {
    return function (state, action) {
        var newState = reducer(state, action);
        return newState;
    };
}


/***/ }),

/***/ "./src/app/core/meta-reducers/init-state-from-local-storage.reducer.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/core/meta-reducers/init-state-from-local-storage.reducer.ts ***!
  \*****************************************************************************/
/*! exports provided: initStateFromLocalStorage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initStateFromLocalStorage", function() { return initStateFromLocalStorage; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _local_storage_local_storage_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../local-storage/local-storage.service */ "./src/app/core/local-storage/local-storage.service.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};


function initStateFromLocalStorage(reducer) {
    return function (state, action) {
        var newState = reducer(state, action);
        if ([_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["INIT"].toString(), _ngrx_store__WEBPACK_IMPORTED_MODULE_0__["UPDATE"].toString()].includes(action.type)) {
            return __assign({}, newState, _local_storage_local_storage_service__WEBPACK_IMPORTED_MODULE_1__["LocalStorageService"].loadInitialState());
        }
        return newState;
    };
}


/***/ }),

/***/ "./src/app/core/notifications/notification.service.ts":
/*!************************************************************!*\
  !*** ./src/app/core/notifications/notification.service.ts ***!
  \************************************************************/
/*! exports provided: NotificationService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NotificationService", function() { return NotificationService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var NotificationService = /** @class */ (function () {
    function NotificationService(snackBar, zone) {
        this.snackBar = snackBar;
        this.zone = zone;
    }
    NotificationService.prototype.default = function (message) {
        this.show(message, {
            duration: 2000,
            panelClass: 'default-notification-overlay'
        });
    };
    NotificationService.prototype.info = function (message) {
        this.show(message, {
            duration: 2000,
            panelClass: 'info-notification-overlay'
        });
    };
    NotificationService.prototype.success = function (message) {
        this.show(message, {
            duration: 2000,
            panelClass: 'success-notification-overlay'
        });
    };
    NotificationService.prototype.warn = function (message) {
        this.show(message, {
            duration: 2500,
            panelClass: 'warning-notification-overlay'
        });
    };
    NotificationService.prototype.error = function (message) {
        this.show(message, {
            duration: 3000,
            panelClass: 'error-notification-overlay'
        });
    };
    NotificationService.prototype.show = function (message, configuration) {
        var _this = this;
        // Need to open snackBar from Angular zone to prevent issues with its position per
        // https://stackoverflow.com/questions/50101912/snackbar-position-wrong-when-use-errorhandler-in-angular-5-and-material
        var finalConfig = __assign({}, configuration, { horizontalPosition: 'right', verticalPosition: 'top' });
        this.zone.run(function () { return _this.snackBar.open(message, null, finalConfig); });
    };
    NotificationService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatSnackBar"],
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["NgZone"]])
    ], NotificationService);
    return NotificationService;
}());



/***/ }),

/***/ "./src/app/core/router/custom-serializer.ts":
/*!**************************************************!*\
  !*** ./src/app/core/router/custom-serializer.ts ***!
  \**************************************************/
/*! exports provided: CustomSerializer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomSerializer", function() { return CustomSerializer; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var CustomSerializer = /** @class */ (function () {
    function CustomSerializer() {
    }
    CustomSerializer.prototype.serialize = function (routerState) {
        var route = routerState.root;
        while (route.firstChild) {
            route = route.firstChild;
        }
        var url = routerState.url, queryParams = routerState.root.queryParams;
        var params = route.params;
        return { url: url, params: params, queryParams: queryParams };
    };
    CustomSerializer = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])()
    ], CustomSerializer);
    return CustomSerializer;
}());



/***/ }),

/***/ "./src/app/core/title/title.service.ts":
/*!*********************************************!*\
  !*** ./src/app/core/title/title.service.ts ***!
  \*********************************************/
/*! exports provided: TitleService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TitleService", function() { return TitleService; });
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/platform-browser */ "./node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _env_environment__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @env/environment */ "./src/environments/environment.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var TitleService = /** @class */ (function () {
    function TitleService(translateService, title) {
        this.translateService = translateService;
        this.title = title;
    }
    TitleService.prototype.setTitle = function (snapshot, lazyTranslateService) {
        var _this = this;
        var lastChild = snapshot;
        while (lastChild.children.length) {
            lastChild = lastChild.children[0];
        }
        var title = lastChild.data.title;
        var translate = lazyTranslateService || this.translateService;
        if (title) {
            translate
                .get(title)
                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["filter"])(function (translatedTitle) { return translatedTitle !== title; }))
                .subscribe(function (translatedTitle) {
                return _this.title.setTitle(translatedTitle + " - " + _env_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].appName);
            });
        }
        else {
            this.title.setTitle(_env_environment__WEBPACK_IMPORTED_MODULE_4__["environment"].appName);
        }
    };
    TitleService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        __metadata("design:paramtypes", [_ngx_translate_core__WEBPACK_IMPORTED_MODULE_2__["TranslateService"],
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_0__["Title"]])
    ], TitleService);
    return TitleService;
}());



/***/ }),

/***/ "./src/app/dcm/components/header-component/sortable-header.component.css":
/*!*******************************************************************************!*\
  !*** ./src/app/dcm/components/header-component/sortable-header.component.css ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".customHeaderMenuButton {\r\n    margin-left: 4px;\r\n}\r\n\r\n.customHeaderLabel {\r\n    margin-left: 5px;\r\n}\r\n\r\n.customSortDownLabel {\r\n    margin-left: 10px;\r\n}\r\n\r\n.customSortUpLabel {\r\n    margin-left: 3px;\r\n}\r\n\r\n.customSortRemoveLabel {\r\n    font-size: 11px;\r\n    margin-left: 3px;\r\n}\r\n\r\n.active {\r\n    color: cornflowerblue;\r\n}\r\n\r\n.hidden {\r\n    display: none;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL2NvbXBvbmVudHMvaGVhZGVyLWNvbXBvbmVudC9zb3J0YWJsZS1oZWFkZXIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvZGNtL2NvbXBvbmVudHMvaGVhZGVyLWNvbXBvbmVudC9zb3J0YWJsZS1oZWFkZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jdXN0b21IZWFkZXJNZW51QnV0dG9uIHtcclxuICAgIG1hcmdpbi1sZWZ0OiA0cHg7XHJcbn1cclxuXHJcbi5jdXN0b21IZWFkZXJMYWJlbCB7XHJcbiAgICBtYXJnaW4tbGVmdDogNXB4O1xyXG59XHJcblxyXG4uY3VzdG9tU29ydERvd25MYWJlbCB7XHJcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcclxufVxyXG5cclxuLmN1c3RvbVNvcnRVcExhYmVsIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAzcHg7XHJcbn1cclxuXHJcbi5jdXN0b21Tb3J0UmVtb3ZlTGFiZWwge1xyXG4gICAgZm9udC1zaXplOiAxMXB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDNweDtcclxufVxyXG5cclxuLmFjdGl2ZSB7XHJcbiAgICBjb2xvcjogY29ybmZsb3dlcmJsdWU7XHJcbn1cclxuXHJcbi5oaWRkZW4ge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/dcm/components/header-component/sortable-header.component.html":
/*!********************************************************************************!*\
  !*** ./src/app/dcm/components/header-component/sortable-header.component.html ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"display: flex; align-items: center;\">\r\n    \r\n    <div class=\"customHeaderLabel\">{{params.displayName}}</div>\r\n    <div [hidden]=\"!params.enableSorting\" class=\"{{'customSortDownLabel'+ (this.sorted === 'desc' ? ' active' : '') }}\"\r\n         (click)=\"onSortRequested('desc', $event)\">\r\n        <i class=\"fa fa-long-arrow-alt-down\"></i>\r\n    </div>\r\n    <div [hidden]=\"!params.enableSorting\" class=\"{{'customSortUpLabel'+ (this.sorted === 'asc' ? ' active' : '') }}\"\r\n         (click)=\"onSortRequested('asc', $event)\">\r\n        <i class=\"fa fa-long-arrow-alt-up\"></i>\r\n    </div>\r\n    <div [hidden]=\"!params.enableSorting\" class=\"{{'customSortRemoveLabel'+ (this.sorted === '' ? ' active' : '') }}\"\r\n         (click)=\"onSortRequested('', $event)\">\r\n        <i class=\"fa fa-times\"></i>\r\n    </div>\r\n    <div [hidden]=\"!params.enableMenu\" class=\"customHeaderMenuButton\" (click)=\"onMenuClick()\" style=\"position: absolute;\r\n    right: 20px;\">\r\n        <i class=\"{{'fa ' + params.menuIcon}}\"></i>\r\n    </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/dcm/components/header-component/sortable-header.component.ts":
/*!******************************************************************************!*\
  !*** ./src/app/dcm/components/header-component/sortable-header.component.ts ***!
  \******************************************************************************/
/*! exports provided: SortableHeaderComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SortableHeaderComponent", function() { return SortableHeaderComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var SortableHeaderComponent = /** @class */ (function () {
    function SortableHeaderComponent(elementRef) {
        this.elementRef = elementRef;
    }
    SortableHeaderComponent.prototype.agInit = function (params) {
        this.params = params;
        this.params.column.addEventListener('sortChanged', this.onSortChanged.bind(this));
        this.onSortChanged();
    };
    SortableHeaderComponent.prototype.onMenuClick = function () {
        this.params.showColumnMenu(this.querySelector('.customHeaderMenuButton'));
    };
    SortableHeaderComponent.prototype.onSortRequested = function (order, event) {
        this.params.setSort(order, event.shiftKey);
    };
    ;
    SortableHeaderComponent.prototype.onSortChanged = function () {
        if (this.params.column.isSortAscending()) {
            this.sorted = 'asc';
        }
        else if (this.params.column.isSortDescending()) {
            this.sorted = 'desc';
        }
        else {
            this.sorted = '';
        }
    };
    ;
    SortableHeaderComponent.prototype.querySelector = function (selector) {
        return this.elementRef.nativeElement.querySelector('.customHeaderMenuButton', selector);
    };
    SortableHeaderComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: __webpack_require__(/*! ./sortable-header.component.html */ "./src/app/dcm/components/header-component/sortable-header.component.html"),
            styles: [__webpack_require__(/*! ./sortable-header.component.css */ "./src/app/dcm/components/header-component/sortable-header.component.css")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])
    ], SortableHeaderComponent);
    return SortableHeaderComponent;
}());



/***/ }),

/***/ "./src/app/dcm/components/header-group-component/header-group.component.css":
/*!**********************************************************************************!*\
  !*** ./src/app/dcm/components/header-group-component/header-group.component.css ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/* .customExpandButton {\r\n    margin-left: 3px;\r\n}\r\n\r\n.expanded {\r\n    animation-name: toExpanded;\r\n    animation-duration: 1s;\r\n    -ms-transform: rotate(180deg); \r\n    -webkit-transform: rotate(180deg);\r\n    transform: rotate(180deg);\r\n}\r\n\r\n.collapsed {\r\n    color: cornflowerblue;\r\n    animation-name: toCollapsed;\r\n    animation-duration: 1s;\r\n    -ms-transform: rotate(0deg); \r\n    -webkit-transform: rotate(0deg); \r\n    transform: rotate(0deg);\r\n}\r\n\r\n@keyframes toExpanded {\r\n    from {\r\n        color: cornflowerblue;\r\n        -ms-transform: rotate(0deg); \r\n        -webkit-transform: rotate(0deg); \r\n        transform: rotate(0deg);\r\n    }\r\n    to {\r\n        color: black;\r\n        -ms-transform: rotate(180deg); \r\n        -webkit-transform: rotate(180deg); \r\n        transform: rotate(180deg);\r\n    }\r\n}\r\n\r\n@keyframes toCollapsed {\r\n    from {\r\n        color: black;\r\n        -ms-transform: rotate(180deg); \r\n        -webkit-transform: rotate(180deg); \r\n        transform: rotate(180deg);\r\n    }\r\n    to {\r\n        color: cornflowerblue;\r\n        -ms-transform: rotate(0deg); \r\n        -webkit-transform: rotate(0deg); \r\n        transform: rotate(0deg);\r\n    }\r\n} */\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL2NvbXBvbmVudHMvaGVhZGVyLWdyb3VwLWNvbXBvbmVudC9oZWFkZXItZ3JvdXAuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQWlERyIsImZpbGUiOiJzcmMvYXBwL2RjbS9jb21wb25lbnRzL2hlYWRlci1ncm91cC1jb21wb25lbnQvaGVhZGVyLWdyb3VwLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAuY3VzdG9tRXhwYW5kQnV0dG9uIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAzcHg7XHJcbn1cclxuXHJcbi5leHBhbmRlZCB7XHJcbiAgICBhbmltYXRpb24tbmFtZTogdG9FeHBhbmRlZDtcclxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMXM7XHJcbiAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTsgXHJcbiAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG59XHJcblxyXG4uY29sbGFwc2VkIHtcclxuICAgIGNvbG9yOiBjb3JuZmxvd2VyYmx1ZTtcclxuICAgIGFuaW1hdGlvbi1uYW1lOiB0b0NvbGxhcHNlZDtcclxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMXM7XHJcbiAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IFxyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgXHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxufVxyXG5cclxuQGtleWZyYW1lcyB0b0V4cGFuZGVkIHtcclxuICAgIGZyb20ge1xyXG4gICAgICAgIGNvbG9yOiBjb3JuZmxvd2VyYmx1ZTtcclxuICAgICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IFxyXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IFxyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgfVxyXG4gICAgdG8ge1xyXG4gICAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTsgXHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOyBcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG4gICAgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIHRvQ29sbGFwc2VkIHtcclxuICAgIGZyb20ge1xyXG4gICAgICAgIGNvbG9yOiBibGFjaztcclxuICAgICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTsgXHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOyBcclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG4gICAgfVxyXG4gICAgdG8ge1xyXG4gICAgICAgIGNvbG9yOiBjb3JuZmxvd2VyYmx1ZTtcclxuICAgICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IFxyXG4gICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IFxyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xyXG4gICAgfVxyXG59ICovIl19 */"

/***/ }),

/***/ "./src/app/dcm/components/header-group-component/header-group.component.html":
/*!***********************************************************************************!*\
  !*** ./src/app/dcm/components/header-group-component/header-group.component.html ***!
  \***********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"display: flex; align-items: center;\">\r\n    <div (click)=\"expandOrCollapse()\" class=\"{{'customExpandButton' + (this.expanded ?  ' expanded': ' collapsed')}}\">\r\n        <i *ngIf=\"!expanded\" class=\"fa fa-plus-circle\"></i>\r\n        <i *ngIf=\"expanded\" class=\"fa fa-minus-circle\"></i>\r\n    </div>\r\n    <div class=\"customHeaderLabel\" style=\"font-weight: bold;\">&nbsp;&nbsp;{{this.params.displayName}}</div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/dcm/components/header-group-component/header-group.component.ts":
/*!*********************************************************************************!*\
  !*** ./src/app/dcm/components/header-group-component/header-group.component.ts ***!
  \*********************************************************************************/
/*! exports provided: HeaderGroupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderGroupComponent", function() { return HeaderGroupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var HeaderGroupComponent = /** @class */ (function () {
    function HeaderGroupComponent(store$) {
        this.store$ = store$;
        this.groupColumnState$ = store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_3__["selectGroupColumnState"]);
    }
    HeaderGroupComponent.prototype.agInit = function (params) {
        // console.log('init HeaderGroupComponent: ')
        this.params = params;
        this.params.columnGroup.getOriginalColumnGroup().addEventListener('expandedChanged', this.onExpandChanged.bind(this));
    };
    HeaderGroupComponent.prototype.expandOrCollapse = function () {
        // console.log('==> this.params.columnGroup.getOriginalColumnGroup().isExpanded() : ');
        // console.log(this.params.columnGroup);
        // console.log(this.params.columnGroup.getOriginalColumnGroup().isExpanded());
        // console.log(this.params.displayName);
        // console.log(this.params.columnGroup.getOriginalColumnGroup()['colGroupDef']['children']);
        this.params.setExpanded(!this.expanded);
        // if (!this.params.columnGroup.getOriginalColumnGroup().isExpanded()) {
        var expandTemp = this.params.columnGroup.getOriginalColumnGroup().isExpanded();
        var groupName = this.params.displayName;
        var children = this.params.columnGroup.getOriginalColumnGroup()['colGroupDef']['children'];
        var body = { expanded: expandTemp, groupName: groupName, children: children };
        // console.log(body)
        this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionDisplayedGroupColumn"]({ groupColumn: body }));
        // }
    };
    ;
    HeaderGroupComponent.prototype.onExpandChanged = function () {
        this.expanded = this.params.columnGroup.getOriginalColumnGroup().isExpanded();
    };
    HeaderGroupComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: __webpack_require__(/*! ./header-group.component.html */ "./src/app/dcm/components/header-group-component/header-group.component.html"),
            styles: [__webpack_require__(/*! ./header-group.component.css */ "./src/app/dcm/components/header-group-component/header-group.component.css")]
        }),
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"]])
    ], HeaderGroupComponent);
    return HeaderGroupComponent;
}());



/***/ }),

/***/ "./src/app/dcm/components/header-icons-component/edit-component/header-edit.component.html":
/*!*************************************************************************************************!*\
  !*** ./src/app/dcm/components/header-icons-component/edit-component/header-edit.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\r\n    <span><img src=\"assets/icons/sort-down.png\" alt=\"image\" style = \"width: 10px; float: right; margin-top: 7px;\" />{{ value }}</span>\r\n\r\n"

/***/ }),

/***/ "./src/app/dcm/components/header-icons-component/edit-component/header-edit.component.scss":
/*!*************************************************************************************************!*\
  !*** ./src/app/dcm/components/header-icons-component/edit-component/header-edit.component.scss ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".customExpandButton {\n  margin-left: 3px; }\n\n.expanded {\n  -webkit-animation-name: toExpanded;\n          animation-name: toExpanded;\n  -webkit-animation-duration: 1s;\n          animation-duration: 1s;\n  -ms-transform: rotate(180deg);\n  /* IE 9 */\n  -webkit-transform: rotate(180deg);\n  /* Chrome, Safari, Opera */\n  transform: rotate(180deg); }\n\n.collapsed {\n  color: cornflowerblue;\n  -webkit-animation-name: toCollapsed;\n          animation-name: toCollapsed;\n  -webkit-animation-duration: 1s;\n          animation-duration: 1s;\n  -ms-transform: rotate(0deg);\n  /* IE 9 */\n  -webkit-transform: rotate(0deg);\n  /* Chrome, Safari, Opera */\n  transform: rotate(0deg); }\n\n@-webkit-keyframes toExpanded {\n  from {\n    color: cornflowerblue;\n    -ms-transform: rotate(0deg);\n    /* IE 9 */\n    -webkit-transform: rotate(0deg);\n    /* Chrome, Safari, Opera */\n    transform: rotate(0deg); }\n  to {\n    color: black;\n    -ms-transform: rotate(180deg);\n    /* IE 9 */\n    -webkit-transform: rotate(180deg);\n    /* Chrome, Safari, Opera */\n    transform: rotate(180deg); } }\n\n@keyframes toExpanded {\n  from {\n    color: cornflowerblue;\n    -ms-transform: rotate(0deg);\n    /* IE 9 */\n    -webkit-transform: rotate(0deg);\n    /* Chrome, Safari, Opera */\n    transform: rotate(0deg); }\n  to {\n    color: black;\n    -ms-transform: rotate(180deg);\n    /* IE 9 */\n    -webkit-transform: rotate(180deg);\n    /* Chrome, Safari, Opera */\n    transform: rotate(180deg); } }\n\n@-webkit-keyframes toCollapsed {\n  from {\n    color: black;\n    -ms-transform: rotate(180deg);\n    /* IE 9 */\n    -webkit-transform: rotate(180deg);\n    /* Chrome, Safari, Opera */\n    transform: rotate(180deg); }\n  to {\n    color: cornflowerblue;\n    -ms-transform: rotate(0deg);\n    /* IE 9 */\n    -webkit-transform: rotate(0deg);\n    /* Chrome, Safari, Opera */\n    transform: rotate(0deg); } }\n\n@keyframes toCollapsed {\n  from {\n    color: black;\n    -ms-transform: rotate(180deg);\n    /* IE 9 */\n    -webkit-transform: rotate(180deg);\n    /* Chrome, Safari, Opera */\n    transform: rotate(180deg); }\n  to {\n    color: cornflowerblue;\n    -ms-transform: rotate(0deg);\n    /* IE 9 */\n    -webkit-transform: rotate(0deg);\n    /* Chrome, Safari, Opera */\n    transform: rotate(0deg); } }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL2NvbXBvbmVudHMvaGVhZGVyLWljb25zLWNvbXBvbmVudC9lZGl0LWNvbXBvbmVudC9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxkY21cXGNvbXBvbmVudHNcXGhlYWRlci1pY29ucy1jb21wb25lbnRcXGVkaXQtY29tcG9uZW50XFxoZWFkZXItZWRpdC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGdCQUFnQixFQUFBOztBQUdwQjtFQUNJLGtDQUEwQjtVQUExQiwwQkFBMEI7RUFDMUIsOEJBQXNCO1VBQXRCLHNCQUFzQjtFQUN0Qiw2QkFBNkI7RUFBRSxTQUFBO0VBQy9CLGlDQUFpQztFQUFFLDBCQUFBO0VBQ25DLHlCQUF5QixFQUFBOztBQUc3QjtFQUNJLHFCQUFxQjtFQUNyQixtQ0FBMkI7VUFBM0IsMkJBQTJCO0VBQzNCLDhCQUFzQjtVQUF0QixzQkFBc0I7RUFDdEIsMkJBQTJCO0VBQUUsU0FBQTtFQUM3QiwrQkFBK0I7RUFBRSwwQkFBQTtFQUNqQyx1QkFBdUIsRUFBQTs7QUFHM0I7RUFDSTtJQUNJLHFCQUFxQjtJQUNyQiwyQkFBMkI7SUFBRSxTQUFBO0lBQzdCLCtCQUErQjtJQUFFLDBCQUFBO0lBQ2pDLHVCQUF1QixFQUFBO0VBRTNCO0lBQ0ksWUFBWTtJQUNaLDZCQUE2QjtJQUFFLFNBQUE7SUFDL0IsaUNBQWlDO0lBQUUsMEJBQUE7SUFDbkMseUJBQXlCLEVBQUEsRUFBQTs7QUFYakM7RUFDSTtJQUNJLHFCQUFxQjtJQUNyQiwyQkFBMkI7SUFBRSxTQUFBO0lBQzdCLCtCQUErQjtJQUFFLDBCQUFBO0lBQ2pDLHVCQUF1QixFQUFBO0VBRTNCO0lBQ0ksWUFBWTtJQUNaLDZCQUE2QjtJQUFFLFNBQUE7SUFDL0IsaUNBQWlDO0lBQUUsMEJBQUE7SUFDbkMseUJBQXlCLEVBQUEsRUFBQTs7QUFJakM7RUFDSTtJQUNJLFlBQVk7SUFDWiw2QkFBNkI7SUFBRSxTQUFBO0lBQy9CLGlDQUFpQztJQUFFLDBCQUFBO0lBQ25DLHlCQUF5QixFQUFBO0VBRTdCO0lBQ0kscUJBQXFCO0lBQ3JCLDJCQUEyQjtJQUFFLFNBQUE7SUFDN0IsK0JBQStCO0lBQUUsMEJBQUE7SUFDakMsdUJBQXVCLEVBQUEsRUFBQTs7QUFYL0I7RUFDSTtJQUNJLFlBQVk7SUFDWiw2QkFBNkI7SUFBRSxTQUFBO0lBQy9CLGlDQUFpQztJQUFFLDBCQUFBO0lBQ25DLHlCQUF5QixFQUFBO0VBRTdCO0lBQ0kscUJBQXFCO0lBQ3JCLDJCQUEyQjtJQUFFLFNBQUE7SUFDN0IsK0JBQStCO0lBQUUsMEJBQUE7SUFDakMsdUJBQXVCLEVBQUEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2RjbS9jb21wb25lbnRzL2hlYWRlci1pY29ucy1jb21wb25lbnQvZWRpdC1jb21wb25lbnQvaGVhZGVyLWVkaXQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY3VzdG9tRXhwYW5kQnV0dG9uIHtcclxuICAgIG1hcmdpbi1sZWZ0OiAzcHg7XHJcbn1cclxuXHJcbi5leHBhbmRlZCB7XHJcbiAgICBhbmltYXRpb24tbmFtZTogdG9FeHBhbmRlZDtcclxuICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMXM7XHJcbiAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKTsgLyogSUUgOSAqL1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOyAvKiBDaHJvbWUsIFNhZmFyaSwgT3BlcmEgKi9cclxuICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbn1cclxuXHJcbi5jb2xsYXBzZWQge1xyXG4gICAgY29sb3I6IGNvcm5mbG93ZXJibHVlO1xyXG4gICAgYW5pbWF0aW9uLW5hbWU6IHRvQ29sbGFwc2VkO1xyXG4gICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAxcztcclxuICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgLyogSUUgOSAqL1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTsgLyogQ2hyb21lLCBTYWZhcmksIE9wZXJhICovXHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxufVxyXG5cclxuQGtleWZyYW1lcyB0b0V4cGFuZGVkIHtcclxuICAgIGZyb20ge1xyXG4gICAgICAgIGNvbG9yOiBjb3JuZmxvd2VyYmx1ZTtcclxuICAgICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IC8qIElFIDkgKi9cclxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyAvKiBDaHJvbWUsIFNhZmFyaSwgT3BlcmEgKi9cclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICAgIH1cclxuICAgIHRvIHtcclxuICAgICAgICBjb2xvcjogYmxhY2s7XHJcbiAgICAgICAgLW1zLXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7IC8qIElFIDkgKi9cclxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7IC8qIENocm9tZSwgU2FmYXJpLCBPcGVyYSAqL1xyXG4gICAgICAgIHRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XHJcbiAgICB9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgdG9Db2xsYXBzZWQge1xyXG4gICAgZnJvbSB7XHJcbiAgICAgICAgY29sb3I6IGJsYWNrO1xyXG4gICAgICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOyAvKiBJRSA5ICovXHJcbiAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpOyAvKiBDaHJvbWUsIFNhZmFyaSwgT3BlcmEgKi9cclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xyXG4gICAgfVxyXG4gICAgdG8ge1xyXG4gICAgICAgIGNvbG9yOiBjb3JuZmxvd2VyYmx1ZTtcclxuICAgICAgICAtbXMtdHJhbnNmb3JtOiByb3RhdGUoMGRlZyk7IC8qIElFIDkgKi9cclxuICAgICAgICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyAvKiBDaHJvbWUsIFNhZmFyaSwgT3BlcmEgKi9cclxuICAgICAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICAgIH1cclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/dcm/components/header-icons-component/edit-component/header-edit.component.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/dcm/components/header-icons-component/edit-component/header-edit.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: HeaderEditComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderEditComponent", function() { return HeaderEditComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var HeaderEditComponent = /** @class */ (function () {
    function HeaderEditComponent() {
    }
    HeaderEditComponent.prototype.agInit = function (params) {
        this.value = params.value;
    };
    HeaderEditComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: __webpack_require__(/*! ./header-edit.component.html */ "./src/app/dcm/components/header-icons-component/edit-component/header-edit.component.html"),
            styles: [__webpack_require__(/*! ./header-edit.component.scss */ "./src/app/dcm/components/header-icons-component/edit-component/header-edit.component.scss")]
        })
    ], HeaderEditComponent);
    return HeaderEditComponent;
}());



/***/ }),

/***/ "./src/app/dcm/components/header-icons-component/geocode-component/header-geocode.component.html":
/*!*******************************************************************************************************!*\
  !*** ./src/app/dcm/components/header-icons-component/geocode-component/header-geocode.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"MenuBar\" style=\"background-color: red;\">\r\n    <!-- <i class=\"fa fa-genderless text-danger icon-xxl\"></i> -->\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/dcm/components/header-icons-component/geocode-component/header-geocode.component.scss":
/*!*******************************************************************************************************!*\
  !*** ./src/app/dcm/components/header-icons-component/geocode-component/header-geocode.component.scss ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".fa {\n  font-size: 19px;\n  margin-top: 3px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL2NvbXBvbmVudHMvaGVhZGVyLWljb25zLWNvbXBvbmVudC9nZW9jb2RlLWNvbXBvbmVudC9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxkY21cXGNvbXBvbmVudHNcXGhlYWRlci1pY29ucy1jb21wb25lbnRcXGdlb2NvZGUtY29tcG9uZW50XFxoZWFkZXItZ2VvY29kZS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQWU7RUFDZixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9kY20vY29tcG9uZW50cy9oZWFkZXItaWNvbnMtY29tcG9uZW50L2dlb2NvZGUtY29tcG9uZW50L2hlYWRlci1nZW9jb2RlLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZhIHtcclxuICAgIGZvbnQtc2l6ZTogMTlweDtcclxuICAgIG1hcmdpbi10b3A6IDNweDtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/dcm/components/header-icons-component/geocode-component/header-geocode.component.ts":
/*!*****************************************************************************************************!*\
  !*** ./src/app/dcm/components/header-icons-component/geocode-component/header-geocode.component.ts ***!
  \*****************************************************************************************************/
/*! exports provided: HeaderGeocodeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderGeocodeComponent", function() { return HeaderGeocodeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var HeaderGeocodeComponent = /** @class */ (function () {
    function HeaderGeocodeComponent() {
    }
    HeaderGeocodeComponent.prototype.agInit = function (params) {
        this.params = params;
    };
    HeaderGeocodeComponent.prototype.ngOnDestroy = function () {
        console.log("Destroying HeaderGeocodeComponent");
    };
    HeaderGeocodeComponent.prototype.invokeGeocodeMethod = function () {
    };
    ;
    HeaderGeocodeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: __webpack_require__(/*! ./header-geocode.component.html */ "./src/app/dcm/components/header-icons-component/geocode-component/header-geocode.component.html"),
            styles: [__webpack_require__(/*! ./header-geocode.component.scss */ "./src/app/dcm/components/header-icons-component/geocode-component/header-geocode.component.scss")]
        })
    ], HeaderGeocodeComponent);
    return HeaderGeocodeComponent;
}());



/***/ }),

/***/ "./src/app/dcm/components/header-icons-component/supp-component/header-supp.component.html":
/*!*************************************************************************************************!*\
  !*** ./src/app/dcm/components/header-icons-component/supp-component/header-supp.component.html ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"float: left;\">\r\n      <select (change)=\"onSelectType($event)\" id=\"typeDisplay\" style=\" width: 60px;\">\r\n        <option value=\"all\" selected=\"\">All</option>\r\n        <option value=\"errors\">Error</option>\r\n        <option value=\"warnings\">Warning</option>\r\n    </select>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/dcm/components/header-icons-component/supp-component/header-supp.component.scss":
/*!*************************************************************************************************!*\
  !*** ./src/app/dcm/components/header-icons-component/supp-component/header-supp.component.scss ***!
  \*************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".fa {\n  font-size: 19px;\n  margin-top: 3px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL2NvbXBvbmVudHMvaGVhZGVyLWljb25zLWNvbXBvbmVudC9zdXBwLWNvbXBvbmVudC9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxkY21cXGNvbXBvbmVudHNcXGhlYWRlci1pY29ucy1jb21wb25lbnRcXHN1cHAtY29tcG9uZW50XFxoZWFkZXItc3VwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLGVBQWU7RUFDZixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9kY20vY29tcG9uZW50cy9oZWFkZXItaWNvbnMtY29tcG9uZW50L3N1cHAtY29tcG9uZW50L2hlYWRlci1zdXBwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZhIHtcclxuICAgIGZvbnQtc2l6ZTogMTlweDtcclxuICAgIG1hcmdpbi10b3A6IDNweDtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/dcm/components/header-icons-component/supp-component/header-supp.component.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/dcm/components/header-icons-component/supp-component/header-supp.component.ts ***!
  \***********************************************************************************************/
/*! exports provided: HeaderSuppComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderSuppComponent", function() { return HeaderSuppComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/dcm/modules/upload/services/file-import.service */ "./src/app/dcm/modules/upload/services/file-import.service.ts");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
// import { Component, OnDestroy} from '@angular/core';







var HeaderSuppComponent = /** @class */ (function () {
    function HeaderSuppComponent(cdrf, cleansingService, store$, fileImportService) {
        this.cdrf = cdrf;
        this.cleansingService = cleansingService;
        this.store$ = store$;
        this.fileImportService = fileImportService;
        this.isFirstLoad = 1;
        this.gridOptions = {};
        this.importData$ = this.store$.select(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_4__["selectImportObjectState"]);
        this.csMetadata$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_1__["selectCleansingCsMetadata"]);
        this.exposures$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_1__["selectCleansingData"]);
        this.datacheck$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_1__["selectCleansingErrors"]);
    }
    HeaderSuppComponent.prototype.agInit = function (params) {
        this.params = params;
    };
    HeaderSuppComponent.prototype.ngOnDestroy = function () {
        // console.log(`Destroying HeaderGeocodeComponent`);
    };
    HeaderSuppComponent.prototype.onSelectType = function (selectedElement) {
        var _this = this;
        var value = document.getElementById('typeDisplay').value;
        this.importData$.subscribe(function (importData) {
            var fileData = importData.fileData;
            var selectedSheet = importData.selectedSheet;
            _this.cleansingService.getExposuresByErrorType(fileData, selectedSheet, value).subscribe(function (data) {
                if (data) {
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionLoadAllData"]({ data: data }));
                    _this.cdrf.detectChanges();
                }
            });
        });
    };
    HeaderSuppComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: __webpack_require__(/*! ./header-supp.component.html */ "./src/app/dcm/components/header-icons-component/supp-component/header-supp.component.html"),
            styles: [__webpack_require__(/*! ./header-supp.component.scss */ "./src/app/dcm/components/header-icons-component/supp-component/header-supp.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
            _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_3__["CleansingService"],
            _ngrx_store__WEBPACK_IMPORTED_MODULE_6__["Store"], _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_5__["FileImportService"]])
    ], HeaderSuppComponent);
    return HeaderSuppComponent;
}());



/***/ }),

/***/ "./src/app/dcm/directives/focus-directive.directive.ts":
/*!*************************************************************!*\
  !*** ./src/app/dcm/directives/focus-directive.directive.ts ***!
  \*************************************************************/
/*! exports provided: FocusDirectiveDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusDirectiveDirective", function() { return FocusDirectiveDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var FocusDirectiveDirective = /** @class */ (function () {
    function FocusDirectiveDirective() {
        console.log('test');
    }
    FocusDirectiveDirective.prototype.onKeydownHandler = function (event) {
        console.log(event);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('document:keydown', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [KeyboardEvent]),
        __metadata("design:returntype", void 0)
    ], FocusDirectiveDirective.prototype, "onKeydownHandler", null);
    FocusDirectiveDirective = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
            selector: '[anmsFocusDirective]'
        }),
        __metadata("design:paramtypes", [])
    ], FocusDirectiveDirective);
    return FocusDirectiveDirective;
}());



/***/ }),

/***/ "./src/app/dcm/modules/administration/store/config.state.ts":
/*!******************************************************************!*\
  !*** ./src/app/dcm/modules/administration/store/config.state.ts ***!
  \******************************************************************/
/*! exports provided: reducers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reducers", function() { return reducers; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_modules_administration_store_configadmin_reducer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/dcm/modules/administration/store/configadmin.reducer */ "./src/app/dcm/modules/administration/store/configadmin.reducer.ts");


var reducers = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["combineReducers"])({
    field: _app_dcm_modules_administration_store_configadmin_reducer__WEBPACK_IMPORTED_MODULE_1__["ConfigReducer"]
});


/***/ }),

/***/ "./src/app/dcm/modules/administration/store/configadmin.actions.ts":
/*!*************************************************************************!*\
  !*** ./src/app/dcm/modules/administration/store/configadmin.actions.ts ***!
  \*************************************************************************/
/*! exports provided: ConfigActionTypes, ActionAddGroup, ActionDoneGroup, ActionAddField, ActionAddDatacheck, ActionSelectLob, ActionReset, ActionValidateGroups, ActionValidateFields, ActionValidateDatachecks */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigActionTypes", function() { return ConfigActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionAddGroup", function() { return ActionAddGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionDoneGroup", function() { return ActionDoneGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionAddField", function() { return ActionAddField; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionAddDatacheck", function() { return ActionAddDatacheck; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSelectLob", function() { return ActionSelectLob; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionReset", function() { return ActionReset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionValidateGroups", function() { return ActionValidateGroups; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionValidateFields", function() { return ActionValidateFields; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionValidateDatachecks", function() { return ActionValidateDatachecks; });
var ConfigActionTypes;
(function (ConfigActionTypes) {
    ConfigActionTypes["ADD_GROUP"] = "[Config] Add group";
    ConfigActionTypes["ADD_FIELD"] = "[Config] Add field";
    ConfigActionTypes["SELECT_LOB"] = "[Config] Select Lob";
    ConfigActionTypes["ADD_DATACHECK"] = "[Config] Add Datacheck";
    ConfigActionTypes["RESET"] = "[Config] Reset data ";
    ConfigActionTypes["VALIDATE_GROUP"] = "[Config] Validate Group added";
    ConfigActionTypes["VALIDATE_FIELDS"] = "[Config] Validate Fields added";
    ConfigActionTypes["VALIDATE_DATACHECKS"] = "[Config] Validate Datachecks added";
    ConfigActionTypes["DONE_GROUP"] = "[Config] done validation ";
})(ConfigActionTypes || (ConfigActionTypes = {}));
var ActionAddGroup = /** @class */ (function () {
    function ActionAddGroup(payload) {
        this.payload = payload;
        this.type = ConfigActionTypes.ADD_GROUP;
    }
    return ActionAddGroup;
}());

var ActionDoneGroup = /** @class */ (function () {
    function ActionDoneGroup(payload) {
        this.payload = payload;
        this.type = ConfigActionTypes.DONE_GROUP;
    }
    return ActionDoneGroup;
}());

var ActionAddField = /** @class */ (function () {
    function ActionAddField(payload) {
        this.payload = payload;
        this.type = ConfigActionTypes.ADD_FIELD;
    }
    return ActionAddField;
}());

var ActionAddDatacheck = /** @class */ (function () {
    function ActionAddDatacheck(payload) {
        this.payload = payload;
        this.type = ConfigActionTypes.ADD_DATACHECK;
    }
    return ActionAddDatacheck;
}());

var ActionSelectLob = /** @class */ (function () {
    function ActionSelectLob(payload) {
        this.payload = payload;
        this.type = ConfigActionTypes.SELECT_LOB;
    }
    return ActionSelectLob;
}());

var ActionReset = /** @class */ (function () {
    function ActionReset() {
        this.type = ConfigActionTypes.RESET;
    }
    return ActionReset;
}());

var ActionValidateGroups = /** @class */ (function () {
    function ActionValidateGroups() {
        this.type = ConfigActionTypes.VALIDATE_GROUP;
    }
    return ActionValidateGroups;
}());

var ActionValidateFields = /** @class */ (function () {
    function ActionValidateFields() {
        this.type = ConfigActionTypes.VALIDATE_FIELDS;
    }
    return ActionValidateFields;
}());

var ActionValidateDatachecks = /** @class */ (function () {
    function ActionValidateDatachecks() {
        this.type = ConfigActionTypes.VALIDATE_DATACHECKS;
    }
    return ActionValidateDatachecks;
}());



/***/ }),

/***/ "./src/app/dcm/modules/administration/store/configadmin.reducer.ts":
/*!*************************************************************************!*\
  !*** ./src/app/dcm/modules/administration/store/configadmin.reducer.ts ***!
  \*************************************************************************/
/*! exports provided: initialState, ConfigReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConfigReducer", function() { return ConfigReducer; });
/* harmony import */ var _app_dcm_modules_administration_store_configadmin_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @app/dcm/modules/administration/store/configadmin.actions */ "./src/app/dcm/modules/administration/store/configadmin.actions.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var initialState = {
    datachecksAdded: [],
    fieldsAdded: [],
    groupsAdded: [],
    lob: null,
    doneGroup: true
};
function ConfigReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case _app_dcm_modules_administration_store_configadmin_actions__WEBPACK_IMPORTED_MODULE_0__["ConfigActionTypes"].SELECT_LOB:
            return __assign({}, state, { lob: action.payload.lob });
        case _app_dcm_modules_administration_store_configadmin_actions__WEBPACK_IMPORTED_MODULE_0__["ConfigActionTypes"].DONE_GROUP:
            return __assign({}, state, { doneGroup: action.payload.done });
        case _app_dcm_modules_administration_store_configadmin_actions__WEBPACK_IMPORTED_MODULE_0__["ConfigActionTypes"].ADD_DATACHECK:
            return __assign({}, state, { datachecksAdded: action.payload.datacheck });
        case _app_dcm_modules_administration_store_configadmin_actions__WEBPACK_IMPORTED_MODULE_0__["ConfigActionTypes"].ADD_FIELD:
            return __assign({}, state, { fieldsAdded: action.payload.field });
        case _app_dcm_modules_administration_store_configadmin_actions__WEBPACK_IMPORTED_MODULE_0__["ConfigActionTypes"].RESET:
            return __assign({}, initialState, { lob: state.lob });
        case _app_dcm_modules_administration_store_configadmin_actions__WEBPACK_IMPORTED_MODULE_0__["ConfigActionTypes"].ADD_GROUP:
            return __assign({}, state, { groupsAdded: action.payload.group });
        default:
            return state;
    }
}


/***/ }),

/***/ "./src/app/dcm/modules/locations/store/locations.actions.ts":
/*!******************************************************************!*\
  !*** ./src/app/dcm/modules/locations/store/locations.actions.ts ***!
  \******************************************************************/
/*! exports provided: LocationsActionTypes, ActionLocationsUpdate, ActionLocationsReset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationsActionTypes", function() { return LocationsActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionLocationsUpdate", function() { return ActionLocationsUpdate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionLocationsReset", function() { return ActionLocationsReset; });
var LocationsActionTypes;
(function (LocationsActionTypes) {
    LocationsActionTypes["UPDATE"] = "[Locations] Update";
    LocationsActionTypes["RESET"] = "[Locations] Reset";
})(LocationsActionTypes || (LocationsActionTypes = {}));
var ActionLocationsUpdate = /** @class */ (function () {
    function ActionLocationsUpdate(payload) {
        this.payload = payload;
        this.type = LocationsActionTypes.UPDATE;
    }
    return ActionLocationsUpdate;
}());

var ActionLocationsReset = /** @class */ (function () {
    function ActionLocationsReset() {
        this.type = LocationsActionTypes.RESET;
    }
    return ActionLocationsReset;
}());



/***/ }),

/***/ "./src/app/dcm/modules/locations/store/locations.reducer.ts":
/*!******************************************************************!*\
  !*** ./src/app/dcm/modules/locations/store/locations.reducer.ts ***!
  \******************************************************************/
/*! exports provided: initialState, LocationsReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationsReducer", function() { return LocationsReducer; });
/* harmony import */ var _locations_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./locations.actions */ "./src/app/dcm/modules/locations/store/locations.actions.ts");

var initialState = {
    Locations: null,
    loaded: false,
    loading: false,
    failed: false,
};
function LocationsReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case _locations_actions__WEBPACK_IMPORTED_MODULE_0__["LocationsActionTypes"].RESET:
            return initialState;
        default:
            return state;
    }
}


/***/ }),

/***/ "./src/app/dcm/modules/matching/store/matching.actions.ts":
/*!****************************************************************!*\
  !*** ./src/app/dcm/modules/matching/store/matching.actions.ts ***!
  \****************************************************************/
/*! exports provided: MatchingActionTypes, ActionMatchingUpdate, ActionMatchingReset */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatchingActionTypes", function() { return MatchingActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMatchingUpdate", function() { return ActionMatchingUpdate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMatchingReset", function() { return ActionMatchingReset; });
var MatchingActionTypes;
(function (MatchingActionTypes) {
    MatchingActionTypes["UPDATE"] = "[Matching] Update";
    MatchingActionTypes["RESET"] = "[Matching] Reset";
})(MatchingActionTypes || (MatchingActionTypes = {}));
var ActionMatchingUpdate = /** @class */ (function () {
    function ActionMatchingUpdate(payload) {
        this.payload = payload;
        this.type = MatchingActionTypes.UPDATE;
    }
    return ActionMatchingUpdate;
}());

var ActionMatchingReset = /** @class */ (function () {
    function ActionMatchingReset() {
        this.type = MatchingActionTypes.RESET;
    }
    return ActionMatchingReset;
}());



/***/ }),

/***/ "./src/app/dcm/modules/matching/store/matching.reducer.ts":
/*!****************************************************************!*\
  !*** ./src/app/dcm/modules/matching/store/matching.reducer.ts ***!
  \****************************************************************/
/*! exports provided: initialState, MatchingReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatchingReducer", function() { return MatchingReducer; });
/* harmony import */ var _matching_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./matching.actions */ "./src/app/dcm/modules/matching/store/matching.actions.ts");

var initialState = {
    matching: null,
    loaded: false,
    loading: false,
    failed: false,
};
function MatchingReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case _matching_actions__WEBPACK_IMPORTED_MODULE_0__["MatchingActionTypes"].RESET:
            return initialState;
        default:
            return state;
    }
}


/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/editor-by-type/doubling-editor.component.ts":
/*!******************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/editor-by-type/doubling-editor.component.ts ***!
  \******************************************************************************************************/
/*! exports provided: DoublingEditor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DoublingEditor", function() { return DoublingEditor; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var DoublingEditor = /** @class */ (function () {
    function DoublingEditor() {
    }
    DoublingEditor.prototype.ngAfterViewInit = function () {
        var _this = this;
        // focus on the input
        setTimeout(function () { return _this.input.element.nativeElement.focus(); });
    };
    DoublingEditor.prototype.agInit = function (params) {
        this.params = params;
        this.value = parseFloat(this.params.value);
    };
    /* Component Editor Lifecycle methods */
    // the final value to send to the grid, on completion of editing
    DoublingEditor.prototype.getValue = function () {
        // this simple editor doubles any value entered into the input
        return this.value;
        // return this.value * 2;
    };
    // Gets called once before editing starts, to give editor a chance to
    // cancel the editing before it even starts.
    DoublingEditor.prototype.isCancelBeforeStart = function () {
        return false;
    };
    // Gets called once when editing is finished (eg if enter is pressed).
    // If you return true, then the result of the edit will be ignored.
    DoublingEditor.prototype.isCancelAfterEnd = function () {
        // our editor will reject any value greater than 1000000000000
        return this.value > 1000000000000;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('input', { read: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"])
    ], DoublingEditor.prototype, "input", void 0);
    DoublingEditor = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'editor-cell',
            template: "<input\n      type=\"number\"\n      [(ngModel)]=\"value\"\n      #input\n      style=\"width: 100%\"\n    />",
        })
    ], DoublingEditor);
    return DoublingEditor;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/editor-by-type/numeric-editor.component.ts":
/*!*****************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/editor-by-type/numeric-editor.component.ts ***!
  \*****************************************************************************************************/
/*! exports provided: NumericEditor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NumericEditor", function() { return NumericEditor; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var NumericEditor = /** @class */ (function () {
    function NumericEditor() {
    }
    NumericEditor.prototype.ngAfterViewInit = function () {
        var _this = this;
        // focus on the input
        setTimeout(function () { return _this.input.element.nativeElement.focus(); });
    };
    NumericEditor.prototype.agInit = function (params) {
        this.params = params;
        this.value = parseInt(this.params.value);
    };
    /* Component Editor Lifecycle methods */
    // the final value to send to the grid, on completion of editing
    NumericEditor.prototype.getValue = function () {
        // this simple editor doubles any value entered into the input
        return parseInt(this.value);
        // return this.value * 2;
    };
    // Gets called once before editing starts, to give editor a chance to
    // cancel the editing before it even starts.
    NumericEditor.prototype.isCancelBeforeStart = function () {
        return false;
    };
    // Gets called once when editing is finished (eg if enter is pressed).
    // If you return true, then the result of the edit will be ignored.
    NumericEditor.prototype.isCancelAfterEnd = function () {
        // our editor will reject any value greater than 1000000000000
        return this.value > 1000000000000;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('input', { read: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"])
    ], NumericEditor.prototype, "input", void 0);
    NumericEditor = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'editor-cell',
            template: "<input\n      type=\"number\"\n      [(ngModel)]=\"value\"\n      #input\n      style=\"width: 100%\"\n    />",
        })
    ], NumericEditor);
    return NumericEditor;
}());

/* import {
    AfterViewInit,
    Component,
    ViewChild,
    ViewContainerRef,
  } from '@angular/core';
  
  import { AgEditorComponent } from '@ag-grid-community/angular';
  
  const KEY_BACKSPACE = 8;
  const KEY_DELETE = 46;
  const KEY_F2 = 113;
  const KEY_ENTER = 13;
  const KEY_TAB = 9;
  
  @Component({
    selector: 'numeric-cell',
    template: `<input
      #input
      (keydown)="onKeyDown($event)"
      [(ngModel)]="value"
      style="width: 100%"
    />`,
  })
  export class NumericEditor implements AgEditorComponent, AfterViewInit {
    private params: any;
    public value: number;
    public highlightAllOnFocus: boolean = true;
    private cancelBeforeStart: boolean = false;
  
    @ViewChild('input', { read: ViewContainerRef }) public input: any;
  
    agInit(params: any): void {
      this.params = params;
      this.setInitialState(this.params);
  
      // only start edit if key pressed is a number, not a letter
      this.cancelBeforeStart =
        params.charPress && '1234567890'.indexOf(params.charPress) < 0;
    }
  
    setInitialState(params: any) {
      let startValue;
      let highlightAllOnFocus = true;
  
      if (params.keyPress === KEY_BACKSPACE || params.keyPress === KEY_DELETE) {
        // if backspace or delete pressed, we clear the cell
        startValue = '';
      } else if (params.charPress) {
        // if a letter was pressed, we start with the letter
        startValue = params.charPress;
        highlightAllOnFocus = false;
      } else {
        // otherwise we start with the current value
        startValue = params.value;
        if (params.keyPress === KEY_F2) {
          highlightAllOnFocus = false;
        }
      }
  
      this.value = startValue;
      this.highlightAllOnFocus = highlightAllOnFocus;
    }
  
    getValue(): any {
      return this.value;
    }
  
    isCancelBeforeStart(): boolean {
      return this.cancelBeforeStart;
    }
  
    // will reject the number if it greater than 1,000,000
    // not very practical, but demonstrates the method.
    isCancelAfterEnd(): boolean {
      return this.value > 1000000;
    }
  
    onKeyDown(event: any): void {
      if (this.isLeftOrRight(event) || this.deleteOrBackspace(event)) {
        event.stopPropagation();
        return;
      }
  
      if (
        !this.finishedEditingPressed(event) &&
        !this.isKeyPressedNumeric(event)
      ) {
        if (event.preventDefault) event.preventDefault();
      }
    }
  
    // dont use afterGuiAttached for post gui events - hook into ngAfterViewInit instead for this
    ngAfterViewInit() {
      window.setTimeout(() => {
        this.input.element.nativeElement.focus();
        if (this.highlightAllOnFocus) {
          this.input.element.nativeElement.select();
  
          this.highlightAllOnFocus = false;
        } else {
          // when we started editing, we want the carot at the end, not the start.
          // this comes into play in two scenarios: a) when user hits F2 and b)
          // when user hits a printable character, then on IE (and only IE) the carot
          // was placed after the first character, thus 'apply' would end up as 'pplea'
          const length = this.input.element.nativeElement.value
            ? this.input.element.nativeElement.value.length
            : 0;
          if (length > 0) {
            this.input.element.nativeElement.setSelectionRange(length, length);
          }
        }
  
        this.input.element.nativeElement.focus();
      });
    }
  
    private getCharCodeFromEvent(event: any): any {
      event = event || window.event;
      return typeof event.which == 'undefined' ? event.keyCode : event.which;
    }
  
    private isCharNumeric(charStr: string): boolean {
      return !!/\d/.test(charStr);
    }
  
    private isKeyPressedNumeric(event: any): boolean {
      const charCode = this.getCharCodeFromEvent(event);
      const charStr = event.key ? event.key : String.fromCharCode(charCode);
      return this.isCharNumeric(charStr);
    }
  
    private deleteOrBackspace(event: any) {
      return (
        [KEY_DELETE, KEY_BACKSPACE].indexOf(this.getCharCodeFromEvent(event)) > -1
      );
    }
  
    private isLeftOrRight(event: any) {
      return [37, 39].indexOf(this.getCharCodeFromEvent(event)) > -1;
    }
  
    private finishedEditingPressed(event: any) {
      const charCode = this.getCharCodeFromEvent(event);
      return charCode === KEY_ENTER || charCode === KEY_TAB;
    }
  }
   */ 


/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component.html":
/*!********************************************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component.html ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form [formGroup]=\"form\">\r\n  <input  #input formControlName=\"txt\" (click)=\"onFocusInput($event)\" [value]=\"txt\" />\r\n  <button class=\"btn\" (click)=\"onClickFilter($event)\" name=\"checkbox\" *ngIf=\"!isFilter\">\r\n    <i>\r\n      <img src=\"assets/icons/filters/filter-b.png\" alt=\"image\" />\r\n    </i>\r\n  </button>\r\n  <button class=\"btn\" (click)=\"onClickFilter($event)\" *ngIf=\"isFilter\">\r\n    <i>\r\n      <img src=\"assets/icons/filters/filter-f.png\" alt=\"image\"/>\r\n    </i>\r\n  </button>\r\n</form>"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component.scss":
/*!********************************************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component.scss ***!
  \********************************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "input {\n  height: 20px;\n  width: 100%;\n  margin-top: 11px;\n  margin-left: -7px;\n  background-color: #f4f4f4;\n  border: 1px solid #f4f4f4; }\n\nimg {\n  width: 10px;\n  margin-left: -8px;\n  margin-top: -7px;\n  opacity: 60%; }\n\n/* input {\r\n  height: 20px;\r\n  width: 100%;\r\n  margin-top: 11px;\r\n  margin-left: -7px;\r\n}\r\n\r\nimg {\r\n  width: 10px;\r\n  margin-left: -8px;\r\n  margin-top: -7px;\r\n} */\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbXBvbmVuZXRzL2NsZWFuc2luZy9maWx0ZXJzL2RlZmF1bHQtZmlsdGVycy1xdWljay1zZWFyY2gvQzpcXEZcXEpvYnNcXGRjbV9mcm9udC9zcmNcXGFwcFxcZGNtXFxtb2R1bGVzXFx1cGxvYWRcXGNvbXBvbmVuZXRzXFxjbGVhbnNpbmdcXGZpbHRlcnNcXGRlZmF1bHQtZmlsdGVycy1xdWljay1zZWFyY2hcXGRlZmF1bHQtZmlsdGVyZWQtcXVpY2stc2VhcmNoLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9kY20vbW9kdWxlcy91cGxvYWQvY29tcG9uZW5ldHMvY2xlYW5zaW5nL2ZpbHRlcnMvZGVmYXVsdC1maWx0ZXJzLXF1aWNrLXNlYXJjaC9kZWZhdWx0LWZpbHRlcmVkLXF1aWNrLXNlYXJjaC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQix5QkFBb0M7RUFDcEMseUJBQW9DLEVBQUE7O0FBR3RDO0VBQ0UsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsWUFBWSxFQUFBOztBQUVkOzs7Ozs7Ozs7OztHQ1VHIiwiZmlsZSI6InNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbXBvbmVuZXRzL2NsZWFuc2luZy9maWx0ZXJzL2RlZmF1bHQtZmlsdGVycy1xdWljay1zZWFyY2gvZGVmYXVsdC1maWx0ZXJlZC1xdWljay1zZWFyY2guY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dCB7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi10b3A6IDExcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC03cHg7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDI0NCwgMjQ0LCAyNDQpO1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIHJnYigyNDQsIDI0NCwgMjQ0KTtcclxufVxyXG5cclxuaW1nIHtcclxuICB3aWR0aDogMTBweDtcclxuICBtYXJnaW4tbGVmdDogLThweDtcclxuICBtYXJnaW4tdG9wOiAtN3B4O1xyXG4gIG9wYWNpdHk6IDYwJTtcclxufVxyXG4vKiBpbnB1dCB7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi10b3A6IDExcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC03cHg7XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgd2lkdGg6IDEwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC04cHg7XHJcbiAgbWFyZ2luLXRvcDogLTdweDtcclxufSAqLyIsImlucHV0IHtcbiAgaGVpZ2h0OiAyMHB4O1xuICB3aWR0aDogMTAwJTtcbiAgbWFyZ2luLXRvcDogMTFweDtcbiAgbWFyZ2luLWxlZnQ6IC03cHg7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmNGY0ZjQ7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNmNGY0ZjQ7IH1cblxuaW1nIHtcbiAgd2lkdGg6IDEwcHg7XG4gIG1hcmdpbi1sZWZ0OiAtOHB4O1xuICBtYXJnaW4tdG9wOiAtN3B4O1xuICBvcGFjaXR5OiA2MCU7IH1cblxuLyogaW5wdXQge1xyXG4gIGhlaWdodDogMjBweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW4tdG9wOiAxMXB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAtN3B4O1xyXG59XHJcblxyXG5pbWcge1xyXG4gIHdpZHRoOiAxMHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAtOHB4O1xyXG4gIG1hcmdpbi10b3A6IC03cHg7XHJcbn0gKi9cbiJdfQ== */"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component.ts":
/*!******************************************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component.ts ***!
  \******************************************************************************************************************************************/
/*! exports provided: DefaultFilteredQuickSearchComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultFilteredQuickSearchComponent", function() { return DefaultFilteredQuickSearchComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @app/dcm/modules/upload/services/file-import.service */ "./src/app/dcm/modules/upload/services/file-import.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var DefaultFilteredQuickSearchComponent = /** @class */ (function () {
    function DefaultFilteredQuickSearchComponent(cdrf, cleansingService, store$, fileImportService, fb) {
        var _this = this;
        this.cdrf = cdrf;
        this.cleansingService = cleansingService;
        this.store$ = store$;
        this.fileImportService = fileImportService;
        this.text = '';
        this.operator = '';
        this.isFilter = false;
        this.waiting = 1000; // 1 second
        this.importData$ = this.store$.select(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_8__["selectImportObjectState"]);
        this.csMetadata$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingCsMetadata"]);
        this.exposures$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingData"]);
        this.datacheck$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingErrors"]);
        this.selectFiltersData(this.store$);
        this.form = fb.group({
            txt: '',
            checkbox: false
        });
        Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["combineLatest"])(this.form
            .get('txt')
            .valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["debounceTime"])(this.waiting), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["startWith"])('')), this.form.get('checkbox').valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["startWith"])(false)), function (txt, check) { return ({ txt: txt, check: check }); }).subscribe(function (criteria) {
            _this.txt = criteria['txt'];
            var value = {};
            var listeValue = [];
            _this.importData$.subscribe(function (importData) {
                _this.fileData = importData.fileData;
                _this.selectedSheet = importData.selectedSheet;
                if (_this.columnCode !== undefined && _this.txt !== '') {
                    _this.cleansingService.quickSearchByColCode(_this.fileData, _this.selectedSheet, _this.columnCode, _this.txt, _this.operator).subscribe(function (data) {
                        if (data) {
                            _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionLoadAllData"]({ data: data }));
                            _this.isFilter = true;
                            value[_this.columnCode] = _this.txt;
                            listeValue.push(value);
                            _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionFilterQuickSearch"]({ quickSearch: { active: true, contents: value } }));
                            _this.cleansingService.getUpdateCheck(_this.fileData, _this.selectedSheet, data['first_page']).subscribe(function (check) {
                                // console.log('check after filter')
                                // console.log(check);
                                _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionLoadErrors"]({ errors: check }));
                            });
                            /* this.cleansingService.getUpdateCheck(this.fileData, this.selectedSheet, data['first_page']).subscribe((check) => {
                                this.store$.dispatch(new ActionLoadErrors({ errors: data }));
                                }) */
                        }
                    });
                }
            });
        });
    }
    DefaultFilteredQuickSearchComponent.prototype.selectFiltersData = function (store) {
        var _this = this;
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectFilterQuickSearch"]).subscribe(function (data) {
            if (data) {
                if (data.active) {
                    var textTemp = _this.getListFilteredColumn(data.contents);
                    _this.newTxt = textTemp[0];
                    // ## to keep data after refresh
                    _this.isFilter = data.active;
                    _this.txt = _this.newTxt;
                    // ## to keep data after refresh
                    if (_this.txt !== _this.newTxt) {
                        _this.txt = '';
                        _this.isFilter = false;
                    }
                }
                else {
                    _this.txt = '';
                    _this.isFilter = false;
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    };
    DefaultFilteredQuickSearchComponent.prototype.getListFilteredColumn = function (listContents) {
        var lists = [];
        for (var _i = 0, _a = Object.entries(listContents); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            lists.push(value);
        }
        return lists;
    };
    // @ViewChild('input', {read: ViewContainerRef}) public input;
    DefaultFilteredQuickSearchComponent.prototype.agInit = function (params) {
        this.params = params;
        this.valueGetter = params.valueGetter;
        this.selectFiltersData(this.store$);
    };
    DefaultFilteredQuickSearchComponent.prototype.isFilterActive = function () {
        return this.text !== null && this.text !== undefined && this.text !== '';
    };
    DefaultFilteredQuickSearchComponent.prototype.doesFilterPass = function (params) {
        var _this = this;
        return this.text.toLowerCase()
            .split(' ')
            .every(function (filterWord) {
            return _this.valueGetter(params.node).toString().toLowerCase().indexOf(filterWord) >= 0;
        });
    };
    DefaultFilteredQuickSearchComponent.prototype.getModel = function () {
        return { value: this.text };
    };
    DefaultFilteredQuickSearchComponent.prototype.setModel = function (model) {
        this.text = model ? model.value : '';
    };
    DefaultFilteredQuickSearchComponent.prototype.afterGuiAttached = function (params) {
        // this.input.element.nativeElement.focus();
    };
    DefaultFilteredQuickSearchComponent.prototype.componentMethod = function (message) {
        alert("Alert from PartialMatchFilterComponent " + message);
    };
    DefaultFilteredQuickSearchComponent.prototype.onChange = function (newValue) {
        if (this.text !== newValue) {
            this.text = newValue;
        }
    };
    DefaultFilteredQuickSearchComponent.prototype.onFocusInput = function (event) {
        console.log('##== onFocusInput event => ');
        var columnCodeAg = this.params['column']['colId'];
        this.columnCode = this.getExactColId(columnCodeAg);
    };
    DefaultFilteredQuickSearchComponent.prototype.onClickFilter = function (event) {
        var _this = this;
        if (this.isFilter) {
            // upload all data
            this.cleansingService.getExposures(this.fileData, this.selectedSheet).subscribe(function (data) {
                if (data) {
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionLoadAllData"]({ data: data }));
                    _this.isFilter = false;
                    _this.txt = '';
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionFilterQuickSearch"]({ quickSearch: { active: false, contents: [] } }));
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionFilterErrorsByType"]({ typeError: { active: false, type: 'all' } }));
                    /* this.cleansingService.getUpdateCheck(this.fileData, this.selectedSheet, data['first_page']).subscribe((check) => {
                        console.log('check after filtered')
                        console.log(check);
                        this.store$.dispatch(new ActionLoadErrors({ errors: check }));
                    }) */
                }
            });
        }
    };
    DefaultFilteredQuickSearchComponent.prototype.getExactColId = function (colId) {
        var colId1 = colId.split('_1').slice(0, -1).join('_1');
        if (colId1) {
            colId = colId1;
        }
        return colId;
    };
    DefaultFilteredQuickSearchComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: __webpack_require__(/*! ./default-filtered-quick-search.component.html */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component.html"),
            selector: 'filter-cell',
            styles: [__webpack_require__(/*! ./default-filtered-quick-search.component.scss */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
            _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_7__["CleansingService"],
            _ngrx_store__WEBPACK_IMPORTED_MODULE_4__["Store"], _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_9__["FileImportService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]])
    ], DefaultFilteredQuickSearchComponent);
    return DefaultFilteredQuickSearchComponent;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component.html":
/*!****************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component.html ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form [formGroup]=\"form\">\r\n  <input #input formControlName=\"txt\" (click)=\"onFocusInput($event)\" [value]=\"txt\" />\r\n  <button class=\"btn\" (click)=\"onClickFilter($event)\" name=\"checkbox\" *ngIf=\"!isFilter\">\r\n    <i>\r\n      <img src=\"assets/icons/filters/filter-b.png\" alt=\"image\" />\r\n    </i>\r\n  </button>\r\n  <button class=\"btn\" (click)=\"onClickFilter($event)\" *ngIf=\"isFilter\">\r\n    <i><img src=\"assets/icons/filters/filter-f.png\" alt=\"image\" /></i>\r\n  </button>\r\n</form>"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component.scss":
/*!****************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component.scss ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "input {\n  height: 20px;\n  width: 100%;\n  margin-top: 11px;\n  margin-left: -7px;\n  background-color: #f4f4f4;\n  border: 1px solid #f4f4f4; }\n\nimg {\n  width: 10px;\n  margin-left: -8px;\n  margin-top: -7px;\n  opacity: 60%; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbXBvbmVuZXRzL2NsZWFuc2luZy9maWx0ZXJzL2RlZmF1bHQtZmlsdGVycy9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxkY21cXG1vZHVsZXNcXHVwbG9hZFxcY29tcG9uZW5ldHNcXGNsZWFuc2luZ1xcZmlsdGVyc1xcZGVmYXVsdC1maWx0ZXJzXFxkZWZhdWx0LWZpbHRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1gsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQix5QkFBb0M7RUFDcEMseUJBQW9DLEVBQUE7O0FBR3RDO0VBQ0UsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbXBvbmVuZXRzL2NsZWFuc2luZy9maWx0ZXJzL2RlZmF1bHQtZmlsdGVycy9kZWZhdWx0LWZpbHRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0IHtcclxuICBoZWlnaHQ6IDIwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWFyZ2luLXRvcDogMTFweDtcclxuICBtYXJnaW4tbGVmdDogLTdweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMjQ0LCAyNDQsIDI0NCk7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDI0NCwgMjQ0LCAyNDQpO1xyXG59XHJcblxyXG5pbWcge1xyXG4gIHdpZHRoOiAxMHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAtOHB4O1xyXG4gIG1hcmdpbi10b3A6IC03cHg7XHJcbiAgb3BhY2l0eTogNjAlO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component.ts":
/*!**************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component.ts ***!
  \**************************************************************************************************************/
/*! exports provided: DefaultFilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultFilterComponent", function() { return DefaultFilterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @app/dcm/modules/upload/services/file-import.service */ "./src/app/dcm/modules/upload/services/file-import.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var DefaultFilterComponent = /** @class */ (function () {
    function DefaultFilterComponent(cdrf, cleansingService, store$, fileImportService, fb) {
        var _this = this;
        this.cdrf = cdrf;
        this.cleansingService = cleansingService;
        this.store$ = store$;
        this.fileImportService = fileImportService;
        this.text = '';
        this.operator = '';
        this.isFilter = false;
        this.waiting = 1000; // 1 second
        this.importData$ = this.store$.select(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_8__["selectImportObjectState"]);
        this.csMetadata$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingCsMetadata"]);
        this.exposures$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingData"]);
        this.datacheck$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingErrors"]);
        this.form = fb.group({
            txt: '',
            checkbox: false
        });
        this.selectFiltersData(store$);
        Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["combineLatest"])(this.form
            .get('txt')
            .valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["debounceTime"])(this.waiting), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["startWith"])('')), this.form.get('checkbox').valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["startWith"])(false)), function (txt, check) { return ({ txt: txt, check: check }); }).subscribe(function (criteria) {
            _this.txt = criteria['txt'];
            var value = {};
            var listeValue = [];
            _this.importData$.subscribe(function (importData) {
                _this.fileData = importData.fileData;
                _this.selectedSheet = importData.selectedSheet;
                if (_this.columnCode !== undefined && _this.txt !== null && _this.txt !== undefined && _this.txt !== '') {
                    /* console.log('default filter => ');
                    console.log(this.txt) */
                    _this.cleansingService.quickSearchByColCode(_this.fileData, _this.selectedSheet, _this.columnCode, _this.txt, _this.operator).subscribe(function (data) {
                        if (data) {
                            _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionLoadAllData"]({ data: data }));
                            _this.isFilter = true;
                            value[_this.columnCode] = _this.txt;
                            listeValue.push(value);
                            _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionFilterQuickSearch"]({ quickSearch: { active: true, contents: value } }));
                            _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionFilterErrorsByType"]({ typeError: { active: false, type: 'all' } }));
                            _this.cleansingService.getUpdateCheck(_this.fileData, _this.selectedSheet, data['first_page']).subscribe(function (check) {
                                // console.log('check after filter')
                                // console.log(check);
                                _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionLoadErrors"]({ errors: check }));
                            });
                            /* this.cleansingService.getUpdateCheck(this.fileData, this.selectedSheet, data['first_page']).subscribe((check) => {
                                this.store$.dispatch(new ActionLoadErrors({ errors: data }));
                                }) */
                        }
                    });
                }
            });
        });
    }
    DefaultFilterComponent.prototype.selectFiltersData = function (store) {
        var _this = this;
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectFilterQuickSearch"]).subscribe(function (data) {
            if (data) {
                if (data.active) {
                    var textTemp = _this.getListFilteredColumn(data.contents);
                    _this.newTxt = textTemp[0];
                    if (_this.txt !== _this.newTxt) {
                        _this.txt = '';
                        _this.isFilter = false;
                    }
                    // this.isFilter = data.active;
                }
                else {
                    _this.txt = '';
                    _this.isFilter = false;
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    };
    DefaultFilterComponent.prototype.getListFilteredColumn = function (listContents) {
        var lists = [];
        for (var _i = 0, _a = Object.entries(listContents); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            lists.push(value);
        }
        return lists;
    };
    // @ViewChild('input', {read: ViewContainerRef}) public input;
    DefaultFilterComponent.prototype.agInit = function (params) {
        this.params = params;
        this.valueGetter = params.valueGetter;
    };
    DefaultFilterComponent.prototype.isFilterActive = function () {
        return this.text !== null && this.text !== undefined && this.text !== '';
    };
    DefaultFilterComponent.prototype.doesFilterPass = function (params) {
        var _this = this;
        return this.text.toLowerCase()
            .split(' ')
            .every(function (filterWord) {
            return _this.valueGetter(params.node).toString().toLowerCase().indexOf(filterWord) >= 0;
        });
    };
    DefaultFilterComponent.prototype.getModel = function () {
        return { value: this.text };
    };
    DefaultFilterComponent.prototype.setModel = function (model) {
        this.text = model ? model.value : '';
    };
    DefaultFilterComponent.prototype.afterGuiAttached = function (params) {
        // this.input.element.nativeElement.focus();
    };
    DefaultFilterComponent.prototype.componentMethod = function (message) {
        alert("Alert from PartialMatchFilterComponent " + message);
    };
    DefaultFilterComponent.prototype.onChange = function (newValue) {
        if (this.text !== newValue) {
            this.text = newValue;
        }
    };
    DefaultFilterComponent.prototype.onFocusInput = function (event) {
        var columnCodeAg = this.params['column']['colId'];
        this.columnCode = this.getExactColId(columnCodeAg);
    };
    DefaultFilterComponent.prototype.onClickFilter = function (event) {
        var _this = this;
        // console.log('default filter onClickFilter => ')
        if (this.isFilter) {
            // upload all data
            this.cleansingService.getExposures(this.fileData, this.selectedSheet).subscribe(function (data) {
                if (data) {
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionLoadAllData"]({ data: data }));
                    _this.isFilter = false;
                    _this.txt = '';
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionFilterQuickSearch"]({ quickSearch: { active: false, contents: [] } }));
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionFilterErrorsByType"]({ typeError: { active: false, type: 'all' } }));
                    /* this.cleansingService.getUpdateCheck(this.fileData, this.selectedSheet, data['first_page']).subscribe((check) => {
                        console.log('check after filter')
                        console.log(check);
                        this.store$.dispatch(new ActionLoadErrors({ errors: check }));
                    }) */
                }
            });
        }
    };
    DefaultFilterComponent.prototype.getExactColId = function (colId) {
        var colId1 = colId.split('_1').slice(0, -1).join('_1');
        if (colId1) {
            colId = colId1;
        }
        return colId;
    };
    DefaultFilterComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: __webpack_require__(/*! ./default-filter.component.html */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component.html"),
            selector: 'filter-cell',
            styles: [__webpack_require__(/*! ./default-filter.component.scss */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"], _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_7__["CleansingService"], _ngrx_store__WEBPACK_IMPORTED_MODULE_4__["Store"], _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_9__["FileImportService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]])
    ], DefaultFilterComponent);
    return DefaultFilterComponent;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component.html":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component.html ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"float: left;\">\r\n    <select (change)=\"onSelectElement($event)\" id=\"select-division\" [(ngModel)]=\"selectedDivision\">\r\n      <option *ngFor=\"let div of divisions\" [value]=\"div.name\">{{div.name}}</option>\r\n    </select>\r\n    \r\n    <button class=\"btn\" (click)=\"onClickFilter()\" name=\"checkbox\" *ngIf=\"!isFilter\">\r\n      <i>\r\n        <img src=\"assets/icons/filters/filter-b.png\" alt=\"image\" />\r\n      </i>\r\n    </button>\r\n    <button class=\"btn\" (click)=\"onClickFilter($event)\" *ngIf=\"isFilter\">\r\n      <i>\r\n        <img src=\"assets/icons/filters/filter-f.png\" alt=\"image\" /></i>\r\n    </button>\r\n  </div>"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component.scss":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component.scss ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "select {\n  height: 20px;\n  width: 100%;\n  margin-top: 11px;\n  margin-left: -7px; }\n\noption {\n  width: 100%; }\n\nimg {\n  width: 10px;\n  margin-left: -8px;\n  margin-top: -7px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbXBvbmVuZXRzL2NsZWFuc2luZy9maWx0ZXJzL2RpdmlzaW9uLWZpbHRlci9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxkY21cXG1vZHVsZXNcXHVwbG9hZFxcY29tcG9uZW5ldHNcXGNsZWFuc2luZ1xcZmlsdGVyc1xcZGl2aXNpb24tZmlsdGVyXFxkaXZpc2lvbi1maWx0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osV0FBVztFQUNYLGdCQUFnQjtFQUNoQixpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSxXQUFXLEVBQUE7O0FBRWI7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbXBvbmVuZXRzL2NsZWFuc2luZy9maWx0ZXJzL2RpdmlzaW9uLWZpbHRlci9kaXZpc2lvbi1maWx0ZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJzZWxlY3Qge1xyXG4gIGhlaWdodDogMjBweDtcclxuICB3aWR0aDogMTAwJTtcclxuICBtYXJnaW4tdG9wOiAxMXB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAtN3B4O1xyXG59XHJcblxyXG5vcHRpb24ge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbmltZyB7XHJcbiAgd2lkdGg6IDEwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC04cHg7XHJcbiAgbWFyZ2luLXRvcDogLTdweDtcclxufVxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component.ts":
/*!***************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component.ts ***!
  \***************************************************************************************************************/
/*! exports provided: DivisionFilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DivisionFilterComponent", function() { return DivisionFilterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/dcm/modules/upload/services/file-import.service */ "./src/app/dcm/modules/upload/services/file-import.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var DivisionFilterComponent = /** @class */ (function () {
    function DivisionFilterComponent(cdrf, cleansingService, store$, fileImportService) {
        this.cdrf = cdrf;
        this.cleansingService = cleansingService;
        this.store$ = store$;
        this.fileImportService = fileImportService;
        this.text = '';
        this.operator = '';
        this.isFilter = false;
        this.selectedDivision = 'None';
        this.divisions = [
            { id: 'none', name: 'None' },
            { id: 'div1', name: '1' }
        ];
        this.importData$ = this.store$.select(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_5__["selectImportObjectState"]);
        this.csMetadata$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_2__["selectCleansingCsMetadata"]);
        this.exposures$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_2__["selectCleansingData"]);
        this.datacheck$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_2__["selectCleansingErrors"]);
        this.selectFiltersData(this.store$);
    }
    DivisionFilterComponent.prototype.selectFiltersData = function (store) {
        var _this = this;
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_2__["selectFilterQuickSearch"]).subscribe(function (data) {
            if (data) {
                if (data.active) {
                    var textTemp = _this.getListFilteredColumn(data.contents);
                    _this.newSelectedDivision = textTemp['value'][0];
                    if (_this.selectedDivision !== _this.newSelectedDivision) {
                        if (textTemp['key'][0] === 'division') {
                            _this.selectedDivision = _this.newSelectedDivision;
                            _this.isFilter = true;
                        }
                        else {
                            _this.selectedDivision = 'None';
                            _this.isFilter = false;
                        }
                    }
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    };
    DivisionFilterComponent.prototype.getListFilteredColumn = function (listContents) {
        var lists = [];
        var keys = [];
        for (var _i = 0, _a = Object.entries(listContents); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            lists.push(value);
            keys.push(key);
        }
        return { key: keys, value: lists };
    };
    DivisionFilterComponent.prototype.agInit = function (params) {
        this.params = params;
        this.valueGetter = params.valueGetter;
    };
    DivisionFilterComponent.prototype.isFilterActive = function () {
        return this.text !== null && this.text !== undefined && this.text !== '';
    };
    DivisionFilterComponent.prototype.doesFilterPass = function (params) {
        var _this = this;
        return this.text.toLowerCase()
            .split(' ')
            .every(function (filterWord) {
            return _this.valueGetter(params.node).toString().toLowerCase().indexOf(filterWord) >= 0;
        });
    };
    DivisionFilterComponent.prototype.getModel = function () {
        return { value: this.text };
    };
    DivisionFilterComponent.prototype.setModel = function (model) {
        this.text = model ? model.value : '';
    };
    DivisionFilterComponent.prototype.afterGuiAttached = function (params) {
        // this.input.element.nativeElement.focus();
    };
    DivisionFilterComponent.prototype.componentMethod = function (message) {
        alert("Alert from PartialMatchFilterComponent " + message);
    };
    DivisionFilterComponent.prototype.onSelectElement = function (event) {
        var _this = this;
        console.log('##== onFocusInput => ');
        var selectedValue = document.getElementById('select-division').value;
        var columnCodeAg = this.params['column']['colId'];
        this.columnCode = this.getExactColId(columnCodeAg);
        var value = {};
        var listeValue = [];
        this.importData$.subscribe(function (importData) {
            _this.fileData = importData.fileData;
            _this.selectedSheet = importData.selectedSheet;
            if (_this.columnCode !== undefined && selectedValue !== '' && _this.selectedDivision !== 'None') {
                _this.cleansingService.quickSearchByColCode(_this.fileData, _this.selectedSheet, _this.columnCode, selectedValue, _this.operator).subscribe(function (data) {
                    if (data) {
                        _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionLoadAllData"]({ data: data }));
                        _this.isFilter = true;
                        value[_this.columnCode] = _this.selectedDivision;
                        listeValue.push(value);
                        _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionFilterQuickSearch"]({ quickSearch: { active: true, contents: value } }));
                        _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionFilterErrorsByType"]({ typeError: { active: false, type: 'all' } }));
                        /* this.cleansingService.getUpdateCheck(this.fileData, this.selectedSheet, data['first_page']).subscribe((check) => {
                            this.store$.dispatch(new ActionLoadErrors({ errors: data }));
                            }) */
                    }
                });
            }
            else if (_this.selectedDivision === 'None') {
                _this.onClickFilter();
            }
        });
    };
    DivisionFilterComponent.prototype.onClickFilter = function () {
        var _this = this;
        console.log('##== onClickBtn event => ');
        if (this.isFilter) {
            // upload all data
            this.cleansingService.getExposures(this.fileData, this.selectedSheet).subscribe(function (data) {
                if (data) {
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionLoadAllData"]({ data: data }));
                    _this.isFilter = false;
                    _this.selectedDivision = 'None';
                    _this.text = '';
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionFilterQuickSearch"]({ quickSearch: { active: false, contents: [] } }));
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionFilterErrorsByType"]({ typeError: { active: false, type: 'all' } }));
                    /* this.cleansingService.getUpdateCheck(this.fileData, this.selectedSheet, data['first_page']).subscribe((check) => {
                        this.store$.dispatch(new ActionLoadErrors({ errors: data }));
                    }) */
                }
            });
        }
    };
    DivisionFilterComponent.prototype.getExactColId = function (colId) {
        var colId1 = colId.split('_1').slice(0, -1).join('_1');
        if (colId1) {
            colId = colId1;
        }
        return colId;
    };
    DivisionFilterComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: __webpack_require__(/*! ./division-filter.component.html */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component.html"),
            styles: [__webpack_require__(/*! ./division-filter.component.scss */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
            _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_4__["CleansingService"],
            _ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"], _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_6__["FileImportService"]])
    ], DivisionFilterComponent);
    return DivisionFilterComponent;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component.html":
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component.html ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!-- <div style=\"float: left;\">\r\n    <select (change)=\"onSelectElement($event)\" id=\"select-type\" [(ngModel)]=\"selectedTypeErrors\" style=\" width: 60px;\">\r\n      <option *ngFor=\"let err of typeErrors\" [value]=\"err.name\">{{err.name}}</option>\r\n    </select>\r\n</div>  margin-bottom: 4px; -->\r\n<span style=\"float: left; margin-left: -15px;\">\r\n  <nz-select class=\"error-filter\" [ngModel]=\"selectedTypeErrors\" [nzPlaceHolder]=\"All\" style=\"width: 85px;\">\r\n  <nz-option nzCustomContent nzLabel={{err.name}} nzValue={{err.name}}\r\n    *ngFor=\"let err of typeErrors\" style=\"width: 100px;\">\r\n    {{err.name}}\r\n  </nz-option>\r\n</nz-select>\r\n</span>\r\n\r\n\r\n<!-- <div style=\"float: left;\">\r\n    <select (change)=\"onSelectElement($event)\" id=\"select-type\" [(ngModel)]=\"selectedTypeErrors\" style=\" width: 60px;\">\r\n      <option *ngFor=\"let err of typeErrors\" [value]=\"err.name\">{{err.name}}</option>\r\n    </select>\r\n</div> -->\r\n<!-- <span style=\"float: left; margin-left: -15px;\">\r\n  <nz-select (ngModelChange)=\"onSelectElement($event)\" id=\"select-type\" class=\"error-filter\" [ngModel]=\"selectedTypeErrors\" [nzPlaceHolder]=\"All\" style=\"width: 85px;\">\r\n  <nz-option nzCustomContent nzLabel={{err.name}} nzValue={{err.id}}\r\n    *ngFor=\"let err of typeErrors\">\r\n    {{err.name}}\r\n  </nz-option>\r\n</nz-select>\r\n</span> -->\r\n<!-- <span style=\"float: left; margin-left: -15px;\">\r\n  <nz-select (change)=\"onSelectElement($event)\" id=\"select-type\" class=\"error-filter\" [ngModel]=\"selectedTypeErrors\" [nzPlaceHolder]=\"All\" style=\"width: 85px;\">\r\n  <nz-option nzCustomContent nzLabel={{err.name}} nzValue={{err.name}}\r\n    *ngFor=\"let err of typeErrors\" style=\"width: 100px;\">\r\n    {{err.name}}\r\n  </nz-option>\r\n</nz-select>\r\n</span> -->\r\n"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component.scss":
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component.scss ***!
  \*****************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".fa {\n  font-size: 19px;\n  margin-top: 3px; }\n\n.error-filter {\n  width: 85px;\n  margin-bottom: 4px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbXBvbmVuZXRzL2NsZWFuc2luZy9maWx0ZXJzL2Ryb3Bkb3duLWVycm9yLWZpbHRlci9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxkY21cXG1vZHVsZXNcXHVwbG9hZFxcY29tcG9uZW5ldHNcXGNsZWFuc2luZ1xcZmlsdGVyc1xcZHJvcGRvd24tZXJyb3ItZmlsdGVyXFxkcm9wZG93bi1lcnJvci1maWx0ZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDSSxlQUFlO0VBQ2YsZUFBZSxFQUFBOztBQUduQjtFQUNJLFdBQVc7RUFDWCxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2RjbS9tb2R1bGVzL3VwbG9hZC9jb21wb25lbmV0cy9jbGVhbnNpbmcvZmlsdGVycy9kcm9wZG93bi1lcnJvci1maWx0ZXIvZHJvcGRvd24tZXJyb3ItZmlsdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZhIHtcclxuICAgIGZvbnQtc2l6ZTogMTlweDtcclxuICAgIG1hcmdpbi10b3A6IDNweDtcclxufVxyXG5cclxuLmVycm9yLWZpbHRlciB7XHJcbiAgICB3aWR0aDogODVweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDRweDtcclxufSJdfQ== */"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component.ts":
/*!***************************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component.ts ***!
  \***************************************************************************************************************************/
/*! exports provided: DropdownErrorFilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DropdownErrorFilterComponent", function() { return DropdownErrorFilterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/dcm/modules/upload/services/file-import.service */ "./src/app/dcm/modules/upload/services/file-import.service.ts");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var DropdownErrorFilterComponent = /** @class */ (function () {
    function DropdownErrorFilterComponent(cdrf, cleansingService, store$, fileImportService) {
        this.cdrf = cdrf;
        this.cleansingService = cleansingService;
        this.store$ = store$;
        this.fileImportService = fileImportService;
        this.isFirstLoad = 1;
        this.selectedTypeErrors = 'All';
        this.typeErrors = [
            { id: 'all', name: 'All' },
            { id: 'errors', name: 'Errors' },
            { id: 'warnings', name: 'Warnings' }
        ];
        this.gridOptions = {};
        this.importData$ = this.store$.select(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_4__["selectImportObjectState"]);
        this.csMetadata$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_1__["selectCleansingCsMetadata"]);
        this.exposures$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_1__["selectCleansingData"]);
        this.datacheck$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_1__["selectCleansingErrors"]);
        this.selectFiltersData(this.store$);
    }
    DropdownErrorFilterComponent.prototype.selectFiltersData = function (store) {
        var _this = this;
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_1__["selectFilterErrorsByType"]).subscribe(function (data) {
            if (data) {
                if (data.active) {
                    _this.selectedTypeErrors = _this.getValueElement(_this.typeErrors, data.type);
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    };
    DropdownErrorFilterComponent.prototype.agInit = function (params) {
        this.params = params;
        // filter-division this.params.columnGroup.getOriginalColumnGroup().addEventListener('expandedChanged', this.onExpandChanged.bind(this));
    };
    DropdownErrorFilterComponent.prototype.ngOnDestroy = function () {
        // console.log(`Destroying HeaderGeocodeComponent`);
    };
    DropdownErrorFilterComponent.prototype.onSelectElement = function (selectedElement) {
        console.log('onSelectElement: Filter by type error');
        var isFilter = false;
        var value = document.getElementById('select-type').value;
        value = this.getIdElement(this.typeErrors, value);
        if (value !== 'all') {
            isFilter = true;
        }
        this.getFilters(isFilter, value);
    };
    DropdownErrorFilterComponent.prototype.getFilters = function (isFilter, value) {
        var _this = this;
        this.importData$.subscribe(function (importData) {
            var fileData = importData.fileData;
            var selectedSheet = importData.selectedSheet;
            _this.cleansingService.getExposuresByErrorType(fileData, selectedSheet, value).subscribe(function (data) {
                console.log('Filter by type error');
                if (data) {
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionLoadAllData"]({ data: data }));
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionFilterErrorsByType"]({ typeError: { active: isFilter, type: value } }));
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionFilterQuickSearch"]({ quickSearch: { active: false, contents: {} } }));
                    _this.cdrf.detectChanges();
                }
            });
        });
    };
    DropdownErrorFilterComponent.prototype.getIdElement = function (list, value) {
        for (var i = 0; i < list.length; i++) {
            if (list[i].name === value) {
                return list[i].id;
            }
        }
        return null;
    };
    DropdownErrorFilterComponent.prototype.getValueElement = function (list, id) {
        for (var i = 0; i < list.length; i++) {
            if (list[i].id === id) {
                return list[i].name;
            }
        }
        return null;
    };
    DropdownErrorFilterComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: __webpack_require__(/*! ./dropdown-error-filter.component.html */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component.html"),
            styles: [__webpack_require__(/*! ./dropdown-error-filter.component.scss */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
            _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_3__["CleansingService"],
            _ngrx_store__WEBPACK_IMPORTED_MODULE_6__["Store"], _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_5__["FileImportService"]])
    ], DropdownErrorFilterComponent);
    return DropdownErrorFilterComponent;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/edit-all/edit-all.component.html":
/*!***************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/edit-all/edit-all.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"center-buttons\" style=\"cursor: pointer;\">\r\n  <span class=\"ms-1\"><i class=\"fas fa-pen\" (click)=\"invokeEditMethod($event)\" style=\"color: #969696\"></i></span>\r\n  &nbsp;\r\n</div>"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/edit-all/edit-all.component.ts":
/*!*************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/edit-all/edit-all.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: EditAllComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EditAllComponent", function() { return EditAllComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/dcm/modules/upload/services/file-import.service */ "./src/app/dcm/modules/upload/services/file-import.service.ts");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_shared_customized_shared_location_grid_customized_grid_buttons_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/shared/customized-shared-location-grid/customized-grid-buttons.service */ "./src/app/shared/customized-shared-location-grid/customized-grid-buttons.service.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/general-location-info-popup.component */ "./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var EditAllComponent = /** @class */ (function () {
    function EditAllComponent(dialog, service, store$, fileImportService) {
        var _this = this;
        this.dialog = dialog;
        this.service = service;
        this.store$ = store$;
        this.fileImportService = fileImportService;
        this.isFirstLoad = 1;
        this.currentPage = 1;
        this.indexRowsLoaded = [];
        this.typeErrors = [
            { id: 'all', name: 'All' },
            { id: 'errors', name: 'Errors' },
            { id: 'warnings', name: 'Warnings' }
        ];
        this.gridOptions = {};
        this.exposures$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_1__["selectCleansingData"]);
        this.exposures$.subscribe(function (data) {
            if (data.abolute_index) {
                _this.indexRowsLoaded = data.abolute_index;
            }
            else {
                _this.indexRowsLoaded = data.index;
            }
            _this.currentPage = data['current_page'];
        });
    }
    EditAllComponent.prototype.agInit = function (params) {
        this.params = params;
        this.gridApi = params.api;
        var rowIndex = this.params.rowIndex;
        // filter-division this.params.columnGroup.getOriginalColumnGroup().addEventListener('expandedChanged', this.onExpandChanged.bind(this));
    };
    EditAllComponent.prototype.ngOnDestroy = function () {
        // console.log(`Destroying HeaderGeocodeComponent`);
    };
    EditAllComponent.prototype.invokeEditMethod = function ($event) {
        var _this = this;
        var line = {};
        var multiple = {};
        var page = this.currentPage - 1;
        var selectedRowsData = this.gridApi.getSelectedRows();
        var selectedRowsIndex = this.gridApi.getSelectedNodes().map(function (s) { return s.childIndex; });
        var original_indices = selectedRowsIndex.map(function (s) { return (_this.indexRowsLoaded[s]); });
        var original_rowId = selectedRowsIndex[0] + (page * 50);
        Object.keys(selectedRowsData[0]).forEach(function (col, i) {
            if (!selectedRowsData.map(function (e) { return e[col]; }).every(function (i) { return i === selectedRowsData[0][col]; })) {
                line[col] = null;
                multiple[col] = true;
            }
            else {
                line[col] = selectedRowsData[0][col];
                multiple[col] = false;
            }
        });
        if (selectedRowsIndex.length > 1 && selectedRowsIndex.includes(selectedRowsIndex[0])) {
            var obj = {
                line: line,
                backup: selectedRowsData[0],
                rowId: selectedRowsIndex[0],
                indices: selectedRowsIndex,
                multiple: multiple,
                isMultipleEdit: true,
                current_page: this.currentPage,
                original_rowId: original_rowId,
                original_indices: original_indices
            };
            this.onEditRowClick(obj);
        }
        else {
            var obj = {
                line: line,
                backup: selectedRowsData[0],
                rowId: selectedRowsIndex[0],
                indices: [selectedRowsIndex[0]],
                multiple: multiple,
                isMultipleEdit: false,
                current_page: this.currentPage,
                original_rowId: original_rowId,
                original_indices: [original_rowId]
            };
            this.onEditRowClick(obj);
        }
    };
    // console.log(this.gridApi.getSelectedNodes());
    //   const rowIndex = this.gridApi.getSelectedNodes()[0].childIndex;
    //   this.store.dispatch(new LoadLoadPopUps({location: this.gridApi.getSelectedRows()[0]}));
    //    this.service.setNextEdit(new GridLineInfo(rowIndex, rowIndex))
    // console.log(this.gridApi.getSelectedRows());
    EditAllComponent.prototype.onEditRowClick = function (data) {
        var dialogRef = this.dialog.open(_app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_5__["GeneralLocationInfoPopupComponent"], {
            data: data
        });
        dialogRef.afterClosed().subscribe(function (result) {
        });
    };
    EditAllComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: __webpack_require__(/*! ./edit-all.component.html */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/edit-all/edit-all.component.html")
        }),
        __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_6__["MatDialog"],
            _app_shared_customized_shared_location_grid_customized_grid_buttons_service__WEBPACK_IMPORTED_MODULE_4__["CustomizedSharedGridService"],
            _ngrx_store__WEBPACK_IMPORTED_MODULE_3__["Store"], _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_2__["FileImportService"]])
    ], EditAllComponent);
    return EditAllComponent;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/filter-component-example/partial-match-filter.component.html":
/*!*******************************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/filter-component-example/partial-match-filter.component.html ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<button (click)=\"onClickBtn($event)\">=</button>\r\nFilter: <input #input (ngModelChange)=\"onChange($event)\" [ngModel]=\"text\">\r\n&nbsp;\r\n<button class=\"btn\" (click)=\"onClickBtn($event)\">\r\n  <i>\r\n    <img src=\"assets/icons/filters/filter-b.png\" alt=\"image\"/>\r\n  </i>\r\n</button>\r\n&nbsp;\r\n<button class=\"btn\" (click)=\"onClickBtn($event)\">\r\n  <i>\r\n    <img src=\"assets/icons/filters/filter-f.png\" alt=\"image\"/></i>\r\n</button>"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/filter-component-example/partial-match-filter.component.scss":
/*!*******************************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/filter-component-example/partial-match-filter.component.scss ***!
  \*******************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "input {\n  height: 20px;\n  width: 64px; }\n\nimg {\n  width: 10px;\n  margin-left: -7px;\n  margin-top: -7px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbXBvbmVuZXRzL2NsZWFuc2luZy9maWx0ZXJzL2ZpbHRlci1jb21wb25lbnQtZXhhbXBsZS9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxkY21cXG1vZHVsZXNcXHVwbG9hZFxcY29tcG9uZW5ldHNcXGNsZWFuc2luZ1xcZmlsdGVyc1xcZmlsdGVyLWNvbXBvbmVudC1leGFtcGxlXFxwYXJ0aWFsLW1hdGNoLWZpbHRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQTtFQUNFLFlBQVk7RUFDWixXQUFXLEVBQUE7O0FBR2I7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLGdCQUFnQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbXBvbmVuZXRzL2NsZWFuc2luZy9maWx0ZXJzL2ZpbHRlci1jb21wb25lbnQtZXhhbXBsZS9wYXJ0aWFsLW1hdGNoLWZpbHRlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5pbnB1dCB7XHJcbiAgaGVpZ2h0OiAyMHB4O1xyXG4gIHdpZHRoOiA2NHB4O1xyXG59XHJcblxyXG5pbWcge1xyXG4gIHdpZHRoOiAxMHB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAtN3B4O1xyXG4gIG1hcmdpbi10b3A6IC03cHg7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/filter-component-example/partial-match-filter.component.ts":
/*!*****************************************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/filter-component-example/partial-match-filter.component.ts ***!
  \*****************************************************************************************************************************/
/*! exports provided: PartialMatchFilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PartialMatchFilterComponent", function() { return PartialMatchFilterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var PartialMatchFilterComponent = /** @class */ (function () {
    function PartialMatchFilterComponent() {
        this.text = '';
    }
    PartialMatchFilterComponent.prototype.agInit = function (params) {
        this.params = params;
        this.valueGetter = params.valueGetter;
    };
    PartialMatchFilterComponent.prototype.isFilterActive = function () {
        return this.text !== null && this.text !== undefined && this.text !== '';
    };
    PartialMatchFilterComponent.prototype.doesFilterPass = function (params) {
        var _this = this;
        return this.text.toLowerCase()
            .split(' ')
            .every(function (filterWord) {
            return _this.valueGetter(params.node).toString().toLowerCase().indexOf(filterWord) >= 0;
        });
    };
    PartialMatchFilterComponent.prototype.getModel = function () {
        return { value: this.text };
    };
    PartialMatchFilterComponent.prototype.setModel = function (model) {
        this.text = model ? model.value : '';
    };
    PartialMatchFilterComponent.prototype.afterGuiAttached = function (params) {
        this.input.element.nativeElement.focus();
    };
    PartialMatchFilterComponent.prototype.componentMethod = function (message) {
        alert("Alert from PartialMatchFilterComponent " + message);
    };
    PartialMatchFilterComponent.prototype.onChange = function (newValue) {
        if (this.text !== newValue) {
            this.text = newValue;
        }
    };
    PartialMatchFilterComponent.prototype.onClickBtn = function (event) {
        console.log(event);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('input', { read: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewContainerRef"] }),
        __metadata("design:type", Object)
    ], PartialMatchFilterComponent.prototype, "input", void 0);
    PartialMatchFilterComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: __webpack_require__(/*! ./partial-match-filter.component.html */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/filter-component-example/partial-match-filter.component.html"),
            selector: 'filter-cell',
            styles: [__webpack_require__(/*! ./partial-match-filter.component.scss */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/filter-component-example/partial-match-filter.component.scss")]
        })
    ], PartialMatchFilterComponent);
    return PartialMatchFilterComponent;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component.html":
/*!********************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component.html ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<form [formGroup]=\"form\">\r\n <div class=\"input-field col s12\">\r\n   <select class=\"icons\" id=\"opt\">\r\n     <option value=\"eq\" selected><b><span style=\"text-decoration: solid;\">=</span></b></option>\r\n     <option value=\"inf\"><b><span style=\"text-decoration: solid;\">&lt;</span></b></option>\r\n     <option value=\"sup\"><b><span style=\"text-decoration: solid;\">></span></b></option>\r\n   </select>\r\n   <input #input formControlName=\"txt\" (click)=\"onFocusInput($event)\" [value]=\"txt\" />\r\n  <button class=\"btn\" (click)=\"onClickFilter($event)\" name=\"checkbox\" *ngIf=\"!isFilter\">\r\n    <i>\r\n      <img src=\"assets/icons/filters/filter-b.png\" alt=\"image\" />\r\n    </i>\r\n  </button>\r\n  <button class=\"btn\" (click)=\"onClickFilter($event)\" *ngIf=\"isFilter\">\r\n    <i><img src=\"assets/icons/filters/filter-f.png\" alt=\"image\" /></i>\r\n  </button>\r\n </div>\r\n</form>\r\n"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component.scss":
/*!********************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component.scss ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "input {\n  height: 20px;\n  width: 85%;\n  margin-top: 11px; }\n\nimg {\n  width: 10px;\n  margin-left: -8px;\n  margin-top: -7px; }\n\nselect {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  text-indent: 2px;\n  text-overflow: ''; }\n\nselect::-ms-expand {\n  display: none; }\n\n#opt {\n  margin-right: 4px;\n  width: 20px;\n  border-radius: 2px;\n  -webkit-appearance: none; }\n\n.input-field {\n  margin-left: -15px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbXBvbmVuZXRzL2NsZWFuc2luZy9maWx0ZXJzL3Rpdi1maWx0ZXJzL0M6XFxGXFxKb2JzXFxkY21fZnJvbnQvc3JjXFxhcHBcXGRjbVxcbW9kdWxlc1xcdXBsb2FkXFxjb21wb25lbmV0c1xcY2xlYW5zaW5nXFxmaWx0ZXJzXFx0aXYtZmlsdGVyc1xcdGl2LWZpbHRlci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7RUFDWixVQUFVO0VBQ1YsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0UsV0FBVztFQUNYLGlCQUFpQjtFQUNqQixnQkFBZ0IsRUFBQTs7QUFFbEI7RUFFRSx3QkFBd0I7RUFDeEIscUJBQXFCO0VBQ3JCLGdCQUFnQjtFQUNoQixpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSxhQUFhLEVBQUE7O0FBR2Y7RUFDRSxpQkFBaUI7RUFDakIsV0FBVztFQUNYLGtCQUFrQjtFQUNsQix3QkFBd0IsRUFBQTs7QUFHMUI7RUFDRSxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2RjbS9tb2R1bGVzL3VwbG9hZC9jb21wb25lbmV0cy9jbGVhbnNpbmcvZmlsdGVycy90aXYtZmlsdGVycy90aXYtZmlsdGVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXQge1xyXG4gIGhlaWdodDogMjBweDtcclxuICB3aWR0aDogODUlO1xyXG4gIG1hcmdpbi10b3A6IDExcHg7XHJcbn1cclxuXHJcbmltZyB7XHJcbiAgd2lkdGg6IDEwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC04cHg7XHJcbiAgbWFyZ2luLXRvcDogLTdweDtcclxufVxyXG5zZWxlY3Qge1xyXG5cclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbiAgLW1vei1hcHBlYXJhbmNlOiBub25lO1xyXG4gIHRleHQtaW5kZW50OiAycHg7XHJcbiAgdGV4dC1vdmVyZmxvdzogJyc7XHJcbn1cclxuXHJcbnNlbGVjdDo6LW1zLWV4cGFuZCB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuI29wdCB7XHJcbiAgbWFyZ2luLXJpZ2h0OiA0cHg7XHJcbiAgd2lkdGg6IDIwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuLmlucHV0LWZpZWxkIHtcclxuICBtYXJnaW4tbGVmdDogLTE1cHg7XHJcbn0iXX0= */"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component.ts":
/*!******************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component.ts ***!
  \******************************************************************************************************/
/*! exports provided: TivFilterComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TivFilterComponent", function() { return TivFilterComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @app/dcm/modules/upload/services/file-import.service */ "./src/app/dcm/modules/upload/services/file-import.service.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










var TivFilterComponent = /** @class */ (function () {
    function TivFilterComponent(cdrf, cleansingService, store$, fileImportService, fb) {
        var _this = this;
        this.cdrf = cdrf;
        this.cleansingService = cleansingService;
        this.store$ = store$;
        this.fileImportService = fileImportService;
        this.text = '';
        this.operator = '';
        this.isFilter = false;
        this.waiting = 1000; // 1 second
        this.importData$ = this.store$.select(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_8__["selectImportObjectState"]);
        this.csMetadata$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingCsMetadata"]);
        this.exposures$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingData"]);
        this.datacheck$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingErrors"]);
        this.form = fb.group({
            txt: '',
            checkbox: false
        });
        this.selectFiltersData(store$);
        Object(rxjs__WEBPACK_IMPORTED_MODULE_3__["combineLatest"])(this.form
            .get('txt')
            .valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["debounceTime"])(this.waiting), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["startWith"])('')), this.form.get('checkbox').valueChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_2__["startWith"])(false)), function (txt, check) { return ({ txt: txt, check: check }); }).subscribe(function (criteria) {
            _this.txt = criteria['txt'];
            var value = {};
            var listeValue = [];
            _this.importData$.subscribe(function (importData) {
                _this.fileData = importData.fileData;
                _this.selectedSheet = importData.selectedSheet;
                if (_this.columnCode !== undefined && _this.txt !== null && _this.txt !== undefined && _this.txt !== '') {
                    _this.cleansingService.quickSearchByColCode(_this.fileData, _this.selectedSheet, _this.columnCode, _this.txt, _this.operator).subscribe(function (data) {
                        if (data) {
                            _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionLoadAllData"]({ data: data }));
                            _this.isFilter = true;
                            value[_this.columnCode] = _this.txt;
                            listeValue.push(value);
                            _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionFilterQuickSearch"]({ quickSearch: { active: true, contents: value } }));
                            _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionFilterErrorsByType"]({ typeError: { active: false, type: 'all' } }));
                            /* this.cleansingService.getUpdateCheck(this.fileData, this.selectedSheet, data['first_page']).subscribe((check) => {
                                this.store$.dispatch(new ActionLoadErrors({ errors: data }));
                                }) */
                        }
                    });
                }
            });
        });
    }
    TivFilterComponent.prototype.selectFiltersData = function (store) {
        var _this = this;
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectFilterQuickSearch"]).subscribe(function (data) {
            if (data) {
                if (data.active) {
                    var textTemp = _this.getListFilteredColumn(data.contents);
                    _this.newTxt = textTemp[0];
                    if (_this.txt !== _this.newTxt) {
                        _this.txt = '';
                        _this.isFilter = false;
                    }
                    // this.isFilter = data.active;
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    };
    TivFilterComponent.prototype.getListFilteredColumn = function (listContents) {
        var lists = [];
        for (var _i = 0, _a = Object.entries(listContents); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            lists.push(value);
        }
        return lists;
    };
    // @ViewChild('input', {read: ViewContainerRef}) public input;
    TivFilterComponent.prototype.agInit = function (params) {
        this.params = params;
        this.valueGetter = params.valueGetter;
    };
    TivFilterComponent.prototype.isFilterActive = function () {
        return this.text !== null && this.text !== undefined && this.text !== '';
    };
    TivFilterComponent.prototype.doesFilterPass = function (params) {
        var _this = this;
        return this.text.toLowerCase()
            .split(' ')
            .every(function (filterWord) {
            return _this.valueGetter(params.node).toString().toLowerCase().indexOf(filterWord) >= 0;
        });
    };
    TivFilterComponent.prototype.getModel = function () {
        return { value: this.text };
    };
    TivFilterComponent.prototype.setModel = function (model) {
        this.text = model ? model.value : '';
    };
    TivFilterComponent.prototype.afterGuiAttached = function (params) {
        // this.input.element.nativeElement.focus();
    };
    TivFilterComponent.prototype.componentMethod = function (message) {
        alert("Alert from PartialMatchFilterComponent " + message);
    };
    TivFilterComponent.prototype.onChange = function (newValue) {
        if (this.text !== newValue) {
            this.text = newValue;
        }
    };
    TivFilterComponent.prototype.onFocusInput = function (event) {
        var columnCodeAg = this.params['column']['colId'];
        this.columnCode = this.getExactColId(columnCodeAg);
    };
    TivFilterComponent.prototype.onClickFilter = function (event) {
        var _this = this;
        if (this.isFilter) {
            // upload all data
            this.cleansingService.getExposures(this.fileData, this.selectedSheet).subscribe(function (data) {
                if (data) {
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionLoadAllData"]({ data: data }));
                    _this.isFilter = false;
                    _this.txt = '';
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionFilterQuickSearch"]({ quickSearch: { active: false, contents: [] } }));
                    _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_6__["ActionFilterErrorsByType"]({ typeError: { active: false, type: 'all' } }));
                    /* this.cleansingService.getUpdateCheck(this.fileData, this.selectedSheet, data['first_page']).subscribe((check) => {
                        this.store$.dispatch(new ActionLoadErrors({ errors: data }));
                    }) */
                }
            });
        }
    };
    TivFilterComponent.prototype.getExactColId = function (colId) {
        var colId1 = colId.split('_1').slice(0, -1).join('_1');
        if (colId1) {
            colId = colId1;
        }
        return colId;
    };
    TivFilterComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            template: __webpack_require__(/*! ./tiv-filter.component.html */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component.html"),
            styles: [__webpack_require__(/*! ./tiv-filter.component.scss */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"], _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_7__["CleansingService"], _ngrx_store__WEBPACK_IMPORTED_MODULE_4__["Store"], _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_9__["FileImportService"], _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"]])
    ], TivFilterComponent);
    return TivFilterComponent;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/import/import-navbars/import-navbar.component.html":
/*!***************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/import/import-navbars/import-navbar.component.html ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<section class=\"example-section\">\r\n  <mat-checkbox class=\"example-margin\" (change)=\"setAllTree($event.checked)\">Select All</mat-checkbox>\r\n</section>\r\n<hr>\r\n<section class=\"example-section\" *ngFor=\"let tsk of task let i = index\" [value]=\"i\">\r\n  <span class=\"example-list-section\">\r\n    <mat-checkbox class=\"example-margin\" [checked]=\"allComplete\" [indeterminate]=\"someComplete()\"\r\n                  (change)=\"setAll($event.checked, i)\">\r\n      <div style=\"display: flex; align-items: center\">\r\n        <img src=\"assets/image-icon/excel-selection.bmp\">\r\n        <div style=\"font-weight: 700; white-space: normal; line-height: 13px; margin-left: 10px;\" (click)=\"onClickFile($event)\">\r\n          {{tsk.name}}\r\n        </div>\r\n      </div>\r\n\r\n    </mat-checkbox>\r\n  </span>\r\n  <span class=\"example-list-section\">\r\n    <ul>\r\n      <li *ngFor=\"let subtask of tsk.sheet\">\r\n        <mat-checkbox [(ngModel)]=\"subtask.checked\" (ngModelChange)=\"updateAllComplete()\">\r\n          <div style=\"display: flex; align-items: center\">\r\n            <img src=\"assets/image-icon/file-excel.bmp\"/>&nbsp;\r\n            <div style=\"font-weight: 700; white-space: normal; line-height: 13px; margin-left: 10px;\"\r\n                 (click)=\"onClickSheet($event, tsk.name, subtask.name)\">\r\n              {{subtask.name}}\r\n            </div>\r\n          </div>\r\n        </mat-checkbox>\r\n      </li>\r\n    </ul>\r\n  </span>\r\n<hr>\r\n</section>\r\n"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/import/import-navbars/import-navbar.component.scss":
/*!***************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/import/import-navbars/import-navbar.component.scss ***!
  \***************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".example-section {\n  margin: 12px 0; }\n\n.example-margin {\n  margin: 0 12px; }\n\nul {\n  list-style-type: none;\n  margin-top: 4px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbXBvbmVuZXRzL2ltcG9ydC9pbXBvcnQtbmF2YmFycy9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxkY21cXG1vZHVsZXNcXHVwbG9hZFxcY29tcG9uZW5ldHNcXGltcG9ydFxcaW1wb3J0LW5hdmJhcnNcXGltcG9ydC1uYXZiYXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjLEVBQUE7O0FBR2hCO0VBQ0UsY0FBYyxFQUFBOztBQUdoQjtFQUNFLHFCQUFxQjtFQUNyQixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9kY20vbW9kdWxlcy91cGxvYWQvY29tcG9uZW5ldHMvaW1wb3J0L2ltcG9ydC1uYXZiYXJzL2ltcG9ydC1uYXZiYXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZXhhbXBsZS1zZWN0aW9uIHtcclxuICBtYXJnaW46IDEycHggMDtcclxufVxyXG5cclxuLmV4YW1wbGUtbWFyZ2luIHtcclxuICBtYXJnaW46IDAgMTJweDtcclxufVxyXG5cclxudWwge1xyXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICBtYXJnaW4tdG9wOiA0cHg7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/import/import-navbars/import-navbar.component.ts":
/*!*************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/import/import-navbars/import-navbar.component.ts ***!
  \*************************************************************************************************/
/*! exports provided: ImportNavbarComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImportNavbarComponent", function() { return ImportNavbarComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _models_import_file_model__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../models/import/file-model */ "./src/app/dcm/modules/upload/models/import/file-model.ts");
/* harmony import */ var _store_import_import_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../store/import/import.actions */ "./src/app/dcm/modules/upload/store/import/import.actions.ts");
/* harmony import */ var _store_import_import_selectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ImportNavbarComponent = /** @class */ (function () {
    function ImportNavbarComponent(store, cdrf) {
        this.store = store;
        this.cdrf = cdrf;
        this.selectionSheet = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.allComplete = true;
        this.workFiles$ = this.store.select(_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_4__["selectWorkFiles"]);
    }
    ImportNavbarComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.workFiles$.subscribe(function (data) {
            if (data !== undefined) {
                var newTask = _this.setWorkFiles(data);
                _this.task = newTask;
            }
        });
    };
    ImportNavbarComponent.prototype.updateAllComplete = function () {
        for (var t = 0; t < this.task.length; t++) {
            var element = this.task[t];
            this.allComplete = this.task[t].sheet != null && this.task[t].sheet.every(function (t) { return t.checked; });
        }
        this.valide(this.task);
    };
    ImportNavbarComponent.prototype.someComplete = function () {
        for (var tsk = 0; tsk < this.task.length; tsk++) {
            if (this.task[tsk].sheet == null) {
                return this.task[tsk].checked && !this.allComplete;
                // return false;
            }
            return this.task[tsk].sheet.filter(function (t) { return t.checked; }).length > 0 && !this.allComplete;
        }
    };
    ImportNavbarComponent.prototype.setAll = function (checked, checkedIndex) {
        if (this.task[checkedIndex].checked) {
            this.task[checkedIndex].checked = false;
            checked = false;
        }
        else {
            this.task[checkedIndex].checked = true;
            checked = true;
        }
        if (this.task[checkedIndex].sheet == null) {
            return;
        }
        if (this.task[checkedIndex].sheet.length > 0) {
            this.task[checkedIndex].sheet.forEach(function (t) { return t.checked = checked; });
        }
        this.valide(this.task);
        // this.valide();
    };
    ImportNavbarComponent.prototype.setAllTree = function (checked) {
        for (var tsk = 0; tsk < this.task.length; tsk++) {
            this.allComplete = checked;
            this.task[tsk].checked = checked;
            if (this.task[tsk].sheet == null) {
                return;
            }
            this.task[tsk].sheet.forEach(function (t) { return t.checked = checked; });
        }
        this.valide(this.task);
    };
    ImportNavbarComponent.prototype.valide = function (files) {
        // const files = this.task;
        var checkedNameSheet = [];
        var checkedIdSheet = [];
        var listOfFiles = [];
        var objectFiles = {};
        for (var _i = 0, _a = Object.entries(files); _i < _a.length; _i++) {
            var _b = _a[_i], key1 = _b[0], value1 = _b[1];
            var listOfSheets = [];
            if (value1['sheet'].length > 0) {
                listOfFiles.push(value1['name']);
                for (var _c = 0, _d = Object.entries(value1['sheet']); _c < _d.length; _c++) {
                    var _e = _d[_c], key2 = _e[0], value2 = _e[1];
                    if (value2['checked']) {
                        listOfSheets.push(value2['name']);
                        checkedIdSheet.push(value2['id']);
                        checkedNameSheet.push(value2['name']);
                    }
                }
                objectFiles[value1['name']] = listOfSheets;
            }
            else {
                if (value1['checked']) {
                    checkedIdSheet.push(value1['id']);
                    checkedNameSheet.push(value1['name']);
                }
            }
        }
        var checkedFile = {
            checkedIds: checkedIdSheet,
            checkedNames: checkedNameSheet,
            allfiles: objectFiles
        };
        this.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_3__["ActionUpdateWorkFiles"]({ workFiles: this.task, sheetsModel: checkedFile }));
    };
    ImportNavbarComponent.prototype.getCheckedFile = function (files) {
        var fileM = [];
        for (var _i = 0, _a = Object.entries(files); _i < _a.length; _i++) {
            var _b = _a[_i], key1 = _b[0], value1 = _b[1];
            var fileModel = new _models_import_file_model__WEBPACK_IMPORTED_MODULE_2__["FileModel"](key1, value1['file_id'], 'accent', true);
            if (value1['excel']) {
                var subFileModelTemp = [];
                for (var _c = 0, _d = Object.entries(value1['worksheets_map']); _c < _d.length; _c++) {
                    var _e = _d[_c], key2 = _e[0], value2 = _e[1];
                    var subFileModel = new _models_import_file_model__WEBPACK_IMPORTED_MODULE_2__["FileModel"](key2, value2.toString(), 'primary', true);
                    fileModel.addSheet(subFileModel);
                }
            }
            else {
                var subFileModelTemp = [];
                var subFileModel = new _models_import_file_model__WEBPACK_IMPORTED_MODULE_2__["FileModel"](key1, value1.toString(), 'primary', true);
                fileModel.addSheet(subFileModel);
            }
            fileM.push(fileModel);
        }
        return fileM;
    };
    ImportNavbarComponent.prototype.setWorkFiles = function (workfiles) {
        var fileM = [];
        for (var i = 0; i < workfiles.length; i++) {
            var value1 = workfiles[i];
            var fileModel = new _models_import_file_model__WEBPACK_IMPORTED_MODULE_2__["FileModel"](value1['name'], value1['id'], value1['color'], value1['checked']);
            for (var j = 0; j < value1['sheet'].length; j++) {
                var value2 = value1['sheet'][j];
                var subFileModel = new _models_import_file_model__WEBPACK_IMPORTED_MODULE_2__["FileModel"](value2['name'], value2['id'], value2['color'], value2['checked']);
                fileModel.addSheet(subFileModel);
            }
            fileM.push(fileModel);
        }
        return fileM;
    };
    ImportNavbarComponent.prototype.onClickFile = function (event, fileName) {
        event.preventDefault();
    };
    ImportNavbarComponent.prototype.onClickSheet = function (event, taskName, subtaskName) {
        event.preventDefault();
        this.selectionSheet.emit({ file: taskName, sheet: subtaskName });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], ImportNavbarComponent.prototype, "selectionSheet", void 0);
    ImportNavbarComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-navbar-import',
            template: __webpack_require__(/*! ./import-navbar.component.html */ "./src/app/dcm/modules/upload/componenets/import/import-navbars/import-navbar.component.html"),
            styles: [__webpack_require__(/*! ./import-navbar.component.scss */ "./src/app/dcm/modules/upload/componenets/import/import-navbars/import-navbar.component.scss")]
        }),
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])
    ], ImportNavbarComponent);
    return ImportNavbarComponent;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/componenets/manage-column/group-column.const.ts":
/*!************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/componenets/manage-column/group-column.const.ts ***!
  \************************************************************************************/
/*! exports provided: CATEGORIES, DEFAULT_COLUMN, DEFAULT_COLUMN_COLLAPSE */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CATEGORIES", function() { return CATEGORIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_COLUMN", function() { return DEFAULT_COLUMN; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DEFAULT_COLUMN_COLLAPSE", function() { return DEFAULT_COLUMN_COLLAPSE; });
var CATEGORIES = [
    'General',
    'Geographical',
    'Insured Value',
    'MPL',
    'T&C',
    'Pricing',
    'CAT Analysis & CAT information',
    'More information',
];
var DEFAULT_COLUMN = [
    'location_name',
    'company_name',
    'property_db_id',
    'accord_occupancy_code',
    'accord_construction_code',
    'final_country',
    'final_city',
    'final_latitude',
    'final_longitude',
    'site_currency',
    'tiv_amount',
    'pd_value',
    'indemnity_period_eip',
    'bi_value',
    'mpl_pd_value',
    'mpl_pd_percentage',
    'mpl_bi_value',
    'mpl_bi_percentage',
];
var DEFAULT_COLUMN_COLLAPSE = [
    // T & C
    'windstorm_cover',
    'earthquake_cover_deductible',
    'windstorm_cover_deductible',
    'earthquake_cover_limit',
    // More Infos
    'windstorm_basement',
    'windstorm_flood_protection',
    'earthquake_soft_story',
    'gross_written_premium_value',
    // Pricing
    'mb_quality',
    'asset_quality',
    'operational_status',
    'bi_mitigation'
];


/***/ }),

/***/ "./src/app/dcm/modules/upload/containers/cleansing-container/cleansing-container.component.html":
/*!******************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/containers/cleansing-container/cleansing-container.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"full-h\" fxLayout=\"column\" fxLayoutAlign=\"start\">\r\n\r\n\r\n  <div class=\"button-set-cl\">\r\n    <anms-button-set [cleansing]=\"true\" (AddLocationClick)=\"onAddLocationClick()\"\r\n          ></anms-button-set>\r\n  </div>\r\n\r\n  <div class=\"toolbar pd\" *ngIf=\"(stage$ | async).toLowerCase() === 'Transform'.toLowerCase()\r\n  || (stage$ | async).toLowerCase() === 'CLEANSING'.toLowerCase()\r\n  ||(stage$ | async).toLowerCase() === 'SNAPSHOT'.toLowerCase()\r\n  \">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <div class=\"step-cleansing\">\r\n        <span class=\"text-green\">\r\n          <div *ngIf=\"(stage$ | async).toLowerCase() === 'Transform'.toLowerCase()\" style=\"display: inline-block;\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-1\">\r\n                <nz-spin [nzSize]=\"'small'\"></nz-spin>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                Transforming...\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"(stage$ | async).toLowerCase() === 'CLEANSING'.toLowerCase()\r\n                  ||(stage$ | async).toLowerCase() === 'SNAPSHOT'.toLowerCase() \" style=\"display: inline-block;\">\r\n            <div class=\"row\">\r\n              <div class=\"col-md-1\">\r\n                <nz-spin [nzSize]=\"'small'\"></nz-spin>\r\n              </div>\r\n              <div class=\"col-md-6\">\r\n                Cleansing...\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"toolbar\" *ngIf=\"(stage$ | async).toLowerCase() === 'Finish'.toLowerCase() && showFinish\">\r\n\r\n  </div>\r\n\r\n  <div class=\"toolbar\" *ngIf=\"(stage$ | async).toLowerCase() === 'Finish'.toLowerCase() && showFinish\">\r\n\r\n  </div>\r\n\r\n  <div class=\"toolbar pd\">\r\n    <div fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\r\n      <div>\r\n\r\n        <div *ngIf=\"totalErrors > 0\" class=\"row mt-1 mb-1\">\r\n          <div class=\"col-md-12\" id=\"id-errors-synthese\">\r\n            <anms-erros-synthese [res]=\"res\" [responseModel]=\"responseModel\" [metadataModel]=\"metadataModel\"\r\n              [datacheckModel]=\"datacheckModel\" (filterErrors)=\"onSelectionErrors($event)\"></anms-erros-synthese>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div fxFlex=\"100\" class=\"mat-elevation-z1 scrollable-table\">\r\n    <anms-shared-location-grid [loading]=\"laoding$ | async\" [editable]='true' [metadata]=\"metadata$ | async\"\r\n      [headers]=\"headers$ | async\" [exposures]=\"exposures$ | async\" [datachecks]=\"datachecks$ | async\"\r\n      [prefix]=\"headerPrefix\" [errorsInfo$]='errosInfos$ | async' (editLocationButtonClick)=\"onEditRowClick($event)\"\r\n      (deleteLocationButtonClick)=\"onDeleteRowClick($event)\" (geocodeLocationButtonClick)=\"onGeocodeRowClick($event)\">\r\n    </anms-shared-location-grid>\r\n  </div>\r\n\r\n</div>\r\n<!-- <location-map-component></location-map-component> -->\r\n"

/***/ }),

/***/ "./src/app/dcm/modules/upload/containers/cleansing-container/cleansing-container.component.scss":
/*!******************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/containers/cleansing-container/cleansing-container.component.scss ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RjbS9tb2R1bGVzL3VwbG9hZC9jb250YWluZXJzL2NsZWFuc2luZy1jb250YWluZXIvY2xlYW5zaW5nLWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyJ9 */"

/***/ }),

/***/ "./src/app/dcm/modules/upload/containers/cleansing-container/cleansing-container.component.ts":
/*!****************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/containers/cleansing-container/cleansing-container.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: CleansingContainerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CleansingContainerComponent", function() { return CleansingContainerComponent; });
/* harmony import */ var _services_cleansing_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./../../store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var _store_import_import_selectors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
/* harmony import */ var _ngrx_effects__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @ngrx/effects */ "./node_modules/@ngrx/effects/fesm5/effects.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/general-location-info-popup.component */ "./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














var CleansingContainerComponent = /** @class */ (function () {
    function CleansingContainerComponent(store$, cs, cdrf, dialog, notif, actions$, router) {
        var _this = this;
        this.store$ = store$;
        this.cs = cs;
        this.cdrf = cdrf;
        this.dialog = dialog;
        this.notif = notif;
        this.actions$ = actions$;
        this.router = router;
        this.activeIcon$ = true;
        this.res = null;
        this.headers$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"](null);
        this.columnState$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"](null);
        this.columnStructure$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"](null);
        this.metadata$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"](null);
        this.exposure$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"](null);
        this.datacheck$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"](null);
        this.metadata = null;
        this.headers = null;
        this.exposures = null;
        this.datachecks = null;
        this.showSpinner = false;
        this.showFinish = false;
        this.headerPrefix = 'target_';
        this.loaded = false;
        this.totalErrors = 0;
        this.stage$ = store$.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingStage"]);
        this.laoding$ = store$.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingLoading"]);
        this.laoded$ = store$.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingLoaded"]);
        this.flowId$ = store$.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingFlowId"]);
        this.csMetadata$ = store$.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingCsMetadata"]);
        this.importFileData$ = this.store$.select(_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_9__["selectImportObjectState"]);
        this.jobId$ = store$.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingJobId"]);
        this.jobId$.subscribe(function (jobId) {
            _this.jobId = jobId;
        });
        this.selectCleansingStore(this.store$);
        var dataLoaded = this.grabCleasingData();
        if (dataLoaded) {
            this.selectCleansingStore(this.store$);
        }
        this.importFileData$.subscribe(function (importData) {
            _this.fileData = importData.fileData;
            _this.selectedSheet = importData.selectedSheet;
        });
        // not working
        this.store$.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingDeleteOrUpdate"]).subscribe(function (datax) {
            if (datax) {
                _this.cs.getDataCleansingChangingPage().subscribe(function (exposures) {
                    _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionLoadAllData"]({ data: exposures }));
                }, function () { }, function () {
                    _this.cdrf.detectChanges();
                });
            }
        }, function () { }, function () {
            _this.cdrf.detectChanges();
        });
        this.stage$.subscribe(function (data) {
            if (data === 'FINISH') {
                _this.showFinish = true;
                setTimeout(function () {
                    _this.showFinish = false;
                }, 5000);
            }
        });
    }
    CleansingContainerComponent.prototype.ngOnInit = function () {
        var _this = this;
        Object(rxjs__WEBPACK_IMPORTED_MODULE_1__["forkJoin"])(this.laoding$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["take"])(1)), this.laoded$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["take"])(1)), this.flowId$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["take"])(1))).subscribe(function (_a) {
            var ing = _a[0], ed = _a[1], flowId = _a[2];
            if (ed) {
                // this.cs.snapshot(flowId).subscribe();
            }
            if (!ed && !ing) {
                _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionCleansingStart"]());
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    };
    CleansingContainerComponent.prototype.selectCleansingStore = function (store) {
        var _this = this;
        store.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingErrors"]).subscribe(function (errors) {
            if (errors) {
                _this.errorsModel = _this.transformErrors(errors['errors']);
                _this.datacheckModel = errors;
                _this.datachecks = errors;
                _this.datacheck$.next(errors);
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingCsMetadata"]).subscribe(function (metadata) {
            if (metadata) {
                _this.totalErrors = metadata['totalErrors'];
                _this.metadataModel = metadata;
                var metadataMod = void 0;
                var jobResult = metadata.jobResult;
                metadataMod = _this.transformCheck(jobResult);
                _this.responseModel = metadataMod;
                _this.metadata = metadata;
                _this.metadata$.next(metadata);
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingHeaders"]).subscribe(function (headers) {
            if (headers) {
                _this.headers = headers;
                _this.headers$.next(headers);
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_5__["selectCleansingData"]).subscribe(function (data) {
            if (data) {
                _this.exposures = data;
                _this.exposure$.next(data);
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    };
    CleansingContainerComponent.prototype.transformErrors = function (errors) {
        var errorsMod = {};
        for (var _i = 0, _a = Object.entries(errors); _i < _a.length; _i++) {
            var _b = _a[_i], key1 = _b[0], value1 = _b[1];
            for (var _c = 0, _d = Object.entries(value1); _c < _d.length; _c++) {
                var _e = _d[_c], key2 = _e[0], value2 = _e[1];
                errorsMod[key1] = value2;
            }
        }
        return errorsMod;
    };
    CleansingContainerComponent.prototype.grabCleasingData = function () {
        var _this = this;
        this.cs.getCleansingHeaders().subscribe(function (data) {
            _this.headers = data['headers'];
            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionLoadHeaders"]({ headers: data['headers'] }));
            var initColunmState = data['columnState'];
            var columnStructure = data['columnStructure'];
            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionColumnState"]({ columnState: initColunmState }));
            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionColumnStructure"]({ columnStructure: columnStructure }));
            _this.columnState$.next(data['columnState']);
            _this.columnStructure$.next(data['columnStructure']);
            _this.headers$.next(data['headers']);
        }, function () {
            _this.cdrf.detectChanges();
        });
        this.cs.getCleansingExposures().subscribe(function (data) {
            _this.exposures = data;
            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionLoadAllData"]({ data: data }));
            _this.exposure$.next(data);
        }, function () {
            _this.cdrf.detectChanges();
        });
        this.cs.getCleansingDatacheck().subscribe(function (check) {
            _this.datachecks = check;
            _this.datacheckModel = check;
            var errors = check;
            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionLoadErrors"]({ errors: errors }));
            _this.datacheck$.next(check);
        }, function () { }, function () {
            _this.cdrf.detectChanges();
        });
        this.cs.getCleansingCsMetadata().subscribe(function (metadata) {
            _this.metadata = metadata;
            _this.metadataModel = metadata;
            var metadataMod;
            var jobResult = metadata.jobResult;
            if (metadata) {
                _this.totalErrors = metadata['totalErrors'];
                _this.metadata$.next(metadata);
                metadataMod = _this.transformCheck(jobResult);
            }
            _this.responseModel = metadataMod;
            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionLoadCsMetadata"]({ csMetadata: metadata }));
        }, function () {
            _this.cdrf.detectChanges();
        });
        if (this.headers && this.exposures) {
            this.loaded = true;
        }
        return this.loaded;
    };
    CleansingContainerComponent.prototype.transformCheck = function (check) {
        var checkMod = [];
        for (var _i = 0, _a = Object.entries(check); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            for (var _c = 0, _d = Object.entries(value); _c < _d.length; _c++) {
                var _e = _d[_c], key2 = _e[0], value2 = _e[1];
                var metadataTemp = {
                    fieldCode: key2,
                    fieldName: this.transformCodeToName(key2),
                    errorsNumber: value2
                };
                checkMod.push(metadataTemp);
            }
        }
        return checkMod;
    };
    CleansingContainerComponent.prototype.run = function () {
        this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionCleansingStart"]());
    };
    CleansingContainerComponent.prototype.reset = function () {
        this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionCleansingReset"]());
    };
    CleansingContainerComponent.prototype.onSelectionErrors = function (event) {
        var _this = this;
        var colIdFiltered = event.colId;
        var btnState = event.btnState;
        var colIdList = [];
        var listFilteredErrors = this.errorsModel[colIdFiltered];
        if (btnState && colIdFiltered !== undefined && colIdFiltered !== '' && colIdFiltered !== null) {
            this.cs.getExposuresWithErrorByColCode(this.fileData, this.selectedSheet, colIdFiltered).subscribe(function (data) {
                if (data) {
                    // this.store$.dispatch(new ActionLoadAllData(Object.assign({}, { data: data })));
                    _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionLoadAllData"]({ data: data }));
                    // not real check for filter, wait for back-end
                    _this.cs.getUpdateCheckFilter(_this.fileData, data['first_page'], listFilteredErrors, colIdFiltered).subscribe(function (check) {
                        if (check) {
                            colIdList.push(colIdFiltered);
                            _this.updateCsMetadata(_this.jobId);
                            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionLoadErrors"]({ errors: check }));
                            // contents => ['','',...] Array()
                            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionFilterErrorsByColumn"]({ filterColumn: { active: btnState, contents: colIdList, lists: listFilteredErrors } }));
                        }
                    }, function () {
                        _this.cdrf.detectChanges();
                    });
                }
            }, function () {
                _this.cdrf.detectChanges();
            });
        }
        else {
            this.cs.getExposures(this.fileData, this.selectedSheet).subscribe(function (data) {
                if (data) {
                    // this.store$.dispatch(new ActionLoadAllData(Object.assign({}, { data: data })));
                    _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionLoadAllData"]({ data: data }));
                    _this.cs.getUpdateCheck(_this.fileData, _this.selectedSheet, data['first_page']).subscribe(function (check) {
                        _this.updateCsMetadata(_this.jobId);
                        _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionLoadErrors"]({ errors: check }));
                        _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionFilterErrorsByColumn"]({ filterColumn: { active: btnState, contents: [] } }));
                    });
                }
            });
        }
    };
    CleansingContainerComponent.prototype.updateCsMetadata = function (jobId) {
        var _this = this;
        this.cs.getUpdateCsMetadata(jobId).subscribe(function (data) {
            if (data) {
                _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_2__["ActionLoadCsMetadata"]({ csMetadata: data }));
            }
        }, function (err) {
            _this.notif.error('Update data Error');
        });
    };
    CleansingContainerComponent.prototype.transformCodeToName = function (fieldCode) {
        // fieldCode.replace(/_/g, ' ');
        var fieldName = fieldCode.split('_').join(' ');
        return fieldName;
    };
    CleansingContainerComponent.prototype.onEditRowClick = function (data) {
        var dialogRef = this.dialog.open(_app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_12__["GeneralLocationInfoPopupComponent"], {
            data: data
        });
        dialogRef.afterClosed().subscribe(function (result) {
        });
    };
    CleansingContainerComponent.prototype.onAddLocationClick = function () {
        // this.store$.dispatch(new LoadLoadPopUps({ location: new LocationModel() }));
        //
        var dialogRef = this.dialog.open(_app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_12__["GeneralLocationInfoPopupComponent"]);
        dialogRef.afterClosed().subscribe(function (result) {
            // Do something with result, if needed.
        });
    };
    CleansingContainerComponent.prototype.onGeneralDetailsSaved = function () {
        var _this = this;
        return function (result) {
            if (result)
                _this.notif.success('Location saved');
        };
    };
    CleansingContainerComponent.prototype.onDeleteRowClick = function (data) {
        this.notif.error("Line of index " + data.rowId + " of id " + data.id + " should be deleted");
    };
    CleansingContainerComponent.prototype.onGeocodeRowClick = function (data) {
        this.notif.warn("Line of index " + data.rowId + " of id " + data.id + " should be geocoded");
    };
    CleansingContainerComponent.prototype.varActive = function () {
        this.activeIcon$ = false;
        this.cdrf.detectChanges();
    };
    CleansingContainerComponent.prototype.varDesactivated = function () {
        this.activeIcon$ = true;
        this.cdrf.detectChanges();
    };
    CleansingContainerComponent.prototype.locations = function () {
        this.router.navigate(['dcm/upload/locations']);
    };
    CleansingContainerComponent.prototype.dashboard = function () {
        this.router.navigate(['dcm/upload/dashboard']);
    };
    CleansingContainerComponent.prototype.cleansing = function () {
        this.router.navigate(['dcm/upload/cleansing']);
    };
    CleansingContainerComponent.prototype.openGeneralLocationInfoPopup = function () {
        return this.dialog.open(_app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_12__["GeneralLocationInfoPopupComponent"], {
            width: '60%'
        });
    };
    CleansingContainerComponent.prototype.onClearLocalStorage = function () {
        localStorage.clear();
    };
    CleansingContainerComponent.prototype.showRes = function () { };
    CleansingContainerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'anms-cleansing-container',
            template: __webpack_require__(/*! ./cleansing-container.component.html */ "./src/app/dcm/modules/upload/containers/cleansing-container/cleansing-container.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./cleansing-container.component.scss */ "./src/app/dcm/modules/upload/containers/cleansing-container/cleansing-container.component.scss")]
        }),
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_4__["Store"],
            _services_cleansing_service__WEBPACK_IMPORTED_MODULE_0__["CleansingService"],
            _angular_core__WEBPACK_IMPORTED_MODULE_3__["ChangeDetectorRef"],
            _angular_material__WEBPACK_IMPORTED_MODULE_7__["MatDialog"],
            _app_core__WEBPACK_IMPORTED_MODULE_8__["NotificationService"],
            _ngrx_effects__WEBPACK_IMPORTED_MODULE_10__["Actions"],
            _angular_router__WEBPACK_IMPORTED_MODULE_11__["Router"]])
    ], CleansingContainerComponent);
    return CleansingContainerComponent;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/containers/import-container/import-container.component.html":
/*!************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/containers/import-container/import-container.component.html ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"full-h\" fxLayout=\"column\" fxLayoutAlign=\"start\">\r\n  \r\n  <!-- <div class=\"row\" [style.display]=\"(file$ | async) ? 'none' : 'grid'\" style=\"width: 99.9%;\">\r\n    <div class=\"col-md-12 ml-3 mt-4\">\r\n      <div class=\"center-screen\">\r\n        <button *ngIf=\"listOfFiles.length === 0\" nz-button class=\"import-button\" [nzSize]=\"'small'\" (click)=\"fileInput.click()\" style=\"width: 150px; height: 37px;\">Add File</button>\r\n        <button *ngIf=\"listOfFiles.length > 0\" nz-button class=\"import-button\" [nzSize]=\"'small'\" (click)=\"fileInput.click()\" style=\"width: 150px; height: 37px;\">Add File</button>\r\n        \r\n        <input style=\"display: none\" #attachments type=\"file\" (change)=\"onFileChanged($event)\" #fileInput multiple=\"true\">\r\n        <br>\r\n        <div  *ngIf=\"listOfFiles.length > 0\" style=\"max-height: 300px; overflow: scroll; overflow-x: hidden;\">\r\n            <br />\r\n  \r\n  <div *ngFor=\"let selected of listOfFiles;let index = index\">\r\n          <div class=\"input-group\">\r\n            <div class=\"input-group-prepend\">\r\n              <div class=\"input-group-text\" id=\"btnGroupAddon\">\r\n                <i *ngIf=\"selected.extension === ('xlsx' || 'xls')\" class=\"fas fa-file-excel\" style=\"color: green; font-size: 20px;\"></i>\r\n                <i *ngIf=\"selected.extension === 'csv'\" class=\"fas fa-file-csv\" style=\"color: green; font-size: 20px;\"></i>\r\n                <i *ngIf=\"selected.extension == 'none'\" class=\"fas fa-exclamation\" style=\"color: rgb(212, 31, 7); font-size: 20px;\"></i>\r\n              </div>\r\n            </div>\r\n            <input type=\"text\" class=\"form-control input-group-prepend\" aria-describedby=\"btnGroupAddon\" [value]=\"selected.name\" readonly style=\"width: auto;\" id=\"btnGroupAddon\">\r\n            <div class=\"input-group-prepend\">\r\n              <div class=\"input-group-text\" id=\"btnGroupAddon\"><mat-icon (click)=\"removeSelectedFile(index)\" style=\"color: rgb(97, 61, 255);  font-size: 20px; cursor: pointer;\">delete</mat-icon></div>\r\n            </div>\r\n          </div>\r\n            <br />\r\n          </div>\r\n\r\n          \r\n        </div>\r\n        <br />\r\n        <div *ngIf=\"listOfFiles.length === 0\" >        \r\n        <file-drop headertext=\"\" (onFileDrop)=\"dropped($event)\" (onFileOver)=\"fileOver($event)\"\r\n          (onFileLeave)=\"fileLeave($event)\">\r\n          <div style=\"text-align:center;\">\r\n            <br />\r\n            <br />\r\n            <fa-icon style=\"opacity:0.2; font-size:100px;\" icon=\"file-upload\"></fa-icon>\r\n          </div>\r\n        </file-drop>\r\n        <br />\r\n        <br />\r\n        <div style=\"opacity:0.8; margin-bottom: 10px;\">Please <b>drag&drop</b> a file</div>\r\n        </div>\r\n        \r\n        <button *ngIf=\"listOfFiles.length > 0\" nz-button class=\"import-button\" (click)=\"onFileSelected($event)\">Upload your files</button>\r\n        \r\n      </div>\r\n    </div>\r\n\r\n  </div> -->\r\n\r\n  <div class=\"bordered-card-accent\" fxFlex='100' *ngIf=\"(!(uploaded$ | async) && (file$|async)); let file\">\r\n    <div class=\"file-upload-info\">\r\n      <div fxFlex=\"100\" *ngIf=\"(uploading$ | async); else notUploading\" class=\"file-upload-progress-container\">\r\n        <div class=\"perc\" style=\"margin-top: 12%\" *ngIf=\"(uploadProgress$ | async) > 100 || (uploadProgress$ | async) === 0 || ((uploadProgress$ | async) === 100 && simpleFile)\">\r\n          <circle-progress\r\n            [percent]=\"100\"\r\n            [radius]=\"100\"\r\n            [outerStrokeWidth]=\"8\"\r\n            [innerStrokeWidth]=\"4\"\r\n            [outerStrokeColor]=\"'#172be0'\"\r\n            [innerStrokeColor]=\"'#525ecc'\"\r\n            [animation]=\"true\"\r\n            [animationDuration]=\"1\"\r\n            \r\n          ></circle-progress>\r\n        </div>\r\n        <div class=\"perc\" style=\"margin-top: 12%\" *ngIf=\"((uploadProgress$ | async) < 100) || ((uploadProgress$ | async) === 100 && !simpleFile)\">\r\n          <circle-progress\r\n            [percent]=\"(uploadProgress$ | async)\"\r\n            [radius]=\"100\"\r\n            [outerStrokeWidth]=\"8\"\r\n            [innerStrokeWidth]=\"4\"\r\n            [outerStrokeColor]=\"'#172be0'\"\r\n            [innerStrokeColor]=\"'#525ecc'\"\r\n            [animation]=\"true\"\r\n            [animationDuration]=\"1\"\r\n            \r\n          ></circle-progress>\r\n          <!--[lazy]=\"false\" [percent]=\"(uploadProgress$ | async)\"<br />\r\n          <button mat-button (click)=\"resetUpload()\" style=\"color: #525ecc;\">\r\n            Cancel\r\n          </button> -->\r\n        </div>\r\n        <!-- <div *ngIf=\"isInf((uploadProgress$ | async))\" class=\"perc\" style=\"margin-top: 12%\">\r\n          <circle-progress\r\n            [percent]=\"0\"\r\n            [radius]=\"100\"\r\n            [outerStrokeWidth]=\"8\"\r\n            [innerStrokeWidth]=\"4\"\r\n            [outerStrokeColor]=\"'#172be0'\"\r\n            [innerStrokeColor]=\"'#525ecc'\"\r\n            [animation]=\"true\"\r\n            [animationDuration]=\"300\"\r\n          ></circle-progress>\r\n        </div> -->\r\n      </div>\r\n      <ng-template #notUploading>\r\n        <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutAlign=\"center center\" fxLayoutGap=\"7px\">\r\n          <button mat-mini-fab color=\"primary\" (click)=\"startUpload()\">\r\n            <fa-icon icon=\"file-upload\"></fa-icon>\r\n          </button>\r\n          <p class='opacity-half'>Import</p>\r\n        </div>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n  <div style=\"width: 99.9%; height: 100%;\">\r\n    <div fxFlex=\"100\" *ngIf=\"uploaded$ | async\" class=\"file-preview\">\r\n      <anms-import-preview\r\n        [disable]='lockSelection$ | async'\r\n\r\n        [loading]=\"loading$ | async\"\r\n        [headers]=\"headers$ | async\"\r\n        [data]=\"data$ | async\"\r\n        [totalRecords]=\"totalRecords$ | async\"\r\n        [nrows]=\"nrows\"\r\n        \r\n        [files]=\"filesUploaded$ | async\"\r\n        [selectedFile]=\"selectedFile\"\r\n        (sheetChanged)=\"onSheetChanged($event)\"\r\n        (selectSheet)=\"onSelectionSheetChanged($event)\"\r\n        (fileChanged) = \"onSelectedFilename($event)\"\r\n        \r\n        (sizePageChanged)=\"onPageSizeChanged($event)\"\r\n        (goToLastPage)=\"onBtLast($event)\"\r\n\r\n        [selectedSheet]=\"0\"\r\n        [fileData]=\"(fileMetaData$ | async)\"\r\n        (lazyload)=\"onLazyLoad($event)\"\r\n      ></anms-import-preview>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- personalized popup -->\r\n\r\n  <!-- <nz-modal\r\n      [(nzVisible)]=\"isVisible\"\r\n      [nzTitle]=\"modalTitle\"\r\n      [nzContent]=\"modalContent\"\r\n      [nzFooter]=\"modalFooter\"\r\n      (nzOnCancel)=\"handleCancel()\"\r\n    >\r\n      <ng-template #modalTitle>Error File Type</ng-template>\r\n\r\n      <ng-template #modalContent>\r\n        <p style=\"color: red;\">One or More file are not autorized to upload</p>\r\n        <div>\r\n          <textarea nz-input placeholder=\"Controlled autosize\" [nzAutosize]=\"{ minRows: 3, maxRows: 5 }\"></textarea>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <ng-template #modalFooter>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancel()\">Cancel</button>\r\n        <! <button nz-button nzType=\"primary\" (click)=\"handleOk()\" [nzLoading]=\"isConfirmLoading\">Confirm</button> !!>\r\n      </ng-template>\r\n    </nz-modal> -->\r\n"

/***/ }),

/***/ "./src/app/dcm/modules/upload/containers/import-container/import-container.component.scss":
/*!************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/containers/import-container/import-container.component.scss ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".browse-button {\n  margin: 0 0 0 0; }\n\n.file-name {\n  margin: 0 0 0 0; }\n\n.file-upload-title {\n  margin-bottom: 14px; }\n\n.file-upload-info {\n  height: 100%; }\n\n.file-upload-info-name {\n  white-space: nowrap;\n  overflow: hidden; }\n\n.upload-drag-drop-container {\n  border: 3px solid lightgrey;\n  border-style: dashed;\n  border-radius: 25px;\n  margin: 20px; }\n\n.file-upload-progress-container {\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-direction: column;\n      flex-direction: column;\n  place-content: space-between center; }\n\n.file-upload-progress-container .perc {\n    display: -ms-flexbox;\n    display: flex;\n    -ms-flex-direction: column;\n        flex-direction: column;\n    -ms-flex-pack: center;\n        justify-content: center;\n    -ms-flex-align: center;\n        align-items: center;\n    -ms-flex: 100;\n        flex: 100; }\n\n.file-upload-progress-container .perc .number {\n      font-size: 50px;\n      margin-bottom: 30px;\n      margin-top: 10px; }\n\n.file-upload-progress-container .perc .label {\n      text-transform: uppercase;\n      opacity: 0.5; }\n\n.center-screen {\n  border-style: dotted;\n  border-radius: 25px;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-direction: column;\n      flex-direction: column;\n  -ms-flex-pack: center;\n      justify-content: center;\n  -ms-flex-align: center;\n      align-items: center;\n  text-align: center;\n  min-height: 80vh;\n  max-height: 100%;\n  overflow: hidden;\n  max-width: 100% !important; }\n\n.input-group-text {\n  display: inline-block; }\n\n::ng-deep .import-button {\n  border-radius: 25px;\n  border-color: #172be0;\n  background: white !important;\n  color: #525ecc; }\n\n:host ::ng-deep .mat-form-field-infix {\n  border: 1px solid #172be0 !important;\n  color: #172be0 !important;\n  border-radius: 25px !important; }\n\n:host ::ng-deep .mat-form-field-label {\n  color: black !important;\n  font-weight: bold !important; }\n\n:host ::ng-deep .mat-select-value-text {\n  color: #172be0 !important; }\n\n:host ::ng-deep .mat-select-arrow {\n  color: #172be0 !important; }\n\n::ng-deep .drop-zone {\n  margin: auto !important;\n  width: 100% !important;\n  border: none !important; }\n\n#btnGroupAddon {\n  height: 35px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbnRhaW5lcnMvaW1wb3J0LWNvbnRhaW5lci9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxkY21cXG1vZHVsZXNcXHVwbG9hZFxcY29udGFpbmVyc1xcaW1wb3J0LWNvbnRhaW5lclxcaW1wb3J0LWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQWUsRUFBQTs7QUFHakI7RUFDRSxlQUFlLEVBQUE7O0FBR2pCO0VBQ0UsbUJBQW1CLEVBQUE7O0FBR3JCO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBRUUsbUJBQW1CO0VBQ25CLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLDJCQUEyQjtFQUMzQixvQkFBb0I7RUFDcEIsbUJBQW1CO0VBQ25CLFlBQVksRUFBQTs7QUFHZDtFQUNFLG9CQUFhO0VBQWIsYUFBYTtFQUNiLDBCQUFzQjtNQUF0QixzQkFBc0I7RUFDdEIsbUNBQW1DLEVBQUE7O0FBSHJDO0lBTUksb0JBQWE7SUFBYixhQUFhO0lBQ2IsMEJBQXNCO1FBQXRCLHNCQUFzQjtJQUN0QixxQkFBdUI7UUFBdkIsdUJBQXVCO0lBQ3ZCLHNCQUFtQjtRQUFuQixtQkFBbUI7SUFDbkIsYUFBUztRQUFULFNBQVMsRUFBQTs7QUFWYjtNQWFNLGVBQWU7TUFDZixtQkFBbUI7TUFDbkIsZ0JBQWdCLEVBQUE7O0FBZnRCO01BbUJNLHlCQUF5QjtNQUN6QixZQUFZLEVBQUE7O0FBS2xCO0VBQ0Usb0JBQW9CO0VBQ3BCLG1CQUFtQjtFQUNuQixvQkFBYTtFQUFiLGFBQWE7RUFDYiwwQkFBc0I7TUFBdEIsc0JBQXNCO0VBQ3RCLHFCQUF1QjtNQUF2Qix1QkFBdUI7RUFDdkIsc0JBQW1CO01BQW5CLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtFQUNoQixnQkFBZ0I7RUFDaEIsMEJBQTBCLEVBQUE7O0FBRzVCO0VBQ0UscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0UsbUJBQW1CO0VBQ25CLHFCQUFxQjtFQUNyQiw0QkFBNEI7RUFDNUIsY0FBYyxFQUFBOztBQUdoQjtFQUNFLG9DQUFvQztFQUNwQyx5QkFBd0I7RUFDeEIsOEJBQThCLEVBQUE7O0FBR2hDO0VBQ0UsdUJBQXVCO0VBQ3ZCLDRCQUE0QixFQUFBOztBQUc5QjtFQUNFLHlCQUF3QixFQUFBOztBQUcxQjtFQUNFLHlCQUF3QixFQUFBOztBQUcxQjtFQUNFLHVCQUF1QjtFQUN2QixzQkFBc0I7RUFDdEIsdUJBQXVCLEVBQUE7O0FBR3pCO0VBQ0UsWUFBWSxFQUFBIiwiZmlsZSI6InNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbnRhaW5lcnMvaW1wb3J0LWNvbnRhaW5lci9pbXBvcnQtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmJyb3dzZS1idXR0b24ge1xyXG4gIG1hcmdpbjogMCAwIDAgMDtcclxufVxyXG5cclxuLmZpbGUtbmFtZSB7XHJcbiAgbWFyZ2luOiAwIDAgMCAwO1xyXG59XHJcblxyXG4uZmlsZS11cGxvYWQtdGl0bGUge1xyXG4gIG1hcmdpbi1ib3R0b206IDE0cHg7XHJcbn1cclxuXHJcbi5maWxlLXVwbG9hZC1pbmZvIHtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5maWxlLXVwbG9hZC1pbmZvLW5hbWUge1xyXG5cclxuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuXHJcbi51cGxvYWQtZHJhZy1kcm9wLWNvbnRhaW5lciB7XHJcbiAgYm9yZGVyOiAzcHggc29saWQgbGlnaHRncmV5O1xyXG4gIGJvcmRlci1zdHlsZTogZGFzaGVkO1xyXG4gIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbiAgbWFyZ2luOiAyMHB4O1xyXG59XHJcblxyXG4uZmlsZS11cGxvYWQtcHJvZ3Jlc3MtY29udGFpbmVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgcGxhY2UtY29udGVudDogc3BhY2UtYmV0d2VlbiBjZW50ZXI7XHJcblxyXG4gIC5wZXJjIHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgZmxleDogMTAwO1xyXG5cclxuICAgIC5udW1iZXIge1xyXG4gICAgICBmb250LXNpemU6IDUwcHg7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgLmxhYmVsIHtcclxuICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuICAgICAgb3BhY2l0eTogMC41O1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmNlbnRlci1zY3JlZW4ge1xyXG4gIGJvcmRlci1zdHlsZTogZG90dGVkO1xyXG4gIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIG1pbi1oZWlnaHQ6IDgwdmg7XHJcbiAgbWF4LWhlaWdodDogMTAwJTtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uaW5wdXQtZ3JvdXAtdGV4dCB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLmltcG9ydC1idXR0b24ge1xyXG4gIGJvcmRlci1yYWRpdXM6IDI1cHg7XHJcbiAgYm9yZGVyLWNvbG9yOiAjMTcyYmUwO1xyXG4gIGJhY2tncm91bmQ6IHdoaXRlICFpbXBvcnRhbnQ7XHJcbiAgY29sb3I6ICM1MjVlY2M7XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAubWF0LWZvcm0tZmllbGQtaW5maXgge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkICMxNzJiZTAgIWltcG9ydGFudDtcclxuICBjb2xvcjojMTcyYmUwICFpbXBvcnRhbnQ7XHJcbiAgYm9yZGVyLXJhZGl1czogMjVweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkLWxhYmVsIHtcclxuICBjb2xvcjogYmxhY2sgIWltcG9ydGFudDtcclxuICBmb250LXdlaWdodDogYm9sZCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLm1hdC1zZWxlY3QtdmFsdWUtdGV4dCB7XHJcbiAgY29sb3I6IzE3MmJlMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46aG9zdCA6Om5nLWRlZXAgLm1hdC1zZWxlY3QtYXJyb3cge1xyXG4gIGNvbG9yOiMxNzJiZTAgIWltcG9ydGFudDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5kcm9wLXpvbmUge1xyXG4gIG1hcmdpbjogYXV0byAhaW1wb3J0YW50O1xyXG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XHJcbiAgYm9yZGVyOiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbiNidG5Hcm91cEFkZG9uIHtcclxuICBoZWlnaHQ6IDM1cHg7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/dcm/modules/upload/containers/import-container/import-container.component.ts":
/*!**********************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/containers/import-container/import-container.component.ts ***!
  \**********************************************************************************************/
/*! exports provided: ImportContainerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImportContainerComponent", function() { return ImportContainerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _services_file_import_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../services/file-import.service */ "./src/app/dcm/modules/upload/services/file-import.service.ts");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../store/import/import.actions */ "./src/app/dcm/modules/upload/store/import/import.actions.ts");
/* harmony import */ var _store_import_import_selectors__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _store_mapping_mapping_selectors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../store/mapping/mapping.selectors */ "./src/app/dcm/modules/upload/store/mapping/mapping.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_mapping_mapping_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/dcm/modules/upload/store/mapping/mapping.actions */ "./src/app/dcm/modules/upload/store/mapping/mapping.actions.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var ng_zorro_antd__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ng-zorro-antd */ "./node_modules/ng-zorro-antd/fesm5/ng-zorro-antd.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};














var ImportContainerComponent = /** @class */ (function () {
    function ImportContainerComponent(router, importService, store, cdrf, dialog, modal) {
        var _this = this;
        this.router = router;
        this.importService = importService;
        this.store = store;
        this.cdrf = cdrf;
        this.dialog = dialog;
        this.modal = modal;
        this.files = [];
        this.headers$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this.filesUploaded$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this.data$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this.totalRecords$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"](0);
        this.loading$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"](true);
        this.uploadProgress = 0;
        this.simpleFile = true;
        this.page = 0;
        this._validFileExtensions = ['xlsx', 'xls', 'csv'];
        this.listStepProgress = [10, 20, 30, 40, 50, 70, 80, 90];
        this.fileList = [];
        this.listOfFiles = [];
        this.isVisible = false;
        this.nrows = 1500;
        this.defaultWorksheetSelected = 0;
        this.filenames = '';
        this.file$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_3__["select"])(_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_5__["selectFiles"]));
        // this.file$ = this.store.pipe(select(selectSelectedFile));
        this.uploadProgress$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_3__["select"])(_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_5__["selectImportProgress"]));
        this.uploaded$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_3__["select"])(_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_5__["selectImported"]));
        this.uploading$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_3__["select"])(_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_5__["selectImporting"]));
        this.fileMetaData$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_3__["select"])(_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_5__["selectFileData"]));
        this.selectedSheet$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_3__["select"])(_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_5__["selectFileSheet"]));
        this.selectedFile$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_3__["select"])(_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_5__["selectSelectedFile"]));
        // this.selectFilename$ = this.store.pipe(select(selectFilename))
        this.lockSelection$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_3__["select"])(_store_mapping_mapping_selectors__WEBPACK_IMPORTED_MODULE_7__["selectMappingLocked"]));
        this.importData$ = this.store.select(_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_5__["selectImportObjectState"]);
        this.oldFileId$ = this.store.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_13__["selectOldFileId"]);
        /* if (this.files !== undefined) {
          this.onFileChanged(this.upFiles)
        } */
        this.oldFileId$.subscribe(function (oldFileId) {
            if (oldFileId !== undefined && oldFileId !== null && oldFileId) {
                _this.oldFileId = oldFileId;
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        this.file$.subscribe(function (file) {
            if (file) {
                _this.upFiles = file;
                _this.filenames = file[0].name;
                _this.filesUploaded$.next(file);
                // this.onFileChanged(file)
            }
            else
                _this.filenames = '';
        });
        this.uploadProgress$.subscribe(function (uploadProgress) {
            if (uploadProgress !== undefined && uploadProgress !== null) {
                if (uploadProgress > 100) {
                    _this.uploadProgress = 1;
                    _this.simpleFile = true;
                }
                else {
                    _this.uploadProgress = uploadProgress;
                    if (_this.listStepProgress.includes(uploadProgress)) {
                        _this.simpleFile = false;
                    }
                }
            }
        });
        this.selectedSheet$.subscribe(function (index) {
            _this.page = 1;
            // this.grabPreviewData(index);
        });
        this.selectedFile$.subscribe(function (file) {
            _this.page = 1;
            if (file)
                _this.selectedFile = file.name;
        });
        this.importData$.subscribe(function (data) {
            if (data.importMetadata) {
                _this.newData = data;
                var listOfFiles = [];
                var objectFiles = {};
                for (var _i = 0, _a = Object.entries(data.importMetadata); _i < _a.length; _i++) {
                    var _b = _a[_i], key0 = _b[0], value0 = _b[1];
                    var listOfSheets = [];
                    listOfFiles.push(key0);
                    for (var _c = 0, _d = Object.entries(value0['worksheets_map']); _c < _d.length; _c++) {
                        var _e = _d[_c], key1 = _e[0], value1 = _e[1];
                        listOfSheets.push(key1);
                    }
                    objectFiles[key0] = listOfSheets;
                }
                _this.allFiles = objectFiles;
                _this.filesUploaded$.next(listOfFiles);
            }
        });
    }
    ImportContainerComponent.prototype.ngOnInit = function () {
    };
    ImportContainerComponent.prototype.getData = function () {
        return this.datatest;
    };
    ImportContainerComponent.prototype.isInf = function (numb) {
        console.log(numb);
        if (numb > 100) {
            return false;
        }
        return true;
    };
    /* onFileChanged(event: any) {
      for (let i = 0; i <= event.target.files.length - 1; i++) {
        const selectedFile = event.target.files[i];
        let fileExtention = this.getExtension(selectedFile.name);
        if (!this._validFileExtensions.includes(fileExtention)) {
          fileExtention = 'none';
        }
        this.fileList.push(selectedFile);
        this.listOfFiles.push({name: selectedFile.name, extension: fileExtention});
      }
      this.attachment.nativeElement.value = '';
    } */
    ImportContainerComponent.prototype.onFileChanged = function (files) {
        for (var i = 0; i <= files.length - 1; i++) {
            var selectedFile = files[i];
            var fileExtention = this.getExtension(selectedFile.name);
            if (!this._validFileExtensions.includes(fileExtention)) {
                fileExtention = 'none';
            }
            this.fileList.push(selectedFile);
            this.listOfFiles.push({ name: selectedFile.name, extension: fileExtention });
        }
        // this.attachment.nativeElement.value = '';
        this.onFileSelected();
    };
    ImportContainerComponent.prototype.removeSelectedFile = function (index) {
        // delete file from FileList
        if (this.fileList.length > 0 || this.listOfFiles.length > 0) {
            this.listOfFiles.splice(index, 1);
            this.fileList.splice(index, 1);
        }
    };
    /* private grabPreviewData(fileData: FileData, index: number) {
      if (fileData && fileData.filename) {
        this.loading$.next(true);
        const defaultWorksheet = fileData.worksheet[index];
        let worksheetIdSelected;
        if (fileData.isExcel) {
          worksheetIdSelected = fileData.worksheetId[defaultWorksheet];
        }
        else {
          // get value first obj
          worksheetIdSelected = fileData.worksheetId[Object.keys(fileData.worksheetId)[0]];
        }
          const newFileData = {
            filename: fileData.filename,
            fileId: fileData.fileId,
            filetype: fileData.filetype,
            page: fileData.page,
            lobId: fileData.lobId,
            nrows: fileData.nrows
          };
          this.importService.getFileData(newFileData, worksheetIdSelected).subscribe(res => {
          
          this.totalRecords$.next(res.count);
          this.headers$.next(res.headers);
          this.data$.next(res);
  
          this.store.dispatch(new ActionGetDataImported({data: res.data}));
          this.loading$.next(false);
          this.datatest = res.data;
        });
      }
    } */
    ImportContainerComponent.prototype.grabPreviewData = function (index) {
        var _this = this;
        if (index != null && index != undefined) {
            this.fileMetaData$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["take"])(1)).subscribe(function (fileData) {
                if (fileData && fileData.filename) {
                    _this.loading$.next(true);
                    var defaultWorksheet = fileData.worksheet[index];
                    var worksheetIdSelected = void 0;
                    if (fileData.isExcel) {
                        worksheetIdSelected = fileData.worksheetId[defaultWorksheet];
                    }
                    else {
                        // get value first obj
                        worksheetIdSelected = fileData.worksheetId[Object.keys(fileData.worksheetId)[0]];
                    }
                    var newFileData = {
                        filename: fileData.filename,
                        fileId: fileData.fileId,
                        filetype: fileData.filetype,
                        page: fileData.page,
                        lobId: fileData.lobId,
                        nrows: fileData.nrows
                    };
                    _this.importService.getFileData(newFileData, worksheetIdSelected).subscribe(function (res) {
                        _this.totalRecords$.next(res.count);
                        _this.headers$.next(res.headers);
                        _this.data$.next(res);
                        _this.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__["ActionGetDataImported"]({ data: res.data }));
                        _this.loading$.next(false);
                        _this.datatest = res.data;
                    });
                }
            });
        }
    };
    ImportContainerComponent.prototype.onSheetChanged = function (event) {
        this.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__["ActionSelectSheet"]({ sheetIndex: event.value }));
    };
    ImportContainerComponent.prototype.onSelectionSheetChanged = function (checkedSheet) {
        // console.log('==> onSelectionSheetChanged : ')
        // console.log(checkedSheet)
        // console.log(this.allFiles)
        // console.log(this.allFiles[checkedSheet['file']])
        var sheets = this.allFiles[checkedSheet['file']];
        var selectedFile = checkedSheet['file'];
        var index = sheets.indexOf(checkedSheet['sheet']);
        if (index < 0) {
            index = 0;
        }
        this.onSelectedFilename(selectedFile, index);
        // this.store.dispatch(new ActionSelectSheet({sheetIndex: index}));
        // this.store.dispatch(new ActionSelectedSheets({sheetsModel: checkedFile}))
    };
    ImportContainerComponent.prototype.onSelectedFilename = function (value, index) {
        var _this = this;
        console.log('==> import value, index: ');
        console.log(value);
        console.log(index);
        this.fileIndex = value;
        if (this.fileIndex != null && this.fileIndex != undefined) {
            var data_1 = this.newData;
            var newFileData = {
                filename: this.fileIndex,
                fileId: data_1['file_id'],
                filetype: data_1['filetype'],
                page: this.page,
                lobId: 1,
                nrows: 50
            };
            data_1 = data_1.importMetadata[this.fileIndex];
            var worksheets_1 = [];
            if (data_1['worksheets_map']) { // excel
                console.log('==> excel');
                worksheets_1 = this.getKeyElements(data_1['worksheets_map']);
            }
            else { // csv
                console.log('==> csv');
                var fileName = this.getFileName(this.fileIndex);
                worksheets_1.push(fileName);
            }
            // console.log('container data => ')
            // console.log(data)
            this.importService.getFileData(newFileData, data_1['worksheets_map'][worksheets_1[index]]).subscribe(function (res) {
                // console.log('container res => ')
                // console.log(res)
                var newFileMetadata = {
                    filename: _this.fileIndex,
                    filetype: data_1['filetype'],
                    fileId: data_1['file_id'],
                    worksheetId: data_1['worksheets_map'],
                    page: _this.page,
                    worksheet: worksheets_1,
                    totalRows: res['total'],
                    nrows: 50,
                    lobId: 1,
                    isExcel: data_1['excel'],
                    document: res
                };
                _this.totalRecords$.next(res.count);
                _this.headers$.next(res.headers);
                _this.data$.next(res);
                _this.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__["ActionUpdateFileData"]({ fileData: newFileMetadata }));
                _this.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__["ActionGetDataImported"]({ data: res.data }));
                _this.loading$.next(false);
                _this.datatest = res.data;
            });
        }
    };
    ImportContainerComponent.prototype.onPageSizeChanged = function (newPageSize) {
        console.log(newPageSize);
    };
    ImportContainerComponent.prototype.onBtLast = function (lastPageChanged) {
        this.lastPageChanged = lastPageChanged;
        var index = lastPageChanged.selectedSheet;
        this.page = lastPageChanged.lastPage;
        this.nrows = lastPageChanged.newNrows;
        // this.grabPreviewData(index);
    };
    ImportContainerComponent.prototype.isFileAutorized = function (files) {
        for (var i = 0; i < files.length; i++) {
            var ext = files[i].extension;
            if (!this._validFileExtensions.includes(ext)) {
                return false;
            }
        }
        return true;
    };
    ImportContainerComponent.prototype.onFileSelected = function () {
        // this.cancelUpload();
        if (!this.oldFileId) {
            console.log('=== oldfileId null import ===');
            this.cancelUpload();
        }
        if (this.isFileAutorized(this.listOfFiles)) {
            if (this.fileList) {
                this.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__["ActionUploadFiles"]({ file: this.fileList }));
                this.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__["ActionSelectedFile"]({ file: this.fileList[0] }));
            }
        }
        else {
            this.error();
        }
    };
    /* onFileSelected(event) {
      this.cancelUpload();
      
      if (this.isFileAutorized(this.listOfFiles)) {
        if (this.fileList) {
        this.store.dispatch(new ActionUploadFiles({ file: this.fileList }));
        this.store.dispatch(new ActionSelectedFile({file: this.fileList[0]}));
      }
      }
      else {
        // const dialogRef = this.dialog.open(ValideImport, {
        //   width: '450px',
        //   data: { }
        // });
        // dialogRef.afterClosed().subscribe(result => {
        //   console.log('The dialog was closed');
        // });
        // this.openAlertDialog();
        // this.showModal();
        this.error();
      }
      
    } */
    /* openAlertDialog() {
      const dialogRef = this.dialog.open(ValideImport,{
        data:{
          message: 'ONE OR MORE FILE NOT AUTORIZED TO UPLOAD',
          buttonText: {
            cancel: 'Done'
          }
        },
      });
    } */
    ImportContainerComponent.prototype.error = function () {
        this.modal.error({
            nzTitle: 'Error message',
            nzContent: 'One or more files are not allowed to be uploaded'
        });
    };
    ImportContainerComponent.prototype.showModal = function () {
        this.isVisible = true;
    };
    ImportContainerComponent.prototype.handleCancel = function () {
        this.isVisible = false;
    };
    ImportContainerComponent.prototype.startUpload = function () {
        console.log('===> startUpload');
        localStorage.clear();
        location.reload();
        this.cancelUpload();
        this.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__["ActionStartImport"]());
    };
    ImportContainerComponent.prototype.resetUpload = function () {
        // this.attachment.nativeElement.value = '';
        this.fileList = [];
        this.listOfFiles = [];
        this.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__["ActionCancelImport"]());
        this.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__["ActionImportReset"]());
        this.store.dispatch(new _app_dcm_modules_upload_store_mapping_mapping_actions__WEBPACK_IMPORTED_MODULE_8__["ActionMappingReset"]());
        this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_9__["ActionCleansingReset"]());
        this.router.navigate(['dcm/upload']);
    };
    ImportContainerComponent.prototype.onLazyLoad = function (event) {
        this.page = Math.floor((event.first + 1) / this.nrows);
        this.selectedSheet$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_6__["take"])(1)).subscribe(function (index) {
            // this.grabPreviewData(index);
        });
    };
    ImportContainerComponent.prototype.dropped = function (event) {
        var _this = this;
        var _loop_1 = function (droppedFile) {
            if (droppedFile.fileEntry.isFile) {
                var fileEntry_1 = droppedFile.fileEntry;
                fileEntry_1.file(function (file) {
                    var files = [file];
                    var fileExtention = _this.getExtension(fileEntry_1.name);
                    if (!_this._validFileExtensions.includes(fileExtention)) {
                        fileExtention = 'none';
                    }
                    _this.listOfFiles.push({ name: fileEntry_1.name, extension: fileExtention });
                    _this.fileList.push(file);
                });
            }
            else {
                // It was a directory (empty directories are added, otherwise only files)
                var fileEntry = droppedFile.fileEntry;
                this_1.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__["ActionImportReset"]());
            }
        };
        var this_1 = this;
        for (var _i = 0, _a = event.files; _i < _a.length; _i++) {
            var droppedFile = _a[_i];
            _loop_1(droppedFile);
        }
    };
    ImportContainerComponent.prototype.getExtension = function (file) {
        return file.split('.').pop();
    };
    ImportContainerComponent.prototype.cancelUpload = function () {
        console.log('clear before upload');
        this.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__["ActionCancelImport"]());
        this.store.dispatch(new _store_import_import_actions__WEBPACK_IMPORTED_MODULE_4__["ActionImportReset"]());
        this.store.dispatch(new _app_dcm_modules_upload_store_mapping_mapping_actions__WEBPACK_IMPORTED_MODULE_8__["ActionMappingReset"]());
        this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_9__["ActionCleansingReset"]());
    };
    ImportContainerComponent.prototype.fileOver = function (event) {
        console.log(event);
    };
    ImportContainerComponent.prototype.fileLeave = function (event) {
        console.log(event);
    };
    ImportContainerComponent.prototype.getFileName = function (filename) {
        return filename.split('.').slice(0, -1).join('.');
    };
    ImportContainerComponent.prototype.getKeyElements = function (obj) {
        var keys = [];
        for (var _i = 0, _a = Object.entries(obj); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            keys.push(key);
        }
        return keys;
    };
    ImportContainerComponent.prototype.validateSingleInput = function (oInput) {
        if (oInput.type === 'file') {
            var sFileName = oInput.value;
            if (sFileName.length > 0) {
                var blnValid = false;
                for (var j = 0; j < this._validFileExtensions.length; j++) {
                    var sCurExtension = this._validFileExtensions[j];
                    if (sFileName.substr(sFileName.length - sCurExtension.length, sCurExtension.length).toLowerCase() === sCurExtension.toLowerCase()) {
                        blnValid = true;
                        break;
                    }
                }
                if (!blnValid) {
                    alert('Sorry, ' + sFileName + ' is invalid, allowed extensions are: ' + this._validFileExtensions.join(', '));
                    oInput.value = '';
                    return false;
                }
            }
        }
        return true;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('attachments'),
        __metadata("design:type", Object)
    ], ImportContainerComponent.prototype, "attachment", void 0);
    ImportContainerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-import-container',
            template: __webpack_require__(/*! ./import-container.component.html */ "./src/app/dcm/modules/upload/containers/import-container/import-container.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./import-container.component.scss */ "./src/app/dcm/modules/upload/containers/import-container/import-container.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_12__["Router"], _services_file_import_service__WEBPACK_IMPORTED_MODULE_2__["FileImportService"], _ngrx_store__WEBPACK_IMPORTED_MODULE_3__["Store"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialog"], ng_zorro_antd__WEBPACK_IMPORTED_MODULE_11__["NzModalService"]])
    ], ImportContainerComponent);
    return ImportContainerComponent;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/containers/location-map/store-part/location-map.actions.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/containers/location-map/store-part/location-map.actions.ts ***!
  \***********************************************************************************************/
/*! exports provided: LocationMapActionTypes, LoadLocationMaps */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationMapActionTypes", function() { return LocationMapActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadLocationMaps", function() { return LoadLocationMaps; });
var LocationMapActionTypes;
(function (LocationMapActionTypes) {
    LocationMapActionTypes["LoadLocationMaps"] = "[LocationMapPopUp] Load LocationMaps";
})(LocationMapActionTypes || (LocationMapActionTypes = {}));
var LoadLocationMaps = /** @class */ (function () {
    function LoadLocationMaps(payload) {
        this.payload = payload;
        this.type = LocationMapActionTypes.LoadLocationMaps;
    }
    return LoadLocationMaps;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/containers/location-map/store-part/location-map.reducer.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/containers/location-map/store-part/location-map.reducer.ts ***!
  \***********************************************************************************************/
/*! exports provided: LocationMapState, initialState, LocationMapReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationMapState", function() { return LocationMapState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationMapReducer", function() { return LocationMapReducer; });
/* harmony import */ var app_dcm_modules_upload_containers_location_map_store_part_location_map_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/dcm/modules/upload/containers/location-map/store-part/location-map.actions */ "./src/app/dcm/modules/upload/containers/location-map/store-part/location-map.actions.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var LocationMapState = /** @class */ (function () {
    function LocationMapState() {
        this.loaded = false;
    }
    return LocationMapState;
}());

var initialState = new LocationMapState();
function LocationMapReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case app_dcm_modules_upload_containers_location_map_store_part_location_map_actions__WEBPACK_IMPORTED_MODULE_0__["LocationMapActionTypes"].LoadLocationMaps:
            return __assign({}, action.payload);
        default:
            return state;
    }
}


/***/ }),

/***/ "./src/app/dcm/modules/upload/containers/upload-container/upload-container.component.html":
/*!************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/containers/upload-container/upload-container.component.html ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div>\r\n  <anms-button-set (AddLocationClick)=\"onAddLocationClick()\"\r\n                   (CurrentLocationClick)=\"onCurrentLocationClick()\"></anms-button-set>\r\n</div>\r\n\r\n<div  *ngIf=\"isCleasingFinished() && !(savedUrl$ | async)\">\r\n\r\n  <div>\r\n    <anms-shared-location-upload-grid [metadata]=\"metadata$ | async\"\r\n                                      [headers]=\"headers$ | async\" [exposures]=\"exposures$ | async\"\r\n                                      (editLocationButtonClick)=\"onEditRowClick($event)\"\r\n                                      (deleteLocationButtonClick)=\"onDeleteRowClick($event)\" (geocodeLocationButtonClick)=\"onGeocodeRowClick($event)\">\r\n    </anms-shared-location-upload-grid>\r\n    <!-- <anms-shared-location-upload-grid [loading]=\"laoding$ | async\" [editable]='true' [metadata]=\"metadata$ | async\"\r\n                                      [headers]=\"headers$ | async\" [exposures]=\"exposures$ | async\" [datachecks]=\"datachecks$ | async\"\r\n                                      [prefix]=\"headerPrefix\" [errorsInfo$]='errosInfos$ | async' (editLocationButtonClick)=\"onEditRowClick($event)\"\r\n                                      (deleteLocationButtonClick)=\"onDeleteRowClick($event)\" (geocodeLocationButtonClick)=\"onGeocodeRowClick($event)\">\r\n    </anms-shared-location-upload-grid> -->\r\n  </div>\r\n</div>\r\n\r\n<div>\r\n  <div *ngIf=\"isCleasingFinished() && (savedUrl$ | async)\">\r\n    <anms-empty-table></anms-empty-table>\r\n  </div>\r\n\r\n  <div *ngIf=\"!isCleasingFinished()\">\r\n    <div>\r\n      <anms-empty-table></anms-empty-table>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!--<div *ngIf=\"popupVisibility\">\r\n  <anms-general-location-info-popup></anms-general-location-info-popup>\r\n</div> -->\r\n"

/***/ }),

/***/ "./src/app/dcm/modules/upload/containers/upload-container/upload-container.component.scss":
/*!************************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/containers/upload-container/upload-container.component.scss ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".scrollable-table {\n  max-height: 100%;\n  min-height: unset !important; }\n\n::ng-deep .mat-form-field-label {\n  color: black !important;\n  font-weight: bold !important; }\n\n::ng-deep .mat-select-value-text {\n  color: white; }\n\n::ng-deep .mat-select-arrow {\n  color: white !important; }\n\n#header-third-id {\n  background-color: #ffffff; }\n\n#mySidenav a {\n  right: 0px;\n  transition: 0.3s;\n  padding: 15px;\n  position: fixed;\n  width: 47px;\n  text-decoration: none;\n  font-size: 20px;\n  color: white;\n  border-radius: 5px 0px 0px 5px;\n  border: 7px solid #DCDCDC; }\n\n#sideBar:hover {\n  background-color: #20B2AA; }\n\n#sideBar:hover .fa-bars {\n  color: white; }\n\n#helps {\n  top: calc(100% - 140px);\n  background-color: white; }\n\n.fa-cog {\n  position: absolute;\n  left: 15%;\n  top: 15%;\n  font-size: 20px !important;\n  color: #FFA500; }\n\n#helps:hover {\n  background-color: #FFA500; }\n\n#helps:hover .fa-cog {\n  color: white; }\n\n#setting {\n  top: calc(100% - 180px);\n  background-color: white; }\n\n.fa-user {\n  position: absolute;\n  left: 15%;\n  top: 15%;\n  font-size: 20px !important;\n  color: #2196F3; }\n\n#setting:hover {\n  background-color: #2196F3; }\n\n#setting:hover .fa-user {\n  color: white; }\n\n.button-set-cl {\n  float: right;\n  margin-right: 0px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbnRhaW5lcnMvdXBsb2FkLWNvbnRhaW5lci9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxkY21cXG1vZHVsZXNcXHVwbG9hZFxcY29udGFpbmVyc1xcdXBsb2FkLWNvbnRhaW5lclxcdXBsb2FkLWNvbnRhaW5lci5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFnQjtFQUNoQiw0QkFBNEIsRUFBQTs7QUFHOUI7RUFDRSx1QkFBdUI7RUFDdkIsNEJBQTRCLEVBQUE7O0FBRzlCO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0UsdUJBQXVCLEVBQUE7O0FBR3pCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRzNCO0VBQ0UsVUFBVTtFQUNWLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2IsZUFBZTtFQUNmLFdBQVc7RUFDWCxxQkFBcUI7RUFDckIsZUFBZTtFQUNmLFlBQVk7RUFDWiw4QkFBOEI7RUFDOUIseUJBQXlCLEVBQUE7O0FBSTNCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRzNCO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0UsdUJBQXVCO0VBQ3ZCLHVCQUF1QixFQUFBOztBQUd6QjtFQUNFLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsUUFBUTtFQUNSLDBCQUEwQjtFQUMxQixjQUFjLEVBQUE7O0FBR2hCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRzNCO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0UsdUJBQXVCO0VBQ3ZCLHVCQUF1QixFQUFBOztBQUl6QjtFQUNFLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1QsUUFBUTtFQUNSLDBCQUEwQjtFQUMxQixjQUFjLEVBQUE7O0FBR2hCO0VBQ0UseUJBQXlCLEVBQUE7O0FBRzNCO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0UsWUFBWTtFQUNaLGlCQUFpQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvZGNtL21vZHVsZXMvdXBsb2FkL2NvbnRhaW5lcnMvdXBsb2FkLWNvbnRhaW5lci91cGxvYWQtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNjcm9sbGFibGUtdGFibGUge1xyXG4gIG1heC1oZWlnaHQ6IDEwMCU7XHJcbiAgbWluLWhlaWdodDogdW5zZXQgIWltcG9ydGFudDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtZm9ybS1maWVsZC1sYWJlbCB7XHJcbiAgY29sb3I6IGJsYWNrICFpbXBvcnRhbnQ7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQgIWltcG9ydGFudDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtc2VsZWN0LXZhbHVlLXRleHQge1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtc2VsZWN0LWFycm93IHtcclxuICBjb2xvcjogd2hpdGUgIWltcG9ydGFudDtcclxufVxyXG5cclxuI2hlYWRlci10aGlyZC1pZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxufVxyXG5cclxuI215U2lkZW5hdiBhIHtcclxuICByaWdodDogMHB4O1xyXG4gIHRyYW5zaXRpb246IDAuM3M7XHJcbiAgcGFkZGluZzogMTVweDtcclxuICBwb3NpdGlvbjogZml4ZWQ7XHJcbiAgd2lkdGg6IDQ3cHg7XHJcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4IDBweCAwcHggNXB4O1xyXG4gIGJvcmRlcjogN3B4IHNvbGlkICNEQ0RDREM7XHJcblxyXG59XHJcblxyXG4jc2lkZUJhcjpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIwQjJBQTtcclxufVxyXG5cclxuI3NpZGVCYXI6aG92ZXIgLmZhLWJhcnMge1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuI2hlbHBzIHtcclxuICB0b3A6IGNhbGMoMTAwJSAtIDE0MHB4KTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuLmZhLWNvZyB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IDE1JTtcclxuICB0b3A6IDE1JTtcclxuICBmb250LXNpemU6IDIwcHggIWltcG9ydGFudDtcclxuICBjb2xvcjogI0ZGQTUwMDtcclxufVxyXG5cclxuI2hlbHBzOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkZBNTAwO1xyXG59XHJcblxyXG4jaGVscHM6aG92ZXIgLmZhLWNvZyB7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG4jc2V0dGluZyB7XHJcbiAgdG9wOiBjYWxjKDEwMCUgLSAxODBweCk7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcblxyXG59XHJcblxyXG4uZmEtdXNlciB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIGxlZnQ6IDE1JTtcclxuICB0b3A6IDE1JTtcclxuICBmb250LXNpemU6IDIwcHggIWltcG9ydGFudDtcclxuICBjb2xvcjogIzIxOTZGMztcclxufVxyXG5cclxuI3NldHRpbmc6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMyMTk2RjM7XHJcbn1cclxuXHJcbiNzZXR0aW5nOmhvdmVyIC5mYS11c2VyIHtcclxuICBjb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbi5idXR0b24tc2V0LWNsIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbiAgbWFyZ2luLXJpZ2h0OiAwcHg7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/dcm/modules/upload/containers/upload-container/upload-container.component.ts":
/*!**********************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/containers/upload-container/upload-container.component.ts ***!
  \**********************************************************************************************/
/*! exports provided: UploadContainerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UploadContainerComponent", function() { return UploadContainerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _services_cleansing_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _app_settings__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @app/settings */ "./src/app/settings/index.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/general-location-info-popup.component */ "./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_store_part_load_pop_up_selectors__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/store-part/load-pop-up.selectors */ "./src/app/shared/popups/general-location-info-popup/store-part/load-pop-up.selectors.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var UploadContainerComponent = /** @class */ (function () {
    function UploadContainerComponent(dialog, notif, store$, cdrf, cs, router) {
        var _this = this;
        this.dialog = dialog;
        this.notif = notif;
        this.store$ = store$;
        this.cdrf = cdrf;
        this.cs = cs;
        this.router = router;
        this.rowData$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"]([]);
        this.metadata$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](null);
        this.exposure$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](null);
        this.datacheck$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](null);
        this.headers$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](null);
        this.columnState$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](null);
        this.columnStructure$ = new rxjs__WEBPACK_IMPORTED_MODULE_3__["BehaviorSubject"](null);
        this.firstUpload = true;
        this.headerPrefix = 'target_';
        this.metadata = null;
        this.headers = null;
        this.exposures = null;
        this.datachecks = null;
        this.loaded = false;
        this.savedUrl = '';
        this.popupVisibility = false;
        this.laoding$ = store$.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_6__["selectCleansingLoading"]);
        this.savedUrl$ = store$.select(_app_settings__WEBPACK_IMPORTED_MODULE_9__["selectSavedUrlState"]);
        this.selectCleansingStore(this.store$);
        this.savedUrl$.subscribe(function (savedUrl) {
            _this.savedUrl = savedUrl;
        }, function () {
            _this.cdrf.detectChanges();
        });
    }
    UploadContainerComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.savedUrl$.subscribe(function (savedUrl) {
            _this.savedUrl = savedUrl;
        }, function () {
            _this.cdrf.detectChanges();
        });
        var dataLoaded = this.grabCleasingData();
        if (dataLoaded) {
            this.selectCleansingStore(this.store$);
        }
        this.store$.select(_app_shared_popups_general_location_info_popup_store_part_load_pop_up_selectors__WEBPACK_IMPORTED_MODULE_11__["selectPopupVisibility"]).subscribe(function (visibility) { return _this.popupVisibility = visibility; });
    };
    UploadContainerComponent.prototype.selectCleansingStore = function (store) {
        var _this = this;
        store.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_6__["selectCleansingErrors"]).subscribe(function (errors) {
            if (errors) {
                _this.datacheckModel = errors;
                _this.datachecks = errors;
                _this.datacheck$.next(errors);
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_6__["selectCleansingCsMetadata"]).subscribe(function (metadata) {
            if (metadata) {
                _this.metadataModel = metadata;
                var metadataMod = void 0;
                var jobResult = metadata.jobResult;
                metadataMod = _this.transformCheck(jobResult);
                _this.responseModel = metadataMod;
                _this.metadata = metadata;
                _this.metadata$.next(metadata);
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_6__["selectCleansingHeaders"]).subscribe(function (headers) {
            if (headers) {
                _this.headers = headers;
                _this.headers$.next(headers);
                if (_this.firstUpload) {
                    _this.isCleasingFinished();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_6__["selectCleansingData"]).subscribe(function (data) {
            if (data) {
                _this.exposures = data;
                _this.exposure$.next(data);
                if (_this.firstUpload) {
                    _this.firstUpload = false;
                    _this.isCleasingFinished();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    };
    UploadContainerComponent.prototype.grabCleasingData = function () {
        var _this = this;
        this.cs.getCleansingHeaders().subscribe(function (data) {
            // { headers: res, columnState: columnStates.columnState, columnStructure: columnStates.columnStructure }
            _this.headers = data['headers'];
            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_7__["ActionLoadHeaders"]({ headers: data['headers'] }));
            var initColunmState = data['columnState'];
            var columnStructure = data['columnStructure'];
            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_7__["ActionColumnState"]({ columnState: initColunmState }));
            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_7__["ActionColumnStructure"]({ columnStructure: columnStructure }));
            _this.columnState$.next(data['columnState']);
            _this.columnStructure$.next(data['columnStructure']);
            _this.headers$.next(data['headers']);
        }, function () {
            _this.cdrf.detectChanges();
        });
        this.cs.getCleansingExposures().subscribe(function (data) {
            _this.exposures = data;
            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_7__["ActionLoadAllData"]({ data: data }));
            _this.exposure$.next(data);
        }, function () {
            _this.cdrf.detectChanges();
        });
        this.cs.getCleansingDatacheck().subscribe(function (check) {
            _this.datachecks = check;
            _this.datacheckModel = check;
            var errors = check;
            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_7__["ActionLoadErrors"]({ errors: errors }));
            _this.datacheck$.next(check);
        }, function () { }, function () {
            _this.cdrf.detectChanges();
        });
        this.cs.getCleansingCsMetadata().subscribe(function (metadata) {
            _this.metadata = metadata;
            _this.metadataModel = metadata;
            var metadataMod;
            var jobResult = metadata.jobResult;
            if (metadata) {
                _this.metadata$.next(metadata);
                metadataMod = _this.transformCheck(jobResult);
            }
            _this.responseModel = metadataMod;
            _this.store$.dispatch(new _store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_7__["ActionLoadCsMetadata"]({ csMetadata: metadata }));
        }, function () {
            _this.cdrf.detectChanges();
        });
        if (this.headers && this.exposures) {
            this.loaded = true;
        }
        return this.loaded;
    };
    UploadContainerComponent.prototype.transformCheck = function (check) {
        var checkMod = [];
        for (var _i = 0, _a = Object.entries(check); _i < _a.length; _i++) {
            var _b = _a[_i], key = _b[0], value = _b[1];
            for (var _c = 0, _d = Object.entries(value); _c < _d.length; _c++) {
                var _e = _d[_c], key2 = _e[0], value2 = _e[1];
                var metadataTemp = {
                    fieldCode: key2,
                    fieldName: this.transformCodeToName(key2),
                    errorsNumber: value2
                };
                checkMod.push(metadataTemp);
            }
        }
        return checkMod;
    };
    UploadContainerComponent.prototype.transformCodeToName = function (fieldCode) {
        // fieldCode.replace(/_/g, ' ');
        var fieldName = fieldCode.split('_').join(' ');
        return fieldName;
    };
    UploadContainerComponent.prototype.onEditRowClick = function (data) {
        var dialogRef = this.dialog.open(_app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_10__["GeneralLocationInfoPopupComponent"], {
            data: data
        });
        dialogRef.afterClosed().subscribe(function (result) {
            // Do something with result, if needed.
        });
    };
    UploadContainerComponent.prototype.onAddLocationClick = function () {
        // this.store$.dispatch(new LoadLoadPopUps({ location: new LocationModel() }));
        //
        var dialogRef = this.dialog.open(_app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_10__["GeneralLocationInfoPopupComponent"]);
        dialogRef.afterClosed().subscribe(function (result) {
            // Do something with result, if needed.
        });
    };
    UploadContainerComponent.prototype.onGeneralDetailsSaved = function () {
        var _this = this;
        return function (result) {
            if (result)
                _this.notif.success('Location saved');
        };
    };
    UploadContainerComponent.prototype.onCurrentLocationClick = function () {
        // TODO
    };
    UploadContainerComponent.prototype.onDeleteRowClick = function (data) {
        this.notif.error("Line of index " + data.rowId + " of id " + data.id + " should be deleted");
    };
    UploadContainerComponent.prototype.onGeocodeRowClick = function (data) {
        this.notif.warn("Line of index " + data.rowId + " of id " + data.id + " should be geocoded");
    };
    UploadContainerComponent.prototype.goToAdmin = function () {
        this.router.navigate(['dcm/administration']);
    };
    UploadContainerComponent.prototype.isCleasingFinished = function () {
        // if (this.headers && this.exposures && this.metadata) {
        // console.log('isCleasingFinished => ')
        // console.log(this.headers)
        // console.log(this.exposures)
        if (this.headers && this.exposures) {
            return true;
        }
        return false;
    };
    UploadContainerComponent.prototype.openGeneralLocationInfoPopup = function () {
        return this.dialog.open(_app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_10__["GeneralLocationInfoPopupComponent"], { width: '60%' });
    };
    UploadContainerComponent.prototype.isSaveSession = function () {
        if (this.savedUrl === undefined || this.savedUrl === '' || this.savedUrl === null) {
            return false;
        }
        return true;
    };
    UploadContainerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-upload-container',
            template: __webpack_require__(/*! ./upload-container.component.html */ "./src/app/dcm/modules/upload/containers/upload-container/upload-container.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./upload-container.component.scss */ "./src/app/dcm/modules/upload/containers/upload-container/upload-container.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatDialog"], _app_core__WEBPACK_IMPORTED_MODULE_2__["NotificationService"], _ngrx_store__WEBPACK_IMPORTED_MODULE_4__["Store"],
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
            _services_cleansing_service__WEBPACK_IMPORTED_MODULE_8__["CleansingService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_5__["Router"]])
    ], UploadContainerComponent);
    return UploadContainerComponent;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/models/cleansing-models/explosures-model.ts":
/*!********************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/models/cleansing-models/explosures-model.ts ***!
  \********************************************************************************/
/*! exports provided: explosuresModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "explosuresModel", function() { return explosuresModel; });
/*
    // explosures model
    {
        exposures:
            [
              {
                fieldCode1: value,
                fieldCode2: value,
                ...
              },
              ...
            ]
    }

*/
/*
    // model
    {
  fieldCodeLocationName:
  fieldCodeDivision:
  fieldCodeCountry:
  fieldCodeState:
  fieldCodeCounty:
  fieldCodeCity:
  fieldCodeStreet:
  fieldCodeZipCode:
  fieldCodeOriginalAddress:
  fieldCodeLatitude:
  fieldCodeLongitude:
  fieldCodeAccuracy:
  fieldCodeGeocode:
  fieldCodeGeocoder:
  fieldCodeGeocodingValidated:
  fieldCodeSiteCurrency:
  fieldCodeTiv:
  fieldCodeBuilding:
  fieldCodeStock:
  fieldCodeMachinery:
  fieldCodeContent:
  fieldCodePbValue:
  fieldCodeBiType:
  fieldCodeEip:
  fieldCodeDeclarationPeriod:
  fieldCodeBiValue:
  fieldCodeForInterest:
  fieldCodeInterest:
  fieldCodeOccupancySource:
  fieldCodeOccupancyClass:
  fieldCodeOccupancySubClass:
  fieldCodeOccupancyCode:
  fieldCodeOccupancyScheme:
  fieldCodeConstructionSource:
  fieldCodeConstructionClass:
  fieldCodeConstructionCode:
  fieldCodeConstructionScheme:
  fieldCodeYearBuilt:
  fieldCodeNumberOfStories:
  fieldCodeLargestUnitCapacity:
  fieldCodeIsAggregation:
  fieldCodeNumberOfBuilding:
},
*/
var explosuresModel = [{
        fieldCodeLocationName: '11111 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6296 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Alberta',
        fieldCodeCounty: null,
        fieldCodeCity: 'Peace River',
        fieldCodeStreet: ' HWY-2',
        fieldCodeZipCode: 'T8S',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 56.23954,
        fieldCodeLongitude: -117.30198,
        fieldCodeAccuracy: 'PEACE RIVER,CA-AB,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-AB',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 63520905.831,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 63520905.831,
        fieldCodeConstructionSource: 1402097.76,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 64923003.591,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1990 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Saskatchewan',
        fieldCodeCounty: null,
        fieldCodeCity: 'Battle River No 438',
        fieldCodeStreet: ' ',
        fieldCodeZipCode: 'S0M',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 52.828117,
        fieldCodeLongitude: -108.359367,
        fieldCodeAccuracy: 'BLACKFOOT,CA-SK,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-SK',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 62254933.754,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 62254933.754,
        fieldCodeConstructionSource: 1374153.942,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 63629087.696,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '564 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Otterburn Park',
        fieldCodeStreet: '627 Chemin des Patriotes',
        fieldCodeZipCode: 'J3H 1Z4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.548053,
        fieldCodeLongitude: -73.209487,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 61255404.497,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 61255404.497,
        fieldCodeConstructionSource: 1352091.32,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 62607495.817,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6018 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59935059.835,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59935059.835,
        fieldCodeConstructionSource: 1322947.336,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 61258007.171,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '928 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lincoln',
        fieldCodeStreet: '4162 Bridgeport Dr',
        fieldCodeZipCode: 'L0R',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.165208,
        fieldCodeLongitude: -79.370289,
        fieldCodeAccuracy: 'GRIMSBY,CA-ON,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 59223959.209,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 59223959.209,
        fieldCodeConstructionSource: 1307251.202,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 60531210.411,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '6019 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Minnesota',
        fieldCodeCounty: null,
        fieldCodeCity: 'Duluth',
        fieldCodeStreet: '99 33rd Ave W',
        fieldCodeZipCode: 55806,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.75454,
        fieldCodeLongitude: -92.13856,
        fieldCodeAccuracy: 'MISSABE,USA-MN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'USA-MN',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 58698906.961,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 58698906.961,
        fieldCodeConstructionSource: 1295661.718,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 59994568.679,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '589 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.49185,
        fieldCodeLongitude: -73.528795,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 1061356016.651,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 1061356016.651,
        fieldCodeConstructionSource: 23427324.811,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1084783341.462,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '1 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Nova Scotia',
        fieldCodeCounty: null,
        fieldCodeCity: 'Eastern Passage',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'B3G 1M4',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 44.610916,
        fieldCodeLongitude: -63.473,
        fieldCodeAccuracy: 'Eastern Passage,B3G 1M4,CA-NS,Canada',
        fieldCodeGeocode: 'Town',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-NS',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 377740000,
        fieldCodeOccupancyCode: 619096140.125,
        fieldCodeOccupancyScheme: 996836140.125,
        fieldCodeConstructionSource: 16675719.618,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 1013511859.743,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '178 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Lévis',
        fieldCodeStreet: ' Pont de Québec',
        fieldCodeZipCode: 'G7A',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 46.744659,
        fieldCodeLongitude: -71.287489,
        fieldCodeAccuracy: 'BRIDGE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 909733729.005,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 909733729.005,
        fieldCodeConstructionSource: 20080564.134,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 929814293.139,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: '1031 Rue Mansfield',
        fieldCodeZipCode: 'H3B',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.4994,
        fieldCodeLongitude: -73.5668,
        fieldCodeAccuracy: 'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 331966714.5,
        fieldCodeOccupancyCode: 544076114.78,
        fieldCodeOccupancyScheme: 876042829.28,
        fieldCodeConstructionSource: 14655010.996,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 890697840.276,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Indiana',
        fieldCodeCounty: 'Lake',
        fieldCodeCity: 'Gary',
        fieldCodeStreet: '1312 Martin Luther King Dr',
        fieldCodeZipCode: 46402,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 41.59128,
        fieldCodeLongitude: -87.317687,
        fieldCodeAccuracy: 'EJ&E,46401,USA-IN,United States (USA)',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'IN-89',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BUILDINGS & CONTENTS',
        fieldCodeOccupancySubClass: 3000000,
        fieldCodeOccupancyCode: 4916843.385,
        fieldCodeOccupancyScheme: 7916843.385,
        fieldCodeConstructionSource: 132438.076,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 8049281.461,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '4 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Ontario',
        fieldCodeCounty: null,
        fieldCodeCity: 'Toronto',
        fieldCodeStreet: null,
        fieldCodeZipCode: 'L4K 2N2',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 43.826182,
        fieldCodeLongitude: -79.50579,
        fieldCodeAccuracy: 'TORONTO,L4K 2N2,CA-ON,Canada',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-ON',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 270900000,
        fieldCodeOccupancyCode: 443990957.695,
        fieldCodeOccupancyScheme: 714890957.695,
        fieldCodeConstructionSource: 11959158.269,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 726850115.964,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '588 - Canadian National Railways - BRIDGES',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'Canada',
        fieldCodeState: 'Quebec',
        fieldCodeCounty: null,
        fieldCodeCity: 'Montreal',
        fieldCodeStreet: ' Pont Victoria',
        fieldCodeZipCode: 'H3C',
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 45.493286,
        fieldCodeLongitude: -73.524334,
        fieldCodeAccuracy: 'ST HYACINTHE,CA-QC,Canada',
        fieldCodeGeocode: 'Coordinates',
        fieldCodeGeocoder: 'Yes',
        fieldCodeGeocodingValidated: 'HERE',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'CA-QC',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INFENG002',
        fieldCodeMachinery: 'Civil work and special engineering structure',
        fieldCodeContent: 'Bridge',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'BRIDGES',
        fieldCodeOccupancySubClass: 551070162.13,
        fieldCodeOccupancyCode: 0,
        fieldCodeOccupancyScheme: 551070162.13,
        fieldCodeConstructionSource: 12163778.675,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 563233940.805,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '22222 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '33333 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '44444 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '55555 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '66666 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    },
    {
        fieldCodeLocationName: '77777 - Canadian National Railways - AUTO COMPOUNDS',
        fieldCodeDivision: 1,
        fieldCodeCountry: 'United States (USA)',
        fieldCodeState: 'Michigan',
        fieldCodeCounty: 'Wayne',
        fieldCodeCity: 'Dearborn',
        fieldCodeStreet: null,
        fieldCodeZipCode: 48123,
        fieldCodeOriginalAddress: null,
        fieldCodeLatitude: 42.302325,
        fieldCodeLongitude: -83.260552,
        fieldCodeAccuracy: 'DEARBORN,48123,USA-MI,United States (USA)',
        fieldCodeGeocode: 'Post code',
        fieldCodeGeocoder: 'No',
        fieldCodeGeocodingValidated: 'Trillium',
        fieldCodeSiteCurrency: null,
        fieldCodeTiv: 'MI-163',
        fieldCodeBuilding: 'ACORD',
        fieldCodeStock: 'INDTRN999',
        fieldCodeMachinery: 'Transportation services, repair, maintenance',
        fieldCodeContent: 'Unspecified',
        fieldCodePbValue: 'ACORD',
        fieldCodeBiType: 'UNSUNS',
        fieldCodeEip: 'Unspecified',
        fieldCodeDeclarationPeriod: null,
        fieldCodeBiValue: null,
        fieldCodeForInterest: null,
        fieldCodeInterest: 'No',
        fieldCodeOccupancySource: null,
        fieldCodeOccupancyClass: 'AUTO COMPOUNDS',
        fieldCodeOccupancySubClass: 24722763,
        fieldCodeOccupancyCode: 40519317.908,
        fieldCodeOccupancyScheme: 65242080.908,
        fieldCodeConstructionSource: 1091411.722,
        fieldCodeConstructionClass: null,
        fieldCodeConstructionCode: 66333492.63,
        fieldCodeConstructionScheme: 100,
        fieldCodeYearBuilt: null,
        fieldCodeNumberOfStories: 18,
        fieldCodeLargestUnitCapacity: 'FI',
        fieldCodeIsAggregation: 'Yes',
        fieldCodeNumberOfBuilding: 'No'
    }
];


/***/ }),

/***/ "./src/app/dcm/modules/upload/models/cleansing-models/location-by-type.const.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/models/cleansing-models/location-by-type.const.ts ***!
  \**************************************************************************************/
/*! exports provided: LOCATION_TYPE_DOUBLE, LOCATION_TYPE_NUM, LOCATION_TYPE_NUMBER */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCATION_TYPE_DOUBLE", function() { return LOCATION_TYPE_DOUBLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCATION_TYPE_NUM", function() { return LOCATION_TYPE_NUM; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCATION_TYPE_NUMBER", function() { return LOCATION_TYPE_NUMBER; });
var LOCATION_TYPE_DOUBLE = [
    // double
    'original_latitude',
    'machinery_value',
    'stock_value',
    'pd_value',
    'building_value',
    'original_longitude',
    'tiv_amount',
    'content_value',
    'interest',
    'bi_value',
    'mpl_pd_value',
    'mpl_bi_value',
    'mpl_bi_percentage',
    'fmls_pd_value',
    'fmls_pd_percentage',
    'fmls_bi_percentage',
    'fmls_bi_value',
    'mpl_pd_percentage',
    'other_structure',
    'earthquake_cover_deductible',
    'windstorm_cover_deductible',
    'flood_cover_deductible',
    'terrorism_cover_deductible',
    'machinery_breakdown_limit',
    'gross_written_premium_value',
    'participation',
    'binder_windstorm_cover_limit_amount',
    'binder_earthquake_cover_limit_amount',
    'order',
    'binder_windstorm_cover_deductible_amount',
    'binder_flood_cover_limit_amount',
    'binder_flood_cover_deductible_amount',
    'final_longitude',
    'final_latitude',
    'cleansed_longitude',
    'policy_limit_value',
    'policy_number',
    'policy_excess_value',
    'machinery_breakdown_deductible',
    'cyber_cover_deductible',
    'strike_riot_commotion_cover_deductible',
    'first_floor_height',
    'first_floor_height_unit',
    'certified_elevation_height',
    'certified_elevation_height_unit',
    'binder_terrorism_cover_limit_amount',
    'binder_terrorism_cover_deductible_amount',
    'binder_machinery_breakdown_cover_limit_amount',
    'binder_machinery_breakdown_cover_deductible_amount',
    'binder_earthquake_cover_deductible_amount',
    'binder_strike_riot_commotion_cover_limit_amount',
    'binder_strike_riot_commotion_cover_deductible_amount',
    'binder_cyber_cover_limit_amount',
    'binder_cyber_cover_deductible_amount',
    'cleansed_latitude',
];
var LOCATION_TYPE_NUM = [
    // integer,
    'indemnity_period_eip',
    'bi_declaration_period',
    'number_of_buildings',
    'number_of_stories_value',
    'property_db_id',
    'basement_stories_value',
    'largest_capacity_unit',
    'number_of_stories_unit',
    'basement_stories_unit',
    'building_unit'
];
var LOCATION_TYPE_NUMBER = [
    // double
    'original_latitude',
    'machinery_value',
    'stock_value',
    'pd_value',
    'building_value',
    'original_longitude',
    'tiv_amount',
    'content_value',
    'interest',
    'bi_value',
    'mpl_pd_value',
    'mpl_bi_value',
    'mpl_bi_percentage',
    'fmls_pd_value',
    'fmls_pd_percentage',
    'fmls_bi_percentage',
    'fmls_bi_value',
    'mpl_pd_percentage',
    'other_structure',
    'earthquake_cover_deductible',
    'windstorm_cover_deductible',
    'flood_cover_deductible',
    'terrorism_cover_deductible',
    'machinery_breakdown_limit',
    'gross_written_premium_value',
    'participation',
    'binder_windstorm_cover_limit_amount',
    'binder_earthquake_cover_limit_amount',
    'order',
    'binder_windstorm_cover_deductible_amount',
    'binder_flood_cover_limit_amount',
    'binder_flood_cover_deductible_amount',
    'final_longitude',
    'final_latitude',
    'cleansed_longitude',
    'policy_limit_value',
    'policy_number',
    'policy_excess_value',
    'machinery_breakdown_deductible',
    'cyber_cover_deductible',
    'strike_riot_commotion_cover_deductible',
    'first_floor_height',
    'first_floor_height_unit',
    'certified_elevation_height',
    'certified_elevation_height_unit',
    'binder_terrorism_cover_limit_amount',
    'binder_terrorism_cover_deductible_amount',
    'binder_machinery_breakdown_cover_limit_amount',
    'binder_machinery_breakdown_cover_deductible_amount',
    'binder_earthquake_cover_deductible_amount',
    'binder_strike_riot_commotion_cover_limit_amount',
    'binder_strike_riot_commotion_cover_deductible_amount',
    'binder_cyber_cover_limit_amount',
    'binder_cyber_cover_deductible_amount',
    'cleansed_latitude',
    // integer,
    'indemnity_period_eip',
    'bi_declaration_period',
    'number_of_buildings',
    'number_of_stories_value',
    'property_db_id',
    'basement_stories_value',
    'largest_capacity_unit',
    'number_of_stories_unit',
    'basement_stories_unit',
    'building_unit'
];


/***/ }),

/***/ "./src/app/dcm/modules/upload/models/import/file-model.ts":
/*!****************************************************************!*\
  !*** ./src/app/dcm/modules/upload/models/import/file-model.ts ***!
  \****************************************************************/
/*! exports provided: FileModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FileModel", function() { return FileModel; });
var FileModel = /** @class */ (function () {
    function FileModel(name, id, color, checked, sheet) {
        this.sheet = [];
        this.name = name;
        this.id = id;
        this.color = color;
        this.checked = checked;
        if (sheet && sheet !== undefined) {
            this.sheet.push(sheet);
        }
    }
    FileModel.prototype.addSheet = function (f) {
        if (f && f !== undefined) {
            this.sheet.push(f);
        }
    };
    FileModel.prototype.unCheckSheet = function () {
        this.checked = false;
    };
    FileModel.prototype.checkSheet = function (check) {
        this.checked = check;
    };
    return FileModel;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/models/mapping/mapping-paramaters.model.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/models/mapping/mapping-paramaters.model.ts ***!
  \*******************************************************************************/
/*! exports provided: MappingParamaters, DIVISIONS, CURRENCIES, TIVS, DECLARATION_PERIODS, COUNTRIES */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MappingParamaters", function() { return MappingParamaters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DIVISIONS", function() { return DIVISIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CURRENCIES", function() { return CURRENCIES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TIVS", function() { return TIVS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DECLARATION_PERIODS", function() { return DECLARATION_PERIODS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COUNTRIES", function() { return COUNTRIES; });
var MappingParamaters = /** @class */ (function () {
    function MappingParamaters(obj) {
        this.division = null;
        this.country = null;
        this.interest = null;
        this.for_interest = null;
        this.bi_declaration_period = null;
        this.site_currency = null;
        this.declaration = null;
        this.mpl_pd_value = null;
        this.mpl_pd_percentage = null;
        this.mpl_bi_value = null;
        this.mpl_bi_percentage = null;
    }
    return MappingParamaters;
}());

var DIVISIONS = [
    { key: '1', value: ' 1' },
    { key: '2', value: ' 2' },
    { key: '3', value: ' 3' },
];
var CURRENCIES = [
    { key: 'sch', value: 'As per Schedule' },
    { key: 'usd', value: 'USD' },
    { key: 'eur', value: 'EUR' },
    { key: 'cad', value: 'CAD' },
];
var TIVS = [
    { key: 'int', value: 'For interest' },
    { key: '100', value: '100%' },
    { key: 'sch', value: 'As per Schedule' },
];
var DECLARATION_PERIODS = [
    { key: 'sch', value: 'As per Schedule' },
    { key: 'mon', value: 'Months' },
];
var COUNTRIES = [
    { key: 'sch', value: 'As per Schedule' },
    { key: 'AF', value: 'Afghanistan' },
    { key: 'AL', value: 'Albania' },
    { key: 'DZ', value: 'Algeria' },
    { key: 'AS', value: 'American Samoa' },
    { key: 'AD', value: 'Andorra' },
    { key: 'AO', value: 'Angola' },
    { key: 'AI', value: 'Anguilla' },
    { key: 'AQ', value: 'Antarctica' },
    { key: 'AG', value: 'Antigua and Barbuda' },
    { key: 'AR', value: 'Argentina' },
    { key: 'AM', value: 'Armenia' },
    { key: 'AW', value: 'Aruba' },
    { key: 'AU', value: 'Australia' },
    { key: 'AT', value: 'Austria' },
    { key: 'AZ', value: 'Azerbaijan' },
    { key: 'BS', value: 'Bahamas (the)' },
    { key: 'BH', value: 'Bahrain' },
    { key: 'BD', value: 'Bangladesh' },
    { key: 'BB', value: 'Barbados' },
    { key: 'BY', value: 'Belarus' },
    { key: 'BE', value: 'Belgium' },
    { key: 'BZ', value: 'Belize' },
    { key: 'BJ', value: 'Benin' },
    { key: 'BM', value: 'Bermuda' },
    { key: 'BT', value: 'Bhutan' },
    { key: 'BO', value: 'Bolivia (Plurinational State of)' },
    { key: 'BQ', value: 'Bonaire, Sint Eustatius and Saba' },
    { key: 'BA', value: 'Bosnia and Herzegovina' },
    { key: 'BW', value: 'Botswana' },
    { key: 'BV', value: 'Bouvet Island' },
    { key: 'BR', value: 'Brazil' },
    { key: 'IO', value: 'British Indian Ocean Territory (the)' },
    { key: 'BN', value: 'Brunei Darussalam' },
    { key: 'BG', value: 'Bulgaria' },
    { key: 'BF', value: 'Burkina Faso' },
    { key: 'BI', value: 'Burundi' },
    { key: 'CV', value: 'Cabo Verde' },
    { key: 'KH', value: 'Cambodia' },
    { key: 'CM', value: 'Cameroon' },
    { key: 'CA', value: 'Canada' },
    { key: 'KY', value: 'Cayman Islands (the)' },
    { key: 'CF', value: 'Central African Republic (the)' },
    { key: 'TD', value: 'Chad' },
    { key: 'CL', value: 'Chile' },
    { key: 'CN', value: 'China' },
    { key: 'CX', value: 'Christmas Island' },
    { key: 'CC', value: 'Cocos (Keeling) Islands (the)' },
    { key: 'CO', value: 'Colombia' },
    { key: 'KM', value: 'Comoros (the)' },
    { key: 'CD', value: 'Congo (the Democratic Republic of the)' },
    { key: 'CG', value: 'Congo (the)' },
    { key: 'CK', value: 'Cook Islands (the)' },
    { key: 'CR', value: 'Costa Rica' },
    { key: 'HR', value: 'Croatia' },
    { key: 'CU', value: 'Cuba' },
    { key: 'CW', value: 'Curaçao' },
    { key: 'CY', value: 'Cyprus' },
    { key: 'CZ', value: 'Czechia' },
    { key: 'CI', value: 'Côte d Ivoire' },
    { key: 'DK', value: 'Denmark' },
    { key: 'DJ', value: 'Djibouti' },
    { key: 'DM', value: 'Dominica' },
    { key: 'DO', value: 'Dominican Republic (the)' },
    { key: 'EC', value: 'Ecuador' },
    { key: 'EG', value: 'Egypt' },
    { key: 'SV', value: 'El Salvador' },
    { key: 'GQ', value: 'Equatorial Guinea' },
    { key: 'ER', value: 'Eritrea' },
    { key: 'EE', value: 'Estonia' },
    { key: 'SZ', value: 'Eswatini' },
    { key: 'ET', value: 'Ethiopia' },
    { key: 'FK', value: 'Falkland Islands (the) [Malvinas]' },
    { key: 'FO', value: 'Faroe Islands (the)' },
    { key: 'FJ', value: 'Fiji' },
    { key: 'FI', value: 'Finland' },
    { key: 'FR', value: 'France' },
    { key: 'GF', value: 'French Guiana' },
    { key: 'PF', value: 'French Polynesia' },
    { key: 'TF', value: 'French Southern Territories (the)' },
    { key: 'GA', value: 'Gabon' },
    { key: 'GM', value: 'Gambia (the)' },
    { key: 'GE', value: 'Georgia' },
    { key: 'DE', value: 'Germany' },
    { key: 'GH', value: 'Ghana' },
    { key: 'GI', value: 'Gibraltar' },
    { key: 'GR', value: 'Greece' },
    { key: 'GL', value: 'Greenland' },
    { key: 'GD', value: 'Grenada' },
    { key: 'GP', value: 'Guadeloupe' },
    { key: 'GU', value: 'Guam' },
    { key: 'GT', value: 'Guatemala' },
    { key: 'GG', value: 'Guernsey' },
    { key: 'GN', value: 'Guinea' },
    { key: 'GW', value: 'Guinea-Bissau' },
    { key: 'GY', value: 'Guyana' },
    { key: 'HT', value: 'Haiti' },
    { key: 'HM', value: 'Heard Island and McDonald Islands' },
    { key: 'VA', value: 'Holy See (the)' },
    { key: 'HN', value: 'Honduras' },
    { key: 'HK', value: 'Hong Kong' },
    { key: 'HU', value: 'Hungary' },
    { key: 'IS', value: 'Iceland' },
    { key: 'IN', value: 'India' },
    { key: 'ID', value: 'Indonesia' },
    { key: 'IR', value: 'Iran (Islamic Republic of)' },
    { key: 'IQ', value: 'Iraq' },
    { key: 'IE', value: 'Ireland' },
    { key: 'IM', value: 'Isle of Man' },
    { key: 'IL', value: 'Israel' },
    { key: 'IT', value: 'Italy' },
    { key: 'JM', value: 'Jamaica' },
    { key: 'JP', value: 'Japan' },
    { key: 'JE', value: 'Jersey' },
    { key: 'JO', value: 'Jordan' },
    { key: 'KZ', value: 'Kazakhstan' },
    { key: 'KE', value: 'Kenya' },
    { key: 'KI', value: 'Kiribati' },
    { key: 'KP', value: 'Korea (the Democratic People s Republic of)' },
    { key: 'KR', value: 'Korea (the Republic of)' },
    { key: 'KW', value: 'Kuwait' },
    { key: 'KG', value: 'Kyrgyzstan' },
    { key: 'LA', value: 'Lao People s Democratic Republic (the)' },
    { key: 'LV', value: 'Latvia' },
    { key: 'LB', value: 'Lebanon' },
    { key: 'LS', value: 'Lesotho' },
    { key: 'LR', value: 'Liberia' },
    { key: 'LY', value: 'Libya' },
    { key: 'LI', value: 'Liechtenstein' },
    { key: 'LT', value: 'Lithuania' },
    { key: 'LU', value: 'Luxembourg' },
    { key: 'MO', value: 'Macao' },
    { key: 'MG', value: 'Madagascar' },
    { key: 'MW', value: 'Malawi' },
    { key: 'MY', value: 'Malaysia' },
    { key: 'MV', value: 'Maldives' },
    { key: 'ML', value: 'Mali' },
    { key: 'MT', value: 'Malta' },
    { key: 'MH', value: 'Marshall Islands (the)' },
    { key: 'MQ', value: 'Martinique' },
    { key: 'MR', value: 'Mauritania' },
    { key: 'MU', value: 'Mauritius' },
    { key: 'YT', value: 'Mayotte' },
    { key: 'MX', value: 'Mexico' },
    { key: 'FM', value: 'Micronesia (Federated States of)' },
    { key: 'MD', value: 'Moldova (the Republic of)' },
    { key: 'MC', value: 'Monaco' },
    { key: 'MN', value: 'Mongolia' },
    { key: 'ME', value: 'Montenegro' },
    { key: 'MS', value: 'Montserrat' },
    { key: 'MA', value: 'Morocco' },
    { key: 'MZ', value: 'Mozambique' },
    { key: 'MM', value: 'Myanmar' },
    { key: 'NA', value: 'Namibia' },
    { key: 'NR', value: 'Nauru' },
    { key: 'NP', value: 'Nepal' },
    { key: 'NL', value: 'Netherlands (the)' },
    { key: 'NC', value: 'New Caledonia' },
    { key: 'NZ', value: 'New Zealand' },
    { key: 'NI', value: 'Nicaragua' },
    { key: 'NE', value: 'Niger (the)' },
    { key: 'NG', value: 'Nigeria' },
    { key: 'NU', value: 'Niue' },
    { key: 'NF', value: 'Norfolk Island' },
    { key: 'MP', value: 'Northern Mariana Islands (the)' },
    { key: 'NO', value: 'Norway' },
    { key: 'OM', value: 'Oman' },
    { key: 'PK', value: 'Pakistan' },
    { key: 'PW', value: 'Palau' },
    { key: 'PS', value: 'Palestine, State of' },
    { key: 'PA', value: 'Panama' },
    { key: 'PG', value: 'Papua New Guinea' },
    { key: 'PY', value: 'Paraguay' },
    { key: 'PE', value: 'Peru' },
    { key: 'PH', value: 'Philippines (the)' },
    { key: 'PN', value: 'Pitcairn' },
    { key: 'PL', value: 'Poland' },
    { key: 'PT', value: 'Portugal' },
    { key: 'PR', value: 'Puerto Rico' },
    { key: 'QA', value: 'Qatar' },
    { key: 'MK', value: 'Republic of North Macedonia' },
    { key: 'RO', value: 'Romania' },
    { key: 'RU', value: 'Russian Federation (the)' },
    { key: 'RW', value: 'Rwanda' },
    { key: 'RE', value: 'Réunion' },
    { key: 'BL', value: 'Saint Barthélemy' },
    { key: 'SH', value: 'Saint Helena, Ascension and Tristan da Cunha' },
    { key: 'KN', value: 'Saint Kitts and Nevis' },
    { key: 'LC', value: 'Saint Lucia' },
    { key: 'MF', value: 'Saint Martin (French part)' },
    { key: 'PM', value: 'Saint Pierre and Miquelon' },
    { key: 'VC', value: 'Saint Vincent and the Grenadines' },
    { key: 'WS', value: 'Samoa' },
    { key: 'SM', value: 'San Marino' },
    { key: 'ST', value: 'Sao Tome and Principe' },
    { key: 'SA', value: 'Saudi Arabia' },
    { key: 'SN', value: 'Senegal' },
    { key: 'RS', value: 'Serbia' },
    { key: 'SC', value: 'Seychelles' },
    { key: 'SL', value: 'Sierra Leone' },
    { key: 'SG', value: 'Singapore' },
    { key: 'SX', value: 'Sint Maarten (Dutch part)' },
    { key: 'SK', value: 'Slovakia' },
    { key: 'SI', value: 'Slovenia' },
    { key: 'SB', value: 'Solomon Islands' },
    { key: 'SO', value: 'Somalia' },
    { key: 'ZA', value: 'South Africa' },
    { key: 'GS', value: 'South Georgia and the South Sandwich Islands' },
    { key: 'SS', value: 'South Sudan' },
    { key: 'ES', value: 'Spain' },
    { key: 'LK', value: 'Sri Lanka' },
    { key: 'SD', value: 'Sudan (the)' },
    { key: 'SR', value: 'Suriname' },
    { key: 'SJ', value: 'Svalbard and Jan Mayen' },
    { key: 'SE', value: 'Sweden' },
    { key: 'CH', value: 'Switzerland' },
    { key: 'SY', value: 'Syrian Arab Republic' },
    { key: 'TW', value: 'Taiwan (Province of China)' },
    { key: 'TJ', value: 'Tajikistan' },
    { key: 'TZ', value: 'Tanzania, United Republic of' },
    { key: 'TH', value: 'Thailand' },
    { key: 'TL', value: 'Timor-Leste' },
    { key: 'TG', value: 'Togo' },
    { key: 'TK', value: 'Tokelau' },
    { key: 'TO', value: 'Tonga' },
    { key: 'TT', value: 'Trinidad and Tobago' },
    { key: 'TN', value: 'Tunisia' },
    { key: 'TR', value: 'Turkey' },
    { key: 'TM', value: 'Turkmenistan' },
    { key: 'TC', value: 'Turks and Caicos Islands (the)' },
    { key: 'TV', value: 'Tuvalu' },
    { key: 'UG', value: 'Uganda' },
    { key: 'UA', value: 'Ukraine' },
    { key: 'AE', value: 'United Arab Emirates (the)' },
    { key: 'GB', value: 'United Kingdom of Great Britain and Northern Ireland (the)' },
    { key: 'UM', value: 'United States Minor Outlying Islands (the)' },
    { key: 'US', value: 'United States of America (the)' },
    { key: 'UY', value: 'Uruguay' },
    { key: 'UZ', value: 'Uzbekistan' },
    { key: 'VU', value: 'Vanuatu' },
    { key: 'VE', value: 'Venezuela (Bolivarian Republic of)' },
    { key: 'VN', value: 'Viet Nam' },
    { key: 'VG', value: 'Virgin Islands (British)' },
    { key: 'VI', value: 'Virgin Islands (U.S.)' },
    { key: 'WF', value: 'Wallis and Futuna' },
    { key: 'EH', value: 'Western Sahara' },
    { key: 'YE', value: 'Yemen' },
    { key: 'ZM', value: 'Zambia' },
    { key: 'ZW', value: 'Zimbabwe' },
    { key: 'AX', value: 'Åland Islands' }
];


/***/ }),

/***/ "./src/app/dcm/modules/upload/pipes/format-double.pipe.ts":
/*!****************************************************************!*\
  !*** ./src/app/dcm/modules/upload/pipes/format-double.pipe.ts ***!
  \****************************************************************/
/*! exports provided: FormatDoublePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FormatDoublePipe", function() { return FormatDoublePipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


var FormatDoublePipe = /** @class */ (function () {
    function FormatDoublePipe() {
    }
    FormatDoublePipe.prototype.transform = function (value, args) {
        var pipe = new _angular_common__WEBPACK_IMPORTED_MODULE_1__["DecimalPipe"]('en-US');
        value = isNaN(value) ? 0 : +value;
        return pipe.transform(value, args);
    };
    FormatDoublePipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({ name: 'decimalNumber' })
    ], FormatDoublePipe);
    return FormatDoublePipe;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/services/cleansing.service.ts":
/*!******************************************************************!*\
  !*** ./src/app/dcm/modules/upload/services/cleansing.service.ts ***!
  \******************************************************************/
/*! exports provided: CleansingService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CleansingService", function() { return CleansingService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _env_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @env/environment */ "./src/environments/environment.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var CleansingService = /** @class */ (function () {
    function CleansingService(http) {
        this.http = http;
        this.lob_id_static = '1';
        this.nrows_static = 7;
        this.flowId = 1;
        this.firstPage = 1;
        this.columnWithNumber = ['tiv_amount', 'machinery_value', 'content_value', 'pd_value', 'bi_value', 'building_value', 'stock_value'];
        this.columnDisplayByDefault = [
            'location_name',
            'company_name',
            'property_db_id',
            'accord_occupancy_code',
            'accord_construction_code',
            /* 'original_country', // Geographical
            'original_city', // Geographical
            'original_latitude', // Geographical
            'original_longitude', // Geographical */
            'site_currency',
            'tiv_amount',
            'pd_value',
            'indemnity_period_eip',
            'bi_value',
            'mpl_pd_value',
            'mpl_pd_percentage',
            'mpl_bi_value',
            'mpl_bi_percentage' // Insured Value
        ];
        this.columnDisplayByDefaultFinal = [
            'final_country',
            'final_city',
            'final_latitude',
            'final_longitude',
        ];
        this.columnDisplayByDefaultUpload = this.columnDisplayByDefault.concat(this.columnDisplayByDefaultFinal);
        this.cleansingHeaders$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.cleansingExposures$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.cleansingDataCheck$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.cleansingData$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.cleansingCsMetadata$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
        this.updatedExposures$ = new rxjs__WEBPACK_IMPORTED_MODULE_4__["Subject"]();
    }
    CleansingService.prototype.saveMapping = function (mappingIds, fileIds, targets) {
        var mappings = this.getMappingBody(mappingIds, fileIds, targets);
        return this.http.post(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.mapping1, mappings);
    };
    CleansingService.prototype.applyTopPanelMapping = function (params, mappingId) {
        var params1 = this.getParams(params, mappingId);
        return this.http.post(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.mapping1 + '/top-panel', params1);
    };
    CleansingService.prototype.applyMapping = function (mappingIds, fileIds, lobId) {
        var params = {
            files_ids: fileIds,
            mapping_ids: mappingIds,
            lob_id: lobId
        };
        return this.http.post(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.apply_mapping, params);
    };
    CleansingService.prototype.transform = function (fileId, mappingIds, lobId) {
        var params = {
            file_id: fileId,
            mapping_ids: mappingIds,
            lob_id: lobId
        };
        return this.http.post(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.check, params);
    };
    // get metadata
    CleansingService.prototype.validate = function (jobId) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('job_id', jobId);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.csmetadata, { params: params });
    };
    // add exposure to cleansingData
    CleansingService.prototype.snapshot = function (fileData, selectedSheet) {
        var _this = this;
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', fileData.page + '')
            .set('nrows', fileData.nrows + '');
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.exposures + '/' + fileData.fileId, { params: params }).
            pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (res) {
            _this.cleansingData$.next(res);
        }));
    };
    // get explosure
    CleansingService.prototype.getCleansingData = function () {
        return this.cleansingData$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            var data = res;
            var errors = res;
            return [data, errors, res];
        }));
    };
    CleansingService.prototype.getCsMetadata = function (jobId) {
        var _this = this;
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.csmetadata + '/' + jobId).
            pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (res) {
            _this.cleansingCsMetadata$.next(res);
        }));
    };
    CleansingService.prototype.getCleansingCsMetadata = function () {
        return this.cleansingCsMetadata$.
            pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            return res;
        }));
    };
    CleansingService.prototype.updateColumn = function (column, value, flowId) {
        return this.http.put(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.flow + ("edit-columns?flowId=" + flowId), {
            column: column,
            value: value
        });
    };
    CleansingService.prototype.deleteRow = function (fileData, selectedSheet, jobId, body) {
        body['file_id'] = fileData.fileId;
        body['job_id'] = jobId;
        return this.http.post(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.check_delete, body);
    };
    CleansingService.prototype.getParams = function (params, mappingId) {
        var p = {};
        Object.keys(params).forEach(function (key) {
            if (params[key] && key !== 'declaration') {
                p[key] = params[key];
            }
        });
        return {
            mapping_id: mappingId,
            content: p
        };
    };
    CleansingService.prototype.getMappingBody = function (mappingIds, fileIds, targets) {
        var mappings = [];
        var _loop_1 = function (i) {
            var mapping = [];
            var mappingTemp = targets[i].map(function (t) {
                if (t.mappedItems.map(function (s) { return s.viewValue; }).length !== 0) {
                    return {
                        source: t.mappedItems.map(function (s) { return s.viewValue; }),
                        target: t.value
                    };
                }
            });
            mappingTemp.forEach(function (element) {
                if (element) {
                    mapping.push(element);
                }
            });
            mappings.push(mapping);
        };
        for (var i = 0; i < targets.length; i++) {
            _loop_1(i);
        }
        // console.log('====> apply mapping : ')
        // console.log(mappings)
        return {
            mapping_ids: mappingIds,
            files_ids: fileIds,
            lob: this.lob_id_static,
            mappings: mappings
        };
    };
    ;
    // get headers
    CleansingService.prototype.getHeaders = function (lobId) {
        var _this = this;
        /* let columnDisplayByDefault;
        const isCleansing = true;
        if (isCleansing) {
          columnDisplayByDefault = this.columnDisplayByDefault;
        }
        else {
          columnDisplayByDefault = this.columnDisplayByDefaultUpload;
        } */
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.headers + '/' + lobId).
            pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (res) {
            var columnStates = _this.getStructureTransformColomn(res, _this.columnDisplayByDefault);
            // { headers: res, columnState: columnStates.columnState, columnStructure: columnStates.columnStructure }
            _this.cleansingHeaders$.next({ headers: res, columnState: columnStates.columnState, columnStructure: columnStates.columnStructure });
        }));
    };
    // get headers empty tab
    CleansingService.prototype.getHeadersEmptyTab = function (lobId) {
        var _this = this;
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.headers + '/' + lobId).
            pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            var headersSorted = _this.sortHeaders(res);
            var columnStates = _this.getStructureTransformColomn(headersSorted, _this.columnDisplayByDefaultUpload);
            // { headers: res, columnState: columnStates.columnState, columnStructure: columnStates.columnStructure }
            return { headers: headersSorted, columnState: columnStates.columnState, columnStructure: columnStates.columnStructure };
        }));
    };
    CleansingService.prototype.getExposuresUpload = function (fileId) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', this.firstPage + '')
            .set('nrows', 50 + '');
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.exposures + '/' + fileId, { params: params });
    };
    CleansingService.prototype.getMetadataUpload = function (jobId) {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.csmetadata + '/' + jobId);
    };
    CleansingService.prototype.transformHeaders = function (headers) {
        var ivTivAmount = 25;
        var ivTivAmountOld = 15;
        var ivSiteCurrency = 26;
        var ivSiteCurrencyOld = 16;
        var occupancyClass = 32;
        var occupancyClassOld = 29;
        var constructionClass = 37;
        var constructionClassOld = 30;
        headers = swapArrayElements(headers, ivTivAmountOld, ivTivAmount);
        headers = swapArrayElements(headers, ivSiteCurrencyOld, ivSiteCurrency);
        headers = swapArrayElements(headers, occupancyClassOld, occupancyClass);
        headers = swapArrayElements(headers, constructionClassOld, constructionClass);
        return headers;
    };
    CleansingService.prototype.getExposures = function (fileData, selectedSheet) {
        var _this = this;
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', this.firstPage + '')
            .set('nrows', fileData.nrows + '');
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.exposures + '/' + fileData.fileId, { params: params }).
            pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (res) {
            _this.cleansingExposures$.next(res);
        }));
    };
    CleansingService.prototype.getExposuresByPage = function (fileData, selectedSheet) {
        var _this = this;
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', fileData.page + '')
            .set('nrows', fileData.nrows + '');
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.exposures + '/' + fileData.fileId, { params: params }).
            pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (res) {
            _this.cleansingExposures$.next(res);
        }));
    };
    CleansingService.prototype.getExposuresAddLocation = function (fileData, fileId, selectedSheet) {
        var _this = this;
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', this.firstPage + '')
            .set('nrows', fileData.nrows + '');
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.exposures + '/' + fileId, { params: params }).
            pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (res) {
            _this.cleansingExposures$.next(res);
        }));
    };
    CleansingService.prototype.transformExposure = function (allExposures) {
        var exposures = allExposures.exposures;
        var columnWithNumber = this.columnWithNumber;
        for (var i = 0; i < exposures.length; i++) {
            for (var j = 0; j < columnWithNumber.length; j++) {
                var element = this.columnWithNumber[j];
                var valueTemp = allExposures.exposures[i][element];
                allExposures.exposures[i][element] = numberWithCommas(valueTemp);
            }
        }
        return allExposures;
    };
    // get datacheck
    CleansingService.prototype.getDatacheck = function (fileData, selectedSheet) {
        var _this = this;
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', fileData.page + '')
            .set('nrows', fileData.nrows + '');
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.check_result + '/' + fileData.fileId, { params: params }).
            pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (res) {
            _this.cleansingDataCheck$.next(res);
        }));
    };
    CleansingService.prototype.getExposuresChangedPage = function (link) {
        link = link.replace('operator=None&', '');
        return this.http.get(link).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            return res;
        }));
    };
    CleansingService.prototype.getDatacheksChangedPage = function (link) {
        return this.http.get(link).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            return res;
        }));
    };
    CleansingService.prototype.getMetadataChangedPage = function (link) {
        return this.http.get(link).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            return res;
        }));
    };
    CleansingService.prototype.getUpdateExposures = function (self) {
        self = self.replace('operator=None&', '');
        return this.http.get(self).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            return res;
        }));
    };
    CleansingService.prototype.getUpdateExposuresAfterCalculTiv = function (newFileId, fileData) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', this.firstPage + '')
            .set('nrows', fileData.nrows + '');
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.exposures + '/' + newFileId, { params: params }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            return res;
        }));
    };
    CleansingService.prototype.getUpdateExposuresAfterAdd = function (newFileId, fileData, oldFileId) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', this.firstPage + '')
            .set('nrows', fileData.nrows + '')
            // .set('new_file_id', newFileId + '')
            .set('old_file_id', oldFileId + '')
            .set('lob_id', this.lob_id_static);
        // .set('is_add', isAdd + '')
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.exposures + '/' + newFileId, { params: params }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            return res;
        }));
    };
    /* public getUpdateMetadataAfterCalculTiv(newFileId: string, fileData: FileData) {
      const params = new HttpParams()
      .set('page', this.firstPage + '')
      .set('nrows', fileData.nrows + '');
  
      return this.http.get(environment.endPoints.exposures + '/' + newFileId, {params: params}).pipe(map(res => {
        return res;
      }));
    } */
    CleansingService.prototype.getUpdateCheckAfterCalculTiv = function (newFileId, fileData) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', this.firstPage + '')
            .set('nrows', fileData.nrows + '');
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.check_result + '/' + newFileId, { params: params });
    };
    CleansingService.prototype.doUpdateData = function (jobId, fileData, selectedSheet, mappingId, body) {
        body['file_id'] = fileData.fileId;
        body['job_id'] = jobId;
        body['mapping_ids'] = mappingId;
        body['lob_id'] = this.lob_id_static;
        return this.http.post(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.check, body);
    };
    CleansingService.prototype.getUpdateCsMetadata = function (jobId) {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.csmetadata + '/' + jobId);
    };
    CleansingService.prototype.getUpdateCheck = function (fileData, selectedSheet, currentPage) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', currentPage + '')
            .set('nrows', fileData.nrows + '');
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.check_result + '/' + fileData.fileId, { params: params });
    };
    CleansingService.prototype.getUpdateCheckFilter = function (fileData, currentPage, includedIndices, fieldCode) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', currentPage + '')
            .set('nrows', fileData.nrows + '')
            .set('included_indices', includedIndices + '')
            .set('field_code', fieldCode);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.check_result + '/' + fileData.fileId, { params: params });
    };
    CleansingService.prototype.getDataChangingPage = function (link) {
        var _this = this;
        return this.http.get(link).
            pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["tap"])(function (res) {
            _this.updatedExposures$.next(res);
        }));
    };
    CleansingService.prototype.getCleansingHeaders = function () {
        return this.cleansingHeaders$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            return res;
        }));
    };
    CleansingService.prototype.getCleansingExposures = function () {
        return this.cleansingExposures$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            return res;
        }));
    };
    CleansingService.prototype.getCleansingDatacheck = function () {
        return this.cleansingDataCheck$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            return res;
        }));
    };
    CleansingService.prototype.getCleansedDataByOccupancyCode = function (oc) {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.add_location + '/ref_value/' + oc);
    };
    CleansingService.prototype.getCleansedDataByConstructionCode = function (cc) {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.add_location + '/construction_ref_value/' + cc);
    };
    CleansingService.prototype.getOccupancyCodeByOccupancyClass = function (request) {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.add_location + '/occ_value?occupancy_class=' + request.oc + '&occupancy_subclass=' + request.osc);
    };
    CleansingService.prototype.getConstructionCodeByConstructionClass = function (request) {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.add_location + '/construction_code?construction_class=' + request);
    };
    //
    CleansingService.prototype.getDataCleansingChangingPage = function () {
        return this.updatedExposures$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) {
            return res;
        }));
    };
    // ******************* refs ********************
    // http://localhost:5002/references/constructions/classes
    CleansingService.prototype.getConstructionsClasses = function () {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.construction_classes);
    };
    // http://localhost:5002/references/constructions/codes
    // http://localhost:5002/references/constructions/codes?class=Adobe
    CleansingService.prototype.getConstructionsCodes = function (classes) {
        if (classes) {
            var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
                .set('class', classes);
            return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.construction_codes, { params: params });
        }
        else
            return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.construction_codes);
    };
    // http://localhost:5002/references/counties/USA-GA
    CleansingService.prototype.getCountiesByState = function (state) {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.counties + '/' + state);
    };
    // http://localhost:5002/references/countries
    CleansingService.prototype.getCountries = function () {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.countries);
    };
    // http://localhost:5002/references/currencies
    CleansingService.prototype.getCurrencies = function () {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.currencies);
    };
    // http://localhost:5002/references/occupancies/classes
    CleansingService.prototype.getOccupanciesClasses = function () {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.occupancies_classes);
    };
    // http://localhost:5002/references/occupancies/codes
    // http://localhost:5002/references/occupancies/codes?class=General
    // http://localhost:5002/references/occupancies/codes?class=General&subclass=Chemicals
    CleansingService.prototype.getOccupanciesCodes = function () {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.occupancies_codes);
    };
    // http://localhost:5002/references/occupancies/subclasses?class=Agriculture%20infrastructure
    CleansingService.prototype.getOccupanciesSubclasses = function () {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.occupancies_subclasses);
    };
    // http://localhost:5002/references/counties/US
    CleansingService.prototype.getStatesByCountry = function (countryCode) {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.states + '/' + countryCode);
    };
    // http://localhost:5002/check/edit_location/counties/<country>
    CleansingService.prototype.getDataByCountry = function (country) {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.edit_location + '/countries/' + country);
    };
    CleansingService.prototype.getConstructionsCode = function () {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.construction_codes);
    };
    // http://localhost:5002/references/constructions/codes?class=Greenhouses
    CleansingService.prototype.getConstructionsCodeByClasses = function (classesName) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('class', classesName);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.construction_codes, { params: params });
    };
    //
    CleansingService.prototype.getOccupanciesSubclassesByClasses = function (classesName) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('class', classesName);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.occupancies_subclasses, { params: params });
    };
    //
    CleansingService.prototype.getOccupanciesCodesByClasses = function (classesName) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('class', classesName);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.construction_codes, { params: params });
    };
    //
    CleansingService.prototype.getOccupanciesCodesBySubClasses = function (subClassesName) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('subclass', subClassesName);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.construction_codes, { params: params });
    };
    //
    CleansingService.prototype.getOccupanciesCodesByClassesAndSubClasses = function (classesName, subClassesName) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('class', classesName)
            .set('subclass', subClassesName);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.references.construction_codes, { params: params });
    };
    CleansingService.prototype.getHeadersT = function (lobId) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('lob_id', lobId);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.headers, { params: params });
    };
    // http://localhost:5002/check/exposures?filename=SMALL.xlsx&worksheet=0&page=1&worksheet_id=ce2611d10b9ac15fc4c9d05bd836d2213ac0f8a3&nrows=3
    /* public getExposuresT(fileData: FileData, worksheetIndex: number) {
      const params = new HttpParams()
        .set('filename', fileData.filename)
        .set('worksheet', fileData.worksheet[worksheetIndex])
        .set('page', fileData.page + '')
        .set('worksheet_id', fileData.filename + '_' + fileData.worksheet[worksheetIndex])
        .set('nrows', fileData.nrows + '');
  
      return this.http.get(environment.endPoints.exposures, { params: params });
    } */
    // http://localhost:5002/check/exposures?filename=SMALL.xlsx&worksheet=0&page=1&worksheet_id=ce2611d10b9ac15fc4c9d05bd836d2213ac0f8a3&nrows=3
    CleansingService.prototype.addLocation = function (location, file_id) {
        var params = {
            file_id: file_id,
            location: location,
            lob_id: 1
        };
        return this.http.post(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.add_location, params);
    };
    CleansingService.prototype.editLocation = function (location, file_id, indices) {
        var params = {
            file_id: file_id,
            location: location,
            lob_id: 1,
            indices: indices
        };
        return this.http.post(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.edit_location, params);
    };
    CleansingService.prototype.getMapData = function (fileData, worksheetIndex) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('filename', fileData.filename)
            .set('worksheet', fileData.worksheet[worksheetIndex]);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.map, { params: params });
    };
    // loc
    CleansingService.prototype.countriesforExposure = function (fileData, selectedSheet) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('column', 'country')
            .set('unique', '1');
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.cols + '/' + fileData.fileId, { params: params });
    };
    CleansingService.prototype.getExposureByColId = function (fileData, selectedSheet, colId, unique) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('column', colId);
        if (unique) {
            params = params.set('unique', unique + '');
        }
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.cols + '/' + fileData.fileId, { params: params });
    };
    // loc
    CleansingService.prototype.getExposure = function (fileData, selectedSheet, index) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', index + '')
            .set('nrows', '1');
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.exposures + '/' + fileData.fileId, { params: params });
    };
    // loc
    CleansingService.prototype.getdashboard = function (fileData, selectedSheet, argument, value, image) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('argument', argument)
            .set('percentage', value);
        if (image)
            params = params.set('image', image);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.dashboard + '/' + fileData.fileId, { params: params });
    };
    CleansingService.prototype.quickSearchByColCode = function (fileData, selectedSheet, columnCode, value, operator) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('value', value + '')
            .set('page', fileData.page + '')
            .set('nrows', fileData.nrows + '');
        if (operator) {
            params = params.set('operator', operator);
        }
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.check + '/' + fileData.fileId + '/search/' + columnCode, { params: params });
    };
    CleansingService.prototype.getExposuresWithErrorByColCode = function (fileData, selectedSheet, columnCode) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', fileData.page)
            .set('nrows', fileData.nrows);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.check + '/' + fileData.fileId + '/errors/column/' + columnCode, { params: params });
    };
    CleansingService.prototype.getExposuresByErrorType = function (fileData, selectedSheet, filterType) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('page', fileData.page)
            .set('nrows', fileData.nrows);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.check + '/' + fileData.fileId + '/errors/' + filterType, { params: params });
    };
    /* public exportData(fileId: string, columns: string[]) {
      const headers = new HttpHeaders(
        {
          'Content-Type':  'application/json',
        });
        // return this._http.get(this.baseUrl + url, { headers: headers, responseType: "blob",  observe: 'response'});
  
      const params = {
        file_id: fileId,
        columns: columns
      }
      return this.http.post(environment.endPoints.check_export, params, { headers: headers, responseType: 'blob', observe: 'response'});
      // return this.http.post(environment.endPoints.check_export, params, { responseType: 'arraybuffer', headers: headers,  observe: 'response'});
    } */
    CleansingService.prototype.exportData = function (fileId, columns) {
        var params = {
            file_id: fileId,
            columns: columns
        };
        return new rxjs__WEBPACK_IMPORTED_MODULE_4__["Observable"](function (obs) {
            var oReq = new XMLHttpRequest();
            oReq.open("POST", _env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.check_export, true);
            oReq.setRequestHeader("content-type", "application/json");
            oReq.responseType = "arraybuffer";
            oReq.onload = function (oEvent) {
                var arrayBuffer = oReq.response;
                var byteArray = new Uint8Array(arrayBuffer);
                obs.next(byteArray);
            };
            var body = JSON.stringify(params);
            oReq.send(body);
        });
    };
    CleansingService.prototype.ajustTiv = function (fileId, lines, tiv, pd, bi) {
        var params = {
            file_id: fileId,
            lob_id: this.lob_id_static,
            lines: lines,
            tiv: tiv,
            pd: pd,
            bi: bi,
        };
        return this.http.post(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.adjust_tiv, params);
    };
    CleansingService.prototype.applyCleansing = function (fileId) {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.apply_modifications + fileId);
    };
    /* // get locations
    public getAllLocations() {
      return this.http.get(environment.endPoints.exposures_counts);
    } */
    // get locations
    CleansingService.prototype.getAllLocations = function (newFileId, oldFileId) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('new_file_id', newFileId)
            .set('old_file_id', oldFileId);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.exposures_counts, { params: params });
    };
    // add locations
    CleansingService.prototype.addLocations = function (fileId) {
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.add_locations + fileId);
    };
    // N
    CleansingService.prototype.shortExposures = function (fileData, selectedSheet, columnCode, value, order) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpParams"]()
            .set('value', value)
            .set('page', fileData.page)
            .set('nrows', fileData.nrows);
        if (order) {
            params = params.set('order', order);
        }
        else {
            params = params.set('order', '');
        }
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].endPoints.check + '/' + fileData.fileId + '/sort/' + columnCode, { params: params });
    };
    CleansingService.prototype.sortHeaders = function (headers) {
        console.log('short headers');
        var first = 'general';
        return headers.sort(function (x, y) { return x['category']['code'] == first ? -1 : y['category']['code'] == first ? 1 : 0; });
    };
    CleansingService.prototype.getStructureTransformColomn = function (headers, columnDisplayByDefault) {
        var headersMod = [];
        headers.forEach(function (element) {
            var headersTemp = {
                categoryName: element.category['label'],
                fieldName: element.name,
                fieldCode: element.code,
                fieldOrder: element.inCategoryOrder,
                fieldType: element.dataType
            };
            headersMod.push(headersTemp);
        });
        var outPut = [];
        var categories = [];
        for (var i = 0; i < headersMod.length; i++) {
            var elmt = headersMod[i];
            if (!categories.includes(elmt['categoryName'])) {
                categories.push(elmt['categoryName']);
            }
        }
        for (var i = 0; i < categories.length; i++) {
            var subtask = [];
            var cat = categories[i];
            for (var j = 0; j < headersMod.length; j++) {
                var hed = headersMod[j];
                if (cat === hed['categoryName']) {
                    if (columnDisplayByDefault.includes(hed['fieldCode'])) {
                        subtask.push({
                            name: hed['fieldName'],
                            code: hed['fieldCode'],
                            checked: true
                        });
                    }
                    else {
                        subtask.push({
                            name: hed['fieldName'],
                            code: hed['fieldCode'],
                            checked: false
                        });
                    }
                }
            }
            outPut.push({
                name: cat,
                code: cat,
                checked: false,
                subtask: subtask
            });
        }
        var cols = outPut;
        var columnState = [];
        var initColunmState = [];
        for (var i = 0; i < cols.length; i++) {
            var categories_1 = cols[i];
            for (var j = 0; j < categories_1['subtask'].length; j++) {
                var column = categories_1['subtask'][j];
                columnState.push({
                    colId: column['code'],
                    hide: !column['checked']
                });
                if (columnDisplayByDefault.includes(column['code'])) {
                    initColunmState.push({
                        colId: column['code'],
                        hide: false
                    });
                }
                else {
                    initColunmState.push({
                        colId: column['code'],
                        hide: true
                    });
                }
            }
        }
        return { columnState: columnState, columnStructure: outPut };
    };
    CleansingService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], CleansingService);
    return CleansingService;
}());

function swapArrayElements(arr, indexA, indexB) {
    var temp = arr[indexA];
    arr[indexA] = arr[indexB];
    arr[indexB] = temp;
    return arr;
}
;
function numberWithCommas(number) {
    return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
}


/***/ }),

/***/ "./src/app/dcm/modules/upload/services/file-import.service.ts":
/*!********************************************************************!*\
  !*** ./src/app/dcm/modules/upload/services/file-import.service.ts ***!
  \********************************************************************/
/*! exports provided: FileImportService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FileImportService", function() { return FileImportService; });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _env_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @env/environment */ "./src/environments/environment.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var FileImportService = /** @class */ (function () {
    function FileImportService(http) {
        this.http = http;
    }
    FileImportService.prototype.upload = function (file) {
        var _this = this;
        var body = new FormData();
        // console.log('== upload')
        // console.log(file)
        for (var i = 0; i < file.length; i++) {
            body.append('filename', file[i]);
        }
        var uploadRequest = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpRequest"]('POST', _env_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].endPoints.upload1, body, {
            reportProgress: true,
        });
        return rxjs__WEBPACK_IMPORTED_MODULE_4__["Observable"].create(function (observer) {
            _this.http.request(uploadRequest).subscribe(function (event) {
                if (event.type === _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpEventType"].UploadProgress) {
                    var percentDone = Math.round(100 * event.loaded / event.total);
                    observer.next(percentDone);
                }
                else if (event instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpResponse"]) {
                    observer.next({ done: true, file: event.body });
                }
                else if (event instanceof _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpErrorResponse"]) {
                    observer.next({ error: true, event: event });
                }
            });
        });
    };
    FileImportService.prototype.getFileMetaData = function (fileData, worksheetSelected) {
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]()
            .set('page', fileData.page.toString())
            .set('nrows', fileData.nrows.toString())
            .set('lob', fileData.lobId.toString());
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].endPoints.upload1 + 'data/' + worksheetSelected, { params: params }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["map"])(function (res) { return ({
            filename: fileData.filename,
            filetype: fileData.filetype,
            fileId: fileData.fileId,
            worksheetId: fileData.worksheetId,
            page: res.current_page,
            worksheet: fileData.worksheet,
            totalRows: res.total,
            nrows: res.count,
            lobId: fileData.lobId,
            isExcel: fileData.isExcel,
            document: res
        }); }));
    };
    FileImportService.prototype.getFileData = function (fileData, worksheetSelected) {
        var lobId;
        var page;
        var nrows;
        if (fileData.lobId && fileData.page && fileData.nrows) {
            lobId = fileData.lobId.toString();
            page = fileData.page.toString();
            nrows = fileData.nrows.toString();
        }
        else {
            lobId = '1';
            page = '1';
            nrows = '50';
        }
        var params = new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpParams"]()
            .set('page', page)
            .set('nrows', nrows)
            .set('lob', lobId);
        return this.http.get(_env_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].endPoints.upload1 + 'data/' + worksheetSelected, { params: params });
    };
    FileImportService.prototype.getDataChangedPage = function (link) {
        return this.http.get(link).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_0__["map"])(function (res) {
            return res;
        }));
    };
    FileImportService.prototype.updateRow = function (worksheetIdSelected, num, lines) {
        return this.http.post(_env_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].endPoints.upload1 + 'data', {
            file: worksheetIdSelected,
            index: num,
            content: lines
        });
    };
    FileImportService.prototype.modifyRow = function (row) {
        return this.http.put(_env_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].endPoints.flow + 'edit-rows', row, { params: { flowId: '4f34a4ab58a94b3eaf981587fa2a2166' } });
    };
    FileImportService.prototype.deleteRow = function (row) {
        return this.http.delete(_env_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].endPoints.flow + 'delete-row', {
            params: {
                flowId: '4f34a4ab58a94b3eaf981587fa2a2166',
                rowId: row.Id
            }
        });
    };
    FileImportService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"]])
    ], FileImportService);
    return FileImportService;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts":
/*!*************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts ***!
  \*************************************************************************/
/*! exports provided: CleansingActionTypes, ActionCleansingStart, ActionDeleteRow, ActionCleansingDeleteOrUpdate, ActionLoadAllData, ActionLoadErrors, ActionLoadErrorsInfo, ActionCleansingNextStep, ActionCleansingRefreshStage, ActionCleansingFinishCurrent, ActionLoadJobId, ActionCleansingFinish, ActionCleansingReset, ActionSelectedRows, ActionLoadCsMetadata, ActionLoadHeaders, ActionFilterErrorsByType, ActionColumnState, ActionColumnStructure, ActionFilterErrorsByColumn, ActionFilterQuickSearch, ActionEditGrid, ActionLoadAllLocations, ActionCleansingUpdateAll, ActionDisplayedGroupColumn, ActionGetTimeStamp, ActionUpdateOldFileId, ActionQuicksearchReset, ActionGetOldUpload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CleansingActionTypes", function() { return CleansingActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionCleansingStart", function() { return ActionCleansingStart; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionDeleteRow", function() { return ActionDeleteRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionCleansingDeleteOrUpdate", function() { return ActionCleansingDeleteOrUpdate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionLoadAllData", function() { return ActionLoadAllData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionLoadErrors", function() { return ActionLoadErrors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionLoadErrorsInfo", function() { return ActionLoadErrorsInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionCleansingNextStep", function() { return ActionCleansingNextStep; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionCleansingRefreshStage", function() { return ActionCleansingRefreshStage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionCleansingFinishCurrent", function() { return ActionCleansingFinishCurrent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionLoadJobId", function() { return ActionLoadJobId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionCleansingFinish", function() { return ActionCleansingFinish; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionCleansingReset", function() { return ActionCleansingReset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSelectedRows", function() { return ActionSelectedRows; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionLoadCsMetadata", function() { return ActionLoadCsMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionLoadHeaders", function() { return ActionLoadHeaders; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionFilterErrorsByType", function() { return ActionFilterErrorsByType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionColumnState", function() { return ActionColumnState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionColumnStructure", function() { return ActionColumnStructure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionFilterErrorsByColumn", function() { return ActionFilterErrorsByColumn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionFilterQuickSearch", function() { return ActionFilterQuickSearch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionEditGrid", function() { return ActionEditGrid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionLoadAllLocations", function() { return ActionLoadAllLocations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionCleansingUpdateAll", function() { return ActionCleansingUpdateAll; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionDisplayedGroupColumn", function() { return ActionDisplayedGroupColumn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionGetTimeStamp", function() { return ActionGetTimeStamp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionUpdateOldFileId", function() { return ActionUpdateOldFileId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionQuicksearchReset", function() { return ActionQuicksearchReset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionGetOldUpload", function() { return ActionGetOldUpload; });
var CleansingActionTypes;
(function (CleansingActionTypes) {
    CleansingActionTypes["START_PROCESS"] = "[Cleansing] Start process";
    CleansingActionTypes["DELETEORUPDATE"] = "[Cleansing] Delete update row";
    CleansingActionTypes["DELETEROW"] = "[Cleansing] deleterow";
    CleansingActionTypes["GO_TO_NEXT"] = "[Cleansing] Go to next";
    CleansingActionTypes["REFRESH_STAGE"] = "[Cleansing] refresh stage";
    CleansingActionTypes["FINISH_STEP"] = "[Cleansing] Finish current";
    CleansingActionTypes["FINISH_PROCESS"] = "[Cleansing] Finish process";
    CleansingActionTypes["RESET"] = "[Cleansing] Reset";
    CleansingActionTypes["ALLDATA"] = "[Cleansing] All data";
    CleansingActionTypes["ERRORS"] = "[Cleansing] Errors";
    CleansingActionTypes["ERRORS_INFO"] = "[Cleansing] Errors Info";
    CleansingActionTypes["SELECTED_ROWS"] = "[Cleansing] Selected rows";
    CleansingActionTypes["CSMETADATA"] = "[Cleansing] Cs Metadata";
    CleansingActionTypes["JOB_ID"] = "[Cleansing] Job Id";
    CleansingActionTypes["HEADERS"] = "[Cleansing] Headers";
    CleansingActionTypes["ERRORS_TYPE"] = "[Cleansing] Filter errors by Type";
    CleansingActionTypes["ERRORS_COLUMN"] = "[Cleansing] Filter errors by Column";
    CleansingActionTypes["QUICK_SEARCH"] = "[Cleansing] Filter Quick Search";
    CleansingActionTypes["COLUMN_STATE"] = "[Cleansing] Column state";
    CleansingActionTypes["COLUMN_STRUCTURE"] = "[Cleansing] Column structure";
    CleansingActionTypes["EDIT_GRID"] = "[Cleansing] Edit the grid";
    CleansingActionTypes["LOCATIONS_LOADED"] = "[Cleansing] Locations loaded";
    CleansingActionTypes["UPDATE_ALL"] = "[Cleansing] update all data";
    CleansingActionTypes["GROUP_COLUMN"] = "[Cleansing] group column state";
    CleansingActionTypes["TIMESTAMP"] = "[Cleansing] timestap before upload";
    CleansingActionTypes["UPDATE_OLD_FILE_ID"] = "[Cleansing] update old file id";
    CleansingActionTypes["FILTER_RESET"] = "[Cleansing] reset filter";
    CleansingActionTypes["OLD_UPLOAD"] = "[Cleansing] get old upload";
})(CleansingActionTypes || (CleansingActionTypes = {}));
var ActionCleansingStart = /** @class */ (function () {
    function ActionCleansingStart() {
        this.type = CleansingActionTypes.START_PROCESS;
    }
    return ActionCleansingStart;
}());

var ActionDeleteRow = /** @class */ (function () {
    function ActionDeleteRow(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.DELETEROW;
    }
    return ActionDeleteRow;
}());

var ActionCleansingDeleteOrUpdate = /** @class */ (function () {
    function ActionCleansingDeleteOrUpdate(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.DELETEORUPDATE;
    }
    return ActionCleansingDeleteOrUpdate;
}());

var ActionLoadAllData = /** @class */ (function () {
    function ActionLoadAllData(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.ALLDATA;
    }
    return ActionLoadAllData;
}());

var ActionLoadErrors = /** @class */ (function () {
    function ActionLoadErrors(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.ERRORS;
    }
    return ActionLoadErrors;
}());

var ActionLoadErrorsInfo = /** @class */ (function () {
    function ActionLoadErrorsInfo(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.ERRORS_INFO;
    }
    return ActionLoadErrorsInfo;
}());

var ActionCleansingNextStep = /** @class */ (function () {
    function ActionCleansingNextStep() {
        this.type = CleansingActionTypes.GO_TO_NEXT;
    }
    return ActionCleansingNextStep;
}());

var ActionCleansingRefreshStage = /** @class */ (function () {
    function ActionCleansingRefreshStage() {
        this.type = CleansingActionTypes.REFRESH_STAGE;
    }
    return ActionCleansingRefreshStage;
}());

var ActionCleansingFinishCurrent = /** @class */ (function () {
    function ActionCleansingFinishCurrent(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.FINISH_STEP;
    }
    return ActionCleansingFinishCurrent;
}());

var ActionLoadJobId = /** @class */ (function () {
    function ActionLoadJobId(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.JOB_ID;
    }
    return ActionLoadJobId;
}());

var ActionCleansingFinish = /** @class */ (function () {
    function ActionCleansingFinish() {
        this.type = CleansingActionTypes.FINISH_PROCESS;
    }
    return ActionCleansingFinish;
}());

var ActionCleansingReset = /** @class */ (function () {
    function ActionCleansingReset() {
        this.type = CleansingActionTypes.RESET;
    }
    return ActionCleansingReset;
}());

var ActionSelectedRows = /** @class */ (function () {
    function ActionSelectedRows(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.SELECTED_ROWS;
    }
    return ActionSelectedRows;
}());

var ActionLoadCsMetadata = /** @class */ (function () {
    function ActionLoadCsMetadata(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.CSMETADATA;
    }
    return ActionLoadCsMetadata;
}());

var ActionLoadHeaders = /** @class */ (function () {
    function ActionLoadHeaders(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.HEADERS;
    }
    return ActionLoadHeaders;
}());

var ActionFilterErrorsByType = /** @class */ (function () {
    function ActionFilterErrorsByType(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.ERRORS_TYPE;
    }
    return ActionFilterErrorsByType;
}());

var ActionColumnState = /** @class */ (function () {
    function ActionColumnState(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.COLUMN_STATE;
    }
    return ActionColumnState;
}());

var ActionColumnStructure = /** @class */ (function () {
    function ActionColumnStructure(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.COLUMN_STRUCTURE;
    }
    return ActionColumnStructure;
}());

var ActionFilterErrorsByColumn = /** @class */ (function () {
    function ActionFilterErrorsByColumn(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.ERRORS_COLUMN;
    }
    return ActionFilterErrorsByColumn;
}());

var ActionFilterQuickSearch = /** @class */ (function () {
    function ActionFilterQuickSearch(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.QUICK_SEARCH;
    }
    return ActionFilterQuickSearch;
}());

var ActionEditGrid = /** @class */ (function () {
    function ActionEditGrid(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.EDIT_GRID;
    }
    return ActionEditGrid;
}());

var ActionLoadAllLocations = /** @class */ (function () {
    function ActionLoadAllLocations(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.LOCATIONS_LOADED;
    }
    return ActionLoadAllLocations;
}());

var ActionCleansingUpdateAll = /** @class */ (function () {
    function ActionCleansingUpdateAll(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.UPDATE_ALL;
    }
    return ActionCleansingUpdateAll;
}());

var ActionDisplayedGroupColumn = /** @class */ (function () {
    function ActionDisplayedGroupColumn(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.GROUP_COLUMN;
    }
    return ActionDisplayedGroupColumn;
}());

var ActionGetTimeStamp = /** @class */ (function () {
    function ActionGetTimeStamp(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.TIMESTAMP;
    }
    return ActionGetTimeStamp;
}());

var ActionUpdateOldFileId = /** @class */ (function () {
    function ActionUpdateOldFileId(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.UPDATE_OLD_FILE_ID;
    }
    return ActionUpdateOldFileId;
}());

var ActionQuicksearchReset = /** @class */ (function () {
    function ActionQuicksearchReset() {
        this.type = CleansingActionTypes.FILTER_RESET;
        // constructor(readonly payload: { quickSearch: any }) {}
    }
    return ActionQuicksearchReset;
}());

var ActionGetOldUpload = /** @class */ (function () {
    function ActionGetOldUpload(payload) {
        this.payload = payload;
        this.type = CleansingActionTypes.OLD_UPLOAD;
    }
    return ActionGetOldUpload;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/store/cleansing/cleansing.reducer.ts":
/*!*************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/store/cleansing/cleansing.reducer.ts ***!
  \*************************************************************************/
/*! exports provided: initUpload, initialState, CleansingReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initUpload", function() { return initUpload; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CleansingReducer", function() { return CleansingReducer; });
/* harmony import */ var _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _utils_Cleansing_utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/Cleansing-utils */ "./src/app/dcm/modules/upload/utils/Cleansing-utils.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};


var initialData = null;
var initialErrors = null;
var initialCsMetadata = null;
var initialHeaders = null;
var initUpload = {
    fileId: null,
    jobId: null,
    fileData: null,
    headers: null,
    data: null,
    csMetadata: null,
    columnState: [],
    columnStructure: [],
    mappingId: null
};
var initialState = {
    filters: {},
    stage: 'STANDBY',
    page: 1,
    limit: 15,
    statistics: {},
    deletedOrUpdated: false,
    flowId: null,
    loading: false,
    loaded: false,
    failed: false,
    selectedRows: [],
    datachek: null,
    data: null,
    errors: null,
    headers: null,
    csMetadata: null,
    jobId: null,
    errorsInfo: null,
    stageBeforeLoad: 'STANDBY',
    quickSearch: [],
    typeError: null,
    filterColumn: null,
    columnState: [],
    columnStructure: [],
    editable: true,
    locationsLoaded: null,
    groupColumn: null,
    timeStamp: null,
    oldFileId: null,
    oldUpload: initUpload
};
function CleansingReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].DELETEROW:
            return __assign({}, state, { data: action.payload.row });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].START_PROCESS:
            return __assign({}, state, { loading: true, loaded: false, stage: 'STANDBY' });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].DELETEORUPDATE:
            return __assign({}, state, { deletedOrUpdated: true });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].ALLDATA:
            return __assign({}, state, { data: action.payload.data });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].CSMETADATA:
            return __assign({}, state, { csMetadata: action.payload.csMetadata });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].HEADERS:
            return __assign({}, state, { headers: action.payload.headers });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].JOB_ID:
            return __assign({}, state, { jobId: (action.payload) ? String(action.payload.jobId) : state.jobId });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].ERRORS:
            return __assign({}, state, { errors: action.payload.errors });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].OLD_UPLOAD:
            return __assign({}, state, { oldUpload: action.payload.oldUpload });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].ERRORS_TYPE:
            return __assign({}, state, { typeError: action.payload.typeError });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].ERRORS_COLUMN:
            return __assign({}, state, { filterColumn: action.payload.filterColumn });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].QUICK_SEARCH:
            return __assign({}, state, { quickSearch: action.payload.quickSearch });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].COLUMN_STATE:
            return __assign({}, state, { columnState: action.payload.columnState });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].COLUMN_STRUCTURE:
            return __assign({}, state, { columnStructure: action.payload.columnStructure });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].GROUP_COLUMN:
            return __assign({}, state, { groupColumn: action.payload.groupColumn });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].TIMESTAMP:
            return __assign({}, state, { timeStamp: action.payload.timeStamp, oldFileId: action.payload.oldFileId });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].FILTER_RESET:
            return __assign({}, state, { quickSearch: null, typeError: null, filterColumn: null });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].UPDATE_OLD_FILE_ID:
            return __assign({}, state, { oldFileId: action.payload.oldFileId });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].ERRORS_INFO:
            return __assign({}, state, { errorsInfo: action.payload.errorsInfo });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].SELECTED_ROWS:
            return __assign({}, state, { selectedRows: action.payload.selectedRows });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].EDIT_GRID:
            return __assign({}, state, { selectedRows: action.payload.editable });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].LOCATIONS_LOADED:
            return __assign({}, state, { locationsLoaded: action.payload.locationsLoaded });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].GO_TO_NEXT:
            return __assign({}, state, { stage: _utils_Cleansing_utils__WEBPACK_IMPORTED_MODULE_1__["default"].getNextCleansingStep(state.stage) });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].REFRESH_STAGE:
            return __assign({}, state, { stage: 'EDIT' });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].FINISH_STEP:
            return __assign({}, state, { flowId: (action.payload) ? String(action.payload.flowId) : state.flowId });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].FINISH_PROCESS:
            return __assign({}, state, { loading: false, loaded: true, stage: 'FINISH' });
        case _cleansing_actions__WEBPACK_IMPORTED_MODULE_0__["CleansingActionTypes"].RESET:
            return __assign({}, state, { filters: {}, stage: 'STANDBY', page: 1, limit: 15, statistics: {}, deletedOrUpdated: false, flowId: null, loading: false, loaded: false, failed: false, selectedRows: [], datachek: null, data: null, errors: null, headers: null, csMetadata: null, jobId: null, errorsInfo: null, stageBeforeLoad: 'STANDBY', quickSearch: [], typeError: null, filterColumn: null, columnState: [], columnStructure: [], editable: true, locationsLoaded: null, groupColumn: null });
        default:
            return state;
    }
}


/***/ }),

/***/ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts":
/*!***************************************************************************!*\
  !*** ./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts ***!
  \***************************************************************************/
/*! exports provided: selectCleansingState, selectCleansingStage, selectCleansingLoading, selectCleansingData, selectCleansingErrors, selectSelectedRows, selectCleansingErrorsInfo, selectCleansingLoaded, selectCleansingFailed, selectCleansingFlowId, selectCleansingJobId, selectCleansingDeleteOrUpdate, selectCleansingCsMetadata, selectCleansingHeaders, selectColumnState, selectGroupColumnState, selectColumnStructure, selectFilterErrorsByType, selectFilterErrorsByColumn, selectFilterQuickSearch, selectEditGrid, selectLocationsLoaded, selectTimeStamp, selectOldFileId, selectOldUpload */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingState", function() { return selectCleansingState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingStage", function() { return selectCleansingStage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingLoading", function() { return selectCleansingLoading; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingData", function() { return selectCleansingData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingErrors", function() { return selectCleansingErrors; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectSelectedRows", function() { return selectSelectedRows; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingErrorsInfo", function() { return selectCleansingErrorsInfo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingLoaded", function() { return selectCleansingLoaded; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingFailed", function() { return selectCleansingFailed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingFlowId", function() { return selectCleansingFlowId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingJobId", function() { return selectCleansingJobId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingDeleteOrUpdate", function() { return selectCleansingDeleteOrUpdate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingCsMetadata", function() { return selectCleansingCsMetadata; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCleansingHeaders", function() { return selectCleansingHeaders; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectColumnState", function() { return selectColumnState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectGroupColumnState", function() { return selectGroupColumnState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectColumnStructure", function() { return selectColumnStructure; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectFilterErrorsByType", function() { return selectFilterErrorsByType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectFilterErrorsByColumn", function() { return selectFilterErrorsByColumn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectFilterQuickSearch", function() { return selectFilterQuickSearch; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectEditGrid", function() { return selectEditGrid; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectLocationsLoaded", function() { return selectLocationsLoaded; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectTimeStamp", function() { return selectTimeStamp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectOldFileId", function() { return selectOldFileId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectOldUpload", function() { return selectOldUpload; });
/* harmony import */ var _app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @app/dcm/store/dcm.selectors */ "./src/app/dcm/store/dcm.selectors.ts");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");


var selectCleansingState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(_app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_0__["selectUpload"], function (state) { return state.cleansing; });
var selectCleansingStage = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.stage; });
var selectCleansingLoading = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.loading; });
var selectCleansingData = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.data; });
var selectCleansingErrors = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.errors; });
var selectSelectedRows = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.selectedRows; });
var selectCleansingErrorsInfo = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.errorsInfo; });
var selectCleansingLoaded = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.loaded; });
var selectCleansingFailed = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.failed; });
var selectCleansingFlowId = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.flowId; });
var selectCleansingJobId = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.jobId; });
var selectCleansingDeleteOrUpdate = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.deletedOrUpdated; });
var selectCleansingCsMetadata = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.csMetadata; });
var selectCleansingHeaders = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.headers; });
var selectColumnState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.columnState; });
var selectGroupColumnState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.groupColumn; });
var selectColumnStructure = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.columnStructure; });
//
var selectFilterErrorsByType = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.typeError; });
var selectFilterErrorsByColumn = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.filterColumn; });
var selectFilterQuickSearch = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.quickSearch; });
var selectEditGrid = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.editable; });
var selectLocationsLoaded = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.locationsLoaded; });
var selectTimeStamp = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.timeStamp; });
var selectOldFileId = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.oldFileId; });
var selectOldUpload = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectCleansingState, function (cleansingState) { return cleansingState.oldUpload; });


/***/ }),

/***/ "./src/app/dcm/modules/upload/store/import/import.actions.ts":
/*!*******************************************************************!*\
  !*** ./src/app/dcm/modules/upload/store/import/import.actions.ts ***!
  \*******************************************************************/
/*! exports provided: ImportActionTypes, ActionImportUpdate, ActionStartImport, ActionFinishImport, ActionCancelImport, ActionSelectedFile, ActionUploadFiles, ActionUpdateFileData, ActionUpdateFileId, ActionSelectSheet, ActionSelectedSheets, ActionImportReset, ActionGetDataImported, ActionUpdateWorkFiles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImportActionTypes", function() { return ImportActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionImportUpdate", function() { return ActionImportUpdate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionStartImport", function() { return ActionStartImport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionFinishImport", function() { return ActionFinishImport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionCancelImport", function() { return ActionCancelImport; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSelectedFile", function() { return ActionSelectedFile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionUploadFiles", function() { return ActionUploadFiles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionUpdateFileData", function() { return ActionUpdateFileData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionUpdateFileId", function() { return ActionUpdateFileId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSelectSheet", function() { return ActionSelectSheet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSelectedSheets", function() { return ActionSelectedSheets; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionImportReset", function() { return ActionImportReset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionGetDataImported", function() { return ActionGetDataImported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionUpdateWorkFiles", function() { return ActionUpdateWorkFiles; });
var ImportActionTypes;
(function (ImportActionTypes) {
    ImportActionTypes["UPDATE"] = "[Import] Update progress";
    ImportActionTypes["SELECT_FILE"] = "[Import] select file";
    ImportActionTypes["SELECT_SHEETS"] = "[Import] select sheets";
    ImportActionTypes["UPLOAD_FILES"] = "[Import] upload files";
    ImportActionTypes["START_IMPORT"] = "[Import] start file import";
    ImportActionTypes["FINISH_IMPORT"] = "[Import] finish file import";
    ImportActionTypes["FAIL_IMPORT"] = "[Import] finish file import";
    ImportActionTypes["UPDATE_FILE_DATA"] = "[Import] Update file Data";
    ImportActionTypes["GET_FILE_DATA"] = "[Import] Get file Data";
    ImportActionTypes["SELECT_SHEET"] = "[Import] Select sheet";
    ImportActionTypes["CANCEL_IMPORT"] = "[Import] cancel file import";
    ImportActionTypes["IMPORTED_DATA"] = "[Import] import data";
    ImportActionTypes["RESET"] = "[Import] Reset";
    ImportActionTypes["UPDATE_FILE_ID"] = "[Import] update file id";
    ImportActionTypes["UPDATE_WORK_FILES"] = "[Import] update workfiles";
})(ImportActionTypes || (ImportActionTypes = {}));
var ActionImportUpdate = /** @class */ (function () {
    function ActionImportUpdate(payload) {
        this.payload = payload;
        this.type = ImportActionTypes.UPDATE;
    }
    return ActionImportUpdate;
}());

var ActionStartImport = /** @class */ (function () {
    function ActionStartImport() {
        this.type = ImportActionTypes.START_IMPORT;
    }
    return ActionStartImport;
}());

var ActionFinishImport = /** @class */ (function () {
    function ActionFinishImport(payload) {
        // constructor(readonly payload: { file: any, worksheets: string[], workfiles: any }) {
        // constructor(readonly payload: { filename: string, worksheetId: any}) {
        this.payload = payload;
        this.type = ImportActionTypes.FINISH_IMPORT;
        // constructor(readonly payload: { filename: string, worksheet: string }) {
    }
    return ActionFinishImport;
}());

var ActionCancelImport = /** @class */ (function () {
    function ActionCancelImport() {
        this.type = ImportActionTypes.CANCEL_IMPORT;
    }
    return ActionCancelImport;
}());

var ActionSelectedFile = /** @class */ (function () {
    // constructor(readonly payload: { file: File }) { }
    function ActionSelectedFile(payload) {
        this.payload = payload;
        this.type = ImportActionTypes.SELECT_FILE;
    }
    return ActionSelectedFile;
}());

var ActionUploadFiles = /** @class */ (function () {
    function ActionUploadFiles(payload) {
        this.payload = payload;
        this.type = ImportActionTypes.UPLOAD_FILES;
    }
    return ActionUploadFiles;
}());

var ActionUpdateFileData = /** @class */ (function () {
    function ActionUpdateFileData(payload) {
        this.payload = payload;
        this.type = ImportActionTypes.UPDATE_FILE_DATA;
    }
    return ActionUpdateFileData;
}());

var ActionUpdateFileId = /** @class */ (function () {
    function ActionUpdateFileId(payload) {
        this.payload = payload;
        this.type = ImportActionTypes.UPDATE_FILE_ID;
    }
    return ActionUpdateFileId;
}());

var ActionSelectSheet = /** @class */ (function () {
    function ActionSelectSheet(payload) {
        this.payload = payload;
        this.type = ImportActionTypes.SELECT_SHEET;
    }
    return ActionSelectSheet;
}());

var ActionSelectedSheets = /** @class */ (function () {
    function ActionSelectedSheets(payload) {
        this.payload = payload;
        this.type = ImportActionTypes.SELECT_SHEETS;
    }
    return ActionSelectedSheets;
}());

var ActionImportReset = /** @class */ (function () {
    function ActionImportReset() {
        this.type = ImportActionTypes.RESET;
    }
    return ActionImportReset;
}());

var ActionGetDataImported = /** @class */ (function () {
    function ActionGetDataImported(payload) {
        this.payload = payload;
        this.type = ImportActionTypes.IMPORTED_DATA;
    }
    return ActionGetDataImported;
}());

var ActionUpdateWorkFiles = /** @class */ (function () {
    function ActionUpdateWorkFiles(payload) {
        this.payload = payload;
        this.type = ImportActionTypes.UPDATE_WORK_FILES;
    }
    return ActionUpdateWorkFiles;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/store/import/import.reducer.ts":
/*!*******************************************************************!*\
  !*** ./src/app/dcm/modules/upload/store/import/import.reducer.ts ***!
  \*******************************************************************/
/*! exports provided: initialState, ImportReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ImportReducer", function() { return ImportReducer; });
/* harmony import */ var _import_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./import.actions */ "./src/app/dcm/modules/upload/store/import/import.actions.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var initialState = {
    import: {
        imported: false,
        importing: false,
        selectedFile: null,
        fileData: null,
        progress: null,
        selectedSheet: null,
        data: null,
        fileModel: null
    }
};
function ImportReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].UPDATE:
            return __assign({}, state, { import: __assign({}, state.import, { progress: action.payload.progress }) });
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].IMPORTED_DATA:
            return __assign({}, state, { import: __assign({}, state.import, { data: action.payload.data }) });
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].RESET:
            return initialState;
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].START_IMPORT:
            return __assign({}, state, { import: __assign({}, state.import, { importing: true, imported: false }) });
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].FINISH_IMPORT:
            return __assign({}, state, { import: __assign({}, state.import, { importing: false, imported: true, workFiles: action.payload.workfiles, importMetadata: action.payload.importMetadata, fileData: {
                        filename: action.payload.file['filename'],
                        fileId: action.payload.file['file_id'],
                        worksheetId: action.payload.file['worksheets_map'],
                        filetype: action.payload.file['filetype'],
                        page: null,
                        worksheet: action.payload.worksheets,
                        totalRows: null,
                        nrows: null,
                        lobId: null,
                        isExcel: action.payload.file['excel'],
                        document: action.payload.file
                    } }) });
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].UPDATE_FILE_ID:
            return __assign({}, state, { import: __assign({}, state.import, { importing: false, imported: true, fileData: __assign({}, state.import.fileData, { fileId: action.payload.fileId }) }) });
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].CANCEL_IMPORT:
            return __assign({}, state, { import: __assign({}, state.import, { importing: false, imported: false, progress: null, selectedFile: null, selectedSheet: null, fileModel: null }) });
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].UPLOAD_FILES:
            return __assign({}, state, { import: __assign({}, state.import, { files: action.payload.file, importing: false, imported: false, 
                    // ##start
                    progress: action.payload.file[0].size }) });
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].UPDATE_FILE_DATA:
            return __assign({}, state, { import: __assign({}, state.import, { selectedSheet: 0, fileData: __assign({}, state.import.fileData, action.payload.fileData) }) });
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].UPDATE_WORK_FILES:
            return __assign({}, state, { import: __assign({}, state.import, { workFiles: action.payload.workFiles, selectedSheets: action.payload.sheetsModel }) });
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].SELECT_SHEET:
            return __assign({}, state, { import: __assign({}, state.import, { selectedSheet: action.payload.sheetIndex }) });
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].SELECT_SHEETS:
            return __assign({}, state, { import: __assign({}, state.import, { selectedSheets: action.payload.sheetsModel }) });
        case _import_actions__WEBPACK_IMPORTED_MODULE_0__["ImportActionTypes"].SELECT_FILE:
            return __assign({}, state, { import: __assign({}, state.import, { selectedFile: action.payload.file }) });
        default:
            return state;
    }
}


/***/ }),

/***/ "./src/app/dcm/modules/upload/store/import/import.selectors.ts":
/*!*********************************************************************!*\
  !*** ./src/app/dcm/modules/upload/store/import/import.selectors.ts ***!
  \*********************************************************************/
/*! exports provided: selectImportState, selectImportObjectState, selectImported, selectImportProgress, selectImporting, selectSelectedFile, selectFiles, selectWorkFiles, selectFileData, selectToken, selectFileId, selectFileSheet, selectedSheets */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectImportState", function() { return selectImportState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectImportObjectState", function() { return selectImportObjectState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectImported", function() { return selectImported; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectImportProgress", function() { return selectImportProgress; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectImporting", function() { return selectImporting; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectSelectedFile", function() { return selectSelectedFile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectFiles", function() { return selectFiles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectWorkFiles", function() { return selectWorkFiles; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectFileData", function() { return selectFileData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectToken", function() { return selectToken; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectFileId", function() { return selectFileId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectFileSheet", function() { return selectFileSheet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectedSheets", function() { return selectedSheets; });
/* harmony import */ var _app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @app/dcm/store/dcm.selectors */ "./src/app/dcm/store/dcm.selectors.ts");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");


var selectImportState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(_app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_0__["selectUpload"], function (state) { return state.import; });
var selectImportObjectState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectImportState, function (importState) { return importState.import; });
var selectImported = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectImportObjectState, function (object) { return object.imported; });
var selectImportProgress = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectImportObjectState, function (object) { return object.progress; });
var selectImporting = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectImportObjectState, function (object) { return object.importing; });
var selectSelectedFile = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectImportObjectState, function (object) { return object.selectedFile; });
var selectFiles = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectImportObjectState, function (object) { return object.files; });
var selectWorkFiles = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectImportObjectState, function (object) { return object.workFiles; });
// mei
var selectFileData = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectImportObjectState, function (object) { return object.fileData; });
var selectToken = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectFileData, function (object) { return (object && object.filename) ? object.filename : null; });
var selectFileId = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectFileData, function (object) { return (object && object.fileId) ? object.fileId : null; });
var selectFileSheet = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectImportObjectState, function (object) { return object.selectedSheet; });
var selectedSheets = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(selectImportObjectState, function (object) { return object.selectedSheets; });


/***/ }),

/***/ "./src/app/dcm/modules/upload/store/mapping/mapping.actions.ts":
/*!*********************************************************************!*\
  !*** ./src/app/dcm/modules/upload/store/mapping/mapping.actions.ts ***!
  \*********************************************************************/
/*! exports provided: MappingActionTypes, ActionMappingUpdate, ActionMappingUpdateTarget, ActionMappingFilter, ActionMappingTargetFilter, ActionMappingSourceFilter, ActionMappingUpdateMandataryItems, ActionMappingUpdateMandataryItemsInSheet, ActionMappingUpdateOneTarget, ActionMappingUpdateSource, ActionMappingUpdateTemplate, ActionGetMappingUpdateParameters, ActionGetMappingData, ActionGetMappingDataSuccess, ActionGetMappingDataFailed, ActionMappingReset, ActionGetAllMappings, ActionGetInitMappings, ActionGetSelectedMapping, ActionGetSheetsMapping, ActionGetMappingId */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MappingActionTypes", function() { return MappingActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMappingUpdate", function() { return ActionMappingUpdate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMappingUpdateTarget", function() { return ActionMappingUpdateTarget; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMappingFilter", function() { return ActionMappingFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMappingTargetFilter", function() { return ActionMappingTargetFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMappingSourceFilter", function() { return ActionMappingSourceFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMappingUpdateMandataryItems", function() { return ActionMappingUpdateMandataryItems; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMappingUpdateMandataryItemsInSheet", function() { return ActionMappingUpdateMandataryItemsInSheet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMappingUpdateOneTarget", function() { return ActionMappingUpdateOneTarget; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMappingUpdateSource", function() { return ActionMappingUpdateSource; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMappingUpdateTemplate", function() { return ActionMappingUpdateTemplate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionGetMappingUpdateParameters", function() { return ActionGetMappingUpdateParameters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionGetMappingData", function() { return ActionGetMappingData; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionGetMappingDataSuccess", function() { return ActionGetMappingDataSuccess; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionGetMappingDataFailed", function() { return ActionGetMappingDataFailed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionMappingReset", function() { return ActionMappingReset; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionGetAllMappings", function() { return ActionGetAllMappings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionGetInitMappings", function() { return ActionGetInitMappings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionGetSelectedMapping", function() { return ActionGetSelectedMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionGetSheetsMapping", function() { return ActionGetSheetsMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionGetMappingId", function() { return ActionGetMappingId; });
var MappingActionTypes;
(function (MappingActionTypes) {
    MappingActionTypes["UPDATE"] = "[Mapping] Update";
    MappingActionTypes["UPDATE_SOURCE"] = "[Mapping] Update Source Fields";
    MappingActionTypes["UPDATE_TARGET"] = "[Mapping] Update Target Fields";
    MappingActionTypes["UPDATE_ONE_TARGET"] = "[Mapping] Update one Target Field";
    MappingActionTypes["UPDATE_TEMPLATE"] = "[Mapping] Update Template";
    MappingActionTypes["UPDATE_PARAMETERS"] = "[Mapping] Update Parameters";
    MappingActionTypes["UPDATE_MANDATARY_ITEMS"] = "[Mapping] Update mandatary items";
    MappingActionTypes["GET_MAPPING_DATA"] = "[Mapping] Get mapping data";
    MappingActionTypes["GET_MAPPING_DATA_SUCCESS"] = "[Mapping] Get mapping data success";
    MappingActionTypes["GET_MAPPING_DATA_FAILED"] = "[Mapping] Get mapping data failed";
    MappingActionTypes["RESET"] = "[Mapping] Reset";
    MappingActionTypes["FILTER"] = "[Mapping] Filter";
    MappingActionTypes["TARGET_FILTER"] = "[Mapping] Target Filter";
    MappingActionTypes["SOURCE_FILTER"] = "[Mapping] Source Filter";
    MappingActionTypes["MAPPINGS"] = "[Mapping] upload all mappings";
    MappingActionTypes["INIT_MAPPINGS"] = "[Mapping] upload initial mappings";
    MappingActionTypes["SELECTED_MAPPING"] = "[Mapping] get selected mappings";
    MappingActionTypes["UPDATE_MANDATARY_ITEMS_IN_SHEET"] = "[Mapping] Update mandatary items in sheet";
    MappingActionTypes["SELECTED_SHEETS_MAPPING"] = "[Mapping] get sheets mappings";
    MappingActionTypes["MAPPING_ID"] = "[Mapping] get mappings ids";
})(MappingActionTypes || (MappingActionTypes = {}));
var ActionMappingUpdate = /** @class */ (function () {
    function ActionMappingUpdate(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.UPDATE;
    }
    return ActionMappingUpdate;
}());

var ActionMappingUpdateTarget = /** @class */ (function () {
    function ActionMappingUpdateTarget(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.UPDATE_TARGET;
    }
    return ActionMappingUpdateTarget;
}());

var ActionMappingFilter = /** @class */ (function () {
    function ActionMappingFilter(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.FILTER;
    }
    return ActionMappingFilter;
}());

var ActionMappingTargetFilter = /** @class */ (function () {
    function ActionMappingTargetFilter(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.TARGET_FILTER;
    }
    return ActionMappingTargetFilter;
}());

var ActionMappingSourceFilter = /** @class */ (function () {
    function ActionMappingSourceFilter(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.SOURCE_FILTER;
    }
    return ActionMappingSourceFilter;
}());

var ActionMappingUpdateMandataryItems = /** @class */ (function () {
    function ActionMappingUpdateMandataryItems(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.UPDATE_MANDATARY_ITEMS;
    }
    return ActionMappingUpdateMandataryItems;
}());

var ActionMappingUpdateMandataryItemsInSheet = /** @class */ (function () {
    function ActionMappingUpdateMandataryItemsInSheet(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.UPDATE_MANDATARY_ITEMS_IN_SHEET;
    }
    return ActionMappingUpdateMandataryItemsInSheet;
}());

var ActionMappingUpdateOneTarget = /** @class */ (function () {
    function ActionMappingUpdateOneTarget(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.UPDATE_ONE_TARGET;
    }
    return ActionMappingUpdateOneTarget;
}());

var ActionMappingUpdateSource = /** @class */ (function () {
    function ActionMappingUpdateSource(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.UPDATE_SOURCE;
    }
    return ActionMappingUpdateSource;
}());

var ActionMappingUpdateTemplate = /** @class */ (function () {
    function ActionMappingUpdateTemplate(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.UPDATE_TEMPLATE;
    }
    return ActionMappingUpdateTemplate;
}());

var ActionGetMappingUpdateParameters = /** @class */ (function () {
    function ActionGetMappingUpdateParameters(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.UPDATE_PARAMETERS;
    }
    return ActionGetMappingUpdateParameters;
}());

var ActionGetMappingData = /** @class */ (function () {
    function ActionGetMappingData() {
        this.type = MappingActionTypes.GET_MAPPING_DATA;
    }
    return ActionGetMappingData;
}());

var ActionGetMappingDataSuccess = /** @class */ (function () {
    function ActionGetMappingDataSuccess(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.GET_MAPPING_DATA_SUCCESS;
    }
    return ActionGetMappingDataSuccess;
}());

var ActionGetMappingDataFailed = /** @class */ (function () {
    function ActionGetMappingDataFailed() {
        this.type = MappingActionTypes.GET_MAPPING_DATA_FAILED;
    }
    return ActionGetMappingDataFailed;
}());

var ActionMappingReset = /** @class */ (function () {
    function ActionMappingReset() {
        this.type = MappingActionTypes.RESET;
    }
    return ActionMappingReset;
}());

var ActionGetAllMappings = /** @class */ (function () {
    function ActionGetAllMappings(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.MAPPINGS;
    }
    return ActionGetAllMappings;
}());

var ActionGetInitMappings = /** @class */ (function () {
    function ActionGetInitMappings(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.INIT_MAPPINGS;
    }
    return ActionGetInitMappings;
}());

var ActionGetSelectedMapping = /** @class */ (function () {
    function ActionGetSelectedMapping(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.SELECTED_MAPPING;
    }
    return ActionGetSelectedMapping;
}());

var ActionGetSheetsMapping = /** @class */ (function () {
    function ActionGetSheetsMapping(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.SELECTED_SHEETS_MAPPING;
    }
    return ActionGetSheetsMapping;
}());

var ActionGetMappingId = /** @class */ (function () {
    function ActionGetMappingId(payload) {
        this.payload = payload;
        this.type = MappingActionTypes.MAPPING_ID;
    }
    return ActionGetMappingId;
}());



/***/ }),

/***/ "./src/app/dcm/modules/upload/store/mapping/mapping.reducer.ts":
/*!*********************************************************************!*\
  !*** ./src/app/dcm/modules/upload/store/mapping/mapping.reducer.ts ***!
  \*********************************************************************/
/*! exports provided: initialState, MappingReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MappingReducer", function() { return MappingReducer; });
/* harmony import */ var _mapping_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mapping.actions */ "./src/app/dcm/modules/upload/store/mapping/mapping.actions.ts");
/* harmony import */ var _models_mapping_mapping_paramaters_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../models/mapping/mapping-paramaters.model */ "./src/app/dcm/modules/upload/models/mapping/mapping-paramaters.model.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};


var initialSource = [];
var initialTarget = [];
var initialMappings = null;
var initialState = {
    source: initialSource.slice() || [],
    target: initialTarget.slice() || [],
    template: [],
    mappingParamaters: new _models_mapping_mapping_paramaters_model__WEBPACK_IMPORTED_MODULE_1__["MappingParamaters"](),
    mandataryItems: 0,
    mandataryItemsInSheet: 0,
    isFirstLoad: true,
    mappingId: '',
    mappings: initialMappings,
    initMappings: initialMappings,
    selectedMapping: 0,
    sheets: null,
    filter: 'All',
    targetFilter: '',
    sourceFilter: '',
    loading: false,
    loaded: false,
    failed: false
};
function MappingReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].UPDATE_MANDATARY_ITEMS:
            return __assign({}, state, { mandataryItems: action.payload.mandataryItems });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].UPDATE_MANDATARY_ITEMS_IN_SHEET:
            return __assign({}, state, { mandataryItemsInSheet: action.payload.mandataryItemsInSheet, isFirstLoad: action.payload.isFirstLoad });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].SELECTED_SHEETS_MAPPING:
            return __assign({}, state, { sheets: action.payload.sheets });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].FILTER:
            return __assign({}, state, { filter: action.payload.filter });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].MAPPING_ID:
            return __assign({}, state, { mappingId: action.payload.mappingId });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].TARGET_FILTER:
            return __assign({}, state, { filter: action.payload.targetFilter });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].SOURCE_FILTER:
            return __assign({}, state, { filter: action.payload.sourceFilter });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].UPDATE:
            return __assign({}, state, { source: action.payload.source.slice(), target: action.payload.target.slice() });
        // +++ New Actions +++
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].UPDATE_TARGET:
            return __assign({}, state, { target: action.payload.target.slice() });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].UPDATE_ONE_TARGET:
            var index = state.target.findIndex(function (t) { return t.value === action.payload.target.value; });
            var newTargets = state.target.slice();
            newTargets.splice(index, 1, action.payload.target);
            return __assign({}, state, { target: newTargets });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].UPDATE_SOURCE:
            return __assign({}, state, { source: action.payload.source.slice() });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].UPDATE_TEMPLATE:
            return __assign({}, state, { template: action.payload.template.slice() });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].UPDATE_PARAMETERS:
            return __assign({}, state, { mappingParamaters: __assign({}, action.payload.parameters) });
        // --- New Actions ---
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].RESET:
            return initialState;
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].GET_MAPPING_DATA:
            return __assign({}, state, { source: [], target: [], mappingId: '', 
                // meiNew
                mappings: null, loading: true, loaded: false, failed: false });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].GET_MAPPING_DATA_SUCCESS:
            return __assign({}, state, { source: action.payload.source.slice(), target: action.payload.target.slice(), mappingId: action.payload.mappingId, selectedMapping: action.payload.selectedMapping, 
                // meiNew
                // mappings: action.payload.mappings,
                loading: false, loaded: true });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].MAPPINGS:
            return __assign({}, state, { mappings: action.payload.mappings, loading: false, loaded: true });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].INIT_MAPPINGS:
            return __assign({}, state, { initMappings: action.payload.initMappings });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].SELECTED_MAPPING:
            return __assign({}, state, { selectedMapping: action.payload.selectedMapping, loading: false, loaded: true });
        case _mapping_actions__WEBPACK_IMPORTED_MODULE_0__["MappingActionTypes"].GET_MAPPING_DATA_FAILED:
            return __assign({}, state, { loading: false, loaded: false, failed: true });
        default:
            return state;
    }
}


/***/ }),

/***/ "./src/app/dcm/modules/upload/store/mapping/mapping.selectors.ts":
/*!***********************************************************************!*\
  !*** ./src/app/dcm/modules/upload/store/mapping/mapping.selectors.ts ***!
  \***********************************************************************/
/*! exports provided: selectMappingState, selectMappingFilter, selectMappingTargetFilter, selectMappingSourceFilter, selectMappingSource, selectMappingId, selectMappingTarget, selectMappingTemplate, selectMappingLoading, selectMappingLoaded, selectMappingParameters, selectAllMappings, selectInitMappings, selectMappingLocked, selectMappingfailed, selectSelectedMapping, selectMandataryItemsInSheetMapping, selectisMandataryItemsInSheetMapping, selectSheetsMapping */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingState", function() { return selectMappingState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingFilter", function() { return selectMappingFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingTargetFilter", function() { return selectMappingTargetFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingSourceFilter", function() { return selectMappingSourceFilter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingSource", function() { return selectMappingSource; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingId", function() { return selectMappingId; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingTarget", function() { return selectMappingTarget; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingTemplate", function() { return selectMappingTemplate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingLoading", function() { return selectMappingLoading; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingLoaded", function() { return selectMappingLoaded; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingParameters", function() { return selectMappingParameters; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectAllMappings", function() { return selectAllMappings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectInitMappings", function() { return selectInitMappings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingLocked", function() { return selectMappingLocked; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMappingfailed", function() { return selectMappingfailed; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectSelectedMapping", function() { return selectSelectedMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMandataryItemsInSheetMapping", function() { return selectMandataryItemsInSheetMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectisMandataryItemsInSheetMapping", function() { return selectisMandataryItemsInSheetMapping; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectSheetsMapping", function() { return selectSheetsMapping; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/dcm/store/dcm.selectors */ "./src/app/dcm/store/dcm.selectors.ts");


var selectMappingState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(_app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_1__["selectUpload"], function (state) { return state.mapping; });
var selectMappingFilter = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(_app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_1__["selectUpload"], function (state) { return state.mapping.filter; });
var selectMappingTargetFilter = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(_app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_1__["selectUpload"], function (state) { return state.mapping.targetFilter; });
var selectMappingSourceFilter = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(_app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_1__["selectUpload"], function (state) { return state.mapping.sourceFilter; });
var selectMappingSource = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.source; });
// with newStructure
var selectMappingId = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.mappingId; });
var selectMappingTarget = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.target; });
var selectMappingTemplate = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.template; });
var selectMappingLoading = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.loading; });
var selectMappingLoaded = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.loaded; });
var selectMappingParameters = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.mappingParamaters; });
var selectAllMappings = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.mappings; });
var selectInitMappings = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.initMappings; });
var selectMappingLocked = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.loaded || state.loading; });
var selectMappingfailed = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.failed; });
var selectSelectedMapping = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.selectedMapping; });
var selectMandataryItemsInSheetMapping = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.mandataryItemsInSheet; });
var selectisMandataryItemsInSheetMapping = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.isFirstLoad; });
var selectSheetsMapping = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectMappingState, function (state) { return state.sheets; });


/***/ }),

/***/ "./src/app/dcm/modules/upload/store/upload/upload.state.ts":
/*!*****************************************************************!*\
  !*** ./src/app/dcm/modules/upload/store/upload/upload.state.ts ***!
  \*****************************************************************/
/*! exports provided: reducers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reducers", function() { return reducers; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _import_import_reducer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../import/import.reducer */ "./src/app/dcm/modules/upload/store/import/import.reducer.ts");
/* harmony import */ var _mapping_mapping_reducer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../mapping/mapping.reducer */ "./src/app/dcm/modules/upload/store/mapping/mapping.reducer.ts");
/* harmony import */ var _cleansing_cleansing_reducer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../cleansing/cleansing.reducer */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.reducer.ts");




var reducers = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["combineReducers"])({
    mapping: _mapping_mapping_reducer__WEBPACK_IMPORTED_MODULE_2__["MappingReducer"],
    import: _import_import_reducer__WEBPACK_IMPORTED_MODULE_1__["ImportReducer"],
    cleansing: _cleansing_cleansing_reducer__WEBPACK_IMPORTED_MODULE_3__["CleansingReducer"],
});


/***/ }),

/***/ "./src/app/dcm/modules/upload/utils/Cleansing-utils.ts":
/*!*************************************************************!*\
  !*** ./src/app/dcm/modules/upload/utils/Cleansing-utils.ts ***!
  \*************************************************************/
/*! exports provided: default, API_TO_GRID_FIELDS_MAP */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "API_TO_GRID_FIELDS_MAP", function() { return API_TO_GRID_FIELDS_MAP; });
var CleansingUtils = /** @class */ (function () {
    function CleansingUtils() {
    }
    CleansingUtils.getNextCleansingStep = function (current) {
        switch (current) {
            case 'STANDBY': return 'MAPPING';
            case 'MAPPING': return 'TRANSFORM';
            case 'TRANSFORM': return 'CLEANSING';
            case 'CLEANSING': return 'SNAPSHOT';
            case 'EDIT': return 'EDIT';
            default: return 'FINISH';
        }
    };
    return CleansingUtils;
}());
/* harmony default export */ __webpack_exports__["default"] = (CleansingUtils);
var API_TO_GRID_FIELDS_MAP = {
    locationName: 'locationName',
    division: 'division',
    occupancySource: 'occupancySource',
    occupancyClass: 'occupancyClass',
    occupancySubClass: 'occupancySubClass',
    occupancyCode: 'occupancyCode',
    occupancyScheme: 'occupancyScheme',
    constructionSource: 'constructionSource',
    constructionClass: 'constructionClass',
    constructionCode: 'constructionCode',
    constructionScheme: 'constructionScheme',
    externalReference: 'externalReference',
    scorRiskID: 'scorRiskID',
    country: 'country',
    state: 'state',
    county: 'county',
    city: 'city',
    street: 'street',
    zipCode: 'zipCode',
    originalAddress: 'originalAddress',
    latitude: 'latitude',
    longitude: 'longitude',
    accuracy: 'accuracy',
    geocode: 'geocode',
    geocoder: 'geocoder',
    geocodingValidated: 'geocodingValidated',
    siteCurrency: 'siteCurrency',
    tiv: 'tiv',
    building: 'building',
    stock: 'stock',
    machinery: 'machinery',
    content: 'content',
    pbValue: 'pbValue',
    biType: 'biType',
    eip: 'eip',
    declarationPeriod: 'declarationPeriod',
    biValue: 'biValue',
    forInterest: 'forInterest',
    interest: 'interest',
    yearBuilt: 'yearBuilt',
    numberOfStories: 'numberOfStories',
    largestUnitCapacity: 'largestUnitCapacity',
    isAggregation: 'isAggregation',
    numberOfBuilding: 'numberOfBuilding',
};


/***/ }),

/***/ "./src/app/dcm/popups/models/Address-geo.model.ts":
/*!********************************************************!*\
  !*** ./src/app/dcm/popups/models/Address-geo.model.ts ***!
  \********************************************************/
/*! exports provided: AddressGeoModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AddressGeoModel", function() { return AddressGeoModel; });
var AddressGeoModel = /** @class */ (function () {
    function AddressGeoModel() {
    }
    return AddressGeoModel;
}());



/***/ }),

/***/ "./src/app/dcm/store/dcm.selectors.ts":
/*!********************************************!*\
  !*** ./src/app/dcm/store/dcm.selectors.ts ***!
  \********************************************/
/*! exports provided: selectUpload, selectPopUp, selectLocationMap, selectCurrentState, selectMatchingState, selectConfigState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectUpload", function() { return selectUpload; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectPopUp", function() { return selectPopUp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectLocationMap", function() { return selectLocationMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectCurrentState", function() { return selectCurrentState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectMatchingState", function() { return selectMatchingState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectConfigState", function() { return selectConfigState; });
/* harmony import */ var _app_dcm_store_dcm_state__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @app/dcm/store/dcm.state */ "./src/app/dcm/store/dcm.state.ts");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");


var selectUpload = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(_app_dcm_store_dcm_state__WEBPACK_IMPORTED_MODULE_0__["selectDcm"], function (state) { return state.upload; });
var selectPopUp = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(_app_dcm_store_dcm_state__WEBPACK_IMPORTED_MODULE_0__["selectDcm"], function (state) { return state.popUp; });
var selectLocationMap = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(_app_dcm_store_dcm_state__WEBPACK_IMPORTED_MODULE_0__["selectDcm"], function (state) { return state.locationMap; });
var selectCurrentState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(_app_dcm_store_dcm_state__WEBPACK_IMPORTED_MODULE_0__["selectDcm"], function (state) { return state.current; });
var selectMatchingState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(_app_dcm_store_dcm_state__WEBPACK_IMPORTED_MODULE_0__["selectDcm"], function (state) { return state.matching; });
var selectConfigState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["createSelector"])(_app_dcm_store_dcm_state__WEBPACK_IMPORTED_MODULE_0__["selectDcm"], function (state) { return state.config; });


/***/ }),

/***/ "./src/app/dcm/store/dcm.state.ts":
/*!****************************************!*\
  !*** ./src/app/dcm/store/dcm.state.ts ***!
  \****************************************/
/*! exports provided: FEATURE_NAME, selectDcm, reducers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FEATURE_NAME", function() { return FEATURE_NAME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectDcm", function() { return selectDcm; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "reducers", function() { return reducers; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _modules_upload_store_upload_upload_state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../modules/upload/store/upload/upload.state */ "./src/app/dcm/modules/upload/store/upload/upload.state.ts");
/* harmony import */ var _modules_administration_store_config_state__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../modules/administration/store/config.state */ "./src/app/dcm/modules/administration/store/config.state.ts");
/* harmony import */ var _modules_locations_store_locations_reducer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../modules/locations/store/locations.reducer */ "./src/app/dcm/modules/locations/store/locations.reducer.ts");
/* harmony import */ var _modules_matching_store_matching_reducer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../modules/matching/store/matching.reducer */ "./src/app/dcm/modules/matching/store/matching.reducer.ts");
/* harmony import */ var _app_dcm_modules_upload_containers_location_map_store_part_location_map_reducer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/dcm/modules/upload/containers/location-map/store-part/location-map.reducer */ "./src/app/dcm/modules/upload/containers/location-map/store-part/location-map.reducer.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_geographical_store_part_general_location_geographical_reducer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/geographical/store-part/general-location-geographical.reducer */ "./src/app/shared/popups/general-location-info-popup/geographical/store-part/general-location-geographical.reducer.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_store_part_load_pop_up_reducer__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/store-part/load-pop-up.reducer */ "./src/app/shared/popups/general-location-info-popup/store-part/load-pop-up.reducer.ts");








var FEATURE_NAME = 'dcm';
var selectDcm = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createFeatureSelector"])(FEATURE_NAME);
var reducers = {
    upload: _modules_upload_store_upload_upload_state__WEBPACK_IMPORTED_MODULE_1__["reducers"],
    matching: _modules_matching_store_matching_reducer__WEBPACK_IMPORTED_MODULE_4__["MatchingReducer"],
    current: _modules_locations_store_locations_reducer__WEBPACK_IMPORTED_MODULE_3__["LocationsReducer"],
    generalLocationGeographicalState: _app_shared_popups_general_location_info_popup_geographical_store_part_general_location_geographical_reducer__WEBPACK_IMPORTED_MODULE_6__["GeneralLocationGeographicalReducer"],
    popUp: _app_shared_popups_general_location_info_popup_store_part_load_pop_up_reducer__WEBPACK_IMPORTED_MODULE_7__["LoadPopUpReducer"],
    locationMap: _app_dcm_modules_upload_containers_location_map_store_part_location_map_reducer__WEBPACK_IMPORTED_MODULE_5__["LocationMapReducer"],
    config: _modules_administration_store_config_state__WEBPACK_IMPORTED_MODULE_2__["reducers"]
};


/***/ }),

/***/ "./src/app/settings/components/settings-container.component.html":
/*!***********************************************************************!*\
  !*** ./src/app/settings/components/settings-container.component.html ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\"><h1>{{ 'anms.settings.title' | translate }}</h1></div>\r\n  </div>\r\n  <br>\r\n  <ng-container *ngIf=\"settings$ | async as settings\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\r\n        <h2>{{ 'anms.settings.general.title' | translate }}</h2>\r\n        <div class=\"icon-form-field\">\r\n          <mat-icon color=\"accent\"><fa-icon icon=\"language\" color=\"accent\"></fa-icon></mat-icon>\r\n          <mat-form-field>\r\n            <mat-select [placeholder]=\"'anms.settings.general.placeholder' | translate\"\r\n                        [ngModel]=\"settings.language\"\r\n                        (selectionChange)=\"onLanguageSelect($event)\"\r\n                        name=\"language\">\r\n              <mat-option *ngFor=\"let l of languages\" [value]=\"l.value\">\r\n                {{ 'anms.settings.general.language.' + l.label | translate }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"icon-form-field\">\r\n           <mat-icon color=\"accent\"><fa-icon icon=\"bars\" color=\"accent\"></fa-icon></mat-icon>\r\n           <mat-placeholder>{{ 'anms.settings.themes.sticky-header' | translate }}\r\n           </mat-placeholder>\r\n           <mat-slide-toggle\r\n             [checked]=\"settings.stickyHeader\"\r\n             (change)=\"onStickyHeaderToggle($event)\">\r\n           </mat-slide-toggle>\r\n         </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\r\n        <h2>{{ 'anms.settings.themes.title' | translate }}</h2>\r\n        <div class=\"icon-form-field\">\r\n          <mat-icon color=\"accent\"><fa-icon icon=\"paint-brush\" color=\"accent\"></fa-icon></mat-icon>\r\n          <mat-form-field>\r\n            <mat-select [placeholder]=\"'anms.settings.themes.placeholder' | translate\"\r\n                        [ngModel]=\"settings.theme\"\r\n                        (selectionChange)=\"onThemeSelect($event)\"\r\n                        name=\"themes\">\r\n              <mat-option *ngFor=\"let t of themes\" [value]=\"t.value\">\r\n                {{ 'anms.settings.themes.' + t.label | translate }}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"icon-form-field\">\r\n          <mat-icon color=\"accent\"><fa-icon icon=\"lightbulb\" color=\"accent\"></fa-icon></mat-icon>\r\n          <mat-placeholder>{{ 'anms.settings.themes.night-mode' | translate }}\r\n          </mat-placeholder>\r\n          <mat-slide-toggle\r\n            [checked]=\"settings.autoNightMode\"\r\n            (change)=\"onAutoNightModeToggle($event)\">\r\n          </mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\r\n        <h2>{{ 'anms.settings.animations.title' | translate }}</h2>\r\n        <div class=\"icon-form-field\">\r\n          <mat-icon color=\"accent\"><mat-icon color=\"accent\"><fa-icon icon=\"window-maximize\"></fa-icon></mat-icon></mat-icon>\r\n          <mat-placeholder>{{ 'anms.settings.animations.page' | translate }}\r\n          </mat-placeholder>\r\n          <mat-slide-toggle\r\n            matTooltip=\"Sorry, this feature is disabled in IE, EDGE and Safari\"\r\n            matTooltipPosition=\"before\"\r\n            *ngIf=\"settings.pageAnimationsDisabled\"\r\n            disabled>\r\n          </mat-slide-toggle>\r\n          <mat-slide-toggle\r\n            *ngIf=\"!settings.pageAnimationsDisabled\"\r\n            [checked]=\"settings.pageAnimations\"\r\n            (change)=\"onPageAnimationsToggle($event)\">\r\n          </mat-slide-toggle>\r\n        </div>\r\n        <div class=\"icon-form-field\">\r\n          <mat-icon color=\"accent\"><fa-icon icon=\"stream\" color=\"accent\"></fa-icon></mat-icon>\r\n          <mat-placeholder>{{ 'anms.settings.animations.elements' | translate }}\r\n          </mat-placeholder>\r\n          <mat-slide-toggle\r\n            [checked]=\"settings.elementsAnimations\"\r\n            (change)=\"onElementsAnimationsToggle($event)\">\r\n          </mat-slide-toggle>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/settings/components/settings-container.component.scss":
/*!***********************************************************************!*\
  !*** ./src/app/settings/components/settings-container.component.scss ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container {\n  margin-top: 20px; }\n\nh1 {\n  margin: 0 0 20px 0;\n  text-transform: uppercase; }\n\nh2 {\n  margin: 0 0 10px 0;\n  text-transform: uppercase; }\n\n.group {\n  margin: 0 0 40px 0; }\n\n.icon-form-field {\n  position: relative;\n  display: -ms-flexbox;\n  display: flex;\n  height: 65.5px;\n  -ms-flex-align: center;\n      align-items: center; }\n\n.icon-form-field mat-placeholder {\n    -ms-flex: 2 1 auto;\n        flex: 2 1 auto; }\n\nmat-icon {\n  margin: 0 6px 6px 0;\n  font-size: 20px; }\n\nmat-form-field {\n  -ms-flex: 1 0 auto;\n      flex: 1 0 auto; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2V0dGluZ3MvY29tcG9uZW50cy9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxzZXR0aW5nc1xcY29tcG9uZW50c1xcc2V0dGluZ3MtY29udGFpbmVyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQWdCLEVBQUE7O0FBR2xCO0VBQ0Usa0JBQWtCO0VBQ2xCLHlCQUF5QixFQUFBOztBQUczQjtFQUNFLGtCQUFrQjtFQUNsQix5QkFBeUIsRUFBQTs7QUFHM0I7RUFDRSxrQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSxrQkFBa0I7RUFDbEIsb0JBQWE7RUFBYixhQUFhO0VBQ2IsY0FBYztFQUNkLHNCQUFtQjtNQUFuQixtQkFBbUIsRUFBQTs7QUFKckI7SUFPSSxrQkFBYztRQUFkLGNBQWMsRUFBQTs7QUFJbEI7RUFDRSxtQkFBbUI7RUFDbkIsZUFBZSxFQUFBOztBQUdqQjtFQUNFLGtCQUFjO01BQWQsY0FBYyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2V0dGluZ3MvY29tcG9uZW50cy9zZXR0aW5ncy1jb250YWluZXIuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG59XHJcblxyXG5oMSB7XHJcbiAgbWFyZ2luOiAwIDAgMjBweCAwO1xyXG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XHJcbn1cclxuXHJcbmgyIHtcclxuICBtYXJnaW46IDAgMCAxMHB4IDA7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxufVxyXG5cclxuLmdyb3VwIHtcclxuICBtYXJnaW46IDAgMCA0MHB4IDA7XHJcbn1cclxuXHJcbi5pY29uLWZvcm0tZmllbGQge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGhlaWdodDogNjUuNXB4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcblxyXG4gIG1hdC1wbGFjZWhvbGRlciB7XHJcbiAgICBmbGV4OiAyIDEgYXV0bztcclxuICB9XHJcbn1cclxuXHJcbm1hdC1pY29uIHtcclxuICBtYXJnaW46IDAgNnB4IDZweCAwO1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxufVxyXG5cclxubWF0LWZvcm0tZmllbGQge1xyXG4gIGZsZXg6IDEgMCBhdXRvO1xyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/settings/components/settings-container.component.ts":
/*!*********************************************************************!*\
  !*** ./src/app/settings/components/settings-container.component.ts ***!
  \*********************************************************************/
/*! exports provided: SettingsContainerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SettingsContainerComponent", function() { return SettingsContainerComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var _settings_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../settings.actions */ "./src/app/settings/settings.actions.ts");
/* harmony import */ var _settings_selectors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../settings.selectors */ "./src/app/settings/settings.selectors.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var SettingsContainerComponent = /** @class */ (function () {
    function SettingsContainerComponent(store) {
        this.store = store;
        this.routeAnimationsElements = _app_core__WEBPACK_IMPORTED_MODULE_2__["ROUTE_ANIMATIONS_ELEMENTS"];
        this.themes = [
            { value: 'DEFAULT-THEME', label: 'blue' },
            { value: 'LIGHT-THEME', label: 'light' },
            { value: 'NATURE-THEME', label: 'nature' },
            { value: 'BLACK-THEME', label: 'dark' }
        ];
        this.languages = [
            { value: 'en', label: 'en' },
            { value: 'de', label: 'de' },
            { value: 'sk', label: 'sk' },
            { value: 'fr', label: 'fr' },
            { value: 'es', label: 'es' },
            { value: 'pt-br', label: 'pt-br' }
        ];
    }
    SettingsContainerComponent.prototype.ngOnInit = function () {
        this.settings$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["select"])(_settings_selectors__WEBPACK_IMPORTED_MODULE_4__["selectSettings"]));
    };
    SettingsContainerComponent.prototype.onLanguageSelect = function (_a) {
        var language = _a.value;
        this.store.dispatch(new _settings_actions__WEBPACK_IMPORTED_MODULE_3__["ActionSettingsChangeLanguage"]({ language: language }));
    };
    SettingsContainerComponent.prototype.onThemeSelect = function (_a) {
        var theme = _a.value;
        this.store.dispatch(new _settings_actions__WEBPACK_IMPORTED_MODULE_3__["ActionSettingsChangeTheme"]({ theme: theme }));
    };
    SettingsContainerComponent.prototype.onAutoNightModeToggle = function (_a) {
        var autoNightMode = _a.checked;
        this.store.dispatch(new _settings_actions__WEBPACK_IMPORTED_MODULE_3__["ActionSettingsChangeAutoNightMode"]({ autoNightMode: autoNightMode }));
    };
    SettingsContainerComponent.prototype.onStickyHeaderToggle = function (_a) {
        var stickyHeader = _a.checked;
        this.store.dispatch(new _settings_actions__WEBPACK_IMPORTED_MODULE_3__["ActionSettingsChangeStickyHeader"]({ stickyHeader: stickyHeader }));
    };
    SettingsContainerComponent.prototype.onPageAnimationsToggle = function (_a) {
        var pageAnimations = _a.checked;
        this.store.dispatch(new _settings_actions__WEBPACK_IMPORTED_MODULE_3__["ActionSettingsChangeAnimationsPage"]({ pageAnimations: pageAnimations }));
    };
    SettingsContainerComponent.prototype.onElementsAnimationsToggle = function (_a) {
        var elementsAnimations = _a.checked;
        this.store.dispatch(new _settings_actions__WEBPACK_IMPORTED_MODULE_3__["ActionSettingsChangeAnimationsElements"]({ elementsAnimations: elementsAnimations }));
    };
    SettingsContainerComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-settings',
            template: __webpack_require__(/*! ./settings-container.component.html */ "./src/app/settings/components/settings-container.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./settings-container.component.scss */ "./src/app/settings/components/settings-container.component.scss")]
        }),
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"]])
    ], SettingsContainerComponent);
    return SettingsContainerComponent;
}());



/***/ }),

/***/ "./src/app/settings/index.ts":
/*!***********************************!*\
  !*** ./src/app/settings/index.ts ***!
  \***********************************/
/*! exports provided: SettingsModule, NIGHT_MODE_THEME, SettingsActionTypes, ActionSettingsChangeLanguage, ActionSettingsChangeTheme, ActionSettingsChangeAutoNightMode, ActionSettingsChangeStickyHeader, ActionSettingsChangeAnimationsPage, ActionSettingsChangeAnimationsPageDisabled, ActionSettingsChangeAnimationsElements, ActionSettingsChangeHour, ActionSettingsToggleSidenav, ActionSettingsToggleHeader, ActionSettingsSaveSession, selectSettingsState, selectSettings, selectSettingsStickyHeader, selectSettingsLanguage, selectTheme, selectAutoNightMode, selectNightTheme, selectHour, selectIsNightHour, selectEffectiveTheme, selectSidenavState, selectHeaderState, selectSavedUrlState, initialState, settingsReducer, SETTINGS_KEY, SettingsEffects, SettingsContainerComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _settings_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settings.module */ "./src/app/settings/settings.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SettingsModule", function() { return _settings_module__WEBPACK_IMPORTED_MODULE_0__["SettingsModule"]; });

/* harmony import */ var _settings_model__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings.model */ "./src/app/settings/settings.model.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NIGHT_MODE_THEME", function() { return _settings_model__WEBPACK_IMPORTED_MODULE_1__["NIGHT_MODE_THEME"]; });

/* harmony import */ var _settings_actions__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./settings.actions */ "./src/app/settings/settings.actions.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SettingsActionTypes", function() { return _settings_actions__WEBPACK_IMPORTED_MODULE_2__["SettingsActionTypes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeLanguage", function() { return _settings_actions__WEBPACK_IMPORTED_MODULE_2__["ActionSettingsChangeLanguage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeTheme", function() { return _settings_actions__WEBPACK_IMPORTED_MODULE_2__["ActionSettingsChangeTheme"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeAutoNightMode", function() { return _settings_actions__WEBPACK_IMPORTED_MODULE_2__["ActionSettingsChangeAutoNightMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeStickyHeader", function() { return _settings_actions__WEBPACK_IMPORTED_MODULE_2__["ActionSettingsChangeStickyHeader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeAnimationsPage", function() { return _settings_actions__WEBPACK_IMPORTED_MODULE_2__["ActionSettingsChangeAnimationsPage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeAnimationsPageDisabled", function() { return _settings_actions__WEBPACK_IMPORTED_MODULE_2__["ActionSettingsChangeAnimationsPageDisabled"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeAnimationsElements", function() { return _settings_actions__WEBPACK_IMPORTED_MODULE_2__["ActionSettingsChangeAnimationsElements"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeHour", function() { return _settings_actions__WEBPACK_IMPORTED_MODULE_2__["ActionSettingsChangeHour"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsToggleSidenav", function() { return _settings_actions__WEBPACK_IMPORTED_MODULE_2__["ActionSettingsToggleSidenav"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsToggleHeader", function() { return _settings_actions__WEBPACK_IMPORTED_MODULE_2__["ActionSettingsToggleHeader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsSaveSession", function() { return _settings_actions__WEBPACK_IMPORTED_MODULE_2__["ActionSettingsSaveSession"]; });

/* harmony import */ var _settings_selectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settings.selectors */ "./src/app/settings/settings.selectors.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectSettingsState", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectSettingsState"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectSettings", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectSettings"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectSettingsStickyHeader", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectSettingsStickyHeader"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectSettingsLanguage", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectSettingsLanguage"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectTheme", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectTheme"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectAutoNightMode", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectAutoNightMode"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectNightTheme", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectNightTheme"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectHour", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectHour"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectIsNightHour", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectIsNightHour"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectEffectiveTheme", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectEffectiveTheme"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectSidenavState", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectSidenavState"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectHeaderState", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectHeaderState"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "selectSavedUrlState", function() { return _settings_selectors__WEBPACK_IMPORTED_MODULE_3__["selectSavedUrlState"]; });

/* harmony import */ var _settings_reducer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./settings.reducer */ "./src/app/settings/settings.reducer.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return _settings_reducer__WEBPACK_IMPORTED_MODULE_4__["initialState"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "settingsReducer", function() { return _settings_reducer__WEBPACK_IMPORTED_MODULE_4__["settingsReducer"]; });

/* harmony import */ var _settings_effects__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./settings.effects */ "./src/app/settings/settings.effects.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SETTINGS_KEY", function() { return _settings_effects__WEBPACK_IMPORTED_MODULE_5__["SETTINGS_KEY"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SettingsEffects", function() { return _settings_effects__WEBPACK_IMPORTED_MODULE_5__["SettingsEffects"]; });

/* harmony import */ var _components_settings_container_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./components/settings-container.component */ "./src/app/settings/components/settings-container.component.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SettingsContainerComponent", function() { return _components_settings_container_component__WEBPACK_IMPORTED_MODULE_6__["SettingsContainerComponent"]; });










/***/ }),

/***/ "./src/app/settings/settings.actions.ts":
/*!**********************************************!*\
  !*** ./src/app/settings/settings.actions.ts ***!
  \**********************************************/
/*! exports provided: SettingsActionTypes, ActionSettingsChangeLanguage, ActionSettingsChangeTheme, ActionSettingsChangeAutoNightMode, ActionSettingsChangeStickyHeader, ActionSettingsChangeAnimationsPage, ActionSettingsChangeAnimationsPageDisabled, ActionSettingsChangeAnimationsElements, ActionSettingsChangeHour, ActionSettingsToggleSidenav, ActionSettingsToggleHeader, ActionSettingsSaveSession */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SettingsActionTypes", function() { return SettingsActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeLanguage", function() { return ActionSettingsChangeLanguage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeTheme", function() { return ActionSettingsChangeTheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeAutoNightMode", function() { return ActionSettingsChangeAutoNightMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeStickyHeader", function() { return ActionSettingsChangeStickyHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeAnimationsPage", function() { return ActionSettingsChangeAnimationsPage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeAnimationsPageDisabled", function() { return ActionSettingsChangeAnimationsPageDisabled; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeAnimationsElements", function() { return ActionSettingsChangeAnimationsElements; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsChangeHour", function() { return ActionSettingsChangeHour; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsToggleSidenav", function() { return ActionSettingsToggleSidenav; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsToggleHeader", function() { return ActionSettingsToggleHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ActionSettingsSaveSession", function() { return ActionSettingsSaveSession; });
var SettingsActionTypes;
(function (SettingsActionTypes) {
    SettingsActionTypes["CHANGE_LANGUAGE"] = "[Settings] Change Language";
    SettingsActionTypes["CHANGE_THEME"] = "[Settings] Change Theme";
    SettingsActionTypes["CHANGE_AUTO_NIGHT_AUTO_MODE"] = "[Settings] Change Auto Night Mode";
    SettingsActionTypes["CHANGE_STICKY_HEADER"] = "[Settings] Change Sticky Header";
    SettingsActionTypes["CHANGE_ANIMATIONS_PAGE"] = "[Settings] Change Animations Page";
    SettingsActionTypes["CHANGE_ANIMATIONS_PAGE_DISABLED"] = "[Settings] Change Animations Page Disabled";
    SettingsActionTypes["CHANGE_ANIMATIONS_ELEMENTS"] = "[Settings] Change Animations Elements";
    SettingsActionTypes["CHANGE_HOUR"] = "[Settings] Change Hours";
    // Layout
    SettingsActionTypes["TOGGLE_SIDENAV"] = "[Settings] Toogle Sidenav";
    SettingsActionTypes["TOGGLE_HEADER"] = "[Settings] Toogle Header";
    SettingsActionTypes["SAVE_SESSION"] = "[Settings] Save Session";
})(SettingsActionTypes || (SettingsActionTypes = {}));
var ActionSettingsChangeLanguage = /** @class */ (function () {
    function ActionSettingsChangeLanguage(payload) {
        this.payload = payload;
        this.type = SettingsActionTypes.CHANGE_LANGUAGE;
    }
    return ActionSettingsChangeLanguage;
}());

var ActionSettingsChangeTheme = /** @class */ (function () {
    function ActionSettingsChangeTheme(payload) {
        this.payload = payload;
        this.type = SettingsActionTypes.CHANGE_THEME;
    }
    return ActionSettingsChangeTheme;
}());

var ActionSettingsChangeAutoNightMode = /** @class */ (function () {
    function ActionSettingsChangeAutoNightMode(payload) {
        this.payload = payload;
        this.type = SettingsActionTypes.CHANGE_AUTO_NIGHT_AUTO_MODE;
    }
    return ActionSettingsChangeAutoNightMode;
}());

var ActionSettingsChangeStickyHeader = /** @class */ (function () {
    function ActionSettingsChangeStickyHeader(payload) {
        this.payload = payload;
        this.type = SettingsActionTypes.CHANGE_STICKY_HEADER;
    }
    return ActionSettingsChangeStickyHeader;
}());

var ActionSettingsChangeAnimationsPage = /** @class */ (function () {
    function ActionSettingsChangeAnimationsPage(payload) {
        this.payload = payload;
        this.type = SettingsActionTypes.CHANGE_ANIMATIONS_PAGE;
    }
    return ActionSettingsChangeAnimationsPage;
}());

var ActionSettingsChangeAnimationsPageDisabled = /** @class */ (function () {
    function ActionSettingsChangeAnimationsPageDisabled(payload) {
        this.payload = payload;
        this.type = SettingsActionTypes.CHANGE_ANIMATIONS_PAGE_DISABLED;
    }
    return ActionSettingsChangeAnimationsPageDisabled;
}());

var ActionSettingsChangeAnimationsElements = /** @class */ (function () {
    function ActionSettingsChangeAnimationsElements(payload) {
        this.payload = payload;
        this.type = SettingsActionTypes.CHANGE_ANIMATIONS_ELEMENTS;
    }
    return ActionSettingsChangeAnimationsElements;
}());

var ActionSettingsChangeHour = /** @class */ (function () {
    function ActionSettingsChangeHour(payload) {
        this.payload = payload;
        this.type = SettingsActionTypes.CHANGE_HOUR;
    }
    return ActionSettingsChangeHour;
}());

// Layout
var ActionSettingsToggleSidenav = /** @class */ (function () {
    function ActionSettingsToggleSidenav(payload) {
        this.payload = payload;
        this.type = SettingsActionTypes.TOGGLE_SIDENAV;
    }
    return ActionSettingsToggleSidenav;
}());

var ActionSettingsToggleHeader = /** @class */ (function () {
    function ActionSettingsToggleHeader(payload) {
        this.payload = payload;
        this.type = SettingsActionTypes.TOGGLE_HEADER;
    }
    return ActionSettingsToggleHeader;
}());

var ActionSettingsSaveSession = /** @class */ (function () {
    function ActionSettingsSaveSession(payload) {
        this.payload = payload;
        this.type = SettingsActionTypes.SAVE_SESSION;
    }
    return ActionSettingsSaveSession;
}());



/***/ }),

/***/ "./src/app/settings/settings.effects.ts":
/*!**********************************************!*\
  !*** ./src/app/settings/settings.effects.ts ***!
  \**********************************************/
/*! exports provided: SETTINGS_KEY, SettingsEffects */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SETTINGS_KEY", function() { return SETTINGS_KEY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SettingsEffects", function() { return SettingsEffects; });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/cdk/overlay */ "./node_modules/@angular/cdk/esm5/overlay.es5.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _ngrx_effects__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngrx/effects */ "./node_modules/@ngrx/effects/fesm5/effects.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var _settings_actions__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./settings.actions */ "./src/app/settings/settings.actions.ts");
/* harmony import */ var _settings_selectors__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./settings.selectors */ "./src/app/settings/settings.selectors.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var SETTINGS_KEY = 'SETTINGS';
var INIT = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["of"])('anms-init-effect-trigger');
var SettingsEffects = /** @class */ (function () {
    function SettingsEffects(actions$, store, router, overlayContainer, localStorageService, titleService, animationsService, translateService) {
        var _this = this;
        this.actions$ = actions$;
        this.store = store;
        this.router = router;
        this.overlayContainer = overlayContainer;
        this.localStorageService = localStorageService;
        this.titleService = titleService;
        this.animationsService = animationsService;
        this.translateService = translateService;
        this.changeHour = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["interval"])(60000).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["mapTo"])(new Date().getHours()), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["map"])(function (hour) { return new _settings_actions__WEBPACK_IMPORTED_MODULE_9__["ActionSettingsChangeHour"]({ hour: hour }); }));
        this.persistSettings = this.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_4__["ofType"])(_settings_actions__WEBPACK_IMPORTED_MODULE_9__["SettingsActionTypes"].CHANGE_ANIMATIONS_ELEMENTS, _settings_actions__WEBPACK_IMPORTED_MODULE_9__["SettingsActionTypes"].CHANGE_ANIMATIONS_PAGE, _settings_actions__WEBPACK_IMPORTED_MODULE_9__["SettingsActionTypes"].CHANGE_ANIMATIONS_PAGE_DISABLED, _settings_actions__WEBPACK_IMPORTED_MODULE_9__["SettingsActionTypes"].CHANGE_AUTO_NIGHT_AUTO_MODE, _settings_actions__WEBPACK_IMPORTED_MODULE_9__["SettingsActionTypes"].CHANGE_LANGUAGE, _settings_actions__WEBPACK_IMPORTED_MODULE_9__["SettingsActionTypes"].CHANGE_STICKY_HEADER, _settings_actions__WEBPACK_IMPORTED_MODULE_9__["SettingsActionTypes"].CHANGE_THEME), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["withLatestFrom"])(this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_3__["select"])(_settings_selectors__WEBPACK_IMPORTED_MODULE_10__["selectSettingsState"]))), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["tap"])(function (_a) {
            var action = _a[0], settings = _a[1];
            return _this.localStorageService.setItem(SETTINGS_KEY, settings);
        }));
        this.updateRouteAnimationType = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["merge"])(INIT, this.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_4__["ofType"])(_settings_actions__WEBPACK_IMPORTED_MODULE_9__["SettingsActionTypes"].CHANGE_ANIMATIONS_ELEMENTS, _settings_actions__WEBPACK_IMPORTED_MODULE_9__["SettingsActionTypes"].CHANGE_ANIMATIONS_PAGE))).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["withLatestFrom"])(this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_3__["select"])(_settings_selectors__WEBPACK_IMPORTED_MODULE_10__["selectSettingsState"]))), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["tap"])(function (_a) {
            var action = _a[0], settings = _a[1];
            return _this.animationsService.updateRouteAnimationType(settings.pageAnimations, settings.elementsAnimations);
        }));
        this.updateTheme = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["merge"])(INIT, this.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_4__["ofType"])(_settings_actions__WEBPACK_IMPORTED_MODULE_9__["SettingsActionTypes"].CHANGE_THEME))).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["withLatestFrom"])(this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_3__["select"])(_settings_selectors__WEBPACK_IMPORTED_MODULE_10__["selectEffectiveTheme"]))), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["tap"])(function (_a) {
            var action = _a[0], effectiveTheme = _a[1];
            var classList = _this.overlayContainer.getContainerElement().classList;
            var toRemove = Array.from(classList).filter(function (item) {
                return item.includes('-theme');
            });
            if (toRemove.length) {
                classList.remove.apply(classList, toRemove);
            }
            classList.add(effectiveTheme);
        }));
        this.setTranslateServiceLanguage = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_3__["select"])(_settings_selectors__WEBPACK_IMPORTED_MODULE_10__["selectSettingsState"]), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["map"])(function (settings) { return settings.language; }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["distinctUntilChanged"])(), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["tap"])(function (language) { return _this.translateService.use(language); }));
        this.setTitle = Object(rxjs__WEBPACK_IMPORTED_MODULE_6__["merge"])(this.actions$.pipe(Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_4__["ofType"])(_settings_actions__WEBPACK_IMPORTED_MODULE_9__["SettingsActionTypes"].CHANGE_LANGUAGE)), this.router.events.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["filter"])(function (event) { return event instanceof _angular_router__WEBPACK_IMPORTED_MODULE_0__["ActivationEnd"]; }))).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_7__["tap"])(function () {
            _this.titleService.setTitle(_this.router.routerState.snapshot.root, _this.translateService);
        }));
    }
    __decorate([
        Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_4__["Effect"])(),
        __metadata("design:type", Object)
    ], SettingsEffects.prototype, "changeHour", void 0);
    __decorate([
        Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_4__["Effect"])({ dispatch: false }),
        __metadata("design:type", Object)
    ], SettingsEffects.prototype, "persistSettings", void 0);
    __decorate([
        Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_4__["Effect"])({ dispatch: false }),
        __metadata("design:type", Object)
    ], SettingsEffects.prototype, "updateRouteAnimationType", void 0);
    __decorate([
        Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_4__["Effect"])({ dispatch: false }),
        __metadata("design:type", Object)
    ], SettingsEffects.prototype, "updateTheme", void 0);
    __decorate([
        Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_4__["Effect"])({ dispatch: false }),
        __metadata("design:type", Object)
    ], SettingsEffects.prototype, "setTranslateServiceLanguage", void 0);
    __decorate([
        Object(_ngrx_effects__WEBPACK_IMPORTED_MODULE_4__["Effect"])({ dispatch: false }),
        __metadata("design:type", Object)
    ], SettingsEffects.prototype, "setTitle", void 0);
    SettingsEffects = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        __metadata("design:paramtypes", [_ngrx_effects__WEBPACK_IMPORTED_MODULE_4__["Actions"],
            _ngrx_store__WEBPACK_IMPORTED_MODULE_3__["Store"],
            _angular_router__WEBPACK_IMPORTED_MODULE_0__["Router"],
            _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_2__["OverlayContainer"],
            _app_core__WEBPACK_IMPORTED_MODULE_8__["LocalStorageService"],
            _app_core__WEBPACK_IMPORTED_MODULE_8__["TitleService"],
            _app_core__WEBPACK_IMPORTED_MODULE_8__["AnimationsService"],
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__["TranslateService"]])
    ], SettingsEffects);
    return SettingsEffects;
}());



/***/ }),

/***/ "./src/app/settings/settings.model.ts":
/*!********************************************!*\
  !*** ./src/app/settings/settings.model.ts ***!
  \********************************************/
/*! exports provided: NIGHT_MODE_THEME */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NIGHT_MODE_THEME", function() { return NIGHT_MODE_THEME; });
var NIGHT_MODE_THEME = 'BLACK-THEME';


/***/ }),

/***/ "./src/app/settings/settings.module.ts":
/*!*********************************************!*\
  !*** ./src/app/settings/settings.module.ts ***!
  \*********************************************/
/*! exports provided: SettingsModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SettingsModule", function() { return SettingsModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _ngrx_effects__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngrx/effects */ "./node_modules/@ngrx/effects/fesm5/effects.js");
/* harmony import */ var _settings_reducer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settings.reducer */ "./src/app/settings/settings.reducer.ts");
/* harmony import */ var _settings_effects__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./settings.effects */ "./src/app/settings/settings.effects.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};





var SettingsModule = /** @class */ (function () {
    function SettingsModule() {
    }
    SettingsModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            imports: [
                _ngrx_store__WEBPACK_IMPORTED_MODULE_1__["StoreModule"].forFeature('settings', _settings_reducer__WEBPACK_IMPORTED_MODULE_3__["settingsReducer"]),
                _ngrx_effects__WEBPACK_IMPORTED_MODULE_2__["EffectsModule"].forFeature([_settings_effects__WEBPACK_IMPORTED_MODULE_4__["SettingsEffects"]])
            ]
        })
    ], SettingsModule);
    return SettingsModule;
}());



/***/ }),

/***/ "./src/app/settings/settings.reducer.ts":
/*!**********************************************!*\
  !*** ./src/app/settings/settings.reducer.ts ***!
  \**********************************************/
/*! exports provided: initialState, settingsReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "settingsReducer", function() { return settingsReducer; });
/* harmony import */ var _settings_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./settings.model */ "./src/app/settings/settings.model.ts");
/* harmony import */ var _settings_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./settings.actions */ "./src/app/settings/settings.actions.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};


var initialState = {
    language: 'en',
    theme: 'DEFAULT-THEME',
    autoNightMode: false,
    nightTheme: _settings_model__WEBPACK_IMPORTED_MODULE_0__["NIGHT_MODE_THEME"],
    stickyHeader: true,
    pageAnimations: true,
    pageAnimationsDisabled: false,
    elementsAnimations: true,
    hour: 0,
    // Layout
    openSidenav: true,
    openHeader: true,
    savedUrl: '',
};
function settingsReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case _settings_actions__WEBPACK_IMPORTED_MODULE_1__["SettingsActionTypes"].CHANGE_LANGUAGE:
        case _settings_actions__WEBPACK_IMPORTED_MODULE_1__["SettingsActionTypes"].CHANGE_THEME:
        case _settings_actions__WEBPACK_IMPORTED_MODULE_1__["SettingsActionTypes"].CHANGE_AUTO_NIGHT_AUTO_MODE:
        case _settings_actions__WEBPACK_IMPORTED_MODULE_1__["SettingsActionTypes"].CHANGE_STICKY_HEADER:
        case _settings_actions__WEBPACK_IMPORTED_MODULE_1__["SettingsActionTypes"].CHANGE_ANIMATIONS_PAGE:
        case _settings_actions__WEBPACK_IMPORTED_MODULE_1__["SettingsActionTypes"].CHANGE_ANIMATIONS_ELEMENTS:
        case _settings_actions__WEBPACK_IMPORTED_MODULE_1__["SettingsActionTypes"].CHANGE_HOUR:
            return __assign({}, state, action.payload);
        case _settings_actions__WEBPACK_IMPORTED_MODULE_1__["SettingsActionTypes"].CHANGE_ANIMATIONS_PAGE_DISABLED:
            return __assign({}, state, { pageAnimations: false, pageAnimationsDisabled: action.payload.pageAnimationsDisabled });
        case _settings_actions__WEBPACK_IMPORTED_MODULE_1__["SettingsActionTypes"].TOGGLE_SIDENAV:
            return __assign({}, state, { openSidenav: action.payload.open });
        case _settings_actions__WEBPACK_IMPORTED_MODULE_1__["SettingsActionTypes"].TOGGLE_HEADER:
            return __assign({}, state, { pageAnimations: false, openHeader: action.payload.open });
        case _settings_actions__WEBPACK_IMPORTED_MODULE_1__["SettingsActionTypes"].SAVE_SESSION:
            return __assign({}, state, { savedUrl: action.payload.url });
        default:
            return state;
    }
}


/***/ }),

/***/ "./src/app/settings/settings.selectors.ts":
/*!************************************************!*\
  !*** ./src/app/settings/settings.selectors.ts ***!
  \************************************************/
/*! exports provided: selectSettingsState, selectSettings, selectSettingsStickyHeader, selectSettingsLanguage, selectTheme, selectAutoNightMode, selectNightTheme, selectHour, selectIsNightHour, selectEffectiveTheme, selectSidenavState, selectHeaderState, selectSavedUrlState */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectSettingsState", function() { return selectSettingsState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectSettings", function() { return selectSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectSettingsStickyHeader", function() { return selectSettingsStickyHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectSettingsLanguage", function() { return selectSettingsLanguage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectTheme", function() { return selectTheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectAutoNightMode", function() { return selectAutoNightMode; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectNightTheme", function() { return selectNightTheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectHour", function() { return selectHour; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectIsNightHour", function() { return selectIsNightHour; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectEffectiveTheme", function() { return selectEffectiveTheme; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectSidenavState", function() { return selectSidenavState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectHeaderState", function() { return selectHeaderState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectSavedUrlState", function() { return selectSavedUrlState; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");

var selectSettingsState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createFeatureSelector"])('settings');
var selectSettings = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSettingsState, function (state) { return state; });
var selectSettingsStickyHeader = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSettings, function (state) { return state.stickyHeader; });
var selectSettingsLanguage = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSettings, function (state) { return state.language; });
var selectTheme = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSettings, function (settings) { return settings.theme; });
var selectAutoNightMode = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSettings, function (settings) { return settings.autoNightMode; });
var selectNightTheme = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSettings, function (settings) { return settings.nightTheme; });
var selectHour = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSettings, function (settings) { return settings.hour; });
var selectIsNightHour = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectAutoNightMode, selectHour, function (autoNightMode, hour) { return autoNightMode && (hour >= 21 || hour <= 7); });
var selectEffectiveTheme = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectTheme, selectNightTheme, selectIsNightHour, function (theme, nightTheme, isNightHour) {
    return (isNightHour ? nightTheme : theme).toLowerCase();
});
var selectSidenavState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSettings, function (settings) { return settings.openSidenav; });
var selectHeaderState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSettings, function (settings) { return settings.openHeader; });
var selectSavedUrlState = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(selectSettings, function (settings) { return settings.savedUrl; });


/***/ }),

/***/ "./src/app/shared/big-input/big-input-action.component.html":
/*!******************************************************************!*\
  !*** ./src/app/shared/big-input/big-input-action.component.html ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<button mat-raised-button color=\"color\" [disabled]=\"disabled\" (click)=\"onClick()\" [attr.aria-label]=\"ariaLabel\">\r\n  <mat-icon *ngIf=\"fontSet && fontIcon && !faIcon\" [fontSet]=\"fontSet\" [fontIcon]=\"fontIcon\"></mat-icon>\r\n  <fa-icon *ngIf=\"faIcon\" [icon]=\"faIcon\"></fa-icon>\r\n  <span *ngIf=\"label\">{{label}}</span>\r\n</button>"

/***/ }),

/***/ "./src/app/shared/big-input/big-input-action.component.scss":
/*!******************************************************************!*\
  !*** ./src/app/shared/big-input/big-input-action.component.scss ***!
  \******************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "button {\n  padding: 0;\n  min-width: 36px;\n  margin-left: 10px; }\n  button mat-icon {\n    position: relative;\n    top: 2px;\n    font-size: 18px; }\n  button fa-icon {\n    position: relative;\n    font-size: 18px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2JpZy1pbnB1dC9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxzaGFyZWRcXGJpZy1pbnB1dFxcYmlnLWlucHV0LWFjdGlvbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFVBQVU7RUFDVixlQUFlO0VBQ2YsaUJBQWlCLEVBQUE7RUFIbkI7SUFNSSxrQkFBa0I7SUFDbEIsUUFBUTtJQUNSLGVBQWUsRUFBQTtFQVJuQjtJQVdJLGtCQUFrQjtJQUNsQixlQUFlLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvYmlnLWlucHV0L2JpZy1pbnB1dC1hY3Rpb24uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJidXR0b24ge1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbWluLXdpZHRoOiAzNnB4O1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4O1xyXG5cclxuICBtYXQtaWNvbiB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICB0b3A6IDJweDtcclxuICAgIGZvbnQtc2l6ZTogMThweDtcclxuICB9XHJcbiAgZmEtaWNvbiB7XHJcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICBmb250LXNpemU6IDE4cHg7XHJcbiAgfVxyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/shared/big-input/big-input-action.component.ts":
/*!****************************************************************!*\
  !*** ./src/app/shared/big-input/big-input-action.component.ts ***!
  \****************************************************************/
/*! exports provided: BigInputActionComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BigInputActionComponent", function() { return BigInputActionComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var BigInputActionComponent = /** @class */ (function () {
    function BigInputActionComponent() {
        this.disabled = false;
        this.fontSet = '';
        this.fontIcon = '';
        this.faIcon = '';
        this.label = '';
        this.color = '';
        this.ariaLabel = '';
        this.action = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.hasFocus = false;
    }
    BigInputActionComponent.prototype.onClick = function () {
        this.action.emit();
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], BigInputActionComponent.prototype, "disabled", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], BigInputActionComponent.prototype, "fontSet", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], BigInputActionComponent.prototype, "fontIcon", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], BigInputActionComponent.prototype, "faIcon", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], BigInputActionComponent.prototype, "label", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], BigInputActionComponent.prototype, "color", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], BigInputActionComponent.prototype, "ariaLabel", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], BigInputActionComponent.prototype, "action", void 0);
    BigInputActionComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-big-input-action',
            template: __webpack_require__(/*! ./big-input-action.component.html */ "./src/app/shared/big-input/big-input-action.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./big-input-action.component.scss */ "./src/app/shared/big-input/big-input-action.component.scss")]
        })
    ], BigInputActionComponent);
    return BigInputActionComponent;
}());



/***/ }),

/***/ "./src/app/shared/big-input/big-input.component.html":
/*!***********************************************************!*\
  !*** ./src/app/shared/big-input/big-input.component.html ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<mat-card class=\"big-input\" [ngClass]=\"{ 'has-focus': hasFocus }\">\r\n  <input (focus)=\"hasFocus = true\" (blur)=\"hasFocus = false\"\r\n         [value]=\"value\"\r\n         [placeholder]=\"placeholder\"\r\n         [disabled]=\"disabled\" />\r\n  <ng-content></ng-content>\r\n</mat-card>\r\n"

/***/ }),

/***/ "./src/app/shared/big-input/big-input.component.scss":
/*!***********************************************************!*\
  !*** ./src/app/shared/big-input/big-input.component.scss ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".big-input {\n  width: 100%;\n  transition: all 0.5s;\n  display: -ms-flexbox;\n  display: flex;\n  padding: 10px 10px 10px 20px; }\n  .big-input input {\n    -ms-flex-positive: 1;\n        flex-grow: 1;\n    border: 0;\n    font-size: 20px;\n    min-width: 100px; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2JpZy1pbnB1dC9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxzaGFyZWRcXGJpZy1pbnB1dFxcYmlnLWlucHV0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLG9CQUFvQjtFQUNwQixvQkFBYTtFQUFiLGFBQWE7RUFDYiw0QkFBNEIsRUFBQTtFQUo5QjtJQU9JLG9CQUFZO1FBQVosWUFBWTtJQUNaLFNBQVM7SUFDVCxlQUFlO0lBQ2YsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvYmlnLWlucHV0L2JpZy1pbnB1dC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5iaWctaW5wdXQge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjVzO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgcGFkZGluZzogMTBweCAxMHB4IDEwcHggMjBweDtcclxuXHJcbiAgaW5wdXQge1xyXG4gICAgZmxleC1ncm93OiAxO1xyXG4gICAgYm9yZGVyOiAwO1xyXG4gICAgZm9udC1zaXplOiAyMHB4O1xyXG4gICAgbWluLXdpZHRoOiAxMDBweDtcclxuICB9XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/shared/big-input/big-input.component.ts":
/*!*********************************************************!*\
  !*** ./src/app/shared/big-input/big-input.component.ts ***!
  \*********************************************************/
/*! exports provided: BigInputComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BigInputComponent", function() { return BigInputComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var BigInputComponent = /** @class */ (function () {
    function BigInputComponent() {
        this.value = '';
        this.disabled = false;
        this.hasFocus = false;
    }
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", String)
    ], BigInputComponent.prototype, "placeholder", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], BigInputComponent.prototype, "value", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], BigInputComponent.prototype, "disabled", void 0);
    BigInputComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-big-input',
            template: __webpack_require__(/*! ./big-input.component.html */ "./src/app/shared/big-input/big-input.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./big-input.component.scss */ "./src/app/shared/big-input/big-input.component.scss")]
        })
    ], BigInputComponent);
    return BigInputComponent;
}());



/***/ }),

/***/ "./src/app/shared/customized-shared-location-grid/GridLineInfo.ts":
/*!************************************************************************!*\
  !*** ./src/app/shared/customized-shared-location-grid/GridLineInfo.ts ***!
  \************************************************************************/
/*! exports provided: GridLineInfo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GridLineInfo", function() { return GridLineInfo; });
var GridLineInfo = /** @class */ (function () {
    function GridLineInfo(rowId, id, line) {
        this.rowId = rowId;
        this.id = id;
        this.line = line;
    }
    return GridLineInfo;
}());



/***/ }),

/***/ "./src/app/shared/customized-shared-location-grid/customized-grid-buttons.service.ts":
/*!*******************************************************************************************!*\
  !*** ./src/app/shared/customized-shared-location-grid/customized-grid-buttons.service.ts ***!
  \*******************************************************************************************/
/*! exports provided: CustomizedSharedGridService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomizedSharedGridService", function() { return CustomizedSharedGridService; });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var CustomizedSharedGridService = /** @class */ (function () {
    function CustomizedSharedGridService() {
        this.edits = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
        this.deletes = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
        this.geocodes = new rxjs__WEBPACK_IMPORTED_MODULE_0__["Subject"]();
    }
    CustomizedSharedGridService.prototype.getEditsObserver = function () { return this.edits; };
    // getDataRowObservable() { return this.edits }
    CustomizedSharedGridService.prototype.getDeletesObserver = function () { return this.deletes; };
    CustomizedSharedGridService.prototype.getGeocodeObserver = function () { return this.geocodes; };
    CustomizedSharedGridService.prototype.setNextEdit = function (line) { return this.edits.next(line); };
    CustomizedSharedGridService.prototype.setNextDelete = function (line) { return this.deletes.next(line); };
    CustomizedSharedGridService.prototype.setNextGeocode = function (line) { return this.geocodes.next(line); };
    CustomizedSharedGridService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [])
    ], CustomizedSharedGridService);
    return CustomizedSharedGridService;
}());



/***/ }),

/***/ "./src/app/shared/customized-shared-location-grid/customized-shared-grid.component.ts":
/*!********************************************************************************************!*\
  !*** ./src/app/shared/customized-shared-location-grid/customized-shared-grid.component.ts ***!
  \********************************************************************************************/
/*! exports provided: CustomizedSharedGridComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomizedSharedGridComponent", function() { return CustomizedSharedGridComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var CustomizedSharedGridComponent = /** @class */ (function () {
    function CustomizedSharedGridComponent() {
        this.clicked = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
    }
    CustomizedSharedGridComponent.prototype.click = function () {
        this.clicked.emit(this.cell);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], CustomizedSharedGridComponent.prototype, "cell", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], CustomizedSharedGridComponent.prototype, "clicked", void 0);
    CustomizedSharedGridComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-customized-shared-grid',
            template: "\n        <button style='height: 21px' (click)='click()' class='btn btn-info'>Click</button>\n    ",
            styles: [".btn {\n            line-height: 0.5;\n            width: 100%;\n        }"]
        })
    ], CustomizedSharedGridComponent);
    return CustomizedSharedGridComponent;
}());



/***/ }),

/***/ "./src/app/shared/customized-shared-location-grid/customized-shared-location-grid.component.css":
/*!******************************************************************************************************!*\
  !*** ./src/app/shared/customized-shared-location-grid/customized-shared-location-grid.component.css ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".center-buttons{\r\n  text-align: center;\r\n  width: 100%;\r\n}\r\n\r\n.center-buttons i{\r\n  cursor: pointer;\r\n}\r\n\r\n.ms-2{\r\n  margin-left: 5%;\r\n  margin-right: 5%;\r\n}\r\n\r\n.material-icons {\r\n    font-size: inherit !important\r\n}\r\n\r\n.confirm-btn {\r\n  background-color: #172be0;\r\n  color: white;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL2N1c3RvbWl6ZWQtc2hhcmVkLWxvY2F0aW9uLWdyaWQvY3VzdG9taXplZC1zaGFyZWQtbG9jYXRpb24tZ3JpZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLFdBQVc7QUFDYjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsZ0JBQWdCO0FBQ2xCOztBQUVBO0lBQ0k7QUFDSjs7QUFDQTtFQUNFLHlCQUF5QjtFQUN6QixZQUFZO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvY3VzdG9taXplZC1zaGFyZWQtbG9jYXRpb24tZ3JpZC9jdXN0b21pemVkLXNoYXJlZC1sb2NhdGlvbi1ncmlkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2VudGVyLWJ1dHRvbnN7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4uY2VudGVyLWJ1dHRvbnMgaXtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5tcy0ye1xyXG4gIG1hcmdpbi1sZWZ0OiA1JTtcclxuICBtYXJnaW4tcmlnaHQ6IDUlO1xyXG59XHJcblxyXG4ubWF0ZXJpYWwtaWNvbnMge1xyXG4gICAgZm9udC1zaXplOiBpbmhlcml0ICFpbXBvcnRhbnRcclxufVxyXG4uY29uZmlybS1idG4ge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMxNzJiZTA7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59Il19 */"

/***/ }),

/***/ "./src/app/shared/customized-shared-location-grid/customized-shared-location-grid.component.html":
/*!*******************************************************************************************************!*\
  !*** ./src/app/shared/customized-shared-location-grid/customized-shared-location-grid.component.html ***!
  \*******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"center-buttons\">\r\n  <span class=\"ms-1\"><i class=\"fas fa-pen\" (click)=\"invokeEditMethod($event)\" style=\"color: #969696\"></i></span>\r\n  &nbsp;\r\n  <span class=\"ms-1\"><i class=\"fas fa-globe-americas\" (click)=\"invokeGeocodeMethod()\"  style=\"color: #969696\"></i></span>\r\n  &nbsp;\r\n    <span class=\"ms-1\"><i><img src=\"assets/icons/comment-icon.png\" alt=\"image\" (click)=\"showComment()\" style=\"width: 13px; opacity: 50%\" /></i></span>\r\n    <!-- <span class=\"ms-1\"><i><img src=\"assets/icons/comment-icon.png\" alt=\"image\" (click)=\"showModal()\" style=\"width: 13px; opacity: 50%\" /></i></span> -->\r\n  &nbsp;\r\n</div>\r\n<nz-modal\r\n      [(nzVisible)]=\"isVisibleComment\"\r\n      [nzTitle]=\"modalTitleC\"\r\n      [nzContent]=\"modalContentC\"\r\n      [nzFooter]=\"modalFooterC\"\r\n      (nzOnCancel)=\"handleCancelComment()\"\r\n    >\r\n      <ng-template #modalTitleC>Comments</ng-template>\r\n\r\n      <ng-template #modalContentC>\r\n        <!-- <p style=\"color: red;\">One or More file are not autorized to upload</p> -->\r\n        <div>\r\n          <textarea nz-input placeholder=\"Add comments here... \" [nzAutosize]=\"{ minRows: 3, maxRows: 5 }\"></textarea>\r\n        </div>\r\n      </ng-template>\r\n\r\n      <ng-template #modalFooterC>\r\n        <button nz-button nzType=\"default\" (click)=\"handleCancelComment()\">Cancel</button>\r\n        <button nz-button class=\"confirm-btn\" nzType=\"primary\" (click)=\"handleOkComment()\" [nzLoading]=\"isConfirmLoading\">Save</button>\r\n      </ng-template>\r\n    </nz-modal>\r\n    \r\n<nz-modal [(nzVisible)]=\"isVisible\" nzTitle=\"Delete\" (nzOnCancel)=\"handleCancel()\" (nzOnOk)=\"handleOk()\" >\r\n  Are you sure to delete ?\r\n</nz-modal>\r\n"

/***/ }),

/***/ "./src/app/shared/customized-shared-location-grid/customized-shared-location-grid.component.ts":
/*!*****************************************************************************************************!*\
  !*** ./src/app/shared/customized-shared-location-grid/customized-shared-location-grid.component.ts ***!
  \*****************************************************************************************************/
/*! exports provided: CustomizedSharedLocationGridComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomizedSharedLocationGridComponent", function() { return CustomizedSharedLocationGridComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _customized_grid_buttons_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./customized-grid-buttons.service */ "./src/app/shared/customized-shared-location-grid/customized-grid-buttons.service.ts");
/* harmony import */ var _GridLineInfo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./GridLineInfo */ "./src/app/shared/customized-shared-location-grid/GridLineInfo.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_modules_upload_containers_location_map_store_part_location_map_actions__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/dcm/modules/upload/containers/location-map/store-part/location-map.actions */ "./src/app/dcm/modules/upload/containers/location-map/store-part/location-map.actions.ts");
/* harmony import */ var _app_dcm_modules_upload_containers_location_map_store_part_location_map_reducer__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/dcm/modules/upload/containers/location-map/store-part/location-map.reducer */ "./src/app/dcm/modules/upload/containers/location-map/store-part/location-map.reducer.ts");
/* harmony import */ var _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @app/dcm/modules/upload/services/file-import.service */ "./src/app/dcm/modules/upload/services/file-import.service.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @app/dcm/store/dcm.selectors */ "./src/app/dcm/store/dcm.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location.model */ "./src/app/shared/popups/general-location-info-popup/models/location.model.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_store_part_load_pop_up_actions__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/store-part/load-pop-up.actions */ "./src/app/shared/popups/general-location-info-popup/store-part/load-pop-up.actions.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};















var CustomizedSharedLocationGridComponent = /** @class */ (function () {
    function CustomizedSharedLocationGridComponent(service, cdrf, cleansingService, store$, fileImportService) {
        this.service = service;
        this.cdrf = cdrf;
        this.cleansingService = cleansingService;
        this.store$ = store$;
        this.fileImportService = fileImportService;
        this.rowIndex = 0;
        this.id = 0;
        this.data = null;
        this.allData = false;
        this.isVisible = false;
        this.dataRows = [];
        this.isFirstLoad = 1;
        this.isVisibleComment = false;
        this.gridOptions = {};
        this.importData$ = this.store$.select(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_12__["selectImportObjectState"]);
        this.csMetadata$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_11__["selectCleansingCsMetadata"]);
        this.exposures$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_11__["selectCleansingData"]);
        this.datacheck$ = this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_11__["selectCleansingErrors"]);
    }
    CustomizedSharedLocationGridComponent.prototype.agInit = function (params) {
        this.params = params;
        this.gridApi = params.api;
        var rowIndex = this.params.rowIndex;
    };
    CustomizedSharedLocationGridComponent.prototype.refresh = function (params) {
        this.params = params;
        return true;
    };
    ;
    CustomizedSharedLocationGridComponent.prototype.refreshGrid = function () {
        var params = { force: true };
        this.gridApi.refreshCells(params);
    };
    CustomizedSharedLocationGridComponent.prototype.handleCancelComment = function ($event) {
        this.isVisibleComment = false;
    };
    CustomizedSharedLocationGridComponent.prototype.handleOkComment = function ($event) {
        console.log('<= handleOkComment =>');
        this.isVisibleComment = false;
    };
    CustomizedSharedLocationGridComponent.prototype.showComment = function () {
        console.log('= Show popup for comment =');
        this.isVisibleComment = true;
    };
    CustomizedSharedLocationGridComponent.prototype.invokeEditMethod = function (event) {
        this.data = this.params.data;
        this.store$.dispatch(new _app_shared_popups_general_location_info_popup_store_part_load_pop_up_actions__WEBPACK_IMPORTED_MODULE_14__["LoadLoadPopUps"]({ location: this.data }));
        this.service.setNextEdit(new _GridLineInfo__WEBPACK_IMPORTED_MODULE_2__["GridLineInfo"](this.params.rowIndex, this.id, this.params.data));
    };
    CustomizedSharedLocationGridComponent.prototype.getSelectedRowsInfos = function (gridApi) {
        var selectedRowsIndex = [];
        var selectedRowsData = gridApi.getSelectedRows();
        var selectedRowsNode = gridApi.getSelectedNodes();
        for (var i = 0; i < selectedRowsNode.length; i++) {
            var element = selectedRowsNode[i].childIndex;
            selectedRowsIndex.push(element);
        }
        return {
            selectedRowsData: selectedRowsData,
            selectedRowsIndex: selectedRowsIndex
        };
    };
    CustomizedSharedLocationGridComponent.prototype.invokeGeocodeMethod = function () {
        if (this.gridApi) {
            var selectedRows = this.getSelectedRowsInfos(this.gridApi);
        }
        if (this.params) {
            var data = this.params.data;
            var index = this.params.rowIndex;
        }
        var locationMap = new _app_dcm_modules_upload_containers_location_map_store_part_location_map_reducer__WEBPACK_IMPORTED_MODULE_6__["LocationMapState"]();
        locationMap.loaded = true;
        locationMap.location = this.prepareFata();
        this.store$.dispatch(new _app_dcm_modules_upload_containers_location_map_store_part_location_map_actions__WEBPACK_IMPORTED_MODULE_5__["LoadLocationMaps"](locationMap));
    };
    CustomizedSharedLocationGridComponent.prototype.deleteRows = function (gridApi, dataList) {
        gridApi.updateRowData({ remove: dataList });
    };
    CustomizedSharedLocationGridComponent.prototype.getListOfEquivalentIndexInDb = function (rowIndexDb, rowIndexDataGrid) {
        var indexDb = [];
        for (var i = 0; i < rowIndexDataGrid.length; i++) {
            var index = rowIndexDb[rowIndexDataGrid[i]];
            indexDb.push(index);
        }
        return indexDb;
    };
    CustomizedSharedLocationGridComponent.prototype.updateCsMetadata = function (jobId) {
        var _this = this;
        this.cleansingService.getUpdateCsMetadata(jobId).subscribe(function (data) {
            if (data) {
                _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_8__["ActionLoadCsMetadata"]({ csMetadata: data }));
            }
        });
    };
    CustomizedSharedLocationGridComponent.prototype.updateCheck = function (fileData, selectedSheet) {
        var _this = this;
        this.cleansingService.getUpdateCheck(fileData, selectedSheet, fileData.page).subscribe(function (data) {
            if (data) {
                _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_8__["ActionLoadErrors"]({ errors: data }));
            }
        });
    };
    CustomizedSharedLocationGridComponent.prototype.getUpdatedData = function (self$) {
        var _this = this;
        this.cleansingService.getUpdateExposures(self$).subscribe(function (data) {
            if (data) {
                _this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_8__["ActionLoadAllData"]({ data: data }));
            }
        });
    };
    CustomizedSharedLocationGridComponent.prototype.showModal = function () {
        var _this = this;
        if (this.params) {
            var dataList = [];
            var indexList_1 = [];
            var data = this.params.data;
            var indexDatagrid = this.params.rowIndex;
            if (this.gridApi) {
                var selectedRows = this.getSelectedRowsInfos(this.gridApi);
                dataList = selectedRows.selectedRowsData;
                indexList_1 = selectedRows.selectedRowsIndex;
                if (!selectedRows.selectedRowsIndex.includes(indexDatagrid)) {
                    dataList.push(data);
                    indexList_1.push(indexDatagrid);
                }
                this.deleteRows(this.gridApi, dataList);
            }
            this.exposures$.subscribe(function (exposures) {
                if (exposures) {
                    var indexDb = exposures.index;
                    var listIndex = _this.getListOfEquivalentIndexInDb(indexDb, indexList_1);
                    var body_1 = {
                        is_all: false,
                        indices: listIndex
                    };
                    _this.self$ = exposures._links.self;
                    if (_this.importData$) {
                        if (_this.csMetadata$) {
                            _this.csMetadata$.subscribe(function (csMetadata) {
                                var jobId = csMetadata.jobId;
                                if (jobId) {
                                    _this.importData$.subscribe(function (importData) {
                                        var fileData = importData.fileData;
                                        var selectedSheet = importData.selectedSheet;
                                        _this.cleansingService.deleteRow(fileData, selectedSheet, jobId, body_1).subscribe(function (isDeleted) {
                                        });
                                    });
                                }
                            });
                        }
                    }
                }
            });
        }
    };
    // add fake data here
    CustomizedSharedLocationGridComponent.prototype.prepareFata = function () {
        var location = new _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_13__["LocationModel"]();
        if (this.data) {
            this.data.subscribe(function (data) {
                var fakeData = Object.assign({}, data);
                location.id = 1;
                location.accuracy = null;
                location.biType = null;
                location.building = null;
                location.city = null;
                location.constructionClass = null;
                location.constructionCode = null;
                location.constructionScheme = null;
                location.constructionSource = null;
                location.content = null;
                location.country = null;
                location.county = null;
                location.declarationPeriod = null;
                location.division = null;
                location.eip = null;
                location.forInterest = null;
                location.geocode = null;
                location.geocoder = null;
                location.geocodingValidated = null;
                location.interest = null;
                location.isAggregation = null;
                location.largestUnitCapacity = null;
                location.latitude = null;
                location.locationName = null;
                location.longitude = null;
                location.machinery = null;
                location.numberOfBuilding = null;
                location.numberOfStories = null;
                location.occupancyClass = null;
                location.occupancyCode = null;
                location.occupancyScheme = null;
                location.occupancySource = null;
                location.occupancySubClass = null;
                location.originalAddress = null;
                location.pbValue = null;
                location.siteCurrency = null;
                location.state = null;
                location.stock = null;
                location.street = null;
                location.tiv = null;
                location.yearBuilt = null;
                location.zipCode = null;
            });
        }
        return location;
    };
    CustomizedSharedLocationGridComponent.prototype.handleOk = function () {
        var _this = this;
        this.store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_11__["selectCleansingData"]).subscribe(function (data) { return _this.dataRows = JSON.parse(JSON.stringify(data)); });
        var x = null;
        this.store$.dispatch(new _app_shared_popups_general_location_info_popup_store_part_load_pop_up_actions__WEBPACK_IMPORTED_MODULE_14__["LoadLoadPopUps"]({ location: this.prepareFata() }));
        this.data.subscribe(function (d) {
            x = d;
        });
        this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_8__["ActionCleansingDeleteOrUpdate"]({ deletedOrUpdated: true }));
        this.store$.select(_app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_10__["selectPopUp"]).subscribe(function (dataPopUp) {
            _this.dataRows = _this.dataRows.filter(function (data) {
                return data.Id !== dataPopUp.location.id;
            });
        }, function (error) {
        }, function () {
            _this.fileImportService.deleteRow(x).subscribe(function (data) {
            }, function (error) {
            });
        });
        this.store$.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_8__["ActionLoadAllData"]({ data: this.dataRows }));
        this.cdrf.detectChanges();
        this.isVisible = false;
    };
    CustomizedSharedLocationGridComponent.prototype.handleCancel = function () {
        this.isVisible = false;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], CustomizedSharedLocationGridComponent.prototype, "rowIndex", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], CustomizedSharedLocationGridComponent.prototype, "id", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", rxjs__WEBPACK_IMPORTED_MODULE_3__["Observable"])
    ], CustomizedSharedLocationGridComponent.prototype, "data", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], CustomizedSharedLocationGridComponent.prototype, "allData", void 0);
    CustomizedSharedLocationGridComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-customized-shared-location-grid',
            template: __webpack_require__(/*! ./customized-shared-location-grid.component.html */ "./src/app/shared/customized-shared-location-grid/customized-shared-location-grid.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./customized-shared-location-grid.component.css */ "./src/app/shared/customized-shared-location-grid/customized-shared-location-grid.component.css")]
        }),
        __metadata("design:paramtypes", [_customized_grid_buttons_service__WEBPACK_IMPORTED_MODULE_1__["CustomizedSharedGridService"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
            _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_9__["CleansingService"],
            _ngrx_store__WEBPACK_IMPORTED_MODULE_4__["Store"], _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_7__["FileImportService"]])
    ], CustomizedSharedLocationGridComponent);
    return CustomizedSharedLocationGridComponent;
}());



/***/ }),

/***/ "./src/app/shared/focus-directive.ts":
/*!*******************************************!*\
  !*** ./src/app/shared/focus-directive.ts ***!
  \*******************************************/
/*! exports provided: FocusDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FocusDirective", function() { return FocusDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var FocusDirective = /** @class */ (function () {
    function FocusDirective(el) {
        this.el = el;
        this.focus = true;
    }
    FocusDirective.prototype.ngOnInit = function () {
        var _this = this;
        if (this.focus) {
            window.setTimeout(function () {
                _this.el.nativeElement.focus(); // For SSR (server side rendering) this is not safe. Use: https://github.com/angular/angular/issues/15008#issuecomment-285141070)
            });
        }
    };
    Object.defineProperty(FocusDirective.prototype, "autofocus", {
        set: function (condition) {
            this.focus = condition !== false;
        },
        enumerable: true,
        configurable: true
    });
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Boolean),
        __metadata("design:paramtypes", [Boolean])
    ], FocusDirective.prototype, "autofocus", null);
    FocusDirective = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({
            selector: '[autofocus]'
        }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])
    ], FocusDirective);
    return FocusDirective;
}());



/***/ }),

/***/ "./src/app/shared/grid/grid.component.html":
/*!*************************************************!*\
  !*** ./src/app/shared/grid/grid.component.html ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div class=\"table-container custom-mat-grid\">\r\n    <table mat-table [dataSource]=\"dataSource\">\r\n\r\n        <!--- Note that these columns can be defined in any order.\r\n              The actual rendered columns are set as a property on the row definition\" -->\r\n\r\n        <!-- Position Column -->\r\n        <ng-container matColumnDef=\"username\">\r\n          <th mat-header-cell *matHeaderCellDef> No.\r\n             </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{element.username}}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"age\">\r\n          <th mat-header-cell *matHeaderCellDef> Name </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.age}} </td>\r\n        </ng-container>\r\n\r\n        <!-- Weight Column -->\r\n        <ng-container matColumnDef=\"tile\">\r\n          <th mat-header-cell *matHeaderCellDef> Weight </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.tile}} </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky:true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n      </table>\r\n\r\n      <mat-paginator  class=\"mat-paginator-sticky\" [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/grid/grid.component.scss":
/*!*************************************************!*\
  !*** ./src/app/shared/grid/grid.component.scss ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9ncmlkL2dyaWQuY29tcG9uZW50LnNjc3MifQ== */"

/***/ }),

/***/ "./src/app/shared/grid/grid.component.ts":
/*!***********************************************!*\
  !*** ./src/app/shared/grid/grid.component.ts ***!
  \***********************************************/
/*! exports provided: GridComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GridComponent", function() { return GridComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var GridComponent = /** @class */ (function () {
    function GridComponent() {
        this.dataSource = new _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatTableDataSource"](data);
        this.displayedColumns = ['username', 'age', 'tile'];
    }
    GridComponent.prototype.ngOnInit = function () {
        this.paginator._changePageSize(20);
        this.dataSource.paginator = this.paginator;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])(_angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginator"]),
        __metadata("design:type", _angular_material__WEBPACK_IMPORTED_MODULE_1__["MatPaginator"])
    ], GridComponent.prototype, "paginator", void 0);
    GridComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-grid',
            template: __webpack_require__(/*! ./grid.component.html */ "./src/app/shared/grid/grid.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./grid.component.scss */ "./src/app/shared/grid/grid.component.scss")]
        }),
        __metadata("design:paramtypes", [])
    ], GridComponent);
    return GridComponent;
}());

var data = [
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' },
    { username: "user", age: Math.random(), tile: 'title' }
];


/***/ }),

/***/ "./src/app/shared/index.ts":
/*!*********************************!*\
  !*** ./src/app/shared/index.ts ***!
  \*********************************/
/*! exports provided: POPUPS_COMPONENTS, POPUPS_PIPES, SharedModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "POPUPS_COMPONENTS", function() { return POPUPS_COMPONENTS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "POPUPS_PIPES", function() { return POPUPS_PIPES; });
/* harmony import */ var _app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/general-location-info-popup.component */ "./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_cat_Analysis_Info_cat_Analysis_Info_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/cat-Analysis-Info/cat-Analysis-Info.component */ "./src/app/shared/popups/general-location-info-popup/cat-Analysis-Info/cat-Analysis-Info.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_general_details_general_details_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/general-details/general-details.component */ "./src/app/shared/popups/general-location-info-popup/general-details/general-details.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_geographical_geographical_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/geographical/geographical.component */ "./src/app/shared/popups/general-location-info-popup/geographical/geographical.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_more_info_more_info_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/more-info/more-info.component */ "./src/app/shared/popups/general-location-info-popup/more-info/more-info.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_mpl_mpl_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/mpl/mpl.component */ "./src/app/shared/popups/general-location-info-popup/mpl/mpl.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_pricing_pricing_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/pricing/pricing.component */ "./src/app/shared/popups/general-location-info-popup/pricing/pricing.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_tand_C_tand_C_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/tand-C/tand-C.component */ "./src/app/shared/popups/general-location-info-popup/tand-C/tand-C.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_insurred_values_insurred_values_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/insurred-values/insurred-values.component */ "./src/app/shared/popups/general-location-info-popup/insurred-values/insurred-values.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_pipes_keys_pipe__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/pipes/keys.pipe */ "./src/app/shared/popups/general-location-info-popup/pipes/keys.pipe.ts");
/* harmony import */ var _shared_module__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./shared.module */ "./src/app/shared/shared.module.ts");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SharedModule", function() { return _shared_module__WEBPACK_IMPORTED_MODULE_10__["SharedModule"]; });












var POPUPS_COMPONENTS = [_app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_0__["GeneralLocationInfoPopupComponent"], _app_shared_popups_general_location_info_popup_cat_Analysis_Info_cat_Analysis_Info_component__WEBPACK_IMPORTED_MODULE_1__["CatAnalysisInfoComponent"], _app_shared_popups_general_location_info_popup_general_details_general_details_component__WEBPACK_IMPORTED_MODULE_2__["GeneralDetailsComponent"], _app_shared_popups_general_location_info_popup_geographical_geographical_component__WEBPACK_IMPORTED_MODULE_3__["GeographicalComponent"], _app_shared_popups_general_location_info_popup_insurred_values_insurred_values_component__WEBPACK_IMPORTED_MODULE_8__["InsurredValuesComponent"], _app_shared_popups_general_location_info_popup_more_info_more_info_component__WEBPACK_IMPORTED_MODULE_4__["MoreInfoComponent"], _app_shared_popups_general_location_info_popup_mpl_mpl_component__WEBPACK_IMPORTED_MODULE_5__["MplComponent"], _app_shared_popups_general_location_info_popup_pricing_pricing_component__WEBPACK_IMPORTED_MODULE_6__["PricingComponent"], _app_shared_popups_general_location_info_popup_tand_C_tand_C_component__WEBPACK_IMPORTED_MODULE_7__["TandCComponent"]];
var POPUPS_PIPES = [_app_shared_popups_general_location_info_popup_pipes_keys_pipe__WEBPACK_IMPORTED_MODULE_9__["KeysPipe"]];


/***/ }),

/***/ "./src/app/shared/location-grid-edite/location-grid-edite.component.css":
/*!******************************************************************************!*\
  !*** ./src/app/shared/location-grid-edite/location-grid-edite.component.css ***!
  \******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9sb2NhdGlvbi1ncmlkLWVkaXRlL2xvY2F0aW9uLWdyaWQtZWRpdGUuY29tcG9uZW50LmNzcyJ9 */"

/***/ }),

/***/ "./src/app/shared/location-grid-edite/location-grid-edite.component.html":
/*!*******************************************************************************!*\
  !*** ./src/app/shared/location-grid-edite/location-grid-edite.component.html ***!
  \*******************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<p>\r\n  location-grid-edite works!\r\n</p>\r\n"

/***/ }),

/***/ "./src/app/shared/location-grid-edite/location-grid-edite.component.ts":
/*!*****************************************************************************!*\
  !*** ./src/app/shared/location-grid-edite/location-grid-edite.component.ts ***!
  \*****************************************************************************/
/*! exports provided: LocationGridEditeComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationGridEditeComponent", function() { return LocationGridEditeComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var LocationGridEditeComponent = /** @class */ (function () {
    function LocationGridEditeComponent() {
    }
    LocationGridEditeComponent.prototype.ngOnInit = function () {
    };
    LocationGridEditeComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-location-grid-edite',
            template: __webpack_require__(/*! ./location-grid-edite.component.html */ "./src/app/shared/location-grid-edite/location-grid-edite.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./location-grid-edite.component.css */ "./src/app/shared/location-grid-edite/location-grid-edite.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], LocationGridEditeComponent);
    return LocationGridEditeComponent;
}());



/***/ }),

/***/ "./src/app/shared/pipes/filter.pipe.ts":
/*!*********************************************!*\
  !*** ./src/app/shared/pipes/filter.pipe.ts ***!
  \*********************************************/
/*! exports provided: FilterPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FilterPipe", function() { return FilterPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var FilterPipe = /** @class */ (function () {
    function FilterPipe() {
    }
    FilterPipe.prototype.transform = function (items, field, value) {
        if (!items)
            return [];
        if (!value || value.length == 0)
            return items;
        return items.filter(function (it) {
            return it[field] && String(it[field]).toLowerCase().indexOf(String(value).toLowerCase()) != -1;
        });
    };
    FilterPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
            name: 'filter'
        })
    ], FilterPipe);
    return FilterPipe;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/cat-Analysis-Info/cat-Analysis-Info.component.html":
/*!**************************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/cat-Analysis-Info/cat-Analysis-Info.component.html ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"padding: 15px 0;margin: 20px 10%\">\r\n  <nz-row>\r\n    <nz-col nzSpan=\"16\">\r\n      <div class=\"header\" style=\"background-color: white;margin-bottom: 20px;padding: 30px\">\r\n        <nz-row>\r\n          <nz-col nzSpan=\"5\"><span style=\"font-size: 15px;font-weight: bold\">{{tabModel['leftPanel'].header.label}}</span></nz-col>\r\n          <nz-col nzSpan=\"5\" nzOffset=\"2\"><input type=\"text\" nz-input style=\"height: 30px;border: 1px solid black\" [disabled]=\"true\"></nz-col>\r\n        </nz-row>\r\n      </div>\r\n      <div class=\"body\" style=\"background-color: white\">\r\n        <nz-row>\r\n          <nz-col *ngFor=\"let side of tabModel['leftPanel'].body | keys;let i = index\" style=\"padding: 30px\" [nzSpan] =\"i==0 ? 12 : 11\" [nzOffset] =\"i==0 ? 0 : 1\">\r\n            <nz-row *ngFor=\"let sideItem of tabModel['leftPanel'].body[side]\">\r\n              <nz-col nzSpan=\"12\" style=\"margin-bottom: 20px\">\r\n                <span style=\"font-size: 15px;font-weight: bold\">{{sideItem.label}}</span>\r\n              </nz-col>\r\n              <nz-col nzSpan=\"12\" style=\"margin-bottom: 20px\">\r\n                  <ng-container [ngTemplateOutlet]=\"sideItem.type === 'level' ? stepperItem  : inputItem\"></ng-container>\r\n                  <ng-template #inputItem>\r\n                    <input type=\"text\" nz-input style=\"height: 30px;border: 1px solid black\" [(ngModel)]=\"sideItem.value\" [disabled]=\"true\">\r\n                  </ng-template>\r\n                  <ng-template #stepperItem>\r\n                    <div style=\"display: flex\">\r\n                      <div *ngFor=\"let colorItem of sideItem.colors\" [ngStyle]=\"{'background-color': colorItem.color, 'border': colorItem.checked ? '3px solid black' : '1px solid grey'}\"\r\n                           style=\"width: 30px;height: 30px;border: 1px solid black;cursor: pointer\" (click)=\"chooseColor(sideItem.colors, colorItem.color)\">\r\n                        {{colorItem.value}}\r\n                      </div>\r\n                    </div>\r\n                  </ng-template>\r\n              </nz-col>\r\n            </nz-row>\r\n          </nz-col>\r\n        </nz-row>\r\n      </div>\r\n    </nz-col>\r\n    <nz-col nzSpan=\"7\" nzOffset=\"1\" style=\"background-color: white;padding: 20px\">\r\n      <nz-row style=\"border-bottom: 2px solid lightslategrey;padding-bottom: 20px;\">\r\n        <nz-col nzSpan=\"24\"><span style=\"font-size: 18px;font-weight: bold\">Zones</span></nz-col>\r\n        <nz-col nzSpan=\"24\"><span>Windstorm Zoning:</span></nz-col>\r\n      </nz-row>\r\n      <nz-row style=\"border-bottom: 2px solid lightslategrey\">\r\n        <nz-col nzSpan=\"12\"><span>PERIL / REGION</span></nz-col>\r\n        <nz-col nzSpan=\"12\"><span>EXPECTED LOSS(GU):</span></nz-col>\r\n      </nz-row>\r\n      <nz-row style=\"border-bottom: 2px solid lightslategrey\">\r\n        <nz-col nzSpan=\"12\"><span>NAHO=UBM</span></nz-col>\r\n        <nz-col nzSpan=\"12\"><span>0</span></nz-col>\r\n      </nz-row>\r\n    </nz-col>\r\n  </nz-row>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/cat-Analysis-Info/cat-Analysis-Info.component.scss":
/*!**************************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/cat-Analysis-Info/cat-Analysis-Info.component.scss ***!
  \**************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "input {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  outline: 0;\n  border-width: 0px 0 1px;\n  border-color: #3dabbf;\n  border-radius: 0;\n  font-size: 12px !important; }\n\ninput:focus {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  border-color: #3dabbf;\n  outline: none;\n  box-shadow: 0 0 0 0; }\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none; }\n\ninput[type=number] {\n  -moz-appearance: textfield; }\n\n::ng-deep #cdk-overlay-2 > nz-modal > div > div.ant-modal-wrap.plt-selection > div > div > div.ant-modal-body.ng-star-inserted > nz-row:nth-child(2) > nz-tabset > div.ant-tabs-content.ant-tabs-top-content.ant-tabs-content-animated.ng-star-inserted > div.ant-tabs-tabpane.ng-star-inserted.ant-tabs-tabpane-active > div > anms-more-info > nz-tabset > div.ant-tabs-bar.ant-tabs-top-bar.ant-tabs-default-bar.ng-star-inserted > div > div {\n  text-align: center; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvY2F0LUFuYWx5c2lzLUluZm8vQzpcXEZcXEpvYnNcXGRjbV9mcm9udC9zcmNcXGFwcFxcc2hhcmVkXFxwb3B1cHNcXGdlbmVyYWwtbG9jYXRpb24taW5mby1wb3B1cFxcY2F0LUFuYWx5c2lzLUluZm9cXGNhdC1BbmFseXNpcy1JbmZvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLHVCQUF1QjtFQUN2QixxQkFBcUI7RUFDckIsZ0JBQWdCO0VBQ2hCLDBCQUEwQixFQUFBOztBQUk1QjtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLHFCQUFxQjtFQUNyQixhQUFjO0VBQ2QsbUJBQW9CLEVBQUE7O0FBR3RCOztFQUVFLHdCQUF3QixFQUFBOztBQUcxQjtFQUNFLDBCQUEwQixFQUFBOztBQUc1QjtFQUNFLGtCQUFrQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvY2F0LUFuYWx5c2lzLUluZm8vY2F0LUFuYWx5c2lzLUluZm8uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW5wdXQge1xyXG4gIGJvcmRlci1sZWZ0OiBub25lO1xyXG4gIGJvcmRlci1yaWdodDogbm9uZTtcclxuICBib3JkZXItdG9wOiBub25lO1xyXG4gIG91dGxpbmU6IDA7XHJcbiAgYm9yZGVyLXdpZHRoOiAwcHggMCAxcHg7XHJcbiAgYm9yZGVyLWNvbG9yOiAjM2RhYmJmO1xyXG4gIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG5pbnB1dDpmb2N1cyB7XHJcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG4gIGJvcmRlci10b3A6IG5vbmU7XHJcbiAgYm9yZGVyLWNvbG9yOiAjM2RhYmJmO1xyXG4gIG91dGxpbmUgOiBub25lO1xyXG4gIGJveC1zaGFkb3c6IDAgMCAwIDAgO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXHJcbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPW51bWJlcl0ge1xyXG4gIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xyXG59XHJcblxyXG46Om5nLWRlZXAgI2Nkay1vdmVybGF5LTIgPiBuei1tb2RhbCA+IGRpdiA+IGRpdi5hbnQtbW9kYWwtd3JhcC5wbHQtc2VsZWN0aW9uID4gZGl2ID4gZGl2ID4gZGl2LmFudC1tb2RhbC1ib2R5Lm5nLXN0YXItaW5zZXJ0ZWQgPiBuei1yb3c6bnRoLWNoaWxkKDIpID4gbnotdGFic2V0ID4gZGl2LmFudC10YWJzLWNvbnRlbnQuYW50LXRhYnMtdG9wLWNvbnRlbnQuYW50LXRhYnMtY29udGVudC1hbmltYXRlZC5uZy1zdGFyLWluc2VydGVkID4gZGl2LmFudC10YWJzLXRhYnBhbmUubmctc3Rhci1pbnNlcnRlZC5hbnQtdGFicy10YWJwYW5lLWFjdGl2ZSA+IGRpdiA+IGFubXMtbW9yZS1pbmZvID4gbnotdGFic2V0ID4gZGl2LmFudC10YWJzLWJhci5hbnQtdGFicy10b3AtYmFyLmFudC10YWJzLWRlZmF1bHQtYmFyLm5nLXN0YXItaW5zZXJ0ZWQgPiBkaXYgPiBkaXYge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/cat-Analysis-Info/cat-Analysis-Info.component.ts":
/*!************************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/cat-Analysis-Info/cat-Analysis-Info.component.ts ***!
  \************************************************************************************************************/
/*! exports provided: CatAnalysisInfoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CatAnalysisInfoComponent", function() { return CatAnalysisInfoComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location.model */ "./src/app/shared/popups/general-location-info-popup/models/location.model.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var CatAnalysisInfoComponent = /** @class */ (function () {
    function CatAnalysisInfoComponent(store, formBuilder) {
        this.store = store;
        this.formBuilder = formBuilder;
        this.moreInfoForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({});
        this.location = new _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_3__["LocationModel"]();
        // this.store.select(selectPopUp).subscribe(
        //   data => this.location = Object.assign({}, data.location)
        // )
    }
    CatAnalysisInfoComponent.prototype.ngOnInit = function () {
        this.moreInfoForm = this.formBuilder.group({
            'yearBuilt': [this.location.yearBuilt],
            'isAggregation': [this.location.isAggregation,],
            'numberOfStories': [this.location.numberOfStories,],
            'numberOfBuilding': [this.location.numberOfBuilding,],
            'largerUnitCapacity': [this.location.largestUnitCapacity,],
        });
    };
    CatAnalysisInfoComponent.prototype.validateFormControl = function (controName) {
        var control = this.moreInfoForm.get(controName);
        return control.invalid && control.touched;
    };
    CatAnalysisInfoComponent.prototype.onSubmit = function () {
    };
    CatAnalysisInfoComponent.prototype.chooseColor = function (colors, choice) {
        colors.forEach(function (el) { return el.checked = el.color === choice; });
    };
    CatAnalysisInfoComponent.prototype.getPlaceHolder = function (item) {
        switch (this.multiple[item.field_code]) {
            case true: return "Multiple";
            default: return item.label;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], CatAnalysisInfoComponent.prototype, "tabModel", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], CatAnalysisInfoComponent.prototype, "locationData", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], CatAnalysisInfoComponent.prototype, "multiple", void 0);
    CatAnalysisInfoComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-cat-Analysis-Info',
            template: __webpack_require__(/*! ./cat-Analysis-Info.component.html */ "./src/app/shared/popups/general-location-info-popup/cat-Analysis-Info/cat-Analysis-Info.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./cat-Analysis-Info.component.scss */ "./src/app/shared/popups/general-location-info-popup/cat-Analysis-Info/cat-Analysis-Info.component.scss")]
        }),
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]])
    ], CatAnalysisInfoComponent);
    return CatAnalysisInfoComponent;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/directive/number-input.directive.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/directive/number-input.directive.ts ***!
  \***********************************************************************************************/
/*! exports provided: BjOnlyNumberDirective */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BjOnlyNumberDirective", function() { return BjOnlyNumberDirective; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

// tslint:disable-next-line: directive-selector
var BjOnlyNumberDirective = /** @class */ (function () {
    function BjOnlyNumberDirective(el) {
        this.el = el;
        // Allow decimal numbers and negative values
        this.regex = new RegExp(/^\d*\.?\d{0,2}$/g);
        // Allow key codes for special events. Reflect :
        // Backspace, tab, end, home
        this.specialKeys = ['Backspace', 'Tab', 'End', 'Home', '-', 'ArrowLeft', 'ArrowRight', 'Del', 'Delete'];
    }
    BjOnlyNumberDirective.prototype.onKeyDown = function (event) {
        console.log(this.el.nativeElement.value);
        // Allow Backspace, tab, end, and home keys
        if (this.specialKeys.indexOf(event.key) !== -1) {
            return;
        }
        var current = this.el.nativeElement.value;
        var position = this.el.nativeElement.selectionStart;
        var next = [current.slice(0, position), event.key == 'Decimal' ? '.' : event.key, current.slice(position)].join('');
        if (next && !String(next).match(this.regex)) {
            event.preventDefault();
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["HostListener"])('keydown', ['$event']),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", [KeyboardEvent]),
        __metadata("design:returntype", void 0)
    ], BjOnlyNumberDirective.prototype, "onKeyDown", null);
    BjOnlyNumberDirective = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Directive"])({ selector: '[only-number]' }),
        __metadata("design:paramtypes", [_angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"]])
    ], BjOnlyNumberDirective);
    return BjOnlyNumberDirective;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/general-details/general-details.component.html":
/*!**********************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/general-details/general-details.component.html ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"padding: 12px 140px;\">\r\n  <div class=\"global-tab-header\" style=\"background-color: white;padding: 25px;\">\r\n    <nz-row>\r\n      <nz-col *ngFor=\"let item of tabModel.header\" nzSpan=\"4\" style=\"margin-right: 10px;\">\r\n        <nz-row>\r\n          <nz-col nzSpan=\"3\" style=\"height: 55px\">\r\n            <img [src]=\"item.icon\" style=\"width: 100%;height: 100%\">\r\n          </nz-col>\r\n          <nz-col nzSpan=\"20\" nzOffset=\"1\" style=\"height: 55px\">\r\n            <ng-container [ngTemplateOutlet]=\"item.type === 'inputNumber' ? number : other\"></ng-container>\r\n            <ng-template #other>\r\n              <input nz-input [placeholder]=\"getPlaceHolder(item)\" [(ngModel)]=\"locationData[item.field_code]\" (ngModelChange)=\"checkMondatory($event, item.field_code)\"\r\n                     [ngStyle]=\"{'border': mondatories['General'][item.field_code] ? '1px solid red' : ''}\" nzSize=\"large\" style=\"background-color: #f4f6fc;height: 100%\" />\r\n            </ng-template>\r\n            <ng-template #number>\r\n              <input type=\"text\" only-number [placeholder]=\"getPlaceHolder(item)\" [(ngModel)]=\"locationData[item.field_code]\" (ngModelChange)=\"checkMondatory($event, item.field_code)\"\r\n                     [ngStyle]=\"{'border': mondatories['General'][item.field_code] ? '1px solid red' : ''}\" style=\"background-color: #f4f6fc;height: 100%;padding-left: 11px;width: 100%\" />\r\n            </ng-template>\r\n          </nz-col>\r\n        </nz-row>\r\n      </nz-col>\r\n    </nz-row>\r\n  </div>\r\n  <div class=\"global-tab-body\" style=\"margin-top: 15px\">\r\n    <nz-row>\r\n      <nz-col nzSpan=\"8\" style=\"background-color: white;padding: 15px;height: 55vh\">\r\n        <div *ngFor=\"let item of tabModel.body\" style=\"display: flex;height: 50px;margin-bottom: 20px; cursor: pointer\"\r\n              [ngClass]=\"item.active ? 'body-active-item' : ''\" (click)=\"activeBodyItem(item.label)\">\r\n          <div style=\"width: 10px;background-color: blue\"></div>\r\n          <div style=\"margin-left: 10px;font-size: 15px;width: 100%\">\r\n            <span style=\"vertical-align: middle;\">{{item.label}}</span>\r\n            <i nz-icon nzType=\"right\" style=\"float: right;position: relative;top: 10px\"></i>\r\n          </div>\r\n        </div>\r\n      </nz-col>\r\n      <nz-col nzSpan=\"15\" nzOffset=\"1\" style=\"background-color: white;padding: 15px;height: 55vh\">\r\n        <nz-row>\r\n          <ng-container [ngTemplateOutlet]=\"tabModel.body[0].active ? firstTab : secondTab\"></ng-container>\r\n          <ng-template #firstTab>\r\n            <nz-col nzSpan=\"11\" nzOffset=\"1\" *ngFor=\"let val0 of tabModel.body[0].value\">\r\n              <div style=\"margin-bottom: 10px\">\r\n                <span style=\"font-size: 18px;font-weight: bold;\">{{val0.label}}</span>\r\n              </div>\r\n              <ng-container *ngFor=\"let valItem0 of val0.items\">\r\n                <div style=\"width: 100%; height: 40px; margin-bottom: 10px\"  *ngIf=\"valItem0 | itemVisibility : locationData['occupancy_scheme']\">\r\n                  <ng-container [ngSwitch]=\"valItem0.type\">\r\n                    <nz-select  [nzPlaceHolder]=\"getPlaceHolder(valItem0)\" nzShowSearch nzAllowClear nzCustomContent *ngSwitchCase=\"'list'\" [disabled]=\"valItem0.disabled\" class=\"my-select\"\r\n                                [(ngModel)]=\"locationData[valItem0.field_code]\" (ngModelChange)=\"applyAutoFill($event, valItem0.field_code);checkMondatory($event, valItem0.field_code)\"\r\n                                [ngStyle]=\"{'border': mondatories['General'][valItem0.field_code] ? '1px solid red' : ''}\" style=\"width: 100%;\">\r\n                      <nz-option nzLabel={{o}} nzValue={{o}}\r\n                                 *ngFor=\"let o of getReferenceData(valItem0.field_code)\">\r\n                        {{o}}\r\n                      </nz-option>\r\n                    </nz-select>\r\n                    <input *ngSwitchDefault nz-input [placeholder]=\"getPlaceHolder(valItem0)\" [disabled]=\"valItem0.disabled\"\r\n                           [(ngModel)]=\"locationData[valItem0.field_code]\"  (ngModelChange)=\"checkMondatory($event, valItem0.field_code)\" nzSize=\"large\"\r\n                           [ngStyle]=\"{'border': mondatories['General'][valItem0.field_code] ? '1px solid red' : ''}\" style=\"background-color: #f4f6fc;height: 100%\" />\r\n                  </ng-container>\r\n                </div>\r\n              </ng-container>\r\n            </nz-col>\r\n          </ng-template>\r\n          <ng-template #secondTab>\r\n            <nz-col nzSpan=\"11\" nzOffset=\"1\" *ngFor=\"let val1 of tabModel.body[1].value\">\r\n              <div style=\"margin-bottom: 10px\">\r\n                <span style=\"font-size: 18px;font-weight: bold;\">{{val1.label}}</span>\r\n              </div>\r\n              <div style=\"width: 100%; height: 40px; margin-bottom: 10px\" *ngFor=\"let valItem1 of val1.items\">\r\n                <ng-container [ngSwitch]=\"valItem1.type\">\r\n                  <input type=\"text\" only-number [placeholder]=\"getPlaceHolder(valItem1)\" (ngModelChange)=\"checkMondatory($event, valItem1.field_code)\" *ngSwitchCase=\"'inputNumber'\"\r\n                         [ngStyle]=\"{'border': mondatories['General'][valItem1.field_code] ? '1px solid red' : ''}\"\r\n                         [(ngModel)]=\"locationData[valItem1.field_code]\" style=\"background-color: #f4f6fc;height: 100%;width: 100%;padding-left: 11px\" />\r\n                  <input nz-input [placeholder]=\"getPlaceHolder(valItem1)\" (ngModelChange)=\"checkMondatory($event, valItem1.field_code)\" *ngSwitchDefault\r\n                         [ngStyle]=\"{'border': mondatories['General'][valItem1.field_code] ? '1px solid red' : ''}\"\r\n                         [(ngModel)]=\"locationData[valItem1.field_code]\" nzSize=\"large\" style=\"background-color: #f4f6fc;height: 100%\" />\r\n                </ng-container>\r\n              </div>\r\n            </nz-col>\r\n          </ng-template>\r\n        </nz-row>\r\n      </nz-col>\r\n    </nz-row>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/general-details/general-details.component.scss":
/*!**********************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/general-details/general-details.component.scss ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".danger {\n  color: #cd3531;\n  font-size: 12px;\n  font-weight: 500; }\n\ninput {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  outline: 0;\n  border-width: 0px 0 1px;\n  border-color: #2b2bff;\n  border-radius: 0;\n  font-size: 12px !important;\n  color: #2b2bff !important; }\n\ninput:focus {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  border-color: #2b2bff;\n  color: #2b2bff !important;\n  outline: none;\n  box-shadow: 0 0 0 0; }\n\n.body-active-item {\n  background-color: #fdfbdf;\n  font-weight: bold; }\n\ninput::-webkit-input-placeholder {\n  color: blue; }\n\ninput:-ms-input-placeholder {\n  color: blue; }\n\ninput::-ms-input-placeholder {\n  color: blue; }\n\ninput::placeholder {\n  color: blue; }\n\n.custom-select {\n  width: 100%; }\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none; }\n\ninput[type=number] {\n  -moz-appearance: textfield; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvZ2VuZXJhbC1kZXRhaWxzL0M6XFxGXFxKb2JzXFxkY21fZnJvbnQvc3JjXFxhcHBcXHNoYXJlZFxccG9wdXBzXFxnZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXBcXGdlbmVyYWwtZGV0YWlsc1xcZ2VuZXJhbC1kZXRhaWxzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGVBQWM7RUFDZCxnQkFDRixFQUFBOztBQUVBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLHVCQUF1QjtFQUN2QixxQkFBOEI7RUFDOUIsZ0JBQWdCO0VBQ2hCLDBCQUEwQjtFQUMxQix5QkFBa0MsRUFBQTs7QUFHcEM7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixxQkFBOEI7RUFDOUIseUJBQWtDO0VBQ2xDLGFBQWM7RUFDZCxtQkFBb0IsRUFBQTs7QUFHdEI7RUFDRSx5QkFBeUI7RUFDekIsaUJBQWlCLEVBQUE7O0FBR25CO0VBQ0UsV0FBVyxFQUFBOztBQURiO0VBQ0UsV0FBVyxFQUFBOztBQURiO0VBQ0UsV0FBVyxFQUFBOztBQURiO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UsV0FBVyxFQUFBOztBQUdiOztFQUVFLHdCQUF3QixFQUFBOztBQUcxQjtFQUNFLDBCQUEwQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvZ2VuZXJhbC1kZXRhaWxzL2dlbmVyYWwtZGV0YWlscy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kYW5nZXIge1xyXG4gIGNvbG9yOiAjY2QzNTMxO1xyXG4gIGZvbnQtc2l6ZToxMnB4O1xyXG4gIGZvbnQtd2VpZ2h0OjUwMFxyXG59XHJcblxyXG5pbnB1dCB7XHJcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG4gIGJvcmRlci10b3A6IG5vbmU7XHJcbiAgb3V0bGluZTogMDtcclxuICBib3JkZXItd2lkdGg6IDBweCAwIDFweDtcclxuICBib3JkZXItY29sb3I6IHJnYig0MywgNDMsIDI1NSk7XHJcbiAgYm9yZGVyLXJhZGl1czogMDtcclxuICBmb250LXNpemU6IDEycHggIWltcG9ydGFudDtcclxuICBjb2xvcjogcmdiKDQzLCA0MywgMjU1KSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5pbnB1dDpmb2N1cyB7XHJcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG4gIGJvcmRlci10b3A6IG5vbmU7XHJcbiAgYm9yZGVyLWNvbG9yOiByZ2IoNDMsIDQzLCAyNTUpO1xyXG4gIGNvbG9yOiByZ2IoNDMsIDQzLCAyNTUpICFpbXBvcnRhbnQ7XHJcbiAgb3V0bGluZSA6IG5vbmU7XHJcbiAgYm94LXNoYWRvdzogMCAwIDAgMCA7XHJcbn1cclxuXHJcbi5ib2R5LWFjdGl2ZS1pdGVtIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmRmYmRmO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG59XHJcblxyXG5pbnB1dDo6cGxhY2Vob2xkZXIge1xyXG4gIGNvbG9yOiBibHVlO1xyXG59XHJcblxyXG4uY3VzdG9tLXNlbGVjdHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1udW1iZXJdIHtcclxuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcclxufVxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/general-details/general-details.component.ts":
/*!********************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/general-details/general-details.component.ts ***!
  \********************************************************************************************************/
/*! exports provided: GeneralDetailsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeneralDetailsComponent", function() { return GeneralDetailsComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../models/location-ref-data.const */ "./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location-field-codes.const */ "./src/app/shared/popups/general-location-info-popup/models/location-field-codes.const.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var GeneralDetailsComponent = /** @class */ (function () {
    function GeneralDetailsComponent(formBuilder, store$, cleansingService, cdrf) {
        this.formBuilder = formBuilder;
        this.store$ = store$;
        this.cleansingService = cleansingService;
        this.cdrf = cdrf;
        this.filteredOccupancyCode = [];
        this.filteredConstructionCode = [];
    }
    GeneralDetailsComponent.prototype.ngOnInit = function () {
        this.applyMandatoryCheck('General', 'accord_occupancy_class', this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].occupancy_scheme] === 'ACCORD' || this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].occupancy_scheme] === null);
        this.applyMandatoryCheck('General', 'accord_occupancy_subclass', this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].occupancy_scheme] === 'ACCORD' || this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].occupancy_scheme] === null);
        this.applyAutoFill(this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].construction_code], _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].construction_code);
        this.applyAutoFill(this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].occupancy_code], _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].occupancy_code);
        this.getOccupancyCodeOptions();
        if (this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].accord_construction_class])
            this.setConstructionCode(this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].accord_construction_class]);
        this.cdrf.detectChanges();
    };
    GeneralDetailsComponent.prototype.applyMandatoryCheck = function (category, field_code, value) {
        (this.isMultipleEdit) ? ((this.mondatories[category][field_code] !== undefined) ? this.mondatories[category][field_code] = value : '') : this.mondatories[category][field_code] = value;
    };
    GeneralDetailsComponent.prototype.onSubmit = function () {
    };
    GeneralDetailsComponent.prototype.activeBodyItem = function (label) {
        this.tabModel.body.forEach(function (item) { return item.active = item.label === label; });
    };
    GeneralDetailsComponent.prototype.getReferenceData = function (fieldCode) {
        var returnedData = _models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_4__["LOCATION_REFERENCE_DATA"].get(fieldCode);
        if ([_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].occupancy_code, _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].accord_occupancy_code].includes(fieldCode)) {
            if (this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].accord_occupancy_class] || this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].accord_occupancy_subclass]) {
                returnedData = this.filteredOccupancyCode;
            }
        }
        if ([_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].construction_code, _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].accord_construction_code].includes(fieldCode)) {
            if (this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].accord_construction_class]) {
                returnedData = this.filteredConstructionCode;
            }
        }
        return returnedData;
    };
    GeneralDetailsComponent.prototype.checkMondatory = function (ev, fieldCode) {
        this.applyAutoFill(ev, fieldCode);
        if (this.mondatories['General'][fieldCode] !== undefined)
            this.mondatories['General'][fieldCode] = !ev;
    };
    GeneralDetailsComponent.prototype.applyAutoFill = function (ev, fieldCode) {
        var _this = this;
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].occupancy_scheme) {
            this.applyMandatoryCheck('General', 'accord_occupancy_class', ev === 'ACCORD' || ev === null);
            this.applyMandatoryCheck('General', 'accord_occupancy_subclass', ev === 'ACCORD' || ev === null);
        }
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].occupancy_code) {
            this.setOccupancyCode(ev);
        }
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].accord_construction_class) {
            this.setConstructionCode(ev);
        }
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].construction_code && ev) {
            this.cleansingService.getCleansedDataByConstructionCode(ev).subscribe(function (cleansedData) {
                _this.locationData['accord_construction_code'] = ev;
                _this.locationData['accord_construction_class'] = cleansedData['accord_construction_class'] ? cleansedData['accord_construction_class'] : null;
                _this.applyMandatoryCheck('General', 'accord_construction_code', false);
                _this.applyMandatoryCheck('General', 'accord_construction_class', false);
                _this.mondatories['General'] = __assign({}, _this.mondatories['General']);
                if (cleansedData['accord_construction_class'])
                    _this.filteredConstructionCode = [ev];
                _this.cdrf.detectChanges();
            });
        }
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].accord_occupancy_class || fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].accord_occupancy_subclass) {
            this.getOccupancyCodeOptions();
        }
    };
    GeneralDetailsComponent.prototype.getPlaceHolder = function (item) {
        switch (this.multiple[item.field_code]) {
            case true: return 'Multiple';
            default: return item.label;
        }
    };
    GeneralDetailsComponent.prototype.getOccupancyCodeOptions = function () {
        var _this = this;
        var request = {
            oc: this.locationData['accord_occupancy_class'] || 'None',
            osc: this.locationData['accord_occupancy_subclass'] || 'None'
        };
        this.cleansingService.getOccupancyCodeByOccupancyClass(request).subscribe(function (data) {
            if (data && data.codes && data.codes.length) {
                if (data.codes.length === 1) {
                    _this.setOccupancyCode(data.codes[0]);
                }
                _this.filteredOccupancyCode = data.codes;
            }
            _this.cdrf.detectChanges();
        });
    };
    GeneralDetailsComponent.prototype.setOccupancyCode = function (value) {
        var _this = this;
        this.cleansingService.getCleansedDataByOccupancyCode(value).subscribe(function (cleansedData) {
            Object.keys(cleansedData).forEach(function (key) {
                if (key !== 'PD_Split') {
                    Object.keys(cleansedData[key]).forEach(function (subkey) {
                        if (subkey === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].accord_occupancy_code) {
                            _this.locationData['occupancy_code'] = cleansedData[key][subkey];
                            _this.applyMandatoryCheck('General', 'occupancy_code', false);
                            //this.mondatories['General']['occupancy_code'] = false;
                        }
                        _this.locationData[subkey] = cleansedData[key][subkey];
                        if (_this.mondatories[key][subkey] !== undefined)
                            _this.mondatories[key][subkey] = false;
                    });
                    _this.mondatories[key] = __assign({}, _this.mondatories[key]);
                }
                else {
                    _this.percentages['building_percentage'] = cleansedData[key]['building_percentage'];
                    _this.percentages['content_percentage'] = cleansedData[key]['content_percentage'];
                }
                _this.cdrf.detectChanges();
            });
        });
    };
    GeneralDetailsComponent.prototype.setConstructionCode = function (value) {
        var _this = this;
        this.cleansingService.getConstructionCodeByConstructionClass(value).subscribe(function (data) {
            if (data && data.codes && data.codes.length) {
                if (data.codes.length === 1) {
                    _this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].construction_code] = data.codes[0];
                    _this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_FIELD_CODES_ENUM"].accord_construction_code] = data.codes[0];
                    _this.applyMandatoryCheck('General', 'construction_code', false);
                    _this.applyMandatoryCheck('General', 'accord_construction_code', false);
                    //this.mondatories['General']['construction_code'] = false;
                    //this.mondatories['General']['accord_construction_code'] = false;
                }
                _this.filteredConstructionCode = data.codes;
            }
            _this.cdrf.detectChanges();
        });
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], GeneralDetailsComponent.prototype, "tabModel", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], GeneralDetailsComponent.prototype, "locationData", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], GeneralDetailsComponent.prototype, "mondatories", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], GeneralDetailsComponent.prototype, "percentages", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], GeneralDetailsComponent.prototype, "multiple", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], GeneralDetailsComponent.prototype, "isMultipleEdit", void 0);
    GeneralDetailsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-general-details',
            template: __webpack_require__(/*! ./general-details.component.html */ "./src/app/shared/popups/general-location-info-popup/general-details/general-details.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./general-details.component.scss */ "./src/app/shared/popups/general-location-info-popup/general-details/general-details.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], _ngrx_store__WEBPACK_IMPORTED_MODULE_2__["Store"],
            _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_3__["CleansingService"],
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])
    ], GeneralDetailsComponent);
    return GeneralDetailsComponent;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.html":
/*!******************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.html ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<nz-modal nzWrapClassName=\"plt-selection\" [nzFooter]=\"modalFooter\" [nzVisible]=\"true\" [nzStyle]=\"{ 'top':'20px', 'bottom': '20px'}\" [nzWidth]=\"'90vw'\" (nzOnCancel)=\"onClose()\">\r\n  <nz-row>\r\n    <nz-col nzSpan=\"1\">\r\n      <img src=\"/assets/images/addLocation.png\" style=\"width: 53px;\">\r\n    </nz-col>\r\n    <nz-col nzSpan=\"4\" style=\"margin-left: 20px;\">\r\n      <span style=\"font-size: 27px;color: black\">Add Location</span>\r\n    </nz-col>\r\n    <nz-col nzSpan=\"1\">\r\n      <span style=\"margin-right: 20px;\">\r\n        <nz-select [ngModel]=\"selectedCurrency\" [nzPlaceHolder]=\"'USD'\" class=\"my-select\">\r\n          <nz-option nzCustomContent nzLabel={{currency}} nzValue={{currency}}\r\n                     *ngFor=\"let currency of currencies\">\r\n            {{currency}}\r\n          </nz-option>\r\n        </nz-select>\r\n      </span>\r\n    </nz-col>\r\n  </nz-row>\r\n  <nz-row style=\"margin-top: 30px\">\r\n    <nz-tabset class=\"my-tabset\">\r\n      <nz-tab *ngFor=\"let tab of popupModel\" [nzTitle]=\"tabsetTitle\">\r\n        <div class=\"my-tab-content\" style=\"background-color: #f4f6fc\">\r\n              <anms-general-details [locationData]=\"location\" [multiple]=\"multiple\" [isMultipleEdit]=\"isMultipleEdit\" [tabModel]=\"popupModel[0].value\" [mondatories]=\"mondatoryFields\" [percentages]=\"percentages\"  *ngIf=\"tab.label === 'General'\"></anms-general-details>\r\n              <anms-geographical  [locationData]=\"location\" [multiple]=\"multiple\" [isMultipleEdit]=\"isMultipleEdit\" [tabModel]=\"popupModel[1].tabs\" [mondatories]=\"mondatoryFields['Geographical']\"  *ngIf=\"tab.label === 'Geographical'\"></anms-geographical>\r\n              <anms-insurred-values [locationData]=\"location\" [multiple]=\"multiple\" [isMultipleEdit]=\"isMultipleEdit\" [tabModel]=\"popupModel[2].value\" [mondatories]=\"mondatoryFields['Insured Value']\" [percentages]=\"percentages\"  *ngIf=\"tab.label === 'Insured Value'\"></anms-insurred-values>\r\n              <anms-mpl [locationData]=\"location\" [multiple]=\"multiple\" [isMultipleEdit]=\"isMultipleEdit\" [tabModel]=\"popupModel[3].value\" [mondatories]=\"mondatoryFields['MPL']\" *ngIf=\"tab.label === 'MPL'\"></anms-mpl>\r\n              <anms-tand-C [locationData]=\"location\" [multiple]=\"multiple\" [isMultipleEdit]=\"isMultipleEdit\" [tabModel]=\"popupModel[4].value\" *ngIf=\"tab.label === 'T&C'\"></anms-tand-C>\r\n              <anms-pricing [locationData]=\"location\" [multiple]=\"multiple\" [isMultipleEdit]=\"isMultipleEdit\" [tabModel]=\"popupModel[5].value\" [mondatories]=\"mondatoryFields['Pricing']\" *ngIf=\"tab.label === 'Pricing'\"></anms-pricing>\r\n              <anms-cat-Analysis-Info [locationData]=\"location\" [multiple]=\"multiple\" [isMultipleEdit]=\"isMultipleEdit\" [tabModel]=\"popupModel[6].value\" *ngIf=\"tab.label === 'CAT Analysis & CAT Information'\"></anms-cat-Analysis-Info>\r\n              <anms-more-info  [locationData]=\"location\" [multiple]=\"multiple\" [isMultipleEdit]=\"isMultipleEdit\" [tabModel]=\"popupModel[7].tabs\" [mondatories]=\"mondatoryFields['More Information']\"  *ngIf=\"tab.label === 'More Information'\"></anms-more-info>\r\n        </div>\r\n        <ng-template #tabsetTitle>\r\n              <span>{{tab.label}}</span>\r\n              <nz-tag style=\"margin-left: 10px\" *ngIf=\"mondatoryFields | mondatory : tab.label\" [nzColor]=\"'red'\">{{mondatoryFields | mondatory : tab.label}}</nz-tag>\r\n        </ng-template>\r\n      </nz-tab>\r\n    </nz-tabset>\r\n  </nz-row>\r\n  <ng-template #modalFooter>\r\n    <div class=\"footer\" style=\"text-align: center\">\r\n      <button nz-button nzType=\"default\" nzShape=\"round\" style=\"margin-left: 10px\" class=\"a-default-button\" (click)=\"onClose()\">\r\n         CANCEL\r\n      </button>\r\n      <button *ngIf=\"!isLoading\" nz-button nzType=\"default\" nzShape=\"round\" style=\"margin-left: 10px;width: 200px\" [disabled]=\"!this.checkValidation(true)\"\r\n              [ngClass]=\"this.checkValidation(true) ? 'a-primary-button': 'a-disabled-button' \" (click)=\"submitMethod()\">\r\n        <i  class=\"fas fa-save\"></i>\r\n        SAVE\r\n      </button>\r\n      <button *ngIf=\"isLoading\"  nz-button nzType=\"default\" nzShape=\"round\" style=\"margin-left: 10px;width: 200px\" [disabled]=\"true\"\r\n              [ngClass]=\"this.checkValidation(true) ? 'a-primary-button': 'a-disabled-button' \" (click)=\"submitMethod()\">\r\n        <i  class=\"fas fa-spinner fa-pulse\"></i>\r\n        LOADING\r\n      </button>\r\n    </div>\r\n  </ng-template>\r\n</nz-modal>\r\n<!--<div class=\"custom-dialog\">-->\r\n<!--  <div fxLayout=\"row\" fxLayoutAlign=\"start\">-->\r\n<!--    <div fxLayout=\"row\" fxLayoutAlign=\"start start\" fxLayoutGap=\"gappx\" style=\"margin-top: -15px; margin-left: -10px;\">-->\r\n<!--      <img src=\"/assets/images/location-g.jpg\" style=\"width: 53px;\">-->\r\n<!--    </div>-->\r\n<!--    <div fxLayout=\"row\" style=\"margin-left: 30px; font-size: 30px; margin-top: -15px;\" fxLayoutGap=\"gappx\">-->\r\n<!--      Add Location Osama-->\r\n<!--    </div>-->\r\n<!--    <div fxLayout=\"row\" style=\"margin-left: 30px; margin-top: -10px;\" fxLayoutGap=\"gappx\">-->\r\n<!--      <span style=\"margin-right: 20px;\">-->\r\n<!--        <nz-select [ngModel]=\"selectedCurrency\" [nzPlaceHolder]=\"'USD'\">-->\r\n<!--        <nz-option nzCustomContent nzLabel={{currency}} nzValue={{currency}}-->\r\n<!--          *ngFor=\"let currency of currencies\">-->\r\n<!--          {{currency}}-->\r\n<!--        </nz-option>-->\r\n<!--      </nz-select>-->\r\n<!--  </span>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n\r\n<!--<div mat-dialog-content class=\"content-cl\">-->\r\n\r\n<!--  <nav  mat-tab-nav-bar class=\"nav-container d-none d-sm-flex\">-->\r\n<!--      <a mat-tab-link-->\r\n<!--        *ngFor=\"let e of tabs\"-->\r\n<!--        [active]=\"e.id === activeTab\"-->\r\n<!--        (click)=\"activeTab = e.id\">-->\r\n<!--        {{e.label | translate}}-->\r\n<!--      </a>-->\r\n<!--  </nav>-->\r\n\r\n<!--  <div class=\"container-general tabs-font\">-->\r\n<!--    <anms-general-details *ngIf=\"activeTab === 'GEN'\"></anms-general-details>-->\r\n<!--    <anms-geographical    *ngIf=\"activeTab === 'GEO'\"></anms-geographical>-->\r\n<!--    <anms-insurred-values *ngIf=\"activeTab === 'VAL'\"></anms-insurred-values>-->\r\n<!--    <anms-mpl *ngIf=\"activeTab === 'MPL'\"></anms-mpl>-->\r\n<!--    <anms-tand-C *ngIf=\"activeTab === 'TAC'\"></anms-tand-C>-->\r\n<!--    <anms-pricing *ngIf=\"activeTab === 'PRC'\"></anms-pricing>-->\r\n<!--    <anms-cat-Analysis-Info *ngIf=\"activeTab === 'CAT'\"></anms-cat-Analysis-Info>-->\r\n<!--    <anms-more-info       *ngIf=\"activeTab === 'MOR'\"></anms-more-info>-->\r\n<!--  </div>-->\r\n\r\n<!--  </div>-->\r\n\r\n<!--  <div mat-dialog-actions>-->\r\n<!--    <div fxLayout=\"row\" fxLayoutAlign=\"end\" fxLayoutGap=\"7px\" class=\"full-w\">-->\r\n<!--      <button mat-button [mat-dialog-close]=\"false\">Cancel</button>-->\r\n<!--      <button mat-flat-button color=\"primary\" [mat-dialog-close]=\"true\" (click)=\"modifyData()\" >save</button>-->\r\n<!--    </div>-->\r\n<!--  </div>-->\r\n<!--</div>-->\r\n"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.scss":
/*!******************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.scss ***!
  \******************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".container-general {\n  height: 310px; }\n\n.title-div {\n  text-align: center;\n  background: #0292AB;\n  border-radius: 10px;\n  color: white !important; }\n\n.title-color {\n  color: white; }\n\n::ng-deep .ant-select-selection.ant-select-selection--single {\n  border-color: #0292ab;\n  border-radius: 3px !important;\n  border-width: 1px;\n  font-size: 12px !important; }\n\n::ng-deep div#cdk-overlay-15 {\n  pointer-events: auto;\n  width: 100%;\n  position: static; }\n\n:host > > > .ant-select {\n  font-size: 12px !important; }\n\n:host > > > .danger {\n  color: #cd3531;\n  font-size: 12px;\n  font-weight: 500; }\n\n.content-cl {\n  background-color: white;\n  width: 1500px; }\n\n::ng-deep .custom-dialog {\n  width: 1450px !important; }\n\n::ng-deep .my-tabset .ant-select-selection.ant-select-selection--single div div {\n  width: 100%;\n  color: #2b2bff !important; }\n\n::ng-deep .my-tabset .ant-select-selection.ant-select-selection--single {\n  background-color: #f4f6fc; }\n\n::ng-deep nz-tabset.my-tabset > div.ant-tabs-bar.ant-tabs-top-bar.ant-tabs-default-bar.ng-star-inserted > div > div > div > div > div.ant-tabs-ink-bar.ant-tabs-ink-bar-animated {\n  top: 0;\n  background-color: blue;\n  height: 4px; }\n\n::ng-deep nz-tabset.my-tabset .ant-tabs-nav .ant-tabs-tab-active {\n  font-size: 18px;\n  border-top: 4px solid blue;\n  color: blue; }\n\n::ng-deep nz-tabset.my-tabset .ant-tabs-bar {\n  margin: 0;\n  border: none; }\n\n.a-primary-button {\n  color: #FFFFFF !important;\n  background-color: #0700CF;\n  font-weight: 700 !important; }\n\n.a-disabled-button {\n  color: red !important;\n  background-color: grey;\n  font-weight: 700 !important; }\n\n::ng-deep .my-tabset > div.ant-tabs-content.ant-tabs-top-content.ant-tabs-content-animated.ng-star-inserted > div.ant-tabs-tabpane.ng-star-inserted.ant-tabs-tabpane-active {\n  height: 70vh;\n  overflow-y: scroll; }\n\n::ng-deep .cdk-overlay-backdrop.cdk-overlay-backdrop-showing {\n  opacity: 0; }\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none; }\n\ninput[type=number] {\n  -moz-appearance: textfield; }\n\n::ng-deep .my-select > div {\n  border: none;\n  border-bottom: 1px solid blue !important; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvQzpcXEZcXEpvYnNcXGRjbV9mcm9udC9zcmNcXGFwcFxcc2hhcmVkXFxwb3B1cHNcXGdlbmVyYWwtbG9jYXRpb24taW5mby1wb3B1cFxcZ2VuZXJhbC1sb2NhdGlvbi1pbmZvLXBvcHVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBYSxFQUFBOztBQUdmO0VBQ0Usa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQixtQkFBbUI7RUFDbkIsdUJBQXVCLEVBQUE7O0FBR3pCO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0UscUJBQXFCO0VBQ3JCLDZCQUE2QjtFQUM3QixpQkFBaUI7RUFDakIsMEJBQTBCLEVBQUE7O0FBRzVCO0VBQ0Usb0JBQW9CO0VBQ3BCLFdBQVc7RUFDWCxnQkFBZ0IsRUFBQTs7QUFFbEI7RUFDRSwwQkFBMEIsRUFBQTs7QUFFNUI7RUFDRSxjQUFjO0VBQ2QsZUFBYztFQUNkLGdCQUNGLEVBQUE7O0FBRUE7RUFDRSx1QkFBdUI7RUFDdkIsYUFBYSxFQUFBOztBQUdmO0VBQ0Usd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UsV0FBVztFQUNYLHlCQUFrQyxFQUFBOztBQUdwQztFQUNFLHlCQUF5QixFQUFBOztBQUczQjtFQUNFLE1BQU07RUFDTixzQkFBc0I7RUFDdEIsV0FBVyxFQUFBOztBQUdiO0VBQ0UsZUFBZTtFQUNmLDBCQUEwQjtFQUMxQixXQUFXLEVBQUE7O0FBR2I7RUFDRSxTQUFTO0VBQ1QsWUFBWSxFQUFBOztBQUdkO0VBQ0UseUJBQXlCO0VBQ3pCLHlCQUF5QjtFQUN6QiwyQkFBMkIsRUFBQTs7QUFHN0I7RUFDRSxxQkFBcUI7RUFDckIsc0JBQXNCO0VBQ3RCLDJCQUEyQixFQUFBOztBQUc3QjtFQUNFLFlBQVk7RUFDWixrQkFBa0IsRUFBQTs7QUFFcEI7RUFDQyxVQUFVLEVBQUE7O0FBR1g7O0VBRUUsd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UsMEJBQTBCLEVBQUE7O0FBRzVCO0VBQ0UsWUFBWTtFQUNaLHdDQUF3QyxFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvZ2VuZXJhbC1sb2NhdGlvbi1pbmZvLXBvcHVwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lci1nZW5lcmFsIHtcclxuICBoZWlnaHQ6IDMxMHB4O1xyXG59XHJcblxyXG4udGl0bGUtZGl2IHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgYmFja2dyb3VuZDogIzAyOTJBQjtcclxuICBib3JkZXItcmFkaXVzOiAxMHB4O1xyXG4gIGNvbG9yOiB3aGl0ZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4udGl0bGUtY29sb3Ige1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5hbnQtc2VsZWN0LXNlbGVjdGlvbi5hbnQtc2VsZWN0LXNlbGVjdGlvbi0tc2luZ2xlIHtcclxuICBib3JkZXItY29sb3I6ICMwMjkyYWI7XHJcbiAgYm9yZGVyLXJhZGl1czogM3B4ICFpbXBvcnRhbnQ7XHJcbiAgYm9yZGVyLXdpZHRoOiAxcHg7XHJcbiAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCBkaXYjY2RrLW92ZXJsYXktMTUge1xyXG4gIHBvaW50ZXItZXZlbnRzOiBhdXRvO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIHBvc2l0aW9uOiBzdGF0aWM7XHJcbn1cclxuOmhvc3QgPj4+IC5hbnQtc2VsZWN0e1xyXG4gIGZvbnQtc2l6ZTogMTJweCAhaW1wb3J0YW50O1xyXG59XHJcbjpob3N0ID4+PiAuZGFuZ2VyIHtcclxuICBjb2xvcjogI2NkMzUzMTtcclxuICBmb250LXNpemU6MTJweDtcclxuICBmb250LXdlaWdodDo1MDBcclxufVxyXG5cclxuLmNvbnRlbnQtY2wge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG4gIHdpZHRoOiAxNTAwcHg7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuY3VzdG9tLWRpYWxvZyB7XHJcbiAgd2lkdGg6IDE0NTBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLm15LXRhYnNldCAgLmFudC1zZWxlY3Qtc2VsZWN0aW9uLmFudC1zZWxlY3Qtc2VsZWN0aW9uLS1zaW5nbGUgZGl2IGRpdiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgY29sb3I6IHJnYig0MywgNDMsIDI1NSkgIWltcG9ydGFudDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5teS10YWJzZXQgIC5hbnQtc2VsZWN0LXNlbGVjdGlvbi5hbnQtc2VsZWN0LXNlbGVjdGlvbi0tc2luZ2xlIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjRmNmZjO1xyXG59XHJcblxyXG46Om5nLWRlZXAgbnotdGFic2V0Lm15LXRhYnNldCA+IGRpdi5hbnQtdGFicy1iYXIuYW50LXRhYnMtdG9wLWJhci5hbnQtdGFicy1kZWZhdWx0LWJhci5uZy1zdGFyLWluc2VydGVkID4gZGl2ID4gZGl2ID4gZGl2ID4gZGl2ID4gZGl2LmFudC10YWJzLWluay1iYXIuYW50LXRhYnMtaW5rLWJhci1hbmltYXRlZCB7XHJcbiAgdG9wOiAwO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XHJcbiAgaGVpZ2h0OiA0cHg7XHJcbn1cclxuXHJcbjo6bmctZGVlcCBuei10YWJzZXQubXktdGFic2V0ICAuYW50LXRhYnMtbmF2IC5hbnQtdGFicy10YWItYWN0aXZlIHtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgYm9yZGVyLXRvcDogNHB4IHNvbGlkIGJsdWU7XHJcbiAgY29sb3I6IGJsdWU7XHJcbn1cclxuXHJcbjo6bmctZGVlcCBuei10YWJzZXQubXktdGFic2V0ICAuYW50LXRhYnMtYmFyIHtcclxuICBtYXJnaW46IDA7XHJcbiAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG4uYS1wcmltYXJ5LWJ1dHRvbiB7XHJcbiAgY29sb3I6ICNGRkZGRkYgIWltcG9ydGFudDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDcwMENGO1xyXG4gIGZvbnQtd2VpZ2h0OiA3MDAgIWltcG9ydGFudDtcclxufVxyXG5cclxuLmEtZGlzYWJsZWQtYnV0dG9uIHtcclxuICBjb2xvcjogcmVkICFpbXBvcnRhbnQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogZ3JleTtcclxuICBmb250LXdlaWdodDogNzAwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubXktdGFic2V0ID4gZGl2LmFudC10YWJzLWNvbnRlbnQuYW50LXRhYnMtdG9wLWNvbnRlbnQuYW50LXRhYnMtY29udGVudC1hbmltYXRlZC5uZy1zdGFyLWluc2VydGVkID4gZGl2LmFudC10YWJzLXRhYnBhbmUubmctc3Rhci1pbnNlcnRlZC5hbnQtdGFicy10YWJwYW5lLWFjdGl2ZSB7XHJcbiAgaGVpZ2h0OiA3MHZoO1xyXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcclxufVxyXG46Om5nLWRlZXAgLmNkay1vdmVybGF5LWJhY2tkcm9wLmNkay1vdmVybGF5LWJhY2tkcm9wLXNob3dpbmcge1xyXG4gb3BhY2l0eTogMDtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1udW1iZXJdIHtcclxuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5teS1zZWxlY3QgPiBkaXYge1xyXG4gIGJvcmRlcjogbm9uZTtcclxuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgYmx1ZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.ts":
/*!****************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.ts ***!
  \****************************************************************************************************/
/*! exports provided: GeneralLocationInfoPopupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeneralLocationInfoPopupComponent", function() { return GeneralLocationInfoPopupComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location.model */ "./src/app/shared/popups/general-location-info-popup/models/location.model.ts");
/* harmony import */ var _models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./models/location-field-codes.const */ "./src/app/shared/popups/general-location-info-popup/models/location-field-codes.const.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_actions__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.actions */ "./src/app/dcm/modules/upload/store/import/import.actions.ts");
/* harmony import */ var _angular_material__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "./node_modules/@angular/material/esm5/dialog.es5.js");
/* harmony import */ var ng_zorro_antd__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ng-zorro-antd */ "./node_modules/ng-zorro-antd/fesm5/ng-zorro-antd.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./models/location-ref-data.const */ "./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (undefined && undefined.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};














var GeneralLocationInfoPopupComponent = /** @class */ (function () {
    function GeneralLocationInfoPopupComponent(dialogRef, data, store, cdrf, cleansingService, message) {
        var _this = this;
        this.dialogRef = dialogRef;
        this.data = data;
        this.store = store;
        this.cdrf = cdrf;
        this.cleansingService = cleansingService;
        this.message = message;
        this.dataRows = [];
        this.model = new FormModel('', '', 0);
        this.modelVisibility = false;
        this.location = {};
        this.errorFields = [];
        this.isEditMode = false;
        this.isLoading = false;
        this.percentages = {
            building_percentage: 0.2,
            content_percentage: 0.8,
        };
        this.multiple = {};
        this.isMultipleEdit = false;
        this.activeTab = 'GEN';
        this.tabs = [
            { label: 'General', id: 'GEN', state: 'VALID' },
            { label: 'Geographical', id: 'GEO', state: 'VALID' },
            { label: 'Insured Values', id: 'VAL', state: 'VALID' },
            { label: 'MPL', id: 'MPL', state: 'VALID' },
            { label: 'TAC', id: 'TAC', state: 'VALID' },
            { label: 'Pricing', id: 'PRC', state: 'VALID' },
            { label: 'CAT Analyse & CAT Information', id: 'CAT', state: 'VALID' },
            { label: 'More Inforamation', id: 'MOR', state: 'VALID' },
        ];
        this.selectedCurrency = 'USD';
        // this.store.select(selectCleansingData).subscribe(data => this.dataRows = JSON.parse(JSON.stringify(data)));
        this.popupModel = lodash__WEBPACK_IMPORTED_MODULE_12__["cloneDeep"](_app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_5__["locationGlobalModel"]);
        this.mondatoryFields = lodash__WEBPACK_IMPORTED_MODULE_12__["cloneDeep"](_app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_5__["mondatoryFields"]);
        this.importFileData$ = this.store.select(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_7__["selectImportObjectState"]);
        this.store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_2__["selectCleansingErrors"]).subscribe(function (data) {
            if (data) {
                // console.log('==> data errors')
                // console.log(data)
                _this.errors = data;
                Object.keys(data.errors).forEach(function (e) {
                    Object.keys(data.errors[e]).forEach(function (k) {
                        data.errors[e][k].some(function (i) {
                            if (_this.data && _this.data.original_indices.includes(i))
                                _this.errorFields.push(e);
                        });
                    });
                });
            }
        });
        this.stage$ = this.store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_2__["selectCleansingStage"]);
        this.importFileData$.subscribe(function (importData) {
            _this.fileData = importData.fileData;
            _this.selectedSheet = importData.selectedSheet;
        });
    }
    /* currencies = [
      {value: 'usd', viewValue: 'USD'},
      {value: 'eur', viewValue: 'EUR'},
    ] */
    GeneralLocationInfoPopupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.data ? Object.keys(_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"]).map(function (key) { return _this.location[_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"][key]] = _this.data.line[key]; }) : Object.keys(_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"]).map(function (key) { return _this.location[_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"][key]] = null; });
        this.isEditMode = !!this.data;
        this.data ? this.isMultipleEdit = this.data.isMultipleEdit : this.isMultipleEdit = false;
        if (this.data && this.data.isMultipleEdit)
            this.multiple = this.data.multiple;
        if (this.isEditMode) {
            this.adjustMandatoryFields();
            this.cdrf.detectChanges();
        }
        this.currencies = _models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_13__["LOCATION_REFERENCE_DATA"].get('tiv_currency');
        this.initialiseEmptyFields(this.isEditMode);
        this.cdrf.detectChanges();
    };
    GeneralLocationInfoPopupComponent.prototype.adjustMandatoryFields = function () {
        var _this = this;
        if (this.data.isMultipleEdit) {
            Object.keys(this.mondatoryFields).forEach(function (k) {
                Object.keys(_this.mondatoryFields[k]).forEach(function (i) {
                    (_this.errorFields.includes(i)) ? _this.mondatoryFields[k][i] = true : _this.mondatoryFields[k][i] = undefined;
                });
            });
        }
        else {
            Object.keys(this.mondatoryFields).forEach(function (k) {
                Object.keys(_this.mondatoryFields[k]).forEach(function (i) {
                    if (_this.data.line[i] && typeof (_this.data.line[i]) == 'number') {
                        (_this.mondatoryFields[k][i]) || (_this.data.line[i] && _this.data.line[i].length > 0 && _this.mondatoryFields[k][i]) ? _this.mondatoryFields[k][i] = false : '';
                        //  (this.errorFields.includes(i)) ? this.mondatoryFields[k][i] = true : this.mondatoryFields[k][i] = undefined ;
                    }
                    else {
                        (_this.data.line[i] && _this.data.line[i].length > 0 && _this.mondatoryFields[k][i]) || (_this.data.line[i] && _this.data.line[i].length > 0 && _this.mondatoryFields[k][i]) ? _this.mondatoryFields[k][i] = false : '';
                    }
                });
            });
            Object.keys(this.mondatoryFields).forEach(function (k) {
                Object.keys(_this.mondatoryFields[k]).forEach(function (i) {
                    (_this.multiple[i]) ? _this.mondatoryFields[k][i] = undefined : '';
                });
            });
            Object.keys(this.mondatoryFields).forEach(function (k) {
                Object.keys(_this.mondatoryFields[k]).forEach(function (i) {
                    (_this.errorFields.includes(i)) ? _this.mondatoryFields[k][i] = true : '';
                });
            });
        }
    };
    /* addLocation(payload){
      this.cleansingService.addLocation(payload, this.fileData.fileId).subscribe((res: any) => {
        const newFileMetadata = {...this.fileData};
        newFileMetadata.fileId = res;
        newFileMetadata.nrows++;
        this.store.dispatch(new ActionUpdateFileData({ fileData: newFileMetadata }));
        this.store.dispatch(new ActionCleansingRefreshStage())
        this.store.dispatch(new ActionCleansingNextStep())
        this.dialogRef.close();
      });
    } */
    GeneralLocationInfoPopupComponent.prototype.addLocation = function (payload) {
        var _this = this;
        var fileId = 'None';
        var jobId = 'None';
        if (this.fileData) {
            fileId = this.fileData.fileId;
        }
        this.cleansingService.addLocation(payload, fileId).subscribe(function (res) {
            if (_this.fileData && res && _this.errors) {
                var newFileMetadata = __assign({}, _this.fileData);
                newFileMetadata.fileId = res;
                newFileMetadata.nrows++;
                _this.store.dispatch(new _app_dcm_modules_upload_store_import_import_actions__WEBPACK_IMPORTED_MODULE_8__["ActionUpdateFileData"]({ fileData: newFileMetadata }));
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionCleansingRefreshStage"]());
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionCleansingNextStep"]());
            }
            else {
                fileId = res;
                _this.store.dispatch(new _app_dcm_modules_upload_store_import_import_actions__WEBPACK_IMPORTED_MODULE_8__["ActionUpdateFileId"]({ fileId: fileId }));
                _this.getCurrentData(fileId, jobId);
            }
            _this.dialogRef.close();
        });
    };
    GeneralLocationInfoPopupComponent.prototype.editLocation = function (payload) {
        var _this = this;
        this.getRequestBody(payload);
        this.cleansingService.editLocation(payload, this.fileData.fileId, this.data.original_indices).subscribe(function (res) {
            var newFileMetadata = __assign({}, _this.fileData);
            newFileMetadata.fileId = res;
            newFileMetadata.page = _this.data.current_page;
            _this.store.dispatch(new _app_dcm_modules_upload_store_import_import_actions__WEBPACK_IMPORTED_MODULE_8__["ActionUpdateFileData"]({ fileData: newFileMetadata }));
            _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionCleansingRefreshStage"]());
            _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionCleansingNextStep"]());
            _this.stage$.subscribe(function (data) {
                if (data === 'FINISH') {
                    _this.isLoading = false;
                    _this.dialogRef.close();
                }
            });
        });
    };
    GeneralLocationInfoPopupComponent.prototype.getRequestBody = function (payload) {
        var _this = this;
        Object.keys(this.data.line).filter(function (p) { return _this.data.line[p] == null; }).forEach(function (e) {
            (payload.findIndex(function (p) { return p.field_code === e; }) == -1) ? payload.push({ field_code: e, value: _this.data.backup[e] }) : '';
        });
        return payload;
    };
    GeneralLocationInfoPopupComponent.prototype.getCurrentData = function (fileId, jobId) {
        var _this = this;
        var selectedSheet = 0;
        // const  fileId = this.fileId;
        // const  jobId = 'None';
        this.cleansingService.getHeadersEmptyTab(1).subscribe(function (data) {
            if (data) {
                // this.headers = data['headers'];
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionLoadHeaders"]({ headers: data['headers'] }));
                var initColunmState = data['columnState'];
                var columnStructure = data['columnStructure'];
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionColumnState"]({ columnState: initColunmState }));
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionColumnStructure"]({ columnStructure: columnStructure }));
                // this.columnState$.next(data['columnState']);
                // this.columnStructure$.next(data['columnStructure']);
                // this.headers$.next(data['headers']);
            }
        });
        this.cleansingService.getExposuresUpload(fileId).subscribe(function (data) {
            console.log('getExposuresUpload => ');
            if (data) {
                // this.exposures = data;
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_3__["ActionLoadAllData"]({ data: data }));
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        /* this.cleansingService.getMetadataUpload(jobId).subscribe((data) => {
          if (data) {
            // this.metadata = data;
            this.store.dispatch(new ActionLoadCsMetadata({ csMetadata: data }));
          }
        },
          () => {
            this.cdrf.detectChanges();
          }); */
    };
    GeneralLocationInfoPopupComponent.prototype.submitMethod = function () {
        var _this = this;
        if (this.checkValidation(false)) {
            this.isLoading = true;
            var payload_1 = [];
            Object.keys(this.location).filter(function (e) { return _this.location[e] && _models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"][e]; }).forEach(function (t) {
                payload_1.push({ field_code: _models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"][t], value: _this.location[t] });
            });
            if (this.isEditMode)
                this.editLocation(payload_1);
            else
                this.addLocation(payload_1);
        }
    };
    // tst
    GeneralLocationInfoPopupComponent.prototype.modifyData = function () {
        /* this.store.select(selectPopUp).subscribe(dataPopUp => {
           this.dataRows.forEach(data => {
             if (data['Id'] === dataPopUp.location.id){
               Object.keys( dataPopUp.location).forEach(e => {
                 if (e !== 'id'){
                   data ['target_' + e] = dataPopUp.location[e];
                 }
               });
             }
           });
     
         this.store.dispatch(new ActionLoadAllData({data: this.dataRows}));
     
         })*/
    };
    GeneralLocationInfoPopupComponent.prototype.onClose = function () {
        this.dialogRef.close();
    };
    GeneralLocationInfoPopupComponent.prototype.checkValidation = function (isButton) {
        var keys = Object.keys(this.mondatoryFields);
        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {
            var key = keys_1[_i];
            if (Object.values(this.mondatoryFields[key]).includes(true)) {
                if (!isButton)
                    this.message.create('error', "A mondatory field is messing in the [" + key + "] tab");
                return false;
            }
        }
        return true;
    };
    GeneralLocationInfoPopupComponent.prototype.initialiseEmptyFields = function (isEdit) {
        var _this = this;
        Object.keys(this.location).forEach(function (targetKey) {
            if (targetKey.includes('_currency') && _this.location[targetKey] === (isEdit ? '' : null)) {
                _this.location[targetKey] = 'USD';
            }
            if (targetKey.includes('_unit') && _this.location[targetKey] === (isEdit ? '' : null)) {
                _this.location[targetKey] = null;
            }
        });
    };
    GeneralLocationInfoPopupComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-general-location-info-popup',
            template: __webpack_require__(/*! ./general-location-info-popup.component.html */ "./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./general-location-info-popup.component.scss */ "./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.scss")]
        }),
        __param(1, Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"])(_angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MAT_DIALOG_DATA"])),
        __metadata("design:paramtypes", [_angular_material__WEBPACK_IMPORTED_MODULE_9__["MatDialogRef"], Object, _ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
            _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_4__["CleansingService"], ng_zorro_antd__WEBPACK_IMPORTED_MODULE_11__["NzMessageService"]])
    ], GeneralLocationInfoPopupComponent);
    return GeneralLocationInfoPopupComponent;
}());

var FormModel = /** @class */ (function () {
    function FormModel(field1, field2, field3) {
        this.field1 = field1;
        this.field2 = field2;
        this.field3 = field3;
    }
    return FormModel;
}());


/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/geographical/geographical.component.html":
/*!****************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/geographical/geographical.component.html ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"height: 70vh\">\r\n  <nz-tabset class=\"my-geographical\" [nzSelectedIndex]=\"currentTabIndex\">\r\n    <nz-tab *ngFor=\"let tab of tabModel;let tabIndex=index\" [nzTitle]=\"tab.title\">\r\n      <div class=\"global-tab-header\" style=\"background-color: white;padding: 15px 25px;margin: 20px 10%;\">\r\n        <nz-row style=\"padding: 0 20%\">\r\n          <nz-col *ngFor=\"let item of tab.content.header\" nzSpan=\"24\">\r\n            <nz-row>\r\n              <nz-col nzSpan=\"1\" style=\"height: 55px\">\r\n                <img [src]=\"item.icon\" style=\"width: 100%;height: 100%\">\r\n              </nz-col>\r\n              <nz-col nzSpan=\"22\" nzOffset=\"1\" style=\"height: 55px\">\r\n                <input nz-input [(ngModel)]=\"locationData[item.field_code]\" [placeholder]=\"getPlaceHolder(item)\" nzSize=\"large\" style=\"background-color: #f4f6fc;height: 100%\"\r\n                       (ngModelChange)=\"checkMondatory($event, item.field_code)\"\r\n                       [ngStyle]=\"{'border': mondatories[item.field_code] ? '1px solid red' : ''}\" [disabled]=\"item.disabled\" />\r\n              </nz-col>\r\n            </nz-row>\r\n          </nz-col>\r\n        </nz-row>\r\n      </div>\r\n      <div class=\"my-tab-content\" style=\"margin: 0 10%;margin-bottom: 20px;\">\r\n        <nz-row>\r\n          <nz-col *ngFor=\"let val of tab.content.body;let i = index\"\r\n                  [nzSpan]=\"val.colSpan\" [nzOffset]=\"val.offset\"\r\n                  [ngStyle]=\"{'height' : tabIndex == 0 ? '42vh' : '50vh'}\"\r\n                  style=\"background-color: white;padding: 20px\">\r\n            <ng-container [ngTemplateOutlet]=\"val.label == 'Geocoding' ? geocodingDiv : default\"></ng-container>\r\n            <ng-template #default>\r\n              <div style=\"margin-bottom: 10px\">\r\n                <span style=\"font-size: 18px;font-weight: bold;\">{{val.label}}</span>\r\n              </div>\r\n              <div style=\"width: 100%; height: 40px; margin-bottom: 10px\" *ngFor=\"let valItem of val.items\">\r\n                <ng-container [ngSwitch]=\"valItem.type\">\r\n                  <nz-select  [nzPlaceHolder]=\"getPlaceHolder(valItem)\" nzShowSearch nzAllowClear nzCustomContent *ngSwitchCase=\"'list'\" class=\"my-select\"\r\n                              [(ngModel)]=\"locationData[valItem.field_code]\"  (ngModelChange)=\"checkMondatory($event, valItem.field_code)\"\r\n                              [disabled]=\"valItem.disabled || tab.title === 'Final Address'\" [ngStyle]=\"{'border': mondatories[valItem.field_code] ? '1px solid red' : ''}\" style=\"width: 100%;\">\r\n                    <nz-option nzLabel={{o}} nzValue={{o}}\r\n                               *ngFor=\"let o of getReferenceData(valItem.field_code)\">\r\n                      {{o}}\r\n                    </nz-option>\r\n                  </nz-select>\r\n                  <input *ngSwitchCase=\"'inputNumber'\" type=\"text\" only-number [(ngModel)]=\"locationData[valItem.field_code]\" [placeholder]=\"getPlaceHolder(valItem)\" (ngModelChange)=\"checkMondatory($event, valItem.field_code)\"\r\n                         [disabled]=\"valItem.disabled || tab.title === 'Final Address'\" [ngStyle]=\"{'border': mondatories[valItem.field_code] ? '1px solid red' : ''}\" style=\"background-color: #f4f6fc;height: 100%;width: 100%;padding-left: 11px\" />\r\n                  <input *ngSwitchDefault nz-input [(ngModel)]=\"locationData[valItem.field_code]\" [placeholder]=\"getPlaceHolder(valItem)\" (ngModelChange)=\"checkMondatory($event, valItem.field_code)\"\r\n                         [disabled]=\"valItem.disabled || tab.title === 'Final Address'\" [ngStyle]=\"{'border': mondatories[valItem.field_code] ? '1px solid red' : ''}\" nzSize=\"large\" style=\"background-color: #f4f6fc;height: 100%\" />\r\n                </ng-container>\r\n              </div>\r\n            </ng-template>\r\n            <ng-template #geocodingDiv style=\"cursor: pointer\">\r\n              <div class=\"in-between-dev\" style=\"background-color: white;position: relative;top: 20%;cursor: pointer\">\r\n                <nz-row *ngFor=\"let valItem of val.items\" style=\"margin-bottom: 20px\">\r\n                  <nz-col nzSpan=\"24\" style=\"height: 55px;background-color: #f4f6fc;text-align: center\">\r\n                    <div>{{valItem.label}}</div>\r\n                  </nz-col>\r\n                  <nz-col nzSpan=\"24\" style=\"height: 55px\">\r\n                    <img [src]=\"valItem.icon\" style=\"width: 100%;height: 100%\">\r\n                  </nz-col>\r\n                </nz-row>\r\n              </div>\r\n            </ng-template>\r\n          </nz-col>\r\n        </nz-row>\r\n      </div>\r\n    </nz-tab>\r\n  </nz-tabset>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/geographical/geographical.component.scss":
/*!****************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/geographical/geographical.component.scss ***!
  \****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".btn-geocode {\n  min-width: 100%;\n  background-color: #005373;\n  color: white; }\n\ninput {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  outline: 0;\n  border-width: 0px 0 1px;\n  border-color: #2b2bff;\n  border-radius: 0;\n  font-size: 12px !important;\n  color: #2b2bff !important; }\n\ninput:focus {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  border-color: #2b2bff;\n  outline: none;\n  box-shadow: 0 0 0 0;\n  color: #2b2bff !important; }\n\n.danger {\n  color: #cd3531;\n  font-size: 12px;\n  font-weight: 500; }\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none; }\n\ninput[type=number] {\n  -moz-appearance: textfield; }\n\n::ng-deep .my-geographical > div.ant-tabs-bar.ant-tabs-top-bar.ant-tabs-default-bar.ng-star-inserted > div > div > div {\n  text-align: center !important;\n  background-color: white; }\n\ninput::-webkit-input-placeholder {\n  color: blue; }\n\ninput:-ms-input-placeholder {\n  color: blue; }\n\ninput::-ms-input-placeholder {\n  color: blue; }\n\ninput::placeholder {\n  color: blue; }\n\n::ng-deep .my-geographical > div.ant-tabs-bar.ant-tabs-top-bar.ant-tabs-default-bar.ng-star-inserted > div > div > div > div {\n  height: 40px; }\n\n::ng-deep .my-geographical > div.ant-tabs-bar.ant-tabs-top-bar.ant-tabs-default-bar.ng-star-inserted > div > div > div > div > div:nth-child(1) > div.ant-tabs-tab.ng-star-inserted.ant-tabs-tab-active {\n  font-size: 12px; }\n\n.custom-select {\n  width: 100%; }\n\n::ng-deep nz-tabset.my-geographical .ant-tabs-nav .ant-tabs-tab-active {\n  font-size: 18px;\n  border-top: none;\n  border-bottom: 2px solid blue;\n  padding-bottom: 2px;\n  color: blue; }\n\n::ng-deep nz-tabset.my-geographical .ant-tabs-ink-bar {\n  display: none !important; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvZ2VvZ3JhcGhpY2FsL0M6XFxGXFxKb2JzXFxkY21fZnJvbnQvc3JjXFxhcHBcXHNoYXJlZFxccG9wdXBzXFxnZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXBcXGdlb2dyYXBoaWNhbFxcZ2VvZ3JhcGhpY2FsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLHlCQUF5QjtFQUN6QixZQUFZLEVBQUE7O0FBS2Q7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YsdUJBQXVCO0VBQ3ZCLHFCQUE4QjtFQUM5QixnQkFBZ0I7RUFDaEIsMEJBQTBCO0VBQzFCLHlCQUFrQyxFQUFBOztBQUlwQztFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLHFCQUE4QjtFQUM5QixhQUFjO0VBQ2QsbUJBQW9CO0VBQ3BCLHlCQUFrQyxFQUFBOztBQUdwQztFQUNFLGNBQWM7RUFDZCxlQUFjO0VBQ2QsZ0JBQ0YsRUFBQTs7QUFFQTs7RUFFRSx3QkFBd0IsRUFBQTs7QUFHMUI7RUFDRSwwQkFBMEIsRUFBQTs7QUFHNUI7RUFDRSw2QkFBNkI7RUFDN0IsdUJBQXVCLEVBQUE7O0FBR3pCO0VBQ0UsV0FBVyxFQUFBOztBQURiO0VBQ0UsV0FBVyxFQUFBOztBQURiO0VBQ0UsV0FBVyxFQUFBOztBQURiO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0UsWUFBWSxFQUFBOztBQUdkO0VBQ0UsZUFBZSxFQUFBOztBQUVqQjtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIsNkJBQTZCO0VBQzdCLG1CQUFtQjtFQUNuQixXQUFXLEVBQUE7O0FBR2I7RUFDRSx3QkFBd0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9wb3B1cHMvZ2VuZXJhbC1sb2NhdGlvbi1pbmZvLXBvcHVwL2dlb2dyYXBoaWNhbC9nZW9ncmFwaGljYWwuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLWdlb2NvZGUge1xyXG4gIG1pbi13aWR0aDogMTAwJTtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1MzczO1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuXHJcblxyXG5pbnB1dCB7XHJcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG4gIGJvcmRlci10b3A6IG5vbmU7XHJcbiAgb3V0bGluZTogMDtcclxuICBib3JkZXItd2lkdGg6IDBweCAwIDFweDtcclxuICBib3JkZXItY29sb3I6IHJnYig0MywgNDMsIDI1NSk7XHJcbiAgYm9yZGVyLXJhZGl1czogMDtcclxuICBmb250LXNpemU6IDEycHggIWltcG9ydGFudDtcclxuICBjb2xvcjogcmdiKDQzLCA0MywgMjU1KSAhaW1wb3J0YW50O1xyXG5cclxufVxyXG5cclxuaW5wdXQ6Zm9jdXMge1xyXG4gIGJvcmRlci1sZWZ0OiBub25lO1xyXG4gIGJvcmRlci1yaWdodDogbm9uZTtcclxuICBib3JkZXItdG9wOiBub25lO1xyXG4gIGJvcmRlci1jb2xvcjogcmdiKDQzLCA0MywgMjU1KTtcclxuICBvdXRsaW5lIDogbm9uZTtcclxuICBib3gtc2hhZG93OiAwIDAgMCAwIDtcclxuICBjb2xvcjogcmdiKDQzLCA0MywgMjU1KSAhaW1wb3J0YW50O1xyXG5cclxufVxyXG4uZGFuZ2VyIHtcclxuICBjb2xvcjogI2NkMzUzMTtcclxuICBmb250LXNpemU6MTJweDtcclxuICBmb250LXdlaWdodDo1MDBcclxufVxyXG5cclxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1udW1iZXJdIHtcclxuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5teS1nZW9ncmFwaGljYWwgPiBkaXYuYW50LXRhYnMtYmFyLmFudC10YWJzLXRvcC1iYXIuYW50LXRhYnMtZGVmYXVsdC1iYXIubmctc3Rhci1pbnNlcnRlZCA+IGRpdiA+IGRpdiA+IGRpdiB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyICFpbXBvcnRhbnQ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuXHJcbmlucHV0OjpwbGFjZWhvbGRlciB7XHJcbiAgY29sb3I6IGJsdWU7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAubXktZ2VvZ3JhcGhpY2FsID4gZGl2LmFudC10YWJzLWJhci5hbnQtdGFicy10b3AtYmFyLmFudC10YWJzLWRlZmF1bHQtYmFyLm5nLXN0YXItaW5zZXJ0ZWQgPiBkaXYgPiBkaXYgPiBkaXYgPiBkaXYge1xyXG4gIGhlaWdodDogNDBweDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5teS1nZW9ncmFwaGljYWwgPiBkaXYuYW50LXRhYnMtYmFyLmFudC10YWJzLXRvcC1iYXIuYW50LXRhYnMtZGVmYXVsdC1iYXIubmctc3Rhci1pbnNlcnRlZCA+IGRpdiA+IGRpdiA+IGRpdiA+IGRpdiA+IGRpdjpudGgtY2hpbGQoMSkgPiBkaXYuYW50LXRhYnMtdGFiLm5nLXN0YXItaW5zZXJ0ZWQuYW50LXRhYnMtdGFiLWFjdGl2ZSB7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG59XHJcbi5jdXN0b20tc2VsZWN0e1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG46Om5nLWRlZXAgbnotdGFic2V0Lm15LWdlb2dyYXBoaWNhbCAgLmFudC10YWJzLW5hdiAuYW50LXRhYnMtdGFiLWFjdGl2ZSB7XHJcbiAgZm9udC1zaXplOiAxOHB4O1xyXG4gIGJvcmRlci10b3A6IG5vbmU7XHJcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIGJsdWU7XHJcbiAgcGFkZGluZy1ib3R0b206IDJweDtcclxuICBjb2xvcjogYmx1ZTtcclxufVxyXG5cclxuOjpuZy1kZWVwIG56LXRhYnNldC5teS1nZW9ncmFwaGljYWwgIC5hbnQtdGFicy1pbmstYmFyIHtcclxuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/geographical/geographical.component.ts":
/*!**************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/geographical/geographical.component.ts ***!
  \**************************************************************************************************/
/*! exports provided: GeographicalComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeographicalComponent", function() { return GeographicalComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _app_shared_services_geocoding_geo_coding_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/shared/services/geocoding/geo-coding.service */ "./src/app/shared/services/geocoding/geo-coding.service.ts");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _app_dcm_popups_models_Address_geo_model__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/dcm/popups/models/Address-geo.model */ "./src/app/dcm/popups/models/Address-geo.model.ts");
/* harmony import */ var _models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../models/location-ref-data.const */ "./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location-field-codes.const */ "./src/app/shared/popups/general-location-info-popup/models/location-field-codes.const.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var GeographicalComponent = /** @class */ (function () {
    function GeographicalComponent(formBuilder, cdrf, cleansingService, geoCodingService, store$) {
        this.formBuilder = formBuilder;
        this.cdrf = cdrf;
        this.cleansingService = cleansingService;
        this.geoCodingService = geoCodingService;
        this.store$ = store$;
        this.newMarker = true;
        this.latitude = 40.761819;
        this.longitude = -73.997533;
        this.addressGeo = new _app_dcm_popups_models_Address_geo_model__WEBPACK_IMPORTED_MODULE_5__["AddressGeoModel"]();
    }
    GeographicalComponent.prototype.renderRasterMap = function () {
        var mapOptions = {};
        if (!this.map) {
            this.map = L.map(this.responseMapDiv.nativeElement, mapOptions);
        }
        var zoom = 12;
        this.map.setView([this.latitude, this.longitude], zoom);
        if (this.newMarker) {
            this.marker = L.marker([this.latitude, this.longitude], { draggable: true }).addTo(this.map);
        }
        var apiKey = 'hAFiqsGeyuy1iEKAfbg3yIfoNAipaewo';
        var requestUri = 'https://api.pitneybowes.com/location-intelligence/geomap/v1/tile/osm/{z}/{x}/{y}.png?api_key='
            + apiKey + '&theme=bronze';
        var tileLayer = L.tileLayer(requestUri, { attribution: '<a target="_blank" href="http://www.openstreetmap.org/copyright">&copy; OpenStreetMap contributors</a>' });
        this.map.addLayer(tileLayer);
    };
    GeographicalComponent.prototype.ngOnInit = function () {
    };
    GeographicalComponent.prototype.geoCode = function (type, country, address) {
        var _this = this;
        switch (type) {
            case 'single':
                this.geoCodingService.geoCodeSingleLine(country, address).subscribe(function (data) {
                    _this.getCordinates(data);
                    /* this.map.removeLayer(this.marker);
                     this.renderRasterMap();*/
                    _this.newMarker = false;
                    _this.renderRasterMap();
                });
                break;
            case 'multi':
                this.geoCodingService.geoCodeMultiLines().subscribe(function (data) { return console.log(data); });
        }
        /*
            this.renderRasterMap();
        */
        this.cdrf.detectChanges();
    };
    GeographicalComponent.prototype.reverseGeoCode = function (lat, lng) {
        var _this = this;
        this.reverseGeoCodeInfo$ = this.geoCodingService.reverseGeoCode(lat, lng);
        this.geoCodingService.reverseGeoCode(lat, lng).subscribe(function (data) {
            _this.addressGeo.fullAddress = _this.returnFullAddress(data);
            _this.fillAllFieldsReverseGeoCode(data);
            _this.cdrf.detectChanges();
        });
    };
    GeographicalComponent.prototype.allCountriesList = function () {
        var _this = this;
        this.cleansingService.getCountries().subscribe(function (data) {
            // console.log(data.countries)
            if (data)
                _this.countries = data.countries;
            if (!_this.cdrf['destroyed']) {
                _this.cdrf.detectChanges();
            }
        });
    };
    GeographicalComponent.prototype.returnFullAddress = function (data) {
        if (data.candidates[0].formattedStreetAddress !== undefined && data.candidates[0].formattedLocationAddress !== undefined)
            return data.candidates[0].formattedStreetAddress + ' ' + data.candidates[0].formattedLocationAddress;
        return '';
    };
    GeographicalComponent.prototype.getCordinates = function (data) {
        this.longitude = data.responses[0].candidates[0].geometry.coordinates[0];
        this.latitude = data.responses[0].candidates[0].geometry.coordinates[1];
        var newLatLng = new L.LatLng(this.latitude, this.longitude);
        this.marker.setLatLng(newLatLng);
    };
    GeographicalComponent.prototype.fillAllFieldsReverseGeoCode = function (data) {
        this.addressGeo.state = data.candidates[0].address.areaName3;
        this.addressGeo.city = data.candidates[0].address.areaName3;
        this.addressGeo.country = data.candidates[0].address.country;
        this.addressGeo.country = data.candidates[0].address.country;
        this.addressGeo.county = data.candidates[0].address.areaName2;
        this.addressGeo.street = data.candidates[0].address.streetName;
        this.addressGeo.zipCode = data.candidates[0].address.postCode1;
    };
    GeographicalComponent.prototype.validateFormControl = function (controName) {
        var control = this.geoGraphicalForm.get(controName);
        return control.invalid && control.touched;
    };
    GeographicalComponent.prototype.onSubmit = function () {
    };
    GeographicalComponent.prototype.getReferenceData = function (fieldCode) {
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_7__["LOCATION_FIELD_CODES_ENUM"].cleansed_state)
            return _models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_6__["STATES"][this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_7__["LOCATION_FIELD_CODES_ENUM"].cleansed_country]] || [];
        return _models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_REFERENCE_DATA"].get(fieldCode);
    };
    GeographicalComponent.prototype.checkMondatory = function (ev, fieldCode) {
        var _this = this;
        if (this.mondatories[fieldCode] !== undefined)
            this.mondatories[fieldCode] = !ev;
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_7__["LOCATION_FIELD_CODES_ENUM"].cleansed_country) {
            this.cleansingService.getDataByCountry(ev).subscribe(function (data) {
                _this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_7__["LOCATION_FIELD_CODES_ENUM"].cleansed_iso2] = data.ISO2 || null;
                _this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_7__["LOCATION_FIELD_CODES_ENUM"].cleansed_iso3] = data.ISO3 || null;
                // this.locationData[LOCATION_FIELD_CODES_ENUM.cleansed_latitude] = data.Latitude || '';
                // this.locationData[LOCATION_FIELD_CODES_ENUM.cleansed_longitude] = data.Longitude || '';
                _this.cdrf.detectChanges();
            });
        }
    };
    GeographicalComponent.prototype.getPlaceHolder = function (item) {
        switch (this.multiple[item.field_code]) {
            case true: return "Multiple";
            default: return item.label;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["ViewChild"])('responseMapDiv'),
        __metadata("design:type", _angular_core__WEBPACK_IMPORTED_MODULE_0__["ElementRef"])
    ], GeographicalComponent.prototype, "responseMapDiv", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], GeographicalComponent.prototype, "tabModel", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], GeographicalComponent.prototype, "locationData", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], GeographicalComponent.prototype, "mondatories", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], GeographicalComponent.prototype, "multiple", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], GeographicalComponent.prototype, "isMultipleEdit", void 0);
    GeographicalComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-geographical',
            template: __webpack_require__(/*! ./geographical.component.html */ "./src/app/shared/popups/general-location-info-popup/geographical/geographical.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./geographical.component.scss */ "./src/app/shared/popups/general-location-info-popup/geographical/geographical.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"],
            _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_4__["CleansingService"],
            _app_shared_services_geocoding_geo_coding_service__WEBPACK_IMPORTED_MODULE_1__["GeoCodingService"], _ngrx_store__WEBPACK_IMPORTED_MODULE_2__["Store"]])
    ], GeographicalComponent);
    return GeographicalComponent;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/geographical/store-part/general-location-geographical.actions.ts":
/*!****************************************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/geographical/store-part/general-location-geographical.actions.ts ***!
  \****************************************************************************************************************************/
/*! exports provided: GeneralLocationGeographicalActionTypes, LoadGeneralLocationGeographicals */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeneralLocationGeographicalActionTypes", function() { return GeneralLocationGeographicalActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadGeneralLocationGeographicals", function() { return LoadGeneralLocationGeographicals; });
var GeneralLocationGeographicalActionTypes;
(function (GeneralLocationGeographicalActionTypes) {
    GeneralLocationGeographicalActionTypes["LoadGeneralLocationGeographicals"] = "[GeneralLocationGeographical] Load GeneralLocationGeographicals";
})(GeneralLocationGeographicalActionTypes || (GeneralLocationGeographicalActionTypes = {}));
var LoadGeneralLocationGeographicals = /** @class */ (function () {
    function LoadGeneralLocationGeographicals(payload) {
        this.payload = payload;
        this.type = GeneralLocationGeographicalActionTypes.LoadGeneralLocationGeographicals;
    }
    return LoadGeneralLocationGeographicals;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/geographical/store-part/general-location-geographical.reducer.ts":
/*!****************************************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/geographical/store-part/general-location-geographical.reducer.ts ***!
  \****************************************************************************************************************************/
/*! exports provided: GeneralLocationGeographicalState, initialState, GeneralLocationGeographicalReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeneralLocationGeographicalState", function() { return GeneralLocationGeographicalState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeneralLocationGeographicalReducer", function() { return GeneralLocationGeographicalReducer; });
/* harmony import */ var _app_shared_popups_general_location_info_popup_geographical_store_part_general_location_geographical_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/geographical/store-part/general-location-geographical.actions */ "./src/app/shared/popups/general-location-info-popup/geographical/store-part/general-location-geographical.actions.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};

var GeneralLocationGeographicalState = /** @class */ (function () {
    function GeneralLocationGeographicalState() {
        this.countries = new Map([
            ['US', 'United States'],
            ['PR', 'Puerto Rico'],
            ['CA', 'Canada'],
        ]);
        this.countries.set('US', 'United States');
        this.countries.set('PR', 'Puerto Rico');
        this.countries.set('CA', 'Canada');
    }
    return GeneralLocationGeographicalState;
}());

var initialState = new GeneralLocationGeographicalState();
function GeneralLocationGeographicalReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case _app_shared_popups_general_location_info_popup_geographical_store_part_general_location_geographical_actions__WEBPACK_IMPORTED_MODULE_0__["GeneralLocationGeographicalActionTypes"].LoadGeneralLocationGeographicals:
            return __assign({}, action.payload);
        default:
            return state;
    }
}


/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/insurred-values/insurred-values.component.html":
/*!**********************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/insurred-values/insurred-values.component.html ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"padding: 1px 0\">\r\n  <div class=\"insured-tab-header\" style=\"background-color: white;padding: 10px;margin: 20px 10%;\">\r\n    <nz-row style=\"padding: 0 15%\">\r\n      <nz-col nzSpan=\"1\" style=\"height: 55px\">\r\n        <img [src]=\"tabModel.header.icon\" style=\"width: 100%;height: 35px\">\r\n      </nz-col>\r\n      <nz-col *ngFor=\"let item of tabModel.header.items; let i= index\" [nzSpan]=\"i === 0 ? 14 :  3\" nzOffset=\"1\" style=\"height: 35px\">\r\n        <ng-container [ngSwitch]=\"item.type\">\r\n          <nz-select  [nzPlaceHolder]=\"getPlaceHolder(item)\" nzShowSearch nzAllowClear nzCustomContent *ngSwitchCase=\"'list'\" class=\"my-select\"\r\n                      (ngModelChange)=\"checkMondatory($event, item.field_code)\" [(ngModel)]=\"locationData[item.field_code]\"\r\n                      [disabled]=\"item.disabled\" [ngStyle]=\"{'border': mondatories[item.field_code] ? '1px solid red' : ''}\" style=\"background-color: #f4f6fc;width: 100%;\">\r\n            <nz-option nzLabel={{o}} nzValue={{o}} [nzHide]=\"true\"\r\n                       *ngFor=\"let o of getReferenceData(item.field_code)\">\r\n              {{o}}\r\n            </nz-option>\r\n          </nz-select>\r\n          <input *ngSwitchDefault type=\"text\" only-number  [ngModel]=\"locationData[item.field_code]\" (ngModelChange)=\"checkMondatory($event, item.field_code)\"\r\n                 [ngStyle]=\"{'border': mondatories[item.field_code] ? '1px solid red' : ''}\" [placeholder]=\"getPlaceHolder(item)\" style=\"background-color: #f4f6fc;height: 100%;width: 100%\" />\r\n        </ng-container>\r\n      </nz-col>\r\n    </nz-row>\r\n  </div>\r\n  <div class=\"insured-tab-content\" style=\"margin: 0 10%;margin-bottom: 20px;\">\r\n    <nz-row>\r\n      <nz-col *ngFor=\"let val of tabModel.body;let j = index\"\r\n              [nzSpan]=\"j == 0 ? 12 : 11\" [nzOffset]=\"j\"\r\n              style=\"padding: 15px 30px;background-color: white\">\r\n        <div style=\"margin-bottom: 10px\">\r\n          <span style=\"font-size: 18px;font-weight: bold;\">{{val.label}}</span>\r\n        </div>\r\n        <div style=\"width: 100%; height: 40px; margin-bottom: 10px\" *ngFor=\"let valItem of val.items; let k=index\" [ngStyle]=\"{'margin-top' : (k==3 && j==1) ? '160px' : ''}\">\r\n          <nz-row>\r\n            <nz-col *ngFor=\"let it of valItem;let k = index\" [nzSpan]=\"k === 0 ? 12 :  5\" [nzOffset]=\"k === 0 ? 0 :  1\">\r\n              <ng-container [ngSwitch]=\"it.type\">\r\n                <nz-select  [nzPlaceHolder]=\"getPlaceHolder(it)\" nzShowSearch nzAllowClear nzCustomContent *ngSwitchCase=\"'list'\" class=\"my-select\"\r\n                            (ngModelChange)=\"checkMondatory($event, it.field_code, it.parent_field)\" [(ngModel)]=\"locationData[it.field_code]\"\r\n                            [disabled]=\"it.disabled\" [ngStyle]=\"{'border': mondatories[it.field_code] ? '1px solid red' : ''}\" style=\"background-color: #f4f6fc;width: 100%;\">\r\n                  <nz-option nzLabel={{o}} nzValue={{o}} nzHide\r\n                             *ngFor=\"let o of getReferenceData(it.field_code)\">\r\n                    {{o}}\r\n                  </nz-option>\r\n                </nz-select>\r\n<!--                | unitPipe : locationData[it.child_field];locationData[it.field_code]=$event-->\r\n                <input *ngSwitchCase=\"'inputNumber'\" type=\"text\" only-number [(ngModel)]=\"locationData[it.field_code]\" (ngModelChange)=\"checkMondatory($event, it.field_code)\"\r\n                       [ngStyle]=\"{'border': mondatories[it.field_code] ? '1px solid red' : ''}\" [placeholder]=\"getPlaceHolder(it)\"  style=\"background-color: #f4f6fc;height: 33px;width: 100%;padding-left: 11px\" />\r\n                <div *ngSwitchCase=\"'split'\" style=\"background-color: #f4f6fc;height: 33px;padding-left: 11px;border-bottom: 1px solid blue\">\r\n                  <span style=\"font-weight: bold;vertical-align: sub\">{{it.label}} : </span> <span *ngIf=\"pdSplitVisibility\" style=\"font-weight: bold;color: blue;vertical-align: sub\"> {{pdSplitValue ? 'Yes' : 'NO'}}</span>\r\n                </div>\r\n                <input *ngSwitchDefault nz-input [(ngModel)]=\"locationData[it.field_code]\" (ngModelChange)=\"checkMondatory($event, it.field_code)\"\r\n                       [ngStyle]=\"{'border': mondatories[it.field_code] ? '1px solid red' : ''}\" [placeholder]=\"getPlaceHolder(it)\" nzSize=\"large\" style=\"background-color: #f4f6fc;height: 100%\" />\r\n              </ng-container>\r\n            </nz-col>\r\n          </nz-row>\r\n        </div>\r\n      </nz-col>\r\n    </nz-row>\r\n  </div>\r\n  <div class=\"insured-footer\" style=\"background-color: white;padding: 25px;margin: 20px 10%;margin-bottom: 20px\">\r\n    <nz-row>\r\n      <nz-col nzSpan=\"24\" style=\"font-size: 20px;font-weight: bold;margin-bottom: 20px;\">\r\n        <span style=\"font-size: 20px;font-weight: bold;\">{{tabModel.footer.title}}</span>\r\n      </nz-col>\r\n      <nz-col *ngFor=\"let headerItem of tabModel.footer.content, let i= index\"\r\n              [nzSpan]=\"headerItem.colSpan\" [nzOffset]=\"headerItem.offset\">\r\n        <ng-container [ngSwitch]=\"headerItem.type\">\r\n          <nz-select  [nzPlaceHolder]=\"getPlaceHolder(headerItem)\" nzShowSearch nzAllowClear nzCustomContent *ngSwitchCase=\"'list'\" class=\"my-select\"\r\n                      [(ngModel)]=\"locationData[headerItem.field_code]\"  (ngModelChange)=\"checkMondatory($event, headerItem.field_code)\"\r\n                      [disabled]=\"headerItem.disabled\" [ngStyle]=\"{'border': mondatories[headerItem.field_code] ? '1px solid red' : ''}\" style=\"background-color: #f4f6fc;width: 100%;\">\r\n            <nz-option nzLabel={{o}} nzValue={{o}} nzHide\r\n                       *ngFor=\"let o of getReferenceData(headerItem.field_code)\">\r\n              {{o}}\r\n            </nz-option>\r\n\r\n          </nz-select>\r\n          <input *ngSwitchCase=\"'inputNumber'\" type=\"text\" only-number [(ngModel)]=\"locationData[headerItem.field_code]\" (ngModelChange)=\"checkMondatory($event, headerItem.field_code)\"\r\n                 [ngStyle]=\"{'border': mondatories[headerItem.field_code] ? '1px solid red' : ''}\" [placeholder]=\"getPlaceHolder(headerItem)\"  style=\"background-color: #f4f6fc;height: 33px;width: 100%;padding-left: 11px\" />\r\n          <input *ngSwitchDefault nz-input [(ngModel)]=\"locationData[headerItem.field_code]\" (ngModelChange)=\"checkMondatory($event, headerItem.field_code)\"\r\n                 [ngStyle]=\"{'border': mondatories[headerItem.field_code] ? '1px solid red' : ''}\" [placeholder]=\"getPlaceHolder(headerItem)\" nzSize=\"large\" style=\"background-color: #f4f6fc;height: 100%\" />\r\n        </ng-container>\r\n      </nz-col>\r\n    </nz-row>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/insurred-values/insurred-values.component.scss":
/*!**********************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/insurred-values/insurred-values.component.scss ***!
  \**********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "input {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  outline: 0;\n  border-width: 0px 0 1px;\n  border-color: #2b2bff;\n  border-radius: 0;\n  font-size: 12px !important;\n  color: #2b2bff !important; }\n\ninput:focus {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  border-color: #2b2bff;\n  outline: none;\n  box-shadow: 0 0 0 0;\n  color: #2b2bff !important; }\n\n.danger {\n  color: #cd3531;\n  font-size: 12px;\n  font-weight: 500; }\n\ninput::-webkit-input-placeholder {\n  color: blue; }\n\ninput:-ms-input-placeholder {\n  color: blue; }\n\ninput::-ms-input-placeholder {\n  color: blue; }\n\ninput::placeholder {\n  color: blue; }\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none; }\n\ninput[type=number] {\n  -moz-appearance: textfield; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvaW5zdXJyZWQtdmFsdWVzL0M6XFxGXFxKb2JzXFxkY21fZnJvbnQvc3JjXFxhcHBcXHNoYXJlZFxccG9wdXBzXFxnZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXBcXGluc3VycmVkLXZhbHVlc1xcaW5zdXJyZWQtdmFsdWVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUNBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLHVCQUF1QjtFQUN2QixxQkFBOEI7RUFDOUIsZ0JBQWdCO0VBQ2hCLDBCQUEwQjtFQUMxQix5QkFBa0MsRUFBQTs7QUFJcEM7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixxQkFBOEI7RUFDOUIsYUFBYztFQUNkLG1CQUFvQjtFQUNwQix5QkFBa0MsRUFBQTs7QUFJcEM7RUFDRSxjQUFjO0VBQ2QsZUFBYztFQUNkLGdCQUNGLEVBQUE7O0FBRUE7RUFDRSxXQUFXLEVBQUE7O0FBRGI7RUFDRSxXQUFXLEVBQUE7O0FBRGI7RUFDRSxXQUFXLEVBQUE7O0FBRGI7RUFDRSxXQUFXLEVBQUE7O0FBR2I7O0VBRUUsd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UsMEJBQTBCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvcG9wdXBzL2dlbmVyYWwtbG9jYXRpb24taW5mby1wb3B1cC9pbnN1cnJlZC12YWx1ZXMvaW5zdXJyZWQtdmFsdWVzLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmlucHV0IHtcclxuICBib3JkZXItbGVmdDogbm9uZTtcclxuICBib3JkZXItcmlnaHQ6IG5vbmU7XHJcbiAgYm9yZGVyLXRvcDogbm9uZTtcclxuICBvdXRsaW5lOiAwO1xyXG4gIGJvcmRlci13aWR0aDogMHB4IDAgMXB4O1xyXG4gIGJvcmRlci1jb2xvcjogcmdiKDQzLCA0MywgMjU1KTtcclxuICBib3JkZXItcmFkaXVzOiAwO1xyXG4gIGZvbnQtc2l6ZTogMTJweCAhaW1wb3J0YW50O1xyXG4gIGNvbG9yOiByZ2IoNDMsIDQzLCAyNTUpICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG5pbnB1dDpmb2N1cyB7XHJcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG4gIGJvcmRlci10b3A6IG5vbmU7XHJcbiAgYm9yZGVyLWNvbG9yOiByZ2IoNDMsIDQzLCAyNTUpO1xyXG4gIG91dGxpbmUgOiBub25lO1xyXG4gIGJveC1zaGFkb3c6IDAgMCAwIDAgO1xyXG4gIGNvbG9yOiByZ2IoNDMsIDQzLCAyNTUpICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG4uZGFuZ2VyIHtcclxuICBjb2xvcjogI2NkMzUzMTtcclxuICBmb250LXNpemU6MTJweDtcclxuICBmb250LXdlaWdodDo1MDBcclxufVxyXG5cclxuaW5wdXQ6OnBsYWNlaG9sZGVyIHtcclxuICBjb2xvcjogYmx1ZTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1udW1iZXJdIHtcclxuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcclxufVxyXG5cclxuIl19 */"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/insurred-values/insurred-values.component.ts":
/*!********************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/insurred-values/insurred-values.component.ts ***!
  \********************************************************************************************************/
/*! exports provided: InsurredValuesComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InsurredValuesComponent", function() { return InsurredValuesComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/dcm/store/dcm.selectors */ "./src/app/dcm/store/dcm.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location-ref-data.const */ "./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location-field-codes.const */ "./src/app/shared/popups/general-location-info-popup/models/location-field-codes.const.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_pipes_unit_pipe_pipe__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/pipes/unit-pipe.pipe */ "./src/app/shared/popups/general-location-info-popup/pipes/unit-pipe.pipe.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};








var InsurredValuesComponent = /** @class */ (function () {
    function InsurredValuesComponent(formBuilder, store, unitPipe, cleansingService, cdrf) {
        this.formBuilder = formBuilder;
        this.store = store;
        this.unitPipe = unitPipe;
        this.cleansingService = cleansingService;
        this.cdrf = cdrf;
        this.insuredValueForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormGroup"]({});
        this.pdSplitVisibility = false;
        this.pdSplitValue = false;
    }
    InsurredValuesComponent.prototype.ngOnInit = function () {
        var _this = this;
        console.log('tabModel => ');
        console.log(this.tabModel);
        this.store.select(_app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_3__["selectPopUp"]).subscribe(function (data) {
            _this.location = Object.assign({}, data.location);
            if (_this.location) {
                _this.insuredValueForm.reset({
                    'site_currency': _this.location.site_currency,
                    'tiv_amount': _this.location.tiv_amount,
                    'building_value': _this.location.building_value,
                    'stock_value': _this.location.stock_value,
                    'machinery_value': _this.location.machinery_value,
                    'content_value': _this.location.content_value,
                    'pd_value': _this.location.pd_value,
                    'indemnity_period_eip': _this.location.indemnity_period_eip,
                    'bi_declaration_period': _this.location.bi_declaration_period,
                    'bi_value': _this.location.bi_value,
                    'bi_type': _this.location.bi_type,
                    'for_interest': _this.location.for_interest,
                    'interest': _this.location.interest,
                });
                if (!_this.cdrf['destroyed']) {
                    _this.cdrf.detectChanges();
                }
            }
        });
    };
    InsurredValuesComponent.prototype.onSubmit = function () {
    };
    InsurredValuesComponent.prototype.sumTiv = function () {
        this.insuredValueForm.controls['tiv_amount'].setValue(+this.insuredValueForm.value.bi_value + (+this.insuredValueForm.value.pd_value));
    };
    InsurredValuesComponent.prototype.contentSum = function () {
        this.insuredValueForm.controls['content_value'].setValue(+this.insuredValueForm.value.machinery_value + (+this.insuredValueForm.value.stock_value));
    };
    InsurredValuesComponent.prototype.getReferenceData = function (fieldCode) {
        return _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_REFERENCE_DATA"].get(fieldCode);
    };
    InsurredValuesComponent.prototype.getPlaceHolder = function (item) {
        switch (this.multiple[item.field_code]) {
            case true: return 'Multiple';
            default: return item.label;
        }
    };
    InsurredValuesComponent.prototype.checkMondatory = function (ev, fieldCode, parentField) {
        if (this.mondatories[fieldCode] !== undefined)
            this.mondatories[fieldCode] = !ev;
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].tiv_unit) {
            this.applyValuesChanges('unit', ev);
            this.applyUnit(this.locationData[fieldCode] || 'One', ev || 'One');
        }
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].tiv_currency)
            this.applyValuesChanges('currency', ev);
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].pd_value) {
            this.setPdSplitValue(true, true);
            this.setPercentages(ev);
        }
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].bi_value || fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].pd_value) {
            this.setTivAmount();
        }
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].stock_value || fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].machinery_value) {
            this.setContentValue();
        }
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].content_value || fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].building_value || fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].other_structure) {
            this.setPdValue();
        }
        if (fieldCode.includes('unit') && fieldCode !== _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].tiv_unit) {
            this.applySpecificUnit(this.locationData[fieldCode] || 'One', ev || 'One', parentField);
        }
        this.cdrf.detectChanges();
    };
    InsurredValuesComponent.prototype.applyValuesChanges = function (type, value) {
        this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"]['building_' + type]] = value;
        this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"]['stock_' + type]] = value;
        this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"]['machinery_' + type]] = value;
        this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"]['other_structure_' + type]] = value;
        this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"]['content_' + type]] = value;
        this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"]['pd_value_' + type]] = value;
        this.locationData[_app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"]['bi_value_' + type]] = value;
        this.applyMandatoryCheck('bi_value_' + type, !value);
        this.applyMandatoryCheck('pd_value_' + type, !value);
    };
    InsurredValuesComponent.prototype.setTivAmount = function () {
        var biValue = this.locationData['bi_value'] ? this.locationData['bi_value'] : 0;
        var pdValue = this.locationData['pd_value'] ? this.locationData['pd_value'] : 0;
        this.locationData['tiv_amount'] = Number.parseFloat(biValue) + Number.parseFloat(pdValue);
        this.applyMandatoryCheck('tiv_amount', false);
    };
    InsurredValuesComponent.prototype.setContentValue = function () {
        var stockValue = this.locationData['stock_value'] ? this.locationData['stock_value'] : 0;
        var machineryValue = this.locationData['machinery_value'] ? this.locationData['machinery_value'] : 0;
        this.locationData['content_value'] = Number.parseFloat(stockValue) + Number.parseFloat(machineryValue);
        this.setPdValue();
    };
    InsurredValuesComponent.prototype.setPdValue = function () {
        var contentValue = this.locationData['content_value'] ? this.locationData['content_value'] : 0;
        var buildingValue = this.locationData['building_value'] ? this.locationData['building_value'] : 0;
        var otherStructureValue = this.locationData['other_structure'] ? this.locationData['other_structure'] : 0;
        this.locationData['pd_value'] = Number.parseFloat(contentValue) + Number.parseFloat(buildingValue) + Number.parseFloat(otherStructureValue);
        this.setPdSplitValue(true, false);
        this.applyMandatoryCheck('pd_value', false);
        this.setTivAmount();
    };
    InsurredValuesComponent.prototype.setPdSplitValue = function (visibility, value) {
        this.pdSplitVisibility = visibility;
        this.pdSplitValue = value;
    };
    InsurredValuesComponent.prototype.setPercentages = function (value) {
        this.locationData['content_value'] = this.percentages['content_percentage'] ? value * Number.parseFloat(this.percentages['content_percentage']) : 0;
        this.locationData['building_value'] = this.percentages['building_percentage'] ? value * Number.parseFloat(this.percentages['building_percentage']) : 0;
    };
    InsurredValuesComponent.prototype.applyUnit = function (oldVal, newVal) {
        if (this.locationData['content_value'])
            this.locationData['content_value'] = this.locationData['content_value'] / _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][oldVal] * _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][newVal];
        if (this.locationData['content_value'])
            this.locationData['content_value'] = this.locationData['content_value'] / _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][oldVal] * _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][newVal];
        if (this.locationData['building_value'])
            this.locationData['building_value'] = this.locationData['building_value'] / _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][oldVal] * _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][newVal];
        if (this.locationData['pd_value'])
            this.locationData['pd_value'] = this.locationData['pd_value'] / _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][oldVal] * _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][newVal];
        if (this.locationData['bi_value'])
            this.locationData['bi_value'] = this.locationData['bi_value'] / _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][oldVal] * _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][newVal];
        if (this.locationData['other_structure'])
            this.locationData['other_structure'] = this.locationData['other_structure'] / _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][oldVal] * _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][newVal];
        if (this.locationData['machinery_value'])
            this.locationData['machinery_value'] = this.locationData['machinery_value'] / _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][oldVal] * _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][newVal];
        if (this.locationData['stock_value'])
            this.locationData['stock_value'] = this.locationData['stock_value'] / _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][oldVal] * _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][newVal];
        if (this.locationData['tiv_amount'])
            this.locationData['tiv_amount'] = this.locationData['tiv_amount'] / _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][oldVal] * _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][newVal];
    };
    InsurredValuesComponent.prototype.applySpecificUnit = function (oldVal, newVal, type) {
        if (this.locationData[type])
            this.locationData[type] = this.locationData[type] / _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][oldVal] * _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["UNITVALUES"][newVal];
        if (type === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].pd_value) {
            this.setPdSplitValue(true, true);
            this.setPercentages(this.locationData[type]);
        }
        if (type === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].bi_value || type === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].pd_value) {
            this.setTivAmount();
        }
        if (type === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].stock_value || type === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].machinery_value) {
            this.setContentValue();
        }
        if (type === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].content_value || type === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].building_value || type === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].other_structure) {
            this.setPdValue();
        }
    };
    InsurredValuesComponent.prototype.applyMandatoryCheck = function (field_code, value) {
        (this.isMultipleEdit) ? ((this.mondatories[field_code] !== undefined) ? this.mondatories[field_code] = value : '') : this.mondatories[field_code] = value;
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], InsurredValuesComponent.prototype, "tabModel", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], InsurredValuesComponent.prototype, "locationData", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], InsurredValuesComponent.prototype, "mondatories", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], InsurredValuesComponent.prototype, "percentages", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], InsurredValuesComponent.prototype, "multiple", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], InsurredValuesComponent.prototype, "isMultipleEdit", void 0);
    InsurredValuesComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-insurred-values',
            template: __webpack_require__(/*! ./insurred-values.component.html */ "./src/app/shared/popups/general-location-info-popup/insurred-values/insurred-values.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./insurred-values.component.scss */ "./src/app/shared/popups/general-location-info-popup/insurred-values/insurred-values.component.scss")]
        }),
        __metadata("design:paramtypes", [_angular_forms__WEBPACK_IMPORTED_MODULE_1__["FormBuilder"], _ngrx_store__WEBPACK_IMPORTED_MODULE_2__["Store"], _app_shared_popups_general_location_info_popup_pipes_unit_pipe_pipe__WEBPACK_IMPORTED_MODULE_7__["UnitPipePipe"],
            _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_4__["CleansingService"],
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])
    ], InsurredValuesComponent);
    return InsurredValuesComponent;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/models/location-field-codes.const.ts":
/*!************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/models/location-field-codes.const.ts ***!
  \************************************************************************************************/
/*! exports provided: LOCATION_FIELD_CODES_ENUM */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCATION_FIELD_CODES_ENUM", function() { return LOCATION_FIELD_CODES_ENUM; });
var LOCATION_FIELD_CODES_ENUM;
(function (LOCATION_FIELD_CODES_ENUM) {
    LOCATION_FIELD_CODES_ENUM["location_name"] = "location_name";
    LOCATION_FIELD_CODES_ENUM["division"] = "division";
    LOCATION_FIELD_CODES_ENUM["original_country"] = "original_country";
    LOCATION_FIELD_CODES_ENUM["original_state"] = "original_state";
    LOCATION_FIELD_CODES_ENUM["original_city"] = "original_city";
    LOCATION_FIELD_CODES_ENUM["original_zip_code"] = "original_zip_code";
    LOCATION_FIELD_CODES_ENUM["original_street"] = "original_street";
    LOCATION_FIELD_CODES_ENUM["original_full_address"] = "original_full_address";
    LOCATION_FIELD_CODES_ENUM["original_longitude"] = "original_longitude";
    LOCATION_FIELD_CODES_ENUM["original_latitude"] = "original_latitude";
    LOCATION_FIELD_CODES_ENUM["accuracy_level"] = "accuracy_level";
    LOCATION_FIELD_CODES_ENUM["geocoder"] = "geocoder";
    LOCATION_FIELD_CODES_ENUM["building_value"] = "building_value";
    LOCATION_FIELD_CODES_ENUM["stock_value"] = "stock_value";
    LOCATION_FIELD_CODES_ENUM["machinery_value"] = "machinery_value";
    LOCATION_FIELD_CODES_ENUM["stock_value_unit"] = "stock_valu_unite";
    LOCATION_FIELD_CODES_ENUM["machinery_currency"] = "machinery_currency";
    LOCATION_FIELD_CODES_ENUM["stock_value_currency"] = "stock_value_currency";
    LOCATION_FIELD_CODES_ENUM["machinery_unit"] = "machinery_unit";
    LOCATION_FIELD_CODES_ENUM["content_value"] = "content_value";
    LOCATION_FIELD_CODES_ENUM["pd_value"] = "pd_value";
    LOCATION_FIELD_CODES_ENUM["content_value_currency"] = "content_value_currency";
    LOCATION_FIELD_CODES_ENUM["pd_value_unit"] = "pd_value_unit";
    LOCATION_FIELD_CODES_ENUM["content_value_unit"] = "content_value_unit";
    LOCATION_FIELD_CODES_ENUM["pd_value_currency"] = "pd_value_currency";
    LOCATION_FIELD_CODES_ENUM["other_structure_unit"] = "other_structure_unit";
    LOCATION_FIELD_CODES_ENUM["other_structure_currency"] = "other_structure_currency";
    LOCATION_FIELD_CODES_ENUM["bi_type"] = "bi_type";
    LOCATION_FIELD_CODES_ENUM["indemnity_period_eip"] = "indemnity_period_eip";
    LOCATION_FIELD_CODES_ENUM["bi_value"] = "bi_value";
    LOCATION_FIELD_CODES_ENUM["bi_declaration_period"] = "bi_declaration_period";
    LOCATION_FIELD_CODES_ENUM["tiv_amount"] = "tiv_amount";
    LOCATION_FIELD_CODES_ENUM["site_currency"] = "site_currency";
    LOCATION_FIELD_CODES_ENUM["for_interest"] = "for_interest";
    LOCATION_FIELD_CODES_ENUM["interest"] = "interest";
    LOCATION_FIELD_CODES_ENUM["occupancy_code"] = "occupancy_code";
    LOCATION_FIELD_CODES_ENUM["occupancy_scheme"] = "occupancy_scheme";
    LOCATION_FIELD_CODES_ENUM["construction_code"] = "construction_code";
    LOCATION_FIELD_CODES_ENUM["construction_scheme"] = "construction_scheme";
    LOCATION_FIELD_CODES_ENUM["number_of_buildings"] = "number_of_buildings";
    LOCATION_FIELD_CODES_ENUM["number_of_buildings_unit"] = "number_of_buildings_unit";
    LOCATION_FIELD_CODES_ENUM["number_of_buildings_currency"] = "number_of_buildings_currency";
    LOCATION_FIELD_CODES_ENUM["number_of_stories_value"] = "number_of_stories_value";
    LOCATION_FIELD_CODES_ENUM["company_name"] = "company_name";
    LOCATION_FIELD_CODES_ENUM["property_db_id"] = "property_db_id";
    LOCATION_FIELD_CODES_ENUM["source_construction_scheme"] = "source_construction_scheme";
    LOCATION_FIELD_CODES_ENUM["source_construction_code"] = "source_construction_code";
    LOCATION_FIELD_CODES_ENUM["source_occupancy_scheme"] = "source_occupancy_scheme";
    LOCATION_FIELD_CODES_ENUM["source_occupancy_code"] = "source_occupancy_code";
    LOCATION_FIELD_CODES_ENUM["basement"] = "basement";
    LOCATION_FIELD_CODES_ENUM["basement_stories_value"] = "basement_stories_value";
    LOCATION_FIELD_CODES_ENUM["basement_finished"] = "basement_finished";
    LOCATION_FIELD_CODES_ENUM["year_built"] = "year_built";
    LOCATION_FIELD_CODES_ENUM["building_year_upgrade"] = "building_year_upgrade";
    LOCATION_FIELD_CODES_ENUM["roof_year_upgrade"] = "roof_year_upgrade";
    LOCATION_FIELD_CODES_ENUM["wiring_year_upgrade"] = "wiring_year_upgrade";
    LOCATION_FIELD_CODES_ENUM["plumbing_year_upgrade"] = "plumbing_year_upgrade";
    LOCATION_FIELD_CODES_ENUM["other_structure"] = "other_structure";
    LOCATION_FIELD_CODES_ENUM["mpl_pd_value"] = "mpl_pd_value";
    LOCATION_FIELD_CODES_ENUM["mpl_pd_percentage"] = "mpl_pd_percentage";
    LOCATION_FIELD_CODES_ENUM["mpl_bi_value"] = "mpl_bi_value";
    LOCATION_FIELD_CODES_ENUM["mpl_bi_percentage"] = "mpl_bi_percentage";
    LOCATION_FIELD_CODES_ENUM["fmls_pd_value"] = "fmls_pd_value";
    LOCATION_FIELD_CODES_ENUM["fmls_pd_percentage"] = "fmls_pd_percentage";
    LOCATION_FIELD_CODES_ENUM["fmls_bi_value"] = "fmls_bi_value";
    LOCATION_FIELD_CODES_ENUM["fmls_bi_percentage"] = "fmls_bi_percentage";
    LOCATION_FIELD_CODES_ENUM["earthquake_cover"] = "earthquake_cover";
    LOCATION_FIELD_CODES_ENUM["earthquake_cover_limit"] = "earthquake_cover_limit";
    LOCATION_FIELD_CODES_ENUM["earthquake_cover_deductible"] = "earthquake_cover_deductible";
    LOCATION_FIELD_CODES_ENUM["windstorm_cover"] = "windstorm_cover";
    LOCATION_FIELD_CODES_ENUM["windstorm_cover_limit"] = "windstorm_cover_limit";
    LOCATION_FIELD_CODES_ENUM["windstorm_cover_deductible"] = "windstorm_cover_deductible";
    LOCATION_FIELD_CODES_ENUM["flood_cover"] = "flood_cover";
    LOCATION_FIELD_CODES_ENUM["flood_cover_limit"] = "flood_cover_limit";
    LOCATION_FIELD_CODES_ENUM["flood_cover_deductible"] = "flood_cover_deductible";
    LOCATION_FIELD_CODES_ENUM["terrorism_cover"] = "terrorism_cover";
    LOCATION_FIELD_CODES_ENUM["terrorism_cover_limit"] = "terrorism_cover_limit";
    LOCATION_FIELD_CODES_ENUM["terrorism_cover_deductible"] = "terrorism_cover_deductible";
    LOCATION_FIELD_CODES_ENUM["strike_riot_commotion_cover"] = "strike_riot_commotion_cover";
    LOCATION_FIELD_CODES_ENUM["strike_riot_commotion_cover_limit"] = "strike_riot_commotion_cover_limit";
    LOCATION_FIELD_CODES_ENUM["strike_riot_commotion_cover_deductible"] = "strike_riot_commotion_cover_deductible";
    LOCATION_FIELD_CODES_ENUM["machinery_breakdown"] = "machinery_breakdown";
    LOCATION_FIELD_CODES_ENUM["machinery_breakdown_limit"] = "machinery_breakdown_limit";
    LOCATION_FIELD_CODES_ENUM["machinery_breakdown_deductible"] = "machinery_breakdown_deductible";
    LOCATION_FIELD_CODES_ENUM["cyber_cover"] = "cyber_cover";
    LOCATION_FIELD_CODES_ENUM["cyber_cover_limit"] = "cyber_cover_limit";
    LOCATION_FIELD_CODES_ENUM["cyber_cover_deductible"] = "cyber_cover_deductible";
    LOCATION_FIELD_CODES_ENUM["asset_quality"] = "asset_quality";
    LOCATION_FIELD_CODES_ENUM["bi_mitigation"] = "bi_mitigation";
    LOCATION_FIELD_CODES_ENUM["mb_quality"] = "mb_quality";
    LOCATION_FIELD_CODES_ENUM["operational_status"] = "operational_status";
    LOCATION_FIELD_CODES_ENUM["largest_capacity_unit"] = "largest_capacity_unit";
    LOCATION_FIELD_CODES_ENUM["first_floor_height"] = "first_floor_height";
    LOCATION_FIELD_CODES_ENUM["first_floor_height_unit"] = "first_floor_height_unit";
    LOCATION_FIELD_CODES_ENUM["certified_elevation_height"] = "certified_elevation_height";
    LOCATION_FIELD_CODES_ENUM["certified_elevation_height_unit"] = "certified_elevation_height_unit";
    LOCATION_FIELD_CODES_ENUM["windstorm_design_code"] = "windstorm_design_code";
    LOCATION_FIELD_CODES_ENUM["windstorm_flashing_and_coping_quality"] = "windstorm_flashing_and_coping_quality";
    LOCATION_FIELD_CODES_ENUM["windstorm_ifm_vertical_exposure_distribution"] = "windstorm_ifm_vertical_exposure_distribution";
    LOCATION_FIELD_CODES_ENUM["windstorm_ifm_structure_condition"] = "windstorm_ifm_structure_condition";
    LOCATION_FIELD_CODES_ENUM["windstorm_ifm_outdoor_machinery_equipment_bracing"] = "windstorm_ifm_outdoor_machinery/equipment_bracing";
    LOCATION_FIELD_CODES_ENUM["windstorm_ifm_site_hazard"] = "windstorm_ifm_site_hazard";
    LOCATION_FIELD_CODES_ENUM["windstorm_construction_quality"] = "windstorm_construction_quality";
    LOCATION_FIELD_CODES_ENUM["windstorm_roof_covering"] = "windstorm_roof_covering";
    LOCATION_FIELD_CODES_ENUM["windstorm_roof_geometry"] = "windstorm_roof_geometry";
    LOCATION_FIELD_CODES_ENUM["windstorm_roof_anchor"] = "windstorm_roof_anchor";
    LOCATION_FIELD_CODES_ENUM["windstorm_roof_age"] = "windstorm_roof_age";
    LOCATION_FIELD_CODES_ENUM["windstorm_roof_framing_type"] = "windstorm_roof_framing_type";
    LOCATION_FIELD_CODES_ENUM["windstorm_roof_maintenance"] = "windstorm_roof_maintenance";
    LOCATION_FIELD_CODES_ENUM["windstorm_roof_parapets_chimneys"] = "windstorm_roof_parapets/chimneys";
    LOCATION_FIELD_CODES_ENUM["windstorm_roof_equipment_hurricane_bracing"] = "windstorm_roof_equipment_hurricane_bracing";
    LOCATION_FIELD_CODES_ENUM["windstorm_commercial_appurtenant_structures"] = "windstorm_commercial_appurtenant_structures";
    LOCATION_FIELD_CODES_ENUM["windstorm_cladding_type_wind_missiles"] = "windstorm_cladding_type/wind_missiles";
    LOCATION_FIELD_CODES_ENUM["windstorm_roof_sheathing_attachment"] = "windstorm_roof_sheathing_attachment";
    LOCATION_FIELD_CODES_ENUM["windstorm_frame_foundation_connection"] = "windstorm_frame_foundation_connection";
    LOCATION_FIELD_CODES_ENUM["windstorm_residential_appurtenant_structures"] = "windstorm_residential_appurtenant_structures";
    LOCATION_FIELD_CODES_ENUM["windstorm_mechanical_electrical_equipment_side_of_build"] = "windstorm_mechanical_electrical_equipment_side_of_build";
    LOCATION_FIELD_CODES_ENUM["windstorm_ground_level_equipment"] = "windstorm_ground_level_equipment";
    LOCATION_FIELD_CODES_ENUM["windstorm_resistance_doors"] = "windstorm_resistance_doors";
    LOCATION_FIELD_CODES_ENUM["windstorm_opening_protection"] = "windstorm_opening_protection";
    LOCATION_FIELD_CODES_ENUM["windstorm_wind_missiles"] = "windstorm_wind_missiles";
    LOCATION_FIELD_CODES_ENUM["windstorm_content_vulnerability_due_to_wind"] = "windstorm_content_vulnerability_due_to_wind";
    LOCATION_FIELD_CODES_ENUM["windstorm_content_vulnerability_due_to_water"] = "windstorm_content_vulnerability_due_to_water";
    LOCATION_FIELD_CODES_ENUM["windstorm_flood_protection"] = "windstorm_flood_protection";
    LOCATION_FIELD_CODES_ENUM["windstorm_flood_missile_exposure"] = "windstorm_flood_missile_exposure";
    LOCATION_FIELD_CODES_ENUM["windstorm_basement"] = "windstorm_basement";
    LOCATION_FIELD_CODES_ENUM["earthquake_plan_irregularity"] = "earthquake_plan_irregularity";
    LOCATION_FIELD_CODES_ENUM["earthquake_soft_story"] = "earthquake_soft_story";
    LOCATION_FIELD_CODES_ENUM["earthquake_vertical_irregularity"] = "earthquake_vertical_irregularity";
    LOCATION_FIELD_CODES_ENUM["earthquake_redundancy"] = "earthquake_redundancy";
    LOCATION_FIELD_CODES_ENUM["earthquake_asymmetry_and_torsion"] = "earthquake_asymmetry_and_torsion";
    LOCATION_FIELD_CODES_ENUM["earthquake_exterior_walls_cladding"] = "earthquake_exterior_walls/cladding";
    LOCATION_FIELD_CODES_ENUM["earthquake_building_exterior_50_rule"] = "earthquake_building_exterior_-_50%_rule";
    LOCATION_FIELD_CODES_ENUM["earthquake_short_column_condition"] = "earthquake_short_column_condition";
    LOCATION_FIELD_CODES_ENUM["earthquake_interior_walls_partitions"] = "earthquake_interior_walls/partitions";
    LOCATION_FIELD_CODES_ENUM["earthquake_appendages_and_ornamentation"] = "earthquake_appendages_and_ornamentation";
    LOCATION_FIELD_CODES_ENUM["earthquake_equipment_eq_bracing"] = "earthquake_equipment_eq_bracing";
    LOCATION_FIELD_CODES_ENUM["earthquake_quality_of_construction"] = "earthquake_quality_of_construction";
    LOCATION_FIELD_CODES_ENUM["earthquake_equipment_support_maintenance"] = "earthquake_equipment_support_maintenance";
    LOCATION_FIELD_CODES_ENUM["earthquake_pounding_and_impact"] = "earthquake_pounding_and_impact";
    LOCATION_FIELD_CODES_ENUM["earthquake_tank"] = "earthquake_tank";
    LOCATION_FIELD_CODES_ENUM["earthquake_hazardous_exposures"] = "earthquake_hazardous_exposures";
    LOCATION_FIELD_CODES_ENUM["earthquake_engineered_foundations"] = "earthquake_engineered_foundations";
    LOCATION_FIELD_CODES_ENUM["earthquake_cripple_walls"] = "earthquake_cripple_walls";
    LOCATION_FIELD_CODES_ENUM["earthquake_frame_bolted_to_foundation"] = "earthquake_frame_bolted_to_foundation";
    LOCATION_FIELD_CODES_ENUM["earthquake_tilt_up_retrofit_anchoring"] = "earthquake_tilt-up_retrofit_(anchoring)";
    LOCATION_FIELD_CODES_ENUM["earthquake_urm_retrofit"] = "earthquake_urm_retrofit";
    LOCATION_FIELD_CODES_ENUM["earthquake_structural_upgrade_non_urm"] = "earthquake_structural_upgrade_(non-urm)";
    LOCATION_FIELD_CODES_ENUM["earthquake_base_isolation"] = "earthquake_base_isolation";
    LOCATION_FIELD_CODES_ENUM["earthquake_earthquake_sprinkler_leakage_coverage_flag"] = "earthquake_earthquake_sprinkler_leakage_coverage_flag";
    LOCATION_FIELD_CODES_ENUM["earthquake_eqsl_susceptibility"] = "earthquake_eqsl_susceptibility";
    LOCATION_FIELD_CODES_ENUM["earthquake_sprinkler_type"] = "earthquake_sprinkler_type";
    LOCATION_FIELD_CODES_ENUM["earthquake_sprinkler_installed_year"] = "earthquake_sprinkler_installed_year";
    LOCATION_FIELD_CODES_ENUM["marine_salvage_potential"] = "marine_salvage_potential";
    LOCATION_FIELD_CODES_ENUM["marine_cargo_and_specie_packaging"] = "marine_cargo_and_specie_packaging";
    LOCATION_FIELD_CODES_ENUM["marine_cargo_and_specie_protection"] = "marine_cargo_and_specie_protection";
    LOCATION_FIELD_CODES_ENUM["marine_specie_storage"] = "marine_specie_storage";
    LOCATION_FIELD_CODES_ENUM["marine_sprinkler_type"] = "marine_sprinkler_type";
    LOCATION_FIELD_CODES_ENUM["cargo_wind"] = "cargo_wind";
    LOCATION_FIELD_CODES_ENUM["cargo_surge"] = "cargo_surge";
    LOCATION_FIELD_CODES_ENUM["cargo_earthquake"] = "cargo_earthquake";
    LOCATION_FIELD_CODES_ENUM["gross_written_premium_value"] = "gross_written_premium_value";
    LOCATION_FIELD_CODES_ENUM["inception_location_level"] = "inception_location_level";
    LOCATION_FIELD_CODES_ENUM["inception"] = "inception";
    LOCATION_FIELD_CODES_ENUM["expiry_location_level"] = "expiry_location_level";
    LOCATION_FIELD_CODES_ENUM["expiry"] = "expiry";
    LOCATION_FIELD_CODES_ENUM["participation"] = "participation";
    LOCATION_FIELD_CODES_ENUM["order"] = "order";
    LOCATION_FIELD_CODES_ENUM["binder_year_account"] = "binder_year_account";
    LOCATION_FIELD_CODES_ENUM["binder_earthquake_cover"] = "binder_earthquake_cover";
    LOCATION_FIELD_CODES_ENUM["binder_earthquake_cover_limit_amount"] = "binder_earthquake_cover_limit_amount";
    LOCATION_FIELD_CODES_ENUM["binder_earthquake_cover_limit_currency"] = "binder_earthquake_cover_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binder_earthquake_cover_deductible_amount"] = "binder_earthquake_cover_deductible_amount";
    LOCATION_FIELD_CODES_ENUM["binder_earthquake_cover_deductible_currency"] = "binder_earthquake_cover_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binder_windstorm_cover"] = "binder_windstorm_cover";
    LOCATION_FIELD_CODES_ENUM["binder_windstorm_cover_limit_amount"] = "binder_windstorm_cover_limit_amount";
    LOCATION_FIELD_CODES_ENUM["binder_windstorm_cover_limit_currency"] = "binder_windstorm_cover_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binder_windstorm_cover_deductible_amount"] = "binder_windstorm_cover_deductible_amount";
    LOCATION_FIELD_CODES_ENUM["binder_windstorm_cover_deductible_currency"] = "binder_windstorm_cover_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binder_flood_cover"] = "binder_flood_cover";
    LOCATION_FIELD_CODES_ENUM["binder_flood_cover_limit_amount"] = "binder_flood_cover_limit_amount";
    LOCATION_FIELD_CODES_ENUM["binder_flood_cover_limit_currency"] = "binder_flood_cover_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binder_flood_cover_deductible_amount"] = "binder_flood_cover_deductible_amount";
    LOCATION_FIELD_CODES_ENUM["binder_flood_cover_deductible_currency"] = "binder_flood_cover_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binder_terrorism_cover"] = "binder_terrorism_cover";
    LOCATION_FIELD_CODES_ENUM["binder_terrorism_cover_limit_amount"] = "binder_terrorism_cover_limit_amount";
    LOCATION_FIELD_CODES_ENUM["binder_terrorism_cover_limit_currency"] = "binder_terrorism_cover_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binder_terrorism_cover_deductible_amount"] = "binder_terrorism_cover_deductible_amount";
    LOCATION_FIELD_CODES_ENUM["binder_terrorism_cover_deductible_currency"] = "binder_terrorism_cover_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binder_machinery_breakdown_cover"] = "binder_machinery_breakdown_cover";
    LOCATION_FIELD_CODES_ENUM["binder_machinery_breakdown_cover_limit_amount"] = "binder_machinery_breakdown_cover_limit_amount";
    LOCATION_FIELD_CODES_ENUM["binder_machinery_breakdown_cover_limit_currency"] = "binder_machinery_breakdown_cover_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binder_machinery_breakdown_cover_deductible_amount"] = "binder_machinery_breakdown_cover_deductible_amount";
    LOCATION_FIELD_CODES_ENUM["binder_machinery_breakdown_cover_deductible_currency"] = "binder_machinery_breakdown_cover_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binder_strike_riot_commotion_cover"] = "binder_strike_riot_commotion_cover";
    LOCATION_FIELD_CODES_ENUM["binder_strike_riot_commotion_cover_limit_amount"] = "binder_strike_riot_commotion_cover_limit_amount";
    LOCATION_FIELD_CODES_ENUM["binder_strike_riot_commotion_cover_limit_currency"] = "binder_strike_riot_commotion_cover_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binder_strike_riot_commotion_cover_deductible_amount"] = "binder_strike_riot_commotion_cover_deductible_amount";
    LOCATION_FIELD_CODES_ENUM["binder_strike_riot_commotion_cover_deductible_currency"] = "binder_strike_riot_commotion_cover_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binder_cyber_cover"] = "binder_cyber_cover";
    LOCATION_FIELD_CODES_ENUM["binder_cyber_cover_limit_amount"] = "binder_cyber_cover_limit_amount";
    LOCATION_FIELD_CODES_ENUM["binder_cyber_cover_limit_currency"] = "binder_cyber_cover_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binder_cyber_cover_deductible_amount"] = "binder_cyber_cover_deductible_amount";
    LOCATION_FIELD_CODES_ENUM["binder_cyber_cover_deductible_currency"] = "binder_cyber_cover_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["number_of_stories_unit"] = "number_of_stories_unit";
    LOCATION_FIELD_CODES_ENUM["basement_stories_unit"] = "basement_stories_unit";
    LOCATION_FIELD_CODES_ENUM["cleansed_country"] = "cleansed_country";
    LOCATION_FIELD_CODES_ENUM["cleansed_state"] = "cleansed_state";
    LOCATION_FIELD_CODES_ENUM["cleansed_county"] = "cleansed_county";
    LOCATION_FIELD_CODES_ENUM["original_county"] = "original county";
    LOCATION_FIELD_CODES_ENUM["cleansed_city"] = "cleansed_city";
    LOCATION_FIELD_CODES_ENUM["cleansed_zip_code"] = "cleansed_zip_code";
    LOCATION_FIELD_CODES_ENUM["cleansed_street"] = "cleansed_street";
    LOCATION_FIELD_CODES_ENUM["cleansed_longitude"] = "cleansed_longitude";
    LOCATION_FIELD_CODES_ENUM["cleansed_latitude"] = "cleansed_latitude";
    LOCATION_FIELD_CODES_ENUM["accuracy_validated"] = "accuracy_validated";
    LOCATION_FIELD_CODES_ENUM["final_country"] = "final_country";
    LOCATION_FIELD_CODES_ENUM["final_state"] = "final_state";
    LOCATION_FIELD_CODES_ENUM["final_county"] = "final county";
    LOCATION_FIELD_CODES_ENUM["final_city"] = "final_city";
    LOCATION_FIELD_CODES_ENUM["final_zip_code"] = "final_zip_code";
    LOCATION_FIELD_CODES_ENUM["final_street"] = "final_street";
    LOCATION_FIELD_CODES_ENUM["final_longitude"] = "final_longitude";
    LOCATION_FIELD_CODES_ENUM["final_latitude"] = "final_latitude";
    LOCATION_FIELD_CODES_ENUM["cleansed_iso2"] = "cleansed_iso2";
    LOCATION_FIELD_CODES_ENUM["cleansed_iso3"] = "cleansed_iso3";
    LOCATION_FIELD_CODES_ENUM["final_iso2"] = "final_iso2";
    LOCATION_FIELD_CODES_ENUM["final_iso3"] = "final_iso3";
    LOCATION_FIELD_CODES_ENUM["accord_occupancy_code"] = "accord_occupancy_code";
    LOCATION_FIELD_CODES_ENUM["accord_occupancy_class"] = "accord_occupancy_class";
    LOCATION_FIELD_CODES_ENUM["accord_occupancy_subclass"] = "accord_occupancy_subclass";
    LOCATION_FIELD_CODES_ENUM["accord_construction_code"] = "accord_construction_code";
    LOCATION_FIELD_CODES_ENUM["accord_construction_class"] = "accord_construction_class";
    LOCATION_FIELD_CODES_ENUM["policy_number"] = "policy_number";
    LOCATION_FIELD_CODES_ENUM["policy_limit_value"] = "policy_limit_value";
    LOCATION_FIELD_CODES_ENUM["policy_limit_currency"] = "policy_limit_currency";
    LOCATION_FIELD_CODES_ENUM["policy_excess_currency"] = "policy_excess_currency";
    LOCATION_FIELD_CODES_ENUM["policy_excess_value"] = "policy_excess_value";
    LOCATION_FIELD_CODES_ENUM["pricing_category"] = "pricing_category";
    LOCATION_FIELD_CODES_ENUM["pricing_sub_category"] = "pricing_sub_category";
    LOCATION_FIELD_CODES_ENUM["machinery_breakdown_quality"] = "machinery_breakdown_quality";
    LOCATION_FIELD_CODES_ENUM["location_currency"] = "location_currency";
    LOCATION_FIELD_CODES_ENUM["scor_database_id"] = "scor_database_id";
    LOCATION_FIELD_CODES_ENUM["tiv_unit"] = "tiv_unit";
    LOCATION_FIELD_CODES_ENUM["bi_unit"] = "bi_unit";
    LOCATION_FIELD_CODES_ENUM["tiv_currency"] = "tiv_currency";
    LOCATION_FIELD_CODES_ENUM["bi_value_currency"] = "bi_value_currency";
    LOCATION_FIELD_CODES_ENUM["bi_value_unit"] = "bi_value_unit";
    LOCATION_FIELD_CODES_ENUM["mpl_currency"] = "mpl_currency";
    LOCATION_FIELD_CODES_ENUM["earthquake_limit_unit"] = "earthquake_limit_unit";
    LOCATION_FIELD_CODES_ENUM["earthquake_combined_unit"] = "earthquake_combined_unit";
    LOCATION_FIELD_CODES_ENUM["earthquake_combined_currency"] = "earthquake_combined_currency";
    LOCATION_FIELD_CODES_ENUM["earthquake_pd_unit"] = "earthquake_pd_unit";
    LOCATION_FIELD_CODES_ENUM["earthquake_pd_currency"] = "earthquake_pd_currency";
    LOCATION_FIELD_CODES_ENUM["earthquake_building_unit"] = "earthquake_building_unit";
    LOCATION_FIELD_CODES_ENUM["earthquake_building_currency"] = "earthquake_building_currency";
    LOCATION_FIELD_CODES_ENUM["earthquake_structure_unit"] = "earthquake_structure_unit";
    LOCATION_FIELD_CODES_ENUM["earthquake_structure_currency"] = "earthquake_structure_currency";
    LOCATION_FIELD_CODES_ENUM["earthquake_content_unit"] = "earthquake_content_unit";
    LOCATION_FIELD_CODES_ENUM["earthquake_content_currency"] = "earthquake_content_currency";
    LOCATION_FIELD_CODES_ENUM["earthquake_machinary_unit"] = "earthquake_machinary_unit";
    LOCATION_FIELD_CODES_ENUM["earthquake_machinary_currency"] = "earthquake_machinary_currency";
    LOCATION_FIELD_CODES_ENUM["earthquake_stock_unit"] = "earthquake_stock_unit";
    LOCATION_FIELD_CODES_ENUM["earthquake_stock_currency"] = "earthquake_stock_currency";
    LOCATION_FIELD_CODES_ENUM["earthquake_bi_unit"] = "earthquake_bi_unit";
    LOCATION_FIELD_CODES_ENUM["earthquake_bi_currency"] = "earthquake_bi_currency";
    LOCATION_FIELD_CODES_ENUM["windstorm_limit_unit"] = "windstorm_limit_unit";
    LOCATION_FIELD_CODES_ENUM["windstorm_combined_unit"] = "windstorm_combined_unit";
    LOCATION_FIELD_CODES_ENUM["windstorm_combined_currency"] = "windstorm_combined_currency";
    LOCATION_FIELD_CODES_ENUM["windstorm_pd_unit"] = "windstorm_pd_unit";
    LOCATION_FIELD_CODES_ENUM["windstorm_pd_currency"] = "windstorm_pd_currency";
    LOCATION_FIELD_CODES_ENUM["windstorm_building_unit"] = "windstorm_building_unit";
    LOCATION_FIELD_CODES_ENUM["windstorm_building_currency"] = "windstorm_building_currency";
    LOCATION_FIELD_CODES_ENUM["windstorm_structure_unit"] = "windstorm_structure_unit";
    LOCATION_FIELD_CODES_ENUM["windstorm_structure_currency"] = "windstorm_structure_currency";
    LOCATION_FIELD_CODES_ENUM["windstorm_content_unit"] = "windstorm_content_unit";
    LOCATION_FIELD_CODES_ENUM["windstorm_content_currency"] = "windstorm_content_currency";
    LOCATION_FIELD_CODES_ENUM["windstorm_machinary_unit"] = "windstorm_machinary_unit";
    LOCATION_FIELD_CODES_ENUM["windstorm_machinary_currency"] = "windstorm_machinary_currency";
    LOCATION_FIELD_CODES_ENUM["windstorm_stock_unit"] = "windstorm_stock_unit";
    LOCATION_FIELD_CODES_ENUM["windstorm_stock_currency"] = "windstorm_stock_currency";
    LOCATION_FIELD_CODES_ENUM["windstorm_bi_unit"] = "windstorm_bi_unit";
    LOCATION_FIELD_CODES_ENUM["windstorm_bi_currency"] = "windstorm_bi_currency";
    LOCATION_FIELD_CODES_ENUM["flood_limit_unit"] = "flood_limit_unit";
    LOCATION_FIELD_CODES_ENUM["flood_combined_unit"] = "flood_combined_unit";
    LOCATION_FIELD_CODES_ENUM["flood_combined_currency"] = "flood_combined_currency";
    LOCATION_FIELD_CODES_ENUM["flood_pd_unit"] = "flood_pd_unit";
    LOCATION_FIELD_CODES_ENUM["flood_pd_currency"] = "flood_pd_currency";
    LOCATION_FIELD_CODES_ENUM["flood_building_unit"] = "flood_building_unit";
    LOCATION_FIELD_CODES_ENUM["flood_building_currency"] = "flood_building_currency";
    LOCATION_FIELD_CODES_ENUM["flood_structure_unit"] = "flood_structure_unit";
    LOCATION_FIELD_CODES_ENUM["flood_structure_currency"] = "flood_structure_currency";
    LOCATION_FIELD_CODES_ENUM["flood_content_unit"] = "flood_content_unit";
    LOCATION_FIELD_CODES_ENUM["flood_content_currency"] = "flood_content_currency";
    LOCATION_FIELD_CODES_ENUM["flood_machinary_unit"] = "flood_machinary_unit";
    LOCATION_FIELD_CODES_ENUM["flood_machinary_currency"] = "flood_machinary_currency";
    LOCATION_FIELD_CODES_ENUM["flood_stock_unit"] = "flood_stock_unit";
    LOCATION_FIELD_CODES_ENUM["flood_stock_currency"] = "flood_stock_currency";
    LOCATION_FIELD_CODES_ENUM["flood_bi_unit"] = "flood_bi_unit";
    LOCATION_FIELD_CODES_ENUM["flood_bi_currency"] = "flood_bi_currency";
    LOCATION_FIELD_CODES_ENUM["terrorism_limit_unit"] = "terrorism_limit_unit";
    LOCATION_FIELD_CODES_ENUM["terrorism_combined_unit"] = "terrorism_combined_unit";
    LOCATION_FIELD_CODES_ENUM["terrorism_combined_currency"] = "terrorism_combined_currency";
    LOCATION_FIELD_CODES_ENUM["terrorism_pd_unit"] = "terrorism_pd_unit";
    LOCATION_FIELD_CODES_ENUM["terrorism_pd_currency"] = "terrorism_pd_currency";
    LOCATION_FIELD_CODES_ENUM["terrorism_building_unit"] = "terrorism_building_unit";
    LOCATION_FIELD_CODES_ENUM["terrorism_building_currency"] = "terrorism_building_currency";
    LOCATION_FIELD_CODES_ENUM["terrorism_structure_unit"] = "terrorism_structure_unit";
    LOCATION_FIELD_CODES_ENUM["terrorism_structure_currency"] = "terrorism_structure_currency";
    LOCATION_FIELD_CODES_ENUM["terrorism_content_unit"] = "terrorism_content_unit";
    LOCATION_FIELD_CODES_ENUM["terrorism_content_currency"] = "terrorism_content_currency";
    LOCATION_FIELD_CODES_ENUM["terrorism_machinary_unit"] = "terrorism_machinary_unit";
    LOCATION_FIELD_CODES_ENUM["terrorism_machinary_currency"] = "terrorism_machinary_currency";
    LOCATION_FIELD_CODES_ENUM["terrorism_stock_unit"] = "terrorism_stock_unit";
    LOCATION_FIELD_CODES_ENUM["terrorism_stock_currency"] = "terrorism_stock_currency";
    LOCATION_FIELD_CODES_ENUM["terrorism_bi_unit"] = "terrorism_bi_unit";
    LOCATION_FIELD_CODES_ENUM["terrorism_bi_currency"] = "terrorism_bi_currency";
    LOCATION_FIELD_CODES_ENUM["strike_limit_unit"] = "strike_limit_unit";
    LOCATION_FIELD_CODES_ENUM["strike_combined_unit"] = "strike_combined_unit";
    LOCATION_FIELD_CODES_ENUM["strike_combined_currency"] = "strike_combined_currency";
    LOCATION_FIELD_CODES_ENUM["strike_pd_unit"] = "strike_pd_unit";
    LOCATION_FIELD_CODES_ENUM["strike_pd_currency"] = "strike_pd_currency";
    LOCATION_FIELD_CODES_ENUM["strike_building_unit"] = "strike_building_unit";
    LOCATION_FIELD_CODES_ENUM["strike_building_currency"] = "strike_building_currency";
    LOCATION_FIELD_CODES_ENUM["strike_structure_unit"] = "strike_structure_unit";
    LOCATION_FIELD_CODES_ENUM["strike_structure_currency"] = "strike_structure_currency";
    LOCATION_FIELD_CODES_ENUM["strike_content_unit"] = "strike_content_unit";
    LOCATION_FIELD_CODES_ENUM["strike_content_currency"] = "strike_content_currency";
    LOCATION_FIELD_CODES_ENUM["strike_machinary_unit"] = "strike_machinary_unit";
    LOCATION_FIELD_CODES_ENUM["strike_machinary_currency"] = "strike_machinary_currency";
    LOCATION_FIELD_CODES_ENUM["strike_stock_unit"] = "strike_stock_unit";
    LOCATION_FIELD_CODES_ENUM["strike_stock_currency"] = "strike_stock_currency";
    LOCATION_FIELD_CODES_ENUM["strike_bi_unit"] = "strike_bi_unit";
    LOCATION_FIELD_CODES_ENUM["strike_bi_currency"] = "strike_bi_currency";
    LOCATION_FIELD_CODES_ENUM["machinery_limit_unit"] = "machinery_limit_unit";
    LOCATION_FIELD_CODES_ENUM["machinery_combined_unit"] = "machinery_combined_unit";
    LOCATION_FIELD_CODES_ENUM["machinery_combined_currency"] = "machinery_combined_currency";
    LOCATION_FIELD_CODES_ENUM["machinery_pd_unit"] = "machinery_pd_unit";
    LOCATION_FIELD_CODES_ENUM["machinery_pd_currency"] = "machinery_pd_currency";
    LOCATION_FIELD_CODES_ENUM["machinery_building_unit"] = "machinery_building_unit";
    LOCATION_FIELD_CODES_ENUM["machinery_building_currency"] = "machinery_building_currency";
    LOCATION_FIELD_CODES_ENUM["machinery_structure_unit"] = "machinery_structure_unit";
    LOCATION_FIELD_CODES_ENUM["machinery_structure_currency"] = "machinery_structure_currency";
    LOCATION_FIELD_CODES_ENUM["machinery_content_unit"] = "machinery_content_unit";
    LOCATION_FIELD_CODES_ENUM["machinery_content_currency"] = "machinery_content_currency";
    LOCATION_FIELD_CODES_ENUM["machinery_machinary_unit"] = "machinery_machinary_unit";
    LOCATION_FIELD_CODES_ENUM["machinery_machinary_currency"] = "machinery_machinary_currency";
    LOCATION_FIELD_CODES_ENUM["machinery_stock_unit"] = "machinery_stock_unit";
    LOCATION_FIELD_CODES_ENUM["machinery_stock_currency"] = "machinery_stock_currency";
    LOCATION_FIELD_CODES_ENUM["machinery_bi_unit"] = "machinery_bi_unit";
    LOCATION_FIELD_CODES_ENUM["machinery_bi_currency"] = "machinery_bi_currency";
    LOCATION_FIELD_CODES_ENUM["cyber_limit_unit"] = "cyber_limit_unit";
    LOCATION_FIELD_CODES_ENUM["cyber_combined_unit"] = "cyber_combined_unit";
    LOCATION_FIELD_CODES_ENUM["cyber_combined_currency"] = "cyber_combined_currency";
    LOCATION_FIELD_CODES_ENUM["cyber_pd_unit"] = "cyber_pd_unit";
    LOCATION_FIELD_CODES_ENUM["cyber_pd_currency"] = "cyber_pd_currency";
    LOCATION_FIELD_CODES_ENUM["cyber_building_unit"] = "cyber_building_unit";
    LOCATION_FIELD_CODES_ENUM["cyber_building_currency"] = "cyber_building_currency";
    LOCATION_FIELD_CODES_ENUM["cyber_structure_unit"] = "cyber_structure_unit";
    LOCATION_FIELD_CODES_ENUM["cyber_structure_currency"] = "cyber_structure_currency";
    LOCATION_FIELD_CODES_ENUM["cyber_content_unit"] = "cyber_content_unit";
    LOCATION_FIELD_CODES_ENUM["cyber_content_currency"] = "cyber_content_currency";
    LOCATION_FIELD_CODES_ENUM["cyber_machinary_unit"] = "cyber_machinary_unit";
    LOCATION_FIELD_CODES_ENUM["cyber_machinary_currency"] = "cyber_machinary_currency";
    LOCATION_FIELD_CODES_ENUM["cyber_stock_unit"] = "cyber_stock_unit";
    LOCATION_FIELD_CODES_ENUM["cyber_stock_currency"] = "cyber_stock_currency";
    LOCATION_FIELD_CODES_ENUM["cyber_bi_unit"] = "cyber_bi_unit";
    LOCATION_FIELD_CODES_ENUM["cyber_bi_currency"] = "cyber_bi_currency";
    LOCATION_FIELD_CODES_ENUM["fire_limit_unit"] = "fire_limit_unit";
    LOCATION_FIELD_CODES_ENUM["fire_combined_unit"] = "fire_combined_unit";
    LOCATION_FIELD_CODES_ENUM["fire_combined_currency"] = "fire_combined_currency";
    LOCATION_FIELD_CODES_ENUM["fire_pd_unit"] = "fire_pd_unit";
    LOCATION_FIELD_CODES_ENUM["fire_pd_currency"] = "fire_pd_currency";
    LOCATION_FIELD_CODES_ENUM["fire_building_unit"] = "fire_building_unit";
    LOCATION_FIELD_CODES_ENUM["fire_building_currency"] = "fire_building_currency";
    LOCATION_FIELD_CODES_ENUM["fire_structure_unit"] = "fire_structure_unit";
    LOCATION_FIELD_CODES_ENUM["fire_structure_currency"] = "fire_structure_currency";
    LOCATION_FIELD_CODES_ENUM["fire_content_unit"] = "fire_content_unit";
    LOCATION_FIELD_CODES_ENUM["fire_content_currency"] = "fire_content_currency";
    LOCATION_FIELD_CODES_ENUM["fire_machinary_unit"] = "fire_machinary_unit";
    LOCATION_FIELD_CODES_ENUM["fire_machinary_currency"] = "fire_machinary_currency";
    LOCATION_FIELD_CODES_ENUM["fire_stock_unit"] = "fire_stock_unit";
    LOCATION_FIELD_CODES_ENUM["fire_stock_currency"] = "fire_stock_currency";
    LOCATION_FIELD_CODES_ENUM["fire_bi_unit"] = "fire_bi_unit";
    LOCATION_FIELD_CODES_ENUM["fire_bi_currency"] = "fire_bi_currency";
    LOCATION_FIELD_CODES_ENUM["binders_earthquake_limit_currency"] = "binders_earthquake_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binders_earthquake_deductible_currency"] = "binders_earthquake_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binders_windstorm_limit_currency"] = "binders_windstorm_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binders_windstorm_deductible_currency"] = "binders_windstorm_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binders_flood_limit_currency"] = "binders_flood_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binders_flood_deductible_currency"] = "binders_flood_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binders_terrorism_limit_currency"] = "binders_terrorism_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binders_terrorism_deductible_currency"] = "binders_terrorism_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binders_machinary_limit_currency"] = "binders_machinary_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binders_machinary_deductible_currency"] = "binders_machinary_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binders_strike_limit_currency"] = "binders_strike_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binders_strike_deductible_currency"] = "binders_strike_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binders_fire_limit_currency"] = "binders_fire_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binders_fire_deductible_currency"] = "binders_fire_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["binders_cyber_limit_currency"] = "binders_cyber_limit_currency";
    LOCATION_FIELD_CODES_ENUM["binders_cyber_deductible_currency"] = "binders_cyber_deductible_currency";
    LOCATION_FIELD_CODES_ENUM["building_unit"] = "building_unit";
    LOCATION_FIELD_CODES_ENUM["stock_unit"] = "stock_unit";
    LOCATION_FIELD_CODES_ENUM["content_unit"] = "content_unit";
    LOCATION_FIELD_CODES_ENUM["building_currency"] = "building_currency";
    LOCATION_FIELD_CODES_ENUM["stock_currency"] = "stock_currency";
    LOCATION_FIELD_CODES_ENUM["content_currency"] = "content_currency";
})(LOCATION_FIELD_CODES_ENUM || (LOCATION_FIELD_CODES_ENUM = {}));


/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts":
/*!*********************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts ***!
  \*********************************************************************************************/
/*! exports provided: CONSTRUCTION_CODE, CONSTRUCTION_CLASS, OCCUPANCY_SCHEME, OCCUPANCY_CODE, CONSTRUCTION_SCHEME, STATES, COUNTRY, STATE, ACCORD_OCCUPANCY_CLASS, ACCORD_OCCUPANCY_SUB_CLASS, ISO_2, ISO_3, ASSET_QUALITY, MB_QUALITY, BI_MITIGATION, ACCURACY_LEVEL, GEOCODER, ACCURACY_VALIDATED, BI_TYPE, FOR_INTEREST, CURRENCY, UNIT, UNITVALUES, PRICING_CATEGORY, PRICING_SUB_CATEGORY, OPERATIONAL_STATUS, LOCATION_REFERENCE_DATA, COLOMN_LISTS */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONSTRUCTION_CODE", function() { return CONSTRUCTION_CODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONSTRUCTION_CLASS", function() { return CONSTRUCTION_CLASS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OCCUPANCY_SCHEME", function() { return OCCUPANCY_SCHEME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OCCUPANCY_CODE", function() { return OCCUPANCY_CODE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CONSTRUCTION_SCHEME", function() { return CONSTRUCTION_SCHEME; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATES", function() { return STATES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COUNTRY", function() { return COUNTRY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STATE", function() { return STATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACCORD_OCCUPANCY_CLASS", function() { return ACCORD_OCCUPANCY_CLASS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACCORD_OCCUPANCY_SUB_CLASS", function() { return ACCORD_OCCUPANCY_SUB_CLASS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ISO_2", function() { return ISO_2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ISO_3", function() { return ISO_3; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ASSET_QUALITY", function() { return ASSET_QUALITY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MB_QUALITY", function() { return MB_QUALITY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BI_MITIGATION", function() { return BI_MITIGATION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACCURACY_LEVEL", function() { return ACCURACY_LEVEL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GEOCODER", function() { return GEOCODER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ACCURACY_VALIDATED", function() { return ACCURACY_VALIDATED; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BI_TYPE", function() { return BI_TYPE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FOR_INTEREST", function() { return FOR_INTEREST; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CURRENCY", function() { return CURRENCY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UNIT", function() { return UNIT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UNITVALUES", function() { return UNITVALUES; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PRICING_CATEGORY", function() { return PRICING_CATEGORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PRICING_SUB_CATEGORY", function() { return PRICING_SUB_CATEGORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OPERATIONAL_STATUS", function() { return OPERATIONAL_STATUS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LOCATION_REFERENCE_DATA", function() { return LOCATION_REFERENCE_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "COLOMN_LISTS", function() { return COLOMN_LISTS; });
/* harmony import */ var _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./location-field-codes.const */ "./src/app/shared/popups/general-location-info-popup/models/location-field-codes.const.ts");

var CONSTRUCTION_CODE = [
    'UNSUNS',
    'WOOFRA',
    'MASUNS',
    'MASUNR',
    'MASREI',
    'MASCON',
    'MASADO',
    'CONUNS',
    'CONRPR',
    'CONRCF',
    'CONRCS',
    'CONRTU',
    'STLUNS',
    'STLFRA',
    'STLLMF',
    'MOBUNS',
    'MOBWTD',
    'MOBNTD',
    'GLAGRE',
];
var CONSTRUCTION_CLASS = [
    'Wood frames',
    'Unreinforced masonry',
    'Reinforced masonry',
    'Confined masonry',
    'Adobe',
    'Reinforced concrete precast',
    'Reinforced concrete cast-in-place frame',
    'Reinforced concrete cast-in-place shear wall',
    'Reinforced concrete tilt-up',
    'Steel frames',
    'Light metal frames',
    'With tie-downs',
    'Without tie-downs',
    'Greenhouses',
    'Unspecified'
];
var OCCUPANCY_SCHEME = [
    'RMS',
    'ACCORD',
    'AIR'
];
var OCCUPANCY_CODE = [
    'AGRCUL001',
    'AGRCUL002',
    'AGRCUL003',
    'AGRCUL004',
    'AGRCUL005',
    'AGRCUL006',
    'AGRCUL007',
    'AGRCUL999',
    'AGRGEN999',
    'AGRINF001',
    'AGRINF002',
    'AGRINF999',
    'COMADM001',
    'COMADM002',
    'COMADM003',
    'COMADM004',
    'COMADM005',
    'COMADM006',
    'COMADM007',
    'COMADM008',
    'COMADM009',
    'COMADM010',
    'COMADM011',
    'COMADM999',
    'COMGEN999',
    'COMLRG999',
    'COMPUB001',
    'COMPUB002',
    'COMPUB003',
    'COMPUB004',
    'COMPUB005',
    'COMPUB006',
    'COMPUB007',
    'COMPUB008',
    'COMPUB009',
    'COMPUB010',
    'COMPUB011',
    'COMPUB012',
    'COMPUB013',
    'COMPUB999',
    'COMRTL001',
    'COMRTL002',
    'COMRTL003',
    'COMRTL004',
    'COMRTL005',
    'COMRTL006',
    'COMRTL007',
    'COMRTL008',
    'COMRTL009',
    'COMRTL010',
    'COMRTL011',
    'COMRTL012',
    'COMRTL013',
    'COMRTL999',
    'COMSML999',
    '  INCE999',
    'INDCHM001',
    'INDCHM002',
    'INDCHM003',
    'INDCHM004',
    'INDCHM005',
    'INDCHM006',
    'INDCHM007',
    'INDCHM008',
    'INDCHM009',
    'INDCHM010',
    'INDCHM011',
    'INDCHM012',
    'INDCHM013',
    'INDCHM014',
    'INDCHM015',
    'INDCHM016',
    'INDCHM017',
    'INDCHM018',
    'INDCHM019',
    'INDCHM020',
    'INDCHM021',
    'INDCHM022',
    'INDCHM023',
    'INDCHM999',
    'INDELE001',
    'INDELE002',
    'INDELE003',
    'INDELE004',
    'INDELE005',
    'INDELE006',
    'INDELE007',
    'INDELE008',
    'INDELE009',
    'INDELE010',
    'INDELE011',
    'INDELE999',
    'INDELE999',
    'INDFBT001',
    'INDFBT002',
    'INDFBT003',
    'INDFBT004',
    'INDFBT005',
    'INDFBT006',
    'INDFBT007',
    'INDFBT008',
    'INDFBT009',
    'INDFBT010',
    'INDFBT011',
    'INDFBT012',
    'INDFBT013',
    'INDFBT014',
    'INDFBT015',
    'INDFBT015',
    'INDFBT016',
    'INDFBT017',
    'INDFBT018',
    'INDFBT019',
    'INDFBT020',
    'INDFBT021',
    'INDFBT999',
    'INDGEN999',
    'INDHVY999',
    'INDLIT999',
    'INDMAC001',
    'INDMAC002',
    'INDMAC003',
    'INDMAC004',
    'INDMAC005',
    'INDMAC006',
    'INDMAC007',
    'INDMAC008',
    'INDMAC009',
    'INDMAC010',
    'INDMAC011',
    'INDMAC012',
    'INDMAC999',
    'INDMIN001',
    'INDMIN002',
    'INDMIN003',
    'INDMIN003',
    'INDMIN003',
    'INDMIN004',
    'INDMIN004',
    'INDMIN005',
    'INDMIN006',
    'INDMIN007',
    'INDMIN008',
    'INDMIN008',
    'INDMIN009',
    'INDMIN010',
    'INDMIN010',
    'INDMIN010',
    'INDMIN011',
    'INDMIN011',
    'INDMIN012',
    'INDMIN013',
    'INDMIN014',
    'INDMIN015',
    'INDMIN016',
    'INDMIN017',
    'INDMIN018',
    'INDMIN019',
    'INDMIN020',
    'INDMIN020',
    'INDMIN021',
    'INDMIN022',
    'INDMIN022',
    'INDMIN999',
    'INDNMM001',
    'INDNMM002',
    'INDNMM003',
    'INDNMM004',
    'INDNMM005',
    'INDNMM006',
    'INDNMM007',
    'INDNMM008',
    'INDNMM009',
    'INDNMM010',
    'INDNMM011',
    'INDNMM012',
    'INDNMM013',
    'INDNMM014',
    'INDNMM015',
    'INDNMM016',
    'INDNMM017',
    'INDNMM018',
    'INDNMM019',
    'INDNMM020',
    'INDNMM021',
    'INDNMM999',
    'INDOOF001',
    'INDOOF002',
    'INDOOF003',
    'INDOOF004',
    'INDOOF005',
    'INDOOF006',
    'INDOOF007',
    'INDOOF008',
    'INDOOF009',
    'INDOOF010',
    'INDOOF011',
    'INDOOF012',
    'INDOOF013',
    'INDOOF014',
    'INDOOF015',
    'INDOOF016',
    'INDOOF017',
    'INDOOF018',
    'INDOOF019',
    'INDOOF020',
    'INDOOF021',
    'INDOOF022',
    'INDOOF999',
    'INDOON001',
    'INDOON002',
    'INDOON003',
    'INDOON004',
    'INDOON005',
    'INDOON006',
    'INDOON999',
    'INDOPC001',
    'INDOPC001',
    'INDOPC002',
    'INDOPC003',
    'INDOPC004',
    'INDOPC005',
    'INDOPC006',
    'INDOPC007',
    'INDOPC007',
    'INDOPC008',
    'INDOPC999',
    'INDPHA001',
    'INDPHA002',
    'INDPHA003',
    'INDPHA004',
    'INDPHA999',
    'INDPLA001',
    'INDPLA002',
    'INDPLA003',
    'INDPLA004',
    'INDPLA005',
    'INDPLA999',
    'INDPPR001',
    'INDPPR002',
    'INDPPR003',
    'INDPPR004',
    'INDPPR005',
    'INDPPR006',
    'INDPPR007',
    'INDPPR008',
    'INDPPR009',
    'INDPPR010',
    'INDPPR999',
    'INDPWR001',
    'INDPWR002',
    'INDPWR003',
    'INDPWR004',
    'INDPWR005',
    'INDPWR006',
    'INDPWR007',
    'INDPWR008',
    'INDPWR009',
    'INDPWR010',
    'INDPWR011',
    'INDPWR012',
    'INDPWR013',
    'INDPWR014',
    'INDPWR015',
    'INDPWR999',
    'INDTEL001',
    'INDTEL002',
    'INDTEL003',
    'INDTEL004',
    'INDTEL005',
    'INDTEL006',
    'INDTEL007',
    'INDTEL999',
    'INDTEX001',
    'INDTEX002',
    'INDTEX003',
    'INDTEX004',
    'INDTEX005',
    'INDTEX006',
    'INDTEX007',
    'INDTEX008',
    'INDTEX009',
    'INDTEX010',
    'INDTEX011',
    'INDTEX012',
    'INDTEX999',
    'INDTRN001',
    'INDTRN002',
    'INDTRN003',
    'INDTRN004',
    'INDTRN005',
    'INDTRN006',
    'INDTRN007',
    'INDTRN008',
    'INDTRN009',
    'INDTRN010',
    'INDTRN011',
    'INDTRN012',
    'INDTRN013',
    'INDTRN014',
    'INDTRN015',
    'INDTRN016',
    'INDTRN017',
    'INDTRN018',
    'INDTRN019',
    'INDTRN999',
    'INDUTY001',
    'INDUTY002',
    'INDUTY003',
    'INDUTY004',
    'INDUTY005',
    'INDUTY006',
    'INDUTY007',
    'INDUTY008',
    'INDUTY008',
    'INDUTY009',
    'INDUTY010',
    'INDUTY011',
    'INDUTY012',
    'INDUTY999',
    'INDWOD001',
    'INDWOD002',
    'INDWOD003',
    'INDWOD004',
    'INDWOD005',
    'INDWOD006',
    'INDWOD999',
    'INFENG001',
    'INFENG002',
    'INFENG003',
    'INFENG004',
    'INFENG005',
    'INFENG006',
    'INFENG007',
    'INFENG008',
    'INFENG009',
    'INFENG010',
    'INFENG011',
    'INFENG012',
    'INFENG013',
    'INFENG014',
    'INFGEN999',
    'MATGEN999',
    'MATTRN001',
    'MATTRN002',
    'MATTRN002',
    'MATTRN003',
    'MATTRN999',
    'MOTFLTF999',
    'MOTGEN999',
    'RESGEN999',
    'RESLRG001',
    'RESLRG002',
    'RESLRG003',
    'RESLRG999',
    'RESSML001',
    'RESSML002',
    'RESSML003',
    'RESSML004',
    'RESSML005',
    'RESSML999',
    'UNSUNS999'
];
var CONSTRUCTION_SCHEME = [
    'RMS',
    'ACCORD',
    'AIR'
];
var STATES = {
    'Canada': [
        'Alberta',
        'British Columbia',
        'Manitoba',
        'New Brunswick',
        'Newfoundland',
        'Nova Scotia',
        'Northwest Territories',
        'Nunavut',
        'Ontario',
        'Prince Edward Island',
        'Quebec',
        'Saskatchewan',
        'Yukon Territory'
    ],
    'China': [
        'SHANGHAI',
        'XINJIANG',
        'XIZANG',
        'HEBEI',
        'LIAONING',
        'JILIN',
        'HEILONGJIANG',
        'SHAANXI',
        'GANSU',
        'QINGHAI',
        'SHANDONG',
        'GUANGXI',
        'JIANGSU',
        'ZHEJIANG',
        'ANHUI',
        'JIANGXI',
        'FUJIAN',
        'HENAN',
        'HUBEI',
        'HUNAN',
        'HAINAN',
        'SICHUAN',
        'BEIJING',
        'GUIZHOU',
        'YUNNAN',
        'SHANXI',
        'ZHONGQING',
        'NEI MONGGOL',
        'GUANGDONG',
        'NINGXIA',
        'TIANJIN',
    ],
    'Spain': [
        'ANDALUCIA',
        'ARAGON',
        'ASTURIAS',
        'BALEARES',
        'CANARIAS',
        'CANTABRIA',
        'CATALUÑA',
        'CASTILLA-LA-MANCHA',
        'CASTILLA-LEON',
        'CEUTA',
        'EXTREMADURA',
        'GALICIA',
        'MADRID',
        'MELILLA',
        'MURCIA',
        'NAVARRA',
        'PAIS VALENCIANO',
        'PAIS VASCO',
        'LA RIOJA',
    ],
    'France': [
        'Territoire du sud',
        'France Métropolitaine',
        'Guadeloupe',
        'Guyane Française',
        'Martinique',
        'Mayotte',
        'Nouvelle Calédonie',
        'Polynésie Française',
        'Réunion',
        'Saint Pierre & Miquelon',
        'Wallis & Futuna',
    ],
    'United Kingdom': [
        'Do Not Use',
        'England',
        'Northern Ireland',
        'Scotland',
        'Wales',
    ],
    'United States of America': [
        'Alaska',
        'Alabama',
        'Arkansas',
        'Arizona',
        'California',
        'Colorado',
        'Connecticut',
        'Washington, D.C.',
        'Delaware',
        'Florida',
        'Georgia',
        'Hawaii',
        'Iowa',
        'Idaho',
        'Illinois',
        'Indiana',
        'Kansas',
        'Kentucky',
        'Louisiana',
        'Massachusetts',
        'Maryland',
        'Maine',
        'Michigan',
        'Minnesota',
        'Missouri',
        'Mississippi',
        'Montana',
        'North Carolina',
        'North Dakota',
        'Nebraska',
        'New Hampshire',
        'New Jersey',
        'New Mexico',
        'Nevada',
        'New York',
        'Ohio',
        'Oklahoma',
        'Oregon',
        'Pennsylvania',
        'Puerto Rico',
        'Rhode Island',
        'South Carolina',
        'South Dakota',
        'Tennessee',
        'Texas',
        'Utah',
        'Virginia',
        'Vermont',
        'Washington',
        'Wisconsin',
        'West Virginia',
        'Wyoming',
    ]
};
var COUNTRY = [
    'Afghanistan',
    'Aland Islands',
    'Albania',
    'Algeria',
    'American Samoa',
    'Andorra',
    'Angola',
    'Anguilla',
    'Antarctica',
    'Antigua and Barbuda',
    'Argentina',
    'Armenia',
    'Aruba',
    'Australia',
    'Austria',
    'Azerbaijan',
    'Bahamas',
    'Bahrain',
    'Bangladesh',
    'Barbados',
    'Belarus',
    'Belgium',
    'Belize',
    'Benin',
    'Bermuda',
    'Bhutan',
    'Bolivia',
    'Bosnia and Herzegovina',
    'Botswana',
    'Bouvet Island',
    'Brazil',
    'British Virgin Islands',
    'British Indian Ocean Territory',
    'Brunei Darussalam',
    'Bulgaria',
    'Burkina Faso',
    'Burundi',
    'Cambodia',
    'Cameroon',
    'Canada',
    'Cape Verde',
    'Cayman Islands',
    'Central African Republic',
    'Chad',
    'Chile',
    'China',
    'Hong Kong, SAR China',
    'Macao, SAR China',
    'Christmas Island',
    'Cocos (Keeling) Islands',
    'Colombia',
    'Comoros',
    'Congo (Brazzaville)',
    'Congo, (Kinshasa)',
    'Cook Islands',
    'Costa Rica',
    'Côte d Ivoire',
    'Croatia',
    'Cuba',
    'Cyprus',
    'Czech Republic',
    'Denmark',
    'Djibouti',
    'Dominica',
    'Dominican Republic',
    'Ecuador',
    'Egypt',
    'El Salvador',
    'Equatorial Guinea',
    'Eritrea',
    'Estonia',
    'Ethiopia',
    'Falkland Islands (Malvinas)',
    'Faroe Islands',
    'Fiji',
    'Finland',
    'France',
    'French Guiana',
    'French Polynesia',
    'French Southern Territories',
    'Gabon',
    'Gambia',
    'Georgia',
    'Germany',
    'Ghana',
    'Gibraltar',
    'Greece',
    'Greenland',
    'Grenada',
    'Guadeloupe',
    'Guam',
    'Guatemala',
    'Guernsey',
    'Guinea',
    'Guinea-Bissau',
    'Guyana',
    'Haiti',
    'Heard and Mcdonald Islands',
    'Holy See (Vatican City State)',
    'Honduras',
    'Hungary',
    'Iceland',
    'India',
    'Indonesia',
    'Iran, Islamic Republic of',
    'Iraq',
    'Ireland',
    'Isle of Man',
    'Israel',
    'Italy',
    'Jamaica',
    'Japan',
    'Jersey',
    'Jordan',
    'Kazakhstan',
    'Kenya',
    'Kiribati',
    'Korea (North)',
    'Korea (South)',
    'Kuwait',
    'Kyrgyzstan',
    'Lao PDR',
    'Latvia',
    'Lebanon',
    'Lesotho',
    'Liberia',
    'Libya',
    'Liechtenstein',
    'Lithuania',
    'Luxembourg',
    'Macedonia, Republic of',
    'Madagascar',
    'Malawi',
    'Malaysia',
    'Maldives',
    'Mali',
    'Malta',
    'Marshall Islands',
    'Martinique',
    'Mauritania',
    'Mauritius',
    'Mayotte',
    'Mexico',
    'Micronesia, Federated States of',
    'Moldova',
    'Monaco',
    'Mongolia',
    'Montenegro',
    'Montserrat',
    'Morocco',
    'Mozambique',
    'Myanmar',
    'Namibia',
    'Nauru',
    'Nepal',
    'Netherlands',
    'Netherlands Antilles',
    'New Caledonia',
    'New Zealand',
    'Nicaragua',
    'Niger',
    'Nigeria',
    'Niue',
    'Norfolk Island',
    'Northern Mariana Islands',
    'Norway',
    'Oman',
    'Pakistan',
    'Palau',
    'Palestinian Territory',
    'Panama',
    'Papua New Guinea',
    'Paraguay',
    'Peru',
    'Philippines',
    'Pitcairn',
    'Poland',
    'Portugal',
    'Puerto Rico',
    'Qatar',
    'Réunion',
    'Romania',
    'Russian Federation',
    'Rwanda',
    'Saint-Barthélemy',
    'Saint Helena',
    'Saint Kitts and Nevis',
    'Saint Lucia',
    'Saint-Martin (French part)',
    'Saint Pierre and Miquelon',
    'Saint Vincent and Grenadines',
    'Samoa',
    'San Marino',
    'Sao Tome and Principe',
    'Saudi Arabia',
    'Senegal',
    'Serbia',
    'Seychelles',
    'Sierra Leone',
    'Singapore',
    'Slovakia',
    'Slovenia',
    'Solomon Islands',
    'Somalia',
    'South Africa',
    'South Georgia and the South Sandwich Islands',
    'South Sudan',
    'Spain',
    'Sri Lanka',
    'Sudan',
    'Suriname',
    'Svalbard and Jan Mayen Islands',
    'Swaziland',
    'Sweden',
    'Switzerland',
    'Syrian Arab Republic (Syria)',
    'Taiwan, Republic of China',
    'Tajikistan',
    'Tanzania, United Republic of',
    'Thailand',
    'Timor-Leste',
    'Togo',
    'Tokelau',
    'Tonga',
    'Trinidad and Tobago',
    'Tunisia',
    'Turkey',
    'Turkmenistan',
    'Turks and Caicos Islands',
    'Tuvalu',
    'Uganda',
    'Ukraine',
    'United Arab Emirates',
    'United Kingdom',
    'United States of America',
    'US Minor Outlying Islands',
    'Uruguay',
    'Uzbekistan',
    'Vanuatu',
    'Venezuela (Bolivarian Republic)',
    'Viet Nam',
    'Virgin Islands, US',
    'Wallis and Futuna Islands',
    'Western Sahara',
    'Yemen',
    'Zambia',
    'Zimbabwe'
];
var STATE = [
    'Alberta',
    'British Columbia',
    'Manitoba',
    'New Brunswick',
    'Newfoundland',
    'Nova Scotia',
    'Northwest Territories',
    'Nunavut',
    'Ontario',
    'Prince Edward Island',
    'Quebec',
    'Saskatchewan',
    'Yukon Territory',
    'SHANGHAI',
    'XINJIANG',
    'XIZANG',
    'HEBEI',
    'LIAONING',
    'JILIN',
    'HEILONGJIANG',
    'SHAANXI',
    'GANSU',
    'QINGHAI',
    'SHANDONG',
    'GUANGXI',
    'JIANGSU',
    'ZHEJIANG',
    'ANHUI',
    'JIANGXI',
    'FUJIAN',
    'HENAN',
    'HUBEI',
    'HUNAN',
    'HAINAN',
    'SICHUAN',
    'BEIJING',
    'GUIZHOU',
    'YUNNAN',
    'SHANXI',
    'ZHONGQING',
    'NEI MONGGOL',
    'GUANGDONG',
    'NINGXIA',
    'TIANJIN',
    'ANDALUCIA',
    'ARAGON',
    'ASTURIAS',
    'BALEARES',
    'CANARIAS',
    'CANTABRIA',
    'CATALUÑA',
    'CASTILLA-LA-MANCHA',
    'CASTILLA-LEON',
    'CEUTA',
    'EXTREMADURA',
    'GALICIA',
    'MADRID',
    'MELILLA',
    'MURCIA',
    'NAVARRA',
    'PAIS VALENCIANO',
    'PAIS VASCO',
    'LA RIOJA',
    'Territoire du sud',
    'France Métropolitaine',
    'Guadeloupe',
    'Guyane Française',
    'Martinique',
    'Mayotte',
    'Nouvelle Calédonie',
    'Polynésie Française',
    'Réunion',
    'Saint Pierre & Miquelon',
    'Wallis & Futuna',
    'Do Not Use',
    'England',
    'Do Not Use',
    'Northern Ireland',
    'Scotland',
    'Wales',
    'Alaska',
    'Alabama',
    'Arkansas',
    'Arizona',
    'California',
    'Colorado',
    'Connecticut',
    'Washington, D.C.',
    'Delaware',
    'Florida',
    'Georgia',
    'Hawaii',
    'Iowa',
    'Idaho',
    'Illinois',
    'Indiana',
    'Kansas',
    'Kentucky',
    'Louisiana',
    'Massachusetts',
    'Maryland',
    'Maine',
    'Michigan',
    'Minnesota',
    'Missouri',
    'Mississippi',
    'Montana',
    'North Carolina',
    'North Dakota',
    'Nebraska',
    'New Hampshire',
    'New Jersey',
    'New Mexico',
    'Nevada',
    'New York',
    'Ohio',
    'Oklahoma',
    'Oregon',
    'Pennsylvania',
    'Puerto Rico',
    'Rhode Island',
    'South Carolina',
    'South Dakota',
    'Tennessee',
    'Texas',
    'Utah',
    'Virginia',
    'Vermont',
    'Washington',
    'Wisconsin',
    'West Virginia',
    'Wyoming',
    'Arkansas',
    'Iowa',
    'Illinois',
    'Indiana',
    'Kansas',
    'Kentucky',
    'Michigan',
    'Minnesota',
    'Missouri',
    'North Dakota',
    'Nebraska',
    'Ohio',
    'Oklahoma',
    'South Dakota',
    'Tennessee',
    'Wisconsin',
    'Connecticut',
    'Massachusetts',
    'Maine',
    'New Hampshire',
    'Rhode Island',
    'Vermont',
    'Alaska',
    'Arizona',
    'California',
    'Colorado',
    'Hawaii',
    'Idaho',
    'Montana',
    'New Mexico',
    'Nevada',
    'Oregon',
    'Utah',
    'Washington',
    'Wyoming',
    'Washington, D.C.',
    'Delaware',
    'Maryland',
    'New Jersey',
    'New York',
    'Pennsylvania',
    'Virginia',
    'West Virginia',
    'Florida',
    'Georgia',
    'North Carolina',
    'South Carolina',
    'Alabama',
    'Louisiana',
    'Mississippi',
    'Texas',
];
var ACCORD_OCCUPANCY_CLASS = [
    'Agriculture Cultivation',
    'General',
    'Agriculture infrastructure',
    'Administration, commercial service, public facility',
    'Large commercial',
    'Public, educational, religious building',
    'Retail, trading, storage facility',
    'Small commercial',
    'Civil work and special engineering structure',
    'Chemicals',
    'Electric, electronic,  high precision work',
    'Food, beverage, tobacco',
    'Heavy industrial',
    'Light industrial',
    'Metal and machinery',
    'Mining, steel, foundry, rolling mill',
    'Non metallic mineral products',
    'Oil and gas extraction offshor',
    'Oil and gas extraction onshore',
    'Oil and petrochemicals',
    'Pharmaceuticals, biotec',
    'Plastic and rubber',
    'Pulp and paper, printing',
    'Power generation and distribution',
    'Telecommunication and data processing',
    'Textile and leather',
    'Transportation services, repair, maintenance',
    'Utilities excluding power generatio',
    'Wood',
    'Civil work and special engineering structure',
    'Transportatio',
    'Car and motor fleet (hull)',
    'large residential',
    'Unspecified'
];
var ACCORD_OCCUPANCY_SUB_CLASS = [
    'Animal husbandry',
    'Crop',
    'Fish',
    'Forest',
    'Fruits',
    'Greenhouse',
    'Nursery',
    'Barn',
    'Farmhouse',
    'Bar, pub, club, tavern, discotheque',
    'Casino, Theatre, Cinema',
    'Floating casino',
    'Hospital',
    'Hotel',
    'Medical day care centre',
    'Motel',
    'Nursing home',
    'Office building',
    'Restaurant',
    'Vacation resort, golf course',
    'Amusement park',
    'Cinema, concert hall, theatre',
    'Convention centre',
    'Exhibition hall',
    'Film, television, radio studio',
    'Library',
    'Museum',
    'Prison or jail',
    'Religious building (church, mosque, synagogue, temple, monastery, etc...)',
    'School',
    'Stadium, arena',
    'Temporary exhibition facility or circus',
    'University or college (including dormitories)',
    'Cold storage - warehouse',
    'Department store including retail trade',
    'Distribution centre',
    'High hazardous goods storage - warehouse',
    'Low hazardous goods storage - warehouse',
    'Market hall',
    'Medium hazardous goods storage - warehouse',
    'Open-air storage yard',
    'Petrol or liquefied petroleum gas (LPG) station',
    'Shopping centre or strip mall',
    'Silo',
    'Supermarket',
    'Wholesale trading store',
    'Ammonia or ammonium nitrate based fertiliser plant',
    'An organic fertiliser plant (triple super phosphate, potassium, etc...)',
    'Aromatic oils and essences production - chemical plant',
    'Bone glue - chemical plant',
    'Candles or wax manufacturing (excluding base stock) - chemical plant',
    'Coatings: powder - chemical plant',
    'Coatings: solvent based - chemical plant',
    'Coatings: water based - chemical plant',
    'Hydrogen peroxide, persulfate, etc...- chemical plant',
    'Lubricant manufacturing (excluding base stock) - chemical plant',
    'Mixing and blending of industrial gases: with cold box - chemical plant',
    'Mixing and blending of industrial gases: without cold box - chemical plant',
    'Other specialty chemicals - chemical plant',
    'Other synthetic fibres (polyester, nylon fibres, etc...) - chemical plant',
    'Perfumes or cosmetics - chemical plant',
    'Pesticides with nitrate reactions - chemical plant',
    'Pesticides, herbicides, fungicides, other biocides - chemical plant',
    'Pigments - chemical plant',
    'Primary explosives (pyrotechnics, fireworks, detonators) - chemical plant',
    'Resins, latex paints, adhesives - chemical plant',
    'Secondary explosives (ammunition, blasting agent) - chemical plant',
    'Soaps, detergents, polishes, chlorine based bleaching agents - chemical plant',
    'Viscose - chemical plant',
    'Assembly with clean room (back end production) - semiconductor plant',
    'Batteries and accumulators manufacturing plant',
    'Electric motors, machines, appliances manufacturing plant',
    'Jewellery, goldsmith, precious stone - manufacturing plant',
    'Light bulbs factory',
    'Manufacturing with clean room (front end production, wafer fab) - semiconductor plant',
    'Manufacturing, assembly plant for electronic or high tech products: with clean room',
    'Manufacturing, assembly plant for electronic or high tech products: without clean room',
    'Mass and custom software (burning of CD,  DVD, packaging) - manufacturing plant',
    'Optics, telescope, camera, laser manufacturing plant',
    'Watches factory',
    'Bakery',
    'Brewery or winery',
    'Chocolate factory',
    'Cigarette or cigar factory',
    'Coffee roasting facility or malthouse',
    'Dairy products and milk processing plant: with milk powder',
    'Dairy products and milk processing plant: without milk powder',
    'Distillery',
    'Edible fat or oil processing plant (without oil milling)',
    'Fruits and vegetables processing factory (including fruit pressing for juice)',
    'Ice factory',
    'Meat, fish drying and preservation plant',
    'Meat, fish processing plant',
    'Mill: feed, flour, grain, etc...',
    'Non-alcoholic beverage plant (mixing and bottling)',
    'Non-alcoholic beverage plant (mixing and bottling)',
    'Oil milling and processing plant: no solvent extraction',
    'Oil milling and processing plant: with solvent extraction',
    'Other processed food  factory (food preparation, catering, etc...)',
    'Slaughter house, abattoir, rendering plant',
    'Starch factory',
    'Sugar refinery',
    'Aircraft manufacturing plant',
    'Automobile, heavy vehicles assembly and manufacturing plant (original equipment manufacturer - OEM)',
    'Cable factory including plastic insulation',
    'Heavy machinery production or assembly plant (pumps, compressors, turbines, etc...)',
    'Light machinery production, assembly plant (including non electric engines)',
    'Metal surface treatment (galvanising, pickling, hardening, etc...) - metal products factory',
    'Metal working and assembly (light metal working) - metal products factory',
    'Non ferrous metal processing - metal products factory',
    'Railway vehicle manufacturing plant',
    'Satellites and spacecrafts manufacturing plant (excluding rocket motors)',
    'Shipbuilding and vessel manufacturing shipyard',
    'Wire factory (bare wire)',
    'Alumina refinery',
    'Aluminium smelter',
    'Brine solution mine',
    'Brine solution mine',
    'Brine solution mine',
    'Coal wash plant',
    'Coal wash plant',
    'Coking plant',
    'Integrated steel plant with blast furnace',
    'Integrated steel plant with direct reduction',
    'Iron or steel foundry',
    'Iron or steel foundry',
    'Mini mill',
    'Ore processing plant with solvent extraction',
    'Ore processing plant with solvent extraction',
    'Ore processing plant with solvent extraction',
    'Ore processing plant without solvent extraction',
    'Ore processing plant without solvent extraction',
    'Other foundry (other than steel or aluminium)',
    'Peat mine (extraction, processing)',
    'Quarry (stone, gravel, sand extraction and processing)',
    'Rolling mill (all metals)',
    'Salt, potash mine: surface',
    'Salt, potash mine: underground',
    'Sea bed mining site (shallow or deep)',
    'Surface coal mine',
    'Surface mine excluding coal (extraction, concentration)',
    'Surface mine excluding coal (extraction, concentration)',
    'Underground coal mine',
    'Underground mine excluding coal (extraction, concentration)',
    'Asphalt mixture (block and paving) factory',
    'Brick or tile factory',
    'Cement or plaster products factory with oven',
    'Cement or plaster products factory without oven',
    'Cement production site with rotary kiln',
    'Ceramics or earthenware factory',
    'Coated shingle factory',
    'Concrete parts factory (prefabrication)',
    'Emery or abrasive products',
    'Glass sheet factory for flat screen display devices',
    'Hollow glass or glass bottles factory',
    'Insulation material factory (mineral, glass wool, etc...)',
    'Lightweight slab factory',
    'Lime or gypsum products factory',
    'Mirror factory',
    'Roofing felt factory',
    'Sandwich panel factory: glass, rock',
    'Sandwich panel factory: polyurethane(PUR), polyisocyanurate (PIR), expanded polystyrene (EPS)',
    'Sheet or plate glass factory',
    'Stone slab or paving stone factory',
    'Tarboard or tar paper factory',
    'Barge, support vessel, seismic vessel',
    'Buoy (single point mooring - SPM, catenary anchor leg mooring - CALM)',
    'Crane barge or pipelay vessel',
    'Drill ship',
    'Floating liquefied natural gas (LNG), gas to liquid (GTL) vessel',
    'Floating, production, storage and off-loading vessel (FPSO)',
    'Floating, storage and off-loading vessel (FSO)',
    'Offshore complex (bridge linked fixed steel structures)',
    'Offshore concrete gravity based structure',
    'Offshore fixed steel structure',
    'Offshore pipeline: deep (> 200m and <= 1500m)',
    'Offshore pipeline: shallow (<= 200m)',
    'Offshore pipeline: ultra deep ( > 1500m)',
    'Other floating production systems',
    'Self elevating jack-up with independent legs',
    'Self elevating jack-up with mat base',
    'Semi submersible drilling rig',
    'Semi submersible production platform',
    'Spar or tension leg platform',
    'Subsea equipment: deep (> 200m and <= 1500m)',
    'Subsea equipment: shallow (< 200 m)',
    'Subsea equipment: ultra deep ( > 1500m)',
    'Land rig',
    'Onshore pipeline',
    'Onshore pipeline: pipeline compressor station',
    'Onshore pipeline: pumping station',
    'Onshore pipeline: river crossings',
    'Onshore production facility (well heads, separation stations, gathering station, etc...)',
    'Gas plant',
    'Hydrocarbon underground storage and associated surface infrastructure',
    'Liquefied natural gas (LNG) or liquefied petroleum gas (LPG) plant',
    'Oil and petro terminal',
    'Oil refinery',
    'Petrochemicals plant (including plastic fabrication out of monomere)',
    'Tank farm',
    'Upgrader (tar sands)',
    'Packaging, tableting, formulation - pharmaceutical plant',
    'Pharma intermediates, food additives, vitamins, preservatives - pharmaceutical plant',
    'R&D laboratory (pharmaceuticals or biotechnology)',
    'Synthetic production (active pharmaceutical ingredients - API) - pharmaceutical plant',
    'Extrusion, injection moulding of plastic products - plastic goods factory',
    'Foam no polyurethane (excluding manufacturing out of monomere) - plastic goods factory',
    'Foam polyurethane (excluding manufacturing out of monomeres) - plastic goods factory',
    'Rubber goods factory',
    'Tyre factory',
    'Cardboard or paper goods factory',
    'Chemical pulp mill with black liquor recovery boiler (BLRB) or sulphites',
    'Integrated paper mill (pulping including black liquor recovery boiler (BLRB) and paper production)',
    'Mechanical pulp mill',
    'Paper mill without pulp production',
    'Paper recycling plant',
    'Printing plant: combined',
    'Printing plant: solvent based',
    'Printing plant: water based',
    'Tissue mill without pulp production',
    'Aeolic power plant or wind farm: onshore',
    'Aeolic power plant or windfarm: offshore',
    'Biomass power plant',
    'Combined cycle gas turbine power plant',
    'Conventional steam, coal fired power plant',
    'Conventional steam, oil or gas fired power plant',
    'Geothermal power plant',
    'Hydro power plant',
    'Nuclear power plant',
    'Overhead power line',
    'Power distribution: substation',
    'Simple cycle gas turbine power plant',
    'Solar power plant: concentration',
    'Solar power plant: photovoltaic',
    'Underground power line',
    'Electronic data processing (EDP) centre, call centre',
    'Radio or television broadcasting station',
    'Submarine, underground cable',
    'Switching centre',
    'Telecom, television tower, antenna for wireless network',
    'Overhead telecommunication line',
    'Underground telecommunication line',
    'Carpet, rope, string production plant',
    'Clothing,  other cloth products including  textile recycling - textile factory',
    'Finishing of textiles - textile factory',
    'Leather factory',
    'Natural fibre (cotton, kapok, wool) -  textile production plant',
    'Non woven fabrics (cotton wool, fleece, felts) - textile factory',
    'Shoe factory',
    'Spinning, prespinning processes - textile factory',
    'Tannery',
    'Textile cleaning shop (launderette, laundromat, dry cleaning shop, etc...)',
    'Upholstery or mattress factory',
    'Weaving or twisting -  textile factory',
    'Air traffic control centre',
    'Aircraft hangar without maintenance',
    'Aircraft maintenance hangar',
    'Airport terminal',
    'Bus, taxi, truck maintenance garage',
    'Cable railway infrastructure (excluding bridges and tunnels)',
    'Covered above ground parking garage or yard (including high rise garage)',
    'Dock or port crane',
    'General airport services (excluding airport terminals)',
    'Harbour, terminal for containers, storage (grain, coal,  minerals)',
    'Maritime traffic infrastructure (ferry station, shipyard, etc...)',
    'Parking yard (not covered)',
    'Port terminal for passengers',
    'Railway station',
    'Road traffic services, station, operation centre',
    'Road vehicles or construction machines maintenance garage',
    'Rolling stock maintenance workshop',
    'Ships and vessels maintenance shipyard',
    'Underground parking garage',
    'Desalination plant',
    'District heating (water, steam heating)',
    'Drinking or waste water lines',
    'Fresh water procurement or treatment plant',
    'Gas distribution network',
    'Landfill site',
    'Recycling plant',
    'Waste incineration plant',
    'Waste incineration plant',
    'Waste water treatment plant',
    'Water  tower',
    'Water pumping station',
    'Water reservoir',
    'Forestry infrastructure (machinery, buildings, etc...)',
    'Furniture, wooden goods workshop',
    'Sawmill',
    'Wood board, particle board, plywood factory',
    'Wood chips, wood pellets production plant',
    'Wood preservation workshop',
    'Alluvium tunnel',
    'Bridge',
    'Building contractor installations: above ground construction',
    'Building contractor installations: underground construction',
    'Concrete dam',
    'Cut and cover tunnel, gallery',
    'Earth and rockfill dam',
    'Railway track, infrastructure (excluding bridges, tunnels, rolling stock)',
    'Road or highway',
    'Rock tunnel',
    'Runway',
    'Span bridge',
    'Waterfront structure',
    'Waterways inland',
    'Aircraft (hull)',
    'Rolling stock (railway infrastructure, trains)',
    'Rolling stock (railway infrastructure, trains)',
    'Ship or vessel (hull)',
    'multi-family housing',
    'group institutional housing',
    'terraced housing',
    'single family housing',
    'multi-family housing',
    'attached housing',
    'semi-attached housing',
    'mobile home',
    'Unspecified'
];
var ISO_2 = [
    'AF',
    'AX',
    'AL',
    'DZ',
    'AS',
    'AD',
    'AO',
    'AI',
    'AQ',
    'AG',
    'AR',
    'AM',
    'AW',
    'AU',
    'AT',
    'AZ',
    'BS',
    'BH',
    'BD',
    'BB',
    'BY',
    'BE',
    'BZ',
    'BJ',
    'BM',
    'BT',
    'BO',
    'BA',
    'BW',
    'BV',
    'BR',
    'VG',
    'IO',
    'BN',
    'BG',
    'BF',
    'BI',
    'KH',
    'CM',
    'CA',
    'CV',
    'KY',
    'CF',
    'TD',
    'CL',
    'CN',
    'HK',
    'MO',
    'CX',
    'CC',
    'CO',
    'KM',
    'CG',
    'CD',
    'CK',
    'CR',
    'CI',
    'HR',
    'CU',
    'CY',
    'CZ',
    'DK',
    'DJ',
    'DM',
    'DO',
    'EC',
    'EG',
    'SV',
    'GQ',
    'ER',
    'EE',
    'ET',
    'FK',
    'FO',
    'FJ',
    'FI',
    'FR',
    'GF',
    'PF',
    'TF',
    'GA',
    'GM',
    'GE',
    'DE',
    'GH',
    'GI',
    'GR',
    'GL',
    'GD',
    'GP',
    'GU',
    'GT',
    'GG',
    'GN',
    'GW',
    'GY',
    'HT',
    'HM',
    'VA',
    'HN',
    'HU',
    'IS',
    'IN',
    'ID',
    'IR',
    'IQ',
    'IE',
    'IM',
    'IL',
    'IT',
    'JM',
    'JP',
    'JE',
    'JO',
    'KZ',
    'KE',
    'KI',
    'KP',
    'KR',
    'KW',
    'KG',
    'LA',
    'LV',
    'LB',
    'LS',
    'LR',
    'LY',
    'LI',
    'LT',
    'LU',
    'MK',
    'MG',
    'MW',
    'MY',
    'MV',
    'ML',
    'MT',
    'MH',
    'MQ',
    'MR',
    'MU',
    'YT',
    'MX',
    'FM',
    'MD',
    'MC',
    'MN',
    'ME',
    'MS',
    'MA',
    'MZ',
    'MM',
    'NA',
    'NR',
    'NP',
    'NL',
    'AN',
    'NC',
    'NZ',
    'NI',
    'NE',
    'NG',
    'NU',
    'NF',
    'MP',
    'NO',
    'OM',
    'PK',
    'PW',
    'PS',
    'PA',
    'PG',
    'PY',
    'PE',
    'PH',
    'PN',
    'PL',
    'PT',
    'PR',
    'QA',
    'RE',
    'RO',
    'RU',
    'RW',
    'BL',
    'SH',
    'KN',
    'LC',
    'MF',
    'PM',
    'VC',
    'WS',
    'SM',
    'ST',
    'SA',
    'SN',
    'RS',
    'SC',
    'SL',
    'SG',
    'SK',
    'SI',
    'SB',
    'SO',
    'ZA',
    'GS',
    'SS',
    'ES',
    'LK',
    'SD',
    'SR',
    'SJ',
    'SZ',
    'SE',
    'CH',
    'SY',
    'TW',
    'TJ',
    'TZ',
    'TH',
    'TL',
    'TG',
    'TK',
    'TO',
    'TT',
    'TN',
    'TR',
    'TM',
    'TC',
    'TV',
    'UG',
    'UA',
    'AE',
    'GB',
    'US',
    'UM',
    'UY',
    'UZ',
    'VU',
    'VE',
    'VN',
    'VI',
    'WF',
    'EH',
    'YE',
    'ZM',
    'ZW',
];
var ISO_3 = [
    'AFG',
    'ALA',
    'ALB',
    'DZA',
    'ASM',
    'AND',
    'AGO',
    'AIA',
    'ATA',
    'ATG',
    'ARG',
    'ARM',
    'ABW',
    'AUS',
    'AUT',
    'AZE',
    'BHS',
    'BHR',
    'BGD',
    'BRB',
    'BLR',
    'BEL',
    'BLZ',
    'BEN',
    'BMU',
    'BTN',
    'BOL',
    'BIH',
    'BWA',
    'BVT',
    'BRA',
    'VGB',
    'IOT',
    'BRN',
    'BGR',
    'BFA',
    'BDI',
    'KHM',
    'CMR',
    'CAN',
    'CPV',
    'CYM',
    'CAF',
    'TCD',
    'CHL',
    'CHN',
    'HKG',
    'MAC',
    'CXR',
    'CCK',
    'COL',
    'COM',
    'COG',
    'COD',
    'COK',
    'CRI',
    'CIV',
    'HRV',
    'CUB',
    'CYP',
    'CZE',
    'DNK',
    'DJI',
    'DMA',
    'DOM',
    'ECU',
    'EGY',
    'SLV',
    'GNQ',
    'ERI',
    'EST',
    'ETH',
    'FLK',
    'FRO',
    'FJI',
    'FIN',
    'FRA',
    'GUF',
    'PYF',
    'ATF',
    'GAB',
    'GMB',
    'GEO',
    'DEU',
    'GHA',
    'GIB',
    'GRC',
    'GRL',
    'GRD',
    'GLP',
    'GUM',
    'GTM',
    'GGY',
    'GIN',
    'GNB',
    'GUY',
    'HTI',
    'HMD',
    'VAT',
    'HND',
    'HUN',
    'ISL',
    'IND',
    'IDN',
    'IRN',
    'IRQ',
    'IRL',
    'IMN',
    'ISR',
    'ITA',
    'JAM',
    'JPN',
    'JEY',
    'JOR',
    'KAZ',
    'KEN',
    'KIR',
    'PRK',
    'KOR',
    'KWT',
    'KGZ',
    'LAO',
    'LVA',
    'LBN',
    'LSO',
    'LBR',
    'LBY',
    'LIE',
    'LTU',
    'LUX',
    'MKD',
    'MDG',
    'MWI',
    'MYS',
    'MDV',
    'MLI',
    'MLT',
    'MHL',
    'MTQ',
    'MRT',
    'MUS',
    'MYT',
    'MEX',
    'FSM',
    'MDA',
    'MCO',
    'MNG',
    'MNE',
    'MSR',
    'MAR',
    'MOZ',
    'MMR',
    'NAM',
    'NRU',
    'NPL',
    'NLD',
    'ANT',
    'NCL',
    'NZL',
    'NIC',
    'NER',
    'NGA',
    'NIU',
    'NFK',
    'MNP',
    'NOR',
    'OMN',
    'PAK',
    'PLW',
    'PSE',
    'PAN',
    'PNG',
    'PRY',
    'PER',
    'PHL',
    'PCN',
    'POL',
    'PRT',
    'PRI',
    'QAT',
    'REU',
    'ROU',
    'RUS',
    'RWA',
    'BLM',
    'SHN',
    'KNA',
    'LCA',
    'MAF',
    'SPM',
    'VCT',
    'WSM',
    'SMR',
    'STP',
    'SAU',
    'SEN',
    'SRB',
    'SYC',
    'SLE',
    'SGP',
    'SVK',
    'SVN',
    'SLB',
    'SOM',
    'ZAF',
    'SGS',
    'SSD',
    'ESP',
    'LKA',
    'SDN',
    'SUR',
    'SJM',
    'SWZ',
    'SWE',
    'CHE',
    'SYR',
    'TWN',
    'TJK',
    'TZA',
    'THA',
    'TLS',
    'TGO',
    'TKL',
    'TON',
    'TTO',
    'TUN',
    'TUR',
    'TKM',
    'TCA',
    'TUV',
    'UGA',
    'UKR',
    'ARE',
    'GBR',
    'USA',
    'UMI',
    'URY',
    'UZB',
    'VUT',
    'VEN',
    'VNM',
    'VIR',
    'WLF',
    'ESH',
    'YEM',
    'ZMB',
    'ZWE'
];
var ASSET_QUALITY = [
    'Poor',
    'Below average',
    'Average Minus',
    'Average',
    'Average Plus',
    'Above Average',
    'Good'
];
var MB_QUALITY = [
    'Poor',
    'Below average',
    'Average Minus',
    'Average',
    'Average Plus',
    'Above Average',
    'Good'
];
var BI_MITIGATION = [
    'Poor',
    'Below average',
    'Average Minus',
    'Average',
    'Average Plus',
    'Above Average',
    'Good'
];
var ACCURACY_LEVEL = [
    'Unkown',
    'Country',
    'Region',
    'Sub-region',
    'Town',
    'Post Code',
    'Street',
    'Intersection',
    'Address',
    'Premise'
];
var GEOCODER = [
    'Here',
    'Trillium',
    'SCOR Data base',
    'Property DB',
];
var ACCURACY_VALIDATED = [
    'Yes',
    'No'
];
var BI_TYPE = [
    'Loss of Profits',
    'Gross Earnings',
    'Standing Charges'
];
var FOR_INTEREST = [
    '100',
    'For Interest'
];
var CURRENCY = [
    'CURR',
    'ADP',
    'AED',
    'AFA',
    'AFN',
    'ALK',
    'ALL',
    'AMD',
    'ANG',
    'AOA',
    'AOK',
    'AON',
    'AOR',
    'AR1',
    'AR2',
    'AR3',
    'AR6',
    'AR7',
    'ARA',
    'ARP',
    'ARS',
    'ARY',
    'ATS',
    'AUD',
    'AUS',
    'AWG',
    'AZN',
    'BBD',
    'BDT',
    'BEF',
    'BEL',
    'BGL',
    'BGN',
    'BHD',
    'BIF',
    'BMD',
    'BND',
    'BO1',
    'BOB',
    'BOP',
    'BRB',
    'BRC',
    'BRE',
    'BRL',
    'BRN',
    'BRR',
    'BSD',
    'BTN',
    'BUK',
    'BWP',
    'BYR',
    'BZD',
    'CAD',
    'CDF',
    'CHF',
    'CLD',
    'CLF',
    'CLP',
    'CLU',
    'CNY',
    'COP',
    'CRC',
    'CSD',
    'CSK',
    'CUP',
    'CVE',
    'CYP',
    'CZK',
    'DDM',
    'DEM',
    'DJF',
    'DKK',
    'DOP',
    'DZD',
    'ECS',
    'EEK',
    'EGP',
    'ESP',
    'ETB',
    'EUH',
    'EUR',
    'FIM',
    'FJD',
    'FKP',
    'FR1',
    'FRC',
    'FRF',
    'FTR',
    'GBP',
    'GEL',
    'GHC',
    'GHS',
    'GMD',
    'GNE',
    'GNF',
    'GNS',
    'GRD',
    'GTQ',
    'GYD',
    'HKD',
    'HNL',
    'HRD',
    'HRK',
    'HTG',
    'HUF',
    'IDR',
    'IEP',
    'IKR',
    'ILO',
    'ILP',
    'ILR',
    'ILS',
    'INR',
    'IQD',
    'IRR',
    'ISA',
    'ISJ',
    'ISK',
    'ITL',
    'JMD',
    'JOD',
    'JPY',
    'KES',
    'KGS',
    'KHR',
    'KMF',
    'KPW',
    'KRW',
    'KWD',
    'KYD',
    'KZT',
    'LAJ',
    'LAK',
    'LBP',
    'LKR',
    'LRD',
    'LSL',
    'LSM',
    'LTL',
    'LUF',
    'LUL',
    'LVL',
    'LYD',
    'MAD',
    'MAF',
    'MDL',
    'MFF',
    'MGA',
    'MGF',
    'MKD',
    'MKK',
    'MLF',
    'MMK',
    'MNT',
    'MOP',
    'MRO',
    'MTL',
    'MTP',
    'MUR',
    'MVR',
    'MWK',
    'MXN',
    'MXP',
    'MXV',
    'MYR',
    'MZM',
    'MZN',
    'NAD',
    'NBC',
    'NGN',
    'NIA',
    'NIB',
    'NIC',
    'NIO',
    'NLG',
    'NOK',
    'NPR',
    'NZD',
    'OMR',
    'PAB',
    'PEH',
    'PEI',
    'PEN',
    'PES',
    'PGK',
    'PHP',
    'PKR',
    'PLN',
    'PLZ',
    'PSO',
    'PTE',
    'PYG',
    'QAR',
    'RCL',
    'RHD',
    'ROL',
    'RON',
    'RSD',
    'RUB',
    'RUR',
    'RWF',
    'SAR',
    'SBD',
    'SCR',
    'SDD',
    'SDG',
    'SDP',
    'SEK',
    'SGD',
    'SIT',
    'SKK',
    'SLL',
    'SOL',
    'SOS',
    'SRD',
    'SRG',
    'SSP',
    'STD',
    'SUR',
    'SVC',
    'SYP',
    'SZL',
    'THB',
    'TND',
    'TOP',
    'TRK',
    'TRL',
    'TRY',
    'TTD',
    'TWD',
    'TZS',
    'UAH',
    'UCS',
    'UDS',
    'UGS',
    'UGW',
    'UGX',
    'UPR',
    'USD',
    'UYN',
    'UYP',
    'UYU',
    'VEB',
    'VEF',
    'VN1',
    'VNC',
    'VND',
    'VUV',
    'WST',
    'XA2',
    'XA5',
    'XAF',
    'XBD',
    'XC1',
    'XCD',
    'XEU',
    'XO2',
    'XO3',
    'XOF',
    'XPF',
    'XXB',
    'XXC',
    'XXE',
    'XXK',
    'XXL',
    'XXM',
    'XXN',
    'XXO',
    'XXP',
    'XXQ',
    'XXR',
    'XXS',
    'XXT',
    'XXU',
    'XXV',
    'XXW',
    'YDD',
    'YEM',
    'YER',
    'YUD',
    'YUM',
    'YUN',
    'ZAR',
    'ZMK',
    'ZRM',
    'ZRN',
    'ZRZ',
    'ZWD',
    'ZWL',
    'ZWN',
    'ZWR',
    'ZMW',
    'CNH',
    'MRU',
    'UZS',
];
var UNIT = [
    'One',
    'Thousands',
    'Millions',
];
var UNITVALUES = {
    'One': 1,
    'Thousands': 1000,
    'Millions': 1000000,
};
var PRICING_CATEGORY = [
    'Other categories',
    'Leisure industry',
    'Public buildings',
    'Commercial buildings',
    'Warehouse',
    'Midstream - Transportation/Storage',
    'Infrastructure',
    'Chemicals',
    'Specialty chemicals',
    'High Tech Industries',
    'Mechanical industries',
    'Food producers',
    'Beverage producers',
    'Tobacco',
    'Aerospace & Defence',
    'Automotive & Parts',
    'Metal Works',
    'Railway manufacturing industry',
    'Metallurgy',
    'Mining - Bulk commodities',
    'Building materials',
    'Mining - Other',
    'Mining - Hard Rock',
    'Mining - Underground coal',
    'Glass/ Ceramic/Others',
    'Other Onshore',
    'Gas Processing',
    'Crude Processing - Refining',
    'Petrochemical',
    'Pharmaceuticals & fine chemicals',
    'Rubber & Plastic Manufacturing',
    'Pulp & paper',
    'Waste Treatment',
    'Printing industry',
    'Power',
    'Telecommunications & Media',
    'Textile industry',
    'Hide & leather industry',
    'Automotive & Parts',
    'Transportation & Logistics',
    'Water Treatment',
    'Wood industry'
];
var PRICING_SUB_CATEGORY = [
    'Others',
    'Theatre/ auditorium/ opera/ cinema',
    'Casino : floating',
    'Hotels/ motel/ vacation resort',
    'Hospital/ nursing home/ medical day care center',
    'Offices',
    'Restaurants chain',
    'Others (residential/ real estate …)',
    'Other/ Unspecified commercial',
    'Amusement park/ holidays activity center',
    'Museum/ library',
    'Prison or jail',
    'Religious building',
    'University/ school',
    'Stadium/ arena',
    'Cold storage',
    'Stores/supermarket',
    'Logistics (medium hazards)',
    'Mall/ shopping center/ market hall',
    'Other storage',
    'Grain silo',
    'High hazard eg ammonium nitrate',
    'Explosives',
    'Semiconductor testing/ assembly & packaging/ Display panel modules',
    'Accumulators production',
    'Household appliance industry',
    'Electronic assembling (Mobile phones/ PC/ Notebook/ Disk drives…) with very limited CBI Exposure',
    'Semiconductor/ Display panel fabs',
    '3rd party electronic manufacturing and assembly - CBI represents most significant risk to insured',
    'Bakery',
    'Cigars & cigarettes production',
    'Cocoa & coffee roasting',
    'Dairy : milk powder',
    'Dairy : other',
    'Other food processing',
    'Meat/ fish processing plant',
    'Cereal mills',
    'Alcohol-free bottling with plastic molding',
    'Oil press (mechanical)',
    'Oil extraction (chemical)',
    'Slaughterhouse',
    'Starch factory',
    'Sugar refinery',
    'Aircraft and Parts',
    'Cable manufacturing',
    'Heavy machinery production (pump/ compressor/ turbine)',
    'Metal surface treatment',
    'Non ferrous metal processing',
    'Railway vehicle manufacturing',
    'Guided Missiles/ Space Satellites & Vehicles',
    'Ship and Boat Building',
    'Alumina refinery',
    'Aluminum smelter',
    'Standard',
    'Aggravated',
    'Steel plant with blast furnace',
    'Steel plant with direct reduction',
    'Metal extruding',
    'Gravel quarrying',
    'Rolling mill',
    'Others building materials',
    'Tiles/ bricks or refractories factory',
    'Plaster & cement production without rotary kiln',
    'Cement production site with rotary kiln',
    'Coated shingle factory',
    'Concrete production',
    'Glass manufacturing',
    'Lime or gypsum products',
    'Sandwich panel factory (glass/ rock…) non combustible',
    'Sandwich panel factory (pur…) combustible',
    'Pipeline System (including compressor/ pumping stations)',
    'Land Rig/ Production facility/ Unspecified',
    'Pure Pipeline',
    'Compressor/ Pumping Station',
    'River Crossing',
    'Ammonia/ Methanol Plant',
    'Storage Terminal',
    'LNG Plant',
    'LNG Terminal - Regasification',
    'Formulation/ packaging/ tableting',
    'API/ manufacturing - biological',
    'R&D laboratories',
    'API/ intermediates mfg - chemical',
    'Extrusion/ injection molding plastic goods factory',
    'Foam no polyurethane',
    'Foam polyurethane',
    'Rubber goods factory',
    'Tyre factory',
    'Cardboard factory',
    'Chemical pulp mill with BLRB or sulphites',
    'Integrated paper mill (pulping including BLRB and paper production)',
    'Mechanical pulp mill',
    'Paper mill without pulp production',
    'Waste paper recycling',
    'Combined',
    'Solvent based',
    'Water based',
    'Wadding and toilet paper',
    'Wind power',
    'Thermal (All)',
    'Combined cycle gas turbine power plant',
    'Geothermal power plant',
    'Transmission',
    'Simple cycle gas turbine power plant',
    'Solar power',
    'Computer center',
    'TV or radio transmitting',
    'Telecom supply (T&D excluded)',
    'Overhead t&d lines',
    'Submarine underground cable',
    'Unspecified/ others textile',
    'Clothing industry',
    'Non woven fabrics',
    'Shoe-manufacturing',
    'Tannery',
    'Airports & hangars',
    'Repair garages',
    'Railways operating/ infrastructure',
    'Car parks',
    'Harbors/ piers/ wharves',
    'Railways maintenance',
    'Desalination plant non-generating',
    'Water processing',
    'Refuses/ recycling/ composting',
    'Industrial refuses incineration',
    'Waste water treatment plant',
    'Water',
    'Sawmill',
    'Furniture',
    'Other wood industry',
    'Tunnel',
    'Dam (without power station)',
    'Road',
    'Road network (including other infrastructure: tunnel/ bridge/ toll…)',
    'Bridge',
    'Canal',
    'Railways rolling stock static',
    'Buses and lorries operating',
];
var OPERATIONAL_STATUS = [
    'In Operation',
    'Idle'
];
var LOCATION_REFERENCE_DATA = new Map([
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].construction_code, CONSTRUCTION_CODE],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].construction_scheme, CONSTRUCTION_SCHEME],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].occupancy_code, OCCUPANCY_CODE],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].occupancy_scheme, OCCUPANCY_SCHEME],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].original_country, COUNTRY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_country, COUNTRY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_country, COUNTRY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].original_state, STATE],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_state, STATE],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_state, STATE],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accord_occupancy_code, OCCUPANCY_CODE],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accord_occupancy_class, ACCORD_OCCUPANCY_CLASS],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accord_occupancy_subclass, ACCORD_OCCUPANCY_SUB_CLASS],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accord_construction_class, CONSTRUCTION_CLASS],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accord_construction_code, CONSTRUCTION_CODE],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_iso2, ISO_2],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_iso3, ISO_3],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_iso2, ISO_2],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_iso3, ISO_3],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accuracy_level, ACCURACY_LEVEL],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].geocoder, GEOCODER],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accuracy_validated, ACCURACY_VALIDATED],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_type, BI_TYPE],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].for_interest, FOR_INTEREST],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].tiv_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].tiv_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].building_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].building_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].stock_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].stock_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].other_structure_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].other_structure_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].content_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].content_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].pd_value_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].pd_value_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_value_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_value_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].mpl_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_limit_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_combined_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_combined_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_pd_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_pd_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_building_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_building_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_structure_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_structure_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_content_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_content_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_machinary_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_machinary_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_stock_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_stock_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_bi_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_bi_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_limit_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_combined_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_combined_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_pd_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_pd_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_building_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_building_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_structure_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_structure_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_content_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_content_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_machinary_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_machinary_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_stock_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_stock_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_bi_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_bi_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_limit_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_combined_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_combined_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_pd_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_pd_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_building_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_building_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_structure_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_structure_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_content_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_content_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_machinary_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_machinary_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_stock_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_stock_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_bi_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_bi_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_limit_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_combined_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_combined_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_pd_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_pd_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_building_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_building_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_structure_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_structure_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_content_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_content_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_machinary_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_machinary_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_stock_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_stock_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_bi_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_bi_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_limit_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_combined_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_combined_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_pd_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_pd_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_building_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_building_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_structure_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_structure_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_content_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_content_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_machinary_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_machinary_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_stock_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_stock_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_bi_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_bi_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_limit_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_combined_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_combined_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_pd_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_pd_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_building_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_building_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_structure_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_structure_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_content_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_content_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_machinary_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_machinary_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_stock_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_stock_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_bi_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_bi_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_limit_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_combined_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_combined_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_pd_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_pd_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_building_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_building_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_structure_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_structure_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_content_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_content_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_machinary_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_machinary_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_stock_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_stock_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_bi_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_bi_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_limit_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_combined_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_combined_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_pd_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_pd_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_building_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_building_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_structure_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_structure_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_content_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_content_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_machinary_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_machinary_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_stock_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_stock_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_bi_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_bi_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].pricing_category, PRICING_CATEGORY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].pricing_sub_category, PRICING_SUB_CATEGORY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].operational_status, OPERATIONAL_STATUS],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].location_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_earthquake_limit_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_earthquake_deductible_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_windstorm_limit_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_windstorm_deductible_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_flood_limit_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_flood_deductible_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_terrorism_limit_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_terrorism_deductible_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_machinary_limit_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_machinary_deductible_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_strike_limit_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_strike_deductible_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_cyber_limit_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_cyber_deductible_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_fire_limit_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_fire_deductible_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].first_floor_height_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].certified_elevation_height_unit, UNIT],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].policy_limit_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].policy_excess_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].site_currency, CURRENCY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].asset_quality, ASSET_QUALITY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].mb_quality, MB_QUALITY],
    [_location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_mitigation, BI_MITIGATION],
]);
var COLOMN_LISTS = [
    'construction_code',
    'construction_scheme',
    'occupancy_code',
    'occupancy_scheme',
    'original_country',
    'cleansed_country',
    'final_country',
    'original_state',
    'final_state',
    'cleansed_state',
    'accord_occupancy_code',
    'accord_occupancy_class',
    'accord_occupancy_subclass',
    'accord_construction_class',
    'accord_construction_code',
    'cleansed_iso2',
    'cleansed_iso3',
    'final_iso2',
    'final_iso3',
    'accuracy_level',
    'geocoder',
    'accuracy_validated',
    'bi_type',
    'for_interest',
    'tiv_currency',
    'tiv_unit',
    'building_currency',
    'building_unit',
    'stock_currency',
    'stock_unit',
    'machinery_currency',
    'machinery_unit',
    'other_structure_currency',
    'other_structure_unit',
    'content_currency',
    'content_unit',
    'pd_value_currency',
    'pd_value_unit',
    'bi_currency',
    'bi_unit',
    'bi_value_unit',
    'mpl_currency',
    'earthquake_limit_unit',
    'earthquake_combined_unit',
    'earthquake_combined_currency',
    'earthquake_pd_unit',
    'earthquake_pd_currency',
    'earthquake_building_unit',
    'earthquake_building_currency',
    'earthquake_structure_unit',
    'earthquake_structure_currency',
    'earthquake_content_unit',
    'earthquake_content_currency',
    'earthquake_machinary_unit',
    'earthquake_machinary_currency',
    'earthquake_stock_unit',
    'earthquake_stock_currency',
    'earthquake_bi_unit',
    'earthquake_bi_currency',
    'windstorm_limit_unit',
    'windstorm_combined_unit',
    'windstorm_combined_currency',
    'windstorm_pd_unit',
    'windstorm_pd_currency',
    'windstorm_building_unit',
    'windstorm_building_currency',
    'windstorm_structure_unit',
    'windstorm_structure_currency',
    'windstorm_content_unit',
    'windstorm_content_currency',
    'windstorm_machinary_unit',
    'windstorm_machinary_currency',
    'windstorm_stock_unit',
    'windstorm_stock_currency',
    'windstorm_bi_unit',
    'windstorm_bi_currency',
    'flood_limit_unit',
    'flood_combined_unit',
    'flood_combined_currency',
    'flood_pd_unit',
    'flood_pd_currency',
    'flood_building_unit',
    'flood_building_currency',
    'flood_structure_unit',
    'flood_structure_currency',
    'flood_content_unit',
    'flood_content_currency',
    'flood_machinary_unit',
    'flood_machinary_currency',
    'flood_stock_unit',
    'flood_stock_currency',
    'flood_bi_unit',
    'flood_bi_currency',
    'terrorism_limit_unit',
    'terrorism_combined_unit',
    'terrorism_combined_currency',
    'terrorism_pd_unit',
    'terrorism_pd_currency',
    'terrorism_building_unit',
    'terrorism_building_currency',
    'terrorism_structure_unit',
    'terrorism_structure_currency',
    'terrorism_content_unit',
    'terrorism_content_currency',
    'terrorism_machinary_unit',
    'terrorism_machinary_currency',
    'terrorism_stock_unit',
    'terrorism_stock_currency',
    'terrorism_bi_unit',
    'terrorism_bi_currency',
    'strike_limit_unit',
    'strike_combined_unit',
    'strike_combined_currency',
    'strike_pd_unit',
    'strike_pd_currency',
    'strike_building_unit',
    'strike_building_currency',
    'strike_structure_unit',
    'strike_structure_currency',
    'strike_content_unit',
    'strike_content_currency',
    'strike_machinary_unit',
    'strike_machinary_currency',
    'strike_stock_unit',
    'strike_stock_currency',
    'strike_bi_unit',
    'strike_bi_currency',
    'machinery_limit_unit',
    'machinery_combined_unit',
    'machinery_combined_currency',
    'machinery_pd_unit',
    'machinery_pd_currency',
    'machinery_building_unit',
    'machinery_building_currency',
    'machinery_structure_unit',
    'machinery_structure_currency',
    'machinery_content_unit',
    'machinery_content_currency',
    'machinery_machinary_unit',
    'machinery_machinary_currency',
    'machinery_stock_unit',
    'machinery_stock_currency',
    'machinery_bi_unit',
    'machinery_bi_currency',
    'cyber_limit_unit',
    'cyber_combined_unit',
    'cyber_combined_currency',
    'cyber_pd_unit',
    'cyber_pd_currency',
    'cyber_building_unit',
    'cyber_building_currency',
    'cyber_structure_unit',
    'cyber_structure_currency',
    'cyber_content_unit',
    'cyber_content_currency',
    'cyber_machinary_unit',
    'cyber_machinary_currency',
    'cyber_stock_unit',
    'cyber_stock_currency',
    'cyber_bi_unit',
    'cyber_bi_currency',
    'fire_limit_unit',
    'fire_combined_unit',
    'fire_combined_currency',
    'fire_pd_unit',
    'fire_pd_currency',
    'fire_building_unit',
    'fire_building_currency',
    'fire_structure_unit',
    'fire_structure_currency',
    'fire_content_unit',
    'fire_content_currency',
    'fire_machinary_unit',
    'fire_machinary_currency',
    'fire_stock_unit',
    'fire_stock_currency',
    'fire_bi_unit',
    'fire_bi_currency',
    'pricing_category',
    'pricing_sub_category',
    'operational_status',
    'location_currency',
    'binders_earthquake_limit_currency',
    'binders_earthquake_deductible_currency',
    'binders_windstorm_limit_currency',
    'binders_windstorm_deductible_currency',
    'binders_flood_limit_currency',
    'binders_flood_deductible_currency',
    'binders_terrorism_limit_currency',
    'binders_terrorism_deductible_currency',
    'binders_machinary_limit_currency',
    'binders_machinary_deductible_currency',
    'binders_strike_limit_currency',
    'binders_strike_deductible_currency',
    'binders_cyber_limit_currency',
    'binders_cyber_deductible_currency',
    'binders_fire_limit_currency',
    'binders_fire_deductible_currency',
    'first_floor_height_unit',
    'certified_elevation_height_unit',
    'policy_limit_currency',
    'policy_excess_currency',
    'site_currency',
    'asset_quality',
    'mb_quality',
    'bi_mitigation',
];


/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/models/location.model.ts":
/*!************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/models/location.model.ts ***!
  \************************************************************************************/
/*! exports provided: LocationModel, locationGlobalModel, mondatoryFields */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationModel", function() { return LocationModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "locationGlobalModel", function() { return locationGlobalModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mondatoryFields", function() { return mondatoryFields; });
/* harmony import */ var _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./location-field-codes.const */ "./src/app/shared/popups/general-location-info-popup/models/location-field-codes.const.ts");

var LocationModel = /** @class */ (function () {
    function LocationModel() {
    }
    return LocationModel;
}());

var locationGlobalModel = [
    {
        label: 'General',
        value: {
            header: [
                { label: 'Location Name', value: '', icon: '/assets/images/popup-location.png', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].location_name },
                { label: 'Company Name', value: '', icon: '/assets/images/popup-company.png', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].company_name },
                { label: 'Property ID', value: '', type: 'inputNumber', icon: '/assets/images/popup-property.png', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].property_db_id },
                { label: 'Scor database Id', value: '', icon: '/assets/images/popup-database.png', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].scor_database_id },
                { label: 'Division', value: '', icon: '/assets/images/popup-division.png', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].division },
            ],
            body: [
                {
                    label: 'Original / Cleansed Data',
                    value: [
                        {
                            label: 'Original Data',
                            items: [
                                { label: 'Occupancy Source', value: '', field_code: 'TBD_1', disabled: true },
                                { label: 'Occupancy Scheme', value: '', type: 'list', disabled: true },
                                { label: 'Construction Source', value: '', disabled: true },
                                { label: 'Construction Scheme', value: '', type: 'list', disabled: true },
                            ],
                        },
                        {
                            label: 'Cleansed Data',
                            items: [
                                { label: 'Occupancy Scheme', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].occupancy_scheme },
                                { label: 'Occupancy Code', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].occupancy_code },
                                { label: 'Accord Occupancy Code', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accord_occupancy_code },
                                { label: 'Accord Occupancy Class', value: '', type: 'list', conditional: true, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accord_occupancy_class },
                                { label: 'Accord Occupancy Sub-Class', value: '', type: 'list', conditional: true, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accord_occupancy_subclass },
                                { label: 'Construction Scheme', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].construction_scheme },
                                { label: 'Construction Code', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].construction_code },
                                { label: 'Accord Construction Code', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accord_construction_code },
                                { label: 'Accord Construction Class', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accord_construction_class },
                            ]
                        }
                    ],
                    active: true,
                },
                {
                    label: 'Locations specifications',
                    value: [
                        {
                            label: 'Location specifications',
                            items: [
                                { label: 'Number of stories', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].number_of_stories_unit },
                                { label: 'Basement', value: '', type: 'inputNumber', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].basement },
                                { label: 'Basement stories', value: '', type: 'inputNumber', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].basement_stories_unit },
                                { label: 'Basement finished', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].basement_finished },
                                { label: 'Number of Building', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].number_of_buildings },
                                { label: 'Year Built', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].year_built },
                            ]
                        },
                        {
                            label: 'Year Upgrade',
                            items: [
                                { label: 'Building', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].building_value },
                                { label: 'Roof', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].roof_year_upgrade },
                                { label: 'Wiring', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].wiring_year_upgrade },
                                { label: 'Plumbing', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].plumbing_year_upgrade },
                            ]
                        }
                    ],
                    active: false,
                }
            ]
        }
    },
    { label: 'Geographical',
        tabs: [
            {
                title: 'Original Address',
                content: {
                    header: [
                        { label: 'Original Address', value: '', icon: '/assets/images/popup-location.png', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].original_full_address, disabled: true },
                    ],
                    body: [
                        {
                            label: 'Address Details',
                            colSpan: 12,
                            offset: 0,
                            items: [
                                { label: 'Original Country', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].original_country, disabled: true },
                                { label: 'Original State', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].original_state, disabled: true },
                                { label: 'Original County', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].original_county, disabled: true },
                                { label: 'Original City', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].original_city, disabled: true },
                                { label: 'Original Street', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].original_street, disabled: true },
                                { label: 'Original Zip Code', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].original_zip_code, disabled: true },
                            ],
                        },
                        {
                            label: 'Coordinates',
                            colSpan: 11,
                            offset: 1,
                            items: [
                                { label: 'Latitude', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].original_latitude, disabled: true },
                                { label: 'Longitude', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].original_longitude, disabled: true }
                            ],
                        },
                    ]
                }
            },
            {
                title: 'Cleansed Address',
                content: {
                    header: [
                        { label: 'Cleansed Address', value: '', icon: '/assets/images/popup-location.png' }
                    ],
                    body: [
                        {
                            label: 'Address Details',
                            colSpan: 10,
                            offset: 0,
                            items: [
                                { label: 'Cleansed Country', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_country },
                                { label: 'IS02', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_iso2 },
                                { label: 'IS03', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_iso3 },
                                { label: 'Cleansed State', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_state },
                                { label: 'Cleansed County', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_county },
                                { label: 'Cleansed City', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_city },
                                { label: 'Cleansed Street', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_street },
                                { label: 'Cleansed Zip Code', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_zip_code },
                            ],
                        },
                        {
                            label: 'Geocoding',
                            colSpan: 3,
                            offset: 1,
                            items: [{ label: 'Geocoding', icon: '/assets/images/geocoding.png' }, { label: 'Reverse Geocoding', icon: '/assets/images/reverse-geocoding.png' }]
                        },
                        {
                            label: 'Coordinates',
                            colSpan: 9,
                            offset: 1,
                            items: [
                                { label: 'Latitude', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_latitude },
                                { label: 'Longitude', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cleansed_longitude }
                            ],
                        },
                    ]
                }
            },
            {
                title: 'Final Address',
                content: {
                    header: [
                        { label: 'Final Address', value: '', icon: '/assets/images/popup-location.png', disabled: true },
                    ],
                    body: [
                        {
                            label: 'Address Details',
                            colSpan: 12,
                            offset: 0,
                            items: [
                                { label: 'Final Country', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_country },
                                { label: 'IS02', type: 'list', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_iso2 },
                                { label: 'IS03', type: 'list', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_iso3 },
                                { label: 'Final State', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_state },
                                { label: 'Final County', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_county },
                                { label: 'Final City', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_city },
                                { label: 'Final Street', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_street },
                                { label: 'Final Zip Code', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_zip_code },
                            ],
                        },
                        {
                            label: 'Coordinates',
                            colSpan: 11,
                            offset: 1,
                            items: [
                                { label: 'Latitude', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_latitude },
                                { label: 'Longitude', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].final_longitude },
                                { label: 'Accuracy', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accuracy_level },
                                { label: 'Geocoder', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].geocoder },
                                { label: 'Accuracy validated', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].accuracy_validated },
                            ],
                        },
                    ]
                }
            }
        ]
    },
    { label: 'Insured Value', value: {
            header: {
                icon: '/assets/images/tiv.png',
                items: [
                    { label: 'TIV', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].tiv_amount, child_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].tiv_unit },
                    { label: 'Unit', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].tiv_unit, parent_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].tiv_amount },
                    { label: 'Currency', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].tiv_currency }
                ]
            },
            body: [
                {
                    label: 'PD value',
                    items: [
                        [{ label: 'Building', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].building_value, child_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].building_unit }, { label: 'Unit', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].building_unit, parent_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].building_value }, { label: 'Currency', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].building_currency }],
                        [{ label: 'Stock', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].stock_value, child_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].stock_unit }, { label: 'Unit', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].stock_unit, parent_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].stock_value }, { label: 'Currency', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].stock_currency }],
                        [{ label: 'Machinary', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_value, child_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_unit }, { label: 'Unit', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_unit, parent_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_value }, { label: 'Currency', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_currency }],
                        [{ label: 'Other Structure', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].other_structure, child_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].other_structure_unit }, { label: 'Unit', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].other_structure_unit, parent_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].other_structure }, { label: 'Currency', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].other_structure_currency }],
                        [{ label: 'Content', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].content_value, child_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].content_unit }, { label: 'Unit', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].content_unit, parent_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].content_value }, { label: 'Currency', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].content_currency }],
                        [{ label: 'PD VALUE', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].pd_value, child_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].pd_value_unit }, { label: 'Unit', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].pd_value_unit, parent_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].pd_value }, { label: 'Currency', type: 'list', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].pd_value_currency }],
                        [{ label: 'PD Split', type: 'split', value: false, visibility: false, field_code: 'pd_split' }],
                    ],
                },
                {
                    label: 'BI value',
                    items: [
                        [{ label: 'BI Type', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_type }],
                        [{ label: 'Indemenity period / EIP', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].indemnity_period_eip }],
                        [{ label: 'Declararion Period', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_declaration_period }],
                        [{ label: 'BI VALUE', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_value, child_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_value_unit }, { label: 'Unit', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_value_unit, parent_field: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_value }, { label: 'Currency', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_value_currency }]
                    ],
                },
            ],
            footer: {
                title: '',
                content: [
                    { label: '100% for interest', value: '', colSpan: 12, offset: 0, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].for_interest },
                    { label: 'Interest', type: 'inputNumber', value: '', colSpan: 11, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].interest },
                ]
            }
        } },
    { label: 'MPL', value: {
            header: { label: 'Currency', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].mpl_currency },
            body: [
                {
                    label: 'MPL',
                    items: [
                        { label: 'MPL PD', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].mpl_pd_value },
                        { label: 'MPL PD %', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].mpl_pd_percentage },
                        { label: 'MPL BI', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].mpl_bi_value },
                        { label: 'MPL BI %', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].mpl_bi_percentage },
                    ],
                },
                {
                    label: 'FMLS',
                    items: [
                        { label: 'FMLS PD', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fmls_pd_value },
                        { label: 'FMLS PD %', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fmls_pd_percentage },
                        { label: 'FMLS BI', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fmls_bi_value },
                        { label: 'FMLS BI %', type: 'inputNumber', value: '', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fmls_bi_percentage },
                    ],
                }
            ]
        }
    },
    { label: 'T&C', value: [
            {
                supHeader: { label: 'Natural Perils', icon: '/assets/images/naturalPerils.png' },
                content: [
                    {
                        header: { checked: false, label: 'Earthquake', childs: [
                                { checked: true, label: 'Tsunami' }, { checked: false, label: 'Shock' }, { checked: false, label: 'Fire Following' }
                            ] },
                        body: [
                            {
                                label: 'Limit',
                                items: [
                                    { label: 'Basis', value: '', colSpan: 24 },
                                    { label: 'Coverage', value: '', colSpan: 24 },
                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 19 },
                                    { label: 'Unit', value: '', colSpan: 4, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_limit_unit },
                                    { label: 'FI / 100%', value: '', colSpan: 24 },
                                    { label: 'Term aggregate', value: '', colSpan: 24 },
                                ],
                            },
                            {
                                label: 'Deductible',
                                subContent: {
                                    header: {
                                        items: [
                                            { label: 'Basis', value: '', colSpan: 12 },
                                            { label: 'FI / 100%', value: '', colSpan: 11, offset: 1 }
                                        ]
                                    },
                                    body: {
                                        colSpan: 24,
                                        itemsLabel: { label: 'Conbined PD BI', value: '', colSpan: 24, checkbox: true, checked: true },
                                        items: [
                                            { label: 'Type', value: '', colSpan: 24 },
                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_combined_unit },
                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_combined_currency },
                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                        ],
                                        childs: [
                                            {
                                                colSpan: 16,
                                                itemsLabel: { label: 'PD', value: '', colSpan: 24, checkbox: true, checked: true },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_pd_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_pd_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                ],
                                                childs: [
                                                    {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Building', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_building_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_building_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Other Structure', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_structure_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_structure_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 12,
                                                        itemsLabel: { label: 'Content', value: '', colSpan: 24, checkbox: true, checked: true },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_content_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_content_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ],
                                                        childs: [
                                                            {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Machinery', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_machinary_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_machinary_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }, {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Stock', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_stock_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_stock_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }, {
                                                colSpan: 8,
                                                itemsLabel: { label: 'BI', value: '', colSpan: 24, checkbox: false },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Unit', value: '', colSpan: 10, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_bi_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].earthquake_bi_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 10, offset: 1 }
                                                ]
                                            }
                                        ]
                                    }
                                },
                            }
                        ]
                    }, {
                        header: { checked: false, label: 'Windstorm', childs: [
                                { checked: false, label: 'Tsunami' }, { checked: false, label: 'Shock' }, { checked: false, label: 'Fire Following' }
                            ] },
                        body: [
                            {
                                label: 'Limit',
                                items: [
                                    { label: 'Basis', value: '', colSpan: 24 },
                                    { label: 'Coverage', value: '', colSpan: 24 },
                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 19 },
                                    { label: 'Unit', value: '', colSpan: 4, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_limit_unit },
                                    { label: 'FI / 100%', value: '', colSpan: 24 },
                                    { label: 'Term aggregate', value: '', colSpan: 24 },
                                ],
                            },
                            {
                                label: 'Deductible',
                                subContent: {
                                    header: {
                                        items: [
                                            { label: 'Basis', value: '', colSpan: 12 },
                                            { label: 'FI / 100%', value: '', colSpan: 11, offset: 1 }
                                        ]
                                    },
                                    body: {
                                        colSpan: 24,
                                        itemsLabel: { label: 'Conbined PD BI', value: '', colSpan: 24, checkbox: true, checked: true },
                                        items: [
                                            { label: 'Type', value: '', colSpan: 24 },
                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_combined_unit },
                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_combined_currency },
                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                        ],
                                        childs: [
                                            {
                                                colSpan: 16,
                                                itemsLabel: { label: 'PD', value: '', colSpan: 24, checkbox: true, checked: true },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_pd_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_pd_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                ],
                                                childs: [
                                                    {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Building', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_building_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_building_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Other Structure', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_structure_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_structure_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 12,
                                                        itemsLabel: { label: 'Content', value: '', colSpan: 24, checkbox: true, checked: true },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_content_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_content_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ],
                                                        childs: [
                                                            {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Machinery', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_machinary_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_machinary_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }, {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Stock', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_stock_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_stock_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }, {
                                                colSpan: 8,
                                                itemsLabel: { label: 'BI', value: '', colSpan: 24, checkbox: false },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Unit', value: '', colSpan: 10, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_bi_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].windstorm_bi_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 10, offset: 1 }
                                                ]
                                            }
                                        ]
                                    }
                                },
                            }
                        ]
                    }, {
                        header: { checked: false, label: 'Flood', childs: [
                                { checked: true, label: 'Flood' }, { checked: false, label: 'Stormsurge' }
                            ] },
                        body: [
                            {
                                label: 'Limit',
                                items: [
                                    { label: 'Basis', value: '', colSpan: 24 },
                                    { label: 'Coverage', value: '', colSpan: 24 },
                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 19 },
                                    { label: 'Unit', value: '', colSpan: 4, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_limit_unit },
                                    { label: 'FI / 100%', value: '', colSpan: 24 },
                                    { label: 'Term aggregate', value: '', colSpan: 24 },
                                ],
                            },
                            {
                                label: 'Deductible',
                                subContent: {
                                    header: {
                                        items: [
                                            { label: 'Basis', value: '', colSpan: 12 },
                                            { label: 'FI / 100%', value: '', colSpan: 11, offset: 1 }
                                        ]
                                    },
                                    body: {
                                        colSpan: 24,
                                        itemsLabel: { label: 'Conbined PD BI', value: '', colSpan: 24, checkbox: true, checked: true },
                                        items: [
                                            { label: 'Type', value: '', colSpan: 24 },
                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_combined_unit },
                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_combined_currency },
                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                        ],
                                        childs: [
                                            {
                                                colSpan: 16,
                                                itemsLabel: { label: 'PD', value: '', colSpan: 24, checkbox: true, checked: true },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_pd_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_pd_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                ],
                                                childs: [
                                                    {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Building', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_building_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_building_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Other Structure', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_structure_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_structure_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 12,
                                                        itemsLabel: { label: 'Content', value: '', colSpan: 24, checkbox: true, checked: true },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_content_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_content_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ],
                                                        childs: [
                                                            {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Machinery', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_machinary_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_machinary_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }, {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Stock', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_stock_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_stock_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }, {
                                                colSpan: 8,
                                                itemsLabel: { label: 'BI', value: '', colSpan: 24, checkbox: false },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Unit', value: '', colSpan: 10, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_bi_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].flood_bi_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 10, offset: 1 }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                ]
            },
            {
                supHeader: { label: 'Man Made Perils', icon: '/assets/images/manPerils.png' },
                content: [
                    {
                        header: { checked: false, label: 'Terrorism', childs: [
                                { checked: true, label: 'Tsunami' }, { checked: false, label: 'Shock' }, { checked: false, label: 'Fire Following' }
                            ] },
                        body: [{
                                label: 'Limit',
                                items: [
                                    { label: 'Basis', value: '', colSpan: 24 },
                                    { label: 'Coverage', value: '', colSpan: 24 },
                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 19 },
                                    { label: 'Unit', value: '', colSpan: 4, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_limit_unit },
                                    { label: 'FI / 100%', value: '', colSpan: 24 },
                                    { label: 'Term aggregate', value: '', colSpan: 24 },
                                ],
                            },
                            {
                                label: 'Deductible',
                                subContent: {
                                    header: {
                                        items: [
                                            { label: 'Basis', value: '', colSpan: 12 },
                                            { label: 'FI / 100%', value: '', colSpan: 11, offset: 1 }
                                        ]
                                    },
                                    body: {
                                        colSpan: 24,
                                        itemsLabel: { label: 'Conbined PD BI', value: '', colSpan: 24, checkbox: true, checked: true },
                                        items: [
                                            { label: 'Type', value: '', colSpan: 24 },
                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_combined_unit },
                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_combined_currency },
                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                        ],
                                        childs: [
                                            {
                                                colSpan: 16,
                                                itemsLabel: { label: 'PD', value: '', colSpan: 24, checkbox: true, checked: true },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_pd_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_pd_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                ],
                                                childs: [
                                                    {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Building', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_building_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_building_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Other Structure', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_structure_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_structure_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 12,
                                                        itemsLabel: { label: 'Content', value: '', colSpan: 24, checkbox: true, checked: true },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_content_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_content_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ],
                                                        childs: [
                                                            {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Machinery', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_machinary_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_machinary_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }, {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Stock', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_stock_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_stock_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }, {
                                                colSpan: 8,
                                                itemsLabel: { label: 'BI', value: '', colSpan: 24, checkbox: false },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Unit', value: '', colSpan: 10, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_bi_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].terrorism_bi_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 10, offset: 1 }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    {
                        header: { checked: false, label: 'Strike Riot Commotion', childs: [
                                { checked: true, label: 'Tsunami' }, { checked: false, label: 'Shock' }, { checked: false, label: 'Fire Following' }
                            ] },
                        body: [{
                                label: 'Limit',
                                items: [
                                    { label: 'Basis', value: '', colSpan: 24 },
                                    { label: 'Coverage', value: '', colSpan: 24 },
                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 19 },
                                    { label: 'Unit', value: '', colSpan: 4, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_limit_unit },
                                    { label: 'FI / 100%', value: '', colSpan: 24 },
                                    { label: 'Term aggregate', value: '', colSpan: 24 },
                                ],
                            },
                            {
                                label: 'Deductible',
                                subContent: {
                                    header: {
                                        items: [
                                            { label: 'Basis', value: '', colSpan: 12 },
                                            { label: 'FI / 100%', value: '', colSpan: 11, offset: 1 }
                                        ]
                                    },
                                    body: {
                                        colSpan: 24,
                                        itemsLabel: { label: 'Conbined PD BI', value: '', colSpan: 24, checkbox: true, checked: true },
                                        items: [
                                            { label: 'Type', value: '', colSpan: 24 },
                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_combined_unit },
                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_combined_currency },
                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                        ],
                                        childs: [
                                            {
                                                colSpan: 16,
                                                itemsLabel: { label: 'PD', value: '', colSpan: 24, checkbox: true, checked: true },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_pd_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_pd_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                ],
                                                childs: [
                                                    {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Building', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_building_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_building_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Other Structure', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_structure_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_structure_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 12,
                                                        itemsLabel: { label: 'Content', value: '', colSpan: 24, checkbox: true, checked: true },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_content_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_content_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ],
                                                        childs: [
                                                            {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Machinery', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_machinary_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_machinary_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }, {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Stock', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_stock_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_stock_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }, {
                                                colSpan: 8,
                                                itemsLabel: { label: 'BI', value: '', colSpan: 24, checkbox: false },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Unit', value: '', colSpan: 10, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_bi_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].strike_bi_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 10, offset: 1 }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    {
                        header: { checked: false, label: 'Machinery Breakdown', childs: [
                                { checked: true, label: 'Tsunami' }, { checked: false, label: 'Shock' }, { checked: false, label: 'Fire Following' }
                            ] },
                        body: [{
                                label: 'Limit',
                                items: [
                                    { label: 'Basis', value: '', colSpan: 24 },
                                    { label: 'Coverage', value: '', colSpan: 24 },
                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 19 },
                                    { label: 'Unit', value: '', colSpan: 4, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_limit_unit },
                                    { label: 'FI / 100%', value: '', colSpan: 24 },
                                    { label: 'Term aggregate', value: '', colSpan: 24 },
                                ],
                            },
                            {
                                label: 'Deductible',
                                subContent: {
                                    header: {
                                        items: [
                                            { label: 'Basis', value: '', colSpan: 12 },
                                            { label: 'FI / 100%', value: '', colSpan: 11, offset: 1 }
                                        ]
                                    },
                                    body: {
                                        colSpan: 24,
                                        itemsLabel: { label: 'Conbined PD BI', value: '', colSpan: 24, checkbox: true, checked: true },
                                        items: [
                                            { label: 'Type', value: '', colSpan: 24 },
                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_combined_unit },
                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_combined_currency },
                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                        ],
                                        childs: [
                                            {
                                                colSpan: 16,
                                                itemsLabel: { label: 'PD', value: '', colSpan: 24, checkbox: true, checked: true },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_pd_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_pd_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                ],
                                                childs: [
                                                    {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Building', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_building_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_building_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Other Structure', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_structure_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_structure_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 12,
                                                        itemsLabel: { label: 'Content', value: '', colSpan: 24, checkbox: true, checked: true },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_content_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_content_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ],
                                                        childs: [
                                                            {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Machinery', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_machinary_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_machinary_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }, {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Stock', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_stock_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_stock_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }, {
                                                colSpan: 8,
                                                itemsLabel: { label: 'BI', value: '', colSpan: 24, checkbox: false },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Unit', value: '', colSpan: 10, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_bi_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].machinery_bi_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 10, offset: 1 }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    {
                        header: { checked: false, label: 'Cyber', childs: [
                                { checked: true, label: 'Tsunami' }, { checked: false, label: 'Shock' }, { checked: false, label: 'Fire Following' }
                            ] },
                        body: [{
                                label: 'Limit',
                                items: [
                                    { label: 'Basis', value: '', colSpan: 24 },
                                    { label: 'Coverage', value: '', colSpan: 24 },
                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 19 },
                                    { label: 'Unit', value: '', colSpan: 4, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_limit_unit },
                                    { label: 'FI / 100%', value: '', colSpan: 24 },
                                    { label: 'Term aggregate', value: '', colSpan: 24 },
                                ],
                            },
                            {
                                label: 'Deductible',
                                subContent: {
                                    header: {
                                        items: [
                                            { label: 'Basis', value: '', colSpan: 12 },
                                            { label: 'FI / 100%', value: '', colSpan: 11, offset: 1 }
                                        ]
                                    },
                                    body: {
                                        colSpan: 24,
                                        itemsLabel: { label: 'Conbined PD BI', value: '', colSpan: 24, checkbox: true, checked: true },
                                        items: [
                                            { label: 'Type', value: '', colSpan: 24 },
                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_combined_unit },
                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_combined_currency },
                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                        ],
                                        childs: [
                                            {
                                                colSpan: 16,
                                                itemsLabel: { label: 'PD', value: '', colSpan: 24, checkbox: true, checked: true },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_pd_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_pd_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                ],
                                                childs: [
                                                    {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Building', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_building_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_building_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Other Structure', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_structure_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_structure_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 12,
                                                        itemsLabel: { label: 'Content', value: '', colSpan: 24, checkbox: true, checked: true },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_content_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_content_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ],
                                                        childs: [
                                                            {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Machinery', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_machinary_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_machinary_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }, {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Stock', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_stock_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_stock_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }, {
                                                colSpan: 8,
                                                itemsLabel: { label: 'BI', value: '', colSpan: 24, checkbox: false },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Unit', value: '', colSpan: 10, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_bi_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].cyber_bi_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 10, offset: 1 }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    },
                    {
                        header: { checked: false, label: 'Fire', childs: [
                                { checked: true, label: 'Tsunami' }, { checked: false, label: 'Shock' }, { checked: false, label: 'Fire Following' }
                            ] },
                        body: [{
                                label: 'Limit',
                                items: [
                                    { label: 'Basis', value: '', colSpan: 24 },
                                    { label: 'Coverage', value: '', colSpan: 24 },
                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 19 },
                                    { label: 'Unit', value: '', colSpan: 4, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_limit_unit },
                                    { label: 'FI / 100%', value: '', colSpan: 24 },
                                    { label: 'Term aggregate', value: '', colSpan: 24 },
                                ],
                            },
                            {
                                label: 'Deductible',
                                subContent: {
                                    header: {
                                        items: [
                                            { label: 'Basis', value: '', colSpan: 12 },
                                            { label: 'FI / 100%', value: '', colSpan: 11, offset: 1 }
                                        ]
                                    },
                                    body: {
                                        colSpan: 24,
                                        itemsLabel: { label: 'Conbined PD BI', value: '', colSpan: 24, checkbox: true, checked: true },
                                        items: [
                                            { label: 'Type', value: '', colSpan: 24 },
                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_combined_unit },
                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_combined_currency },
                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                        ],
                                        childs: [
                                            {
                                                colSpan: 16,
                                                itemsLabel: { label: 'PD', value: '', colSpan: 24, checkbox: true, checked: true },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_pd_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_pd_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                ],
                                                childs: [
                                                    {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Building', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_building_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_building_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 6,
                                                        itemsLabel: { label: 'Other Structure', value: '', colSpan: 24, checkbox: false },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_structure_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_structure_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ]
                                                    }, {
                                                        colSpan: 12,
                                                        itemsLabel: { label: 'Content', value: '', colSpan: 24, checkbox: true, checked: true },
                                                        items: [
                                                            { label: 'Type', value: '', colSpan: 24 },
                                                            { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_content_unit },
                                                            { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_content_currency },
                                                            { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                            { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                        ],
                                                        childs: [
                                                            {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Machinery', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_machinary_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_machinary_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }, {
                                                                colSpan: 12,
                                                                itemsLabel: { label: 'Stock', value: '', colSpan: 24, checkbox: false },
                                                                items: [
                                                                    { label: 'Type', value: '', colSpan: 24 },
                                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Unit', value: '', colSpan: 11, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_stock_unit },
                                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_stock_currency },
                                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 12 },
                                                                    { label: 'Max Amount', type: 'inputNumber', value: '', colSpan: 11, offset: 1 }
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }, {
                                                colSpan: 8,
                                                itemsLabel: { label: 'BI', value: '', colSpan: 24, checkbox: false },
                                                items: [
                                                    { label: 'Type', value: '', colSpan: 24 },
                                                    { label: 'Value', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Unit', value: '', colSpan: 10, offset: 1, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_bi_unit },
                                                    { label: 'Currency', value: '', colSpan: 24, type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].fire_bi_currency },
                                                    { label: 'Min Amount', type: 'inputNumber', value: '', colSpan: 10 },
                                                    { label: 'Max Amount', value: '', colSpan: 10, offset: 1 }
                                                ]
                                            }
                                        ]
                                    }
                                }
                            }
                        ]
                    }
                ]
            }
        ] },
    { label: 'Pricing', value: {
            supHeader: {
                title: 'Codification',
                content: [
                    { label: 'Pricing Category', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].pricing_category },
                    { label: 'Pricing Sub-Category', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].pricing_sub_category }
                ]
            },
            header: {
                title: 'Risk factor',
                content: [
                    { label: 'Asset quality', value: 0, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].asset_quality },
                    { label: 'BI Mitigation', value: 0, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].bi_mitigation },
                    { label: 'Machinery Breakdown Quality', value: 0, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].mb_quality },
                    { label: 'Operational Status', value: '', type: 'list', field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].operational_status },
                ]
            },
            body: [{
                    label: 'Results',
                    value: [
                        {
                            label: 'Standard deductible',
                            items: [
                                { label: 'Type', value: '' },
                                { label: 'Value', type: 'inputNumber', value: '' }
                            ],
                        },
                        {
                            label: 'Local deductible',
                            items: [
                                { label: 'Type', value: '' },
                                { label: 'Value', type: 'inputNumber', value: '' }
                            ],
                        }
                    ]
                },
                {
                    label: 'Deductible',
                    items: [
                        { label: 'Base Rate (@standard deductible)', value: '', type: 'inputNumber' },
                        { label: 'Risk Adjusted Rate', value: '', type: 'inputNumber' },
                        { label: 'Rate (@local deductible)', value: '', type: 'inputNumber' },
                    ],
                }],
            footer: {
                title: '',
                content: [
                    { label: 'Expected Losses', type: 'inputNumber', value: '' },
                ]
            }
        } },
    { label: 'CAT Analysis & CAT Information', value: {
            leftPanel: {
                header: { label: 'Country', value: '' },
                body: {
                    leftSide: [
                        { label: 'Earthquake', type: 'level', subLabel: '(Marshal Modified Intensity)', value: '',
                            colors: [
                                { color: '#FFFFFF', checked: true, value: 'NO' },
                                { color: '#faf781', checked: false, value: '' },
                                { color: '#e9d9a0', checked: false, value: '' },
                                { color: '#d4b48c', checked: false, value: '' },
                                { color: '#bd8f7a', checked: false, value: '' },
                                { color: '#a76b67', checked: false, value: '' }
                            ]
                        },
                        { label: 'Windstorm', type: 'level', subLabel: '(Saphir Simpson Scale)', value: '',
                            colors: [
                                { color: '#FFFFFF', checked: true, value: 'NO' },
                                { color: '#d3f4f7', checked: false, value: '' },
                                { color: '#b2d9f3', checked: false, value: '' },
                                { color: '#4498e5', checked: false, value: '' },
                                { color: '#79a8e3', checked: false, value: '' },
                                { color: '#7489ce', checked: false, value: '' },
                                { color: '#6b6fbc', checked: false, value: '' }
                            ]
                        },
                        { label: 'Tsunami', type: 'level', value: '',
                            colors: [
                                { color: '#FFFFFF', checked: true, value: 'NO' },
                                { color: '#fa6b65', checked: false, value: '' },
                            ]
                        },
                        { label: 'Stormsurge', type: 'level', value: '',
                            colors: [
                                { color: '#FFFFFF', checked: true, value: 'NO' },
                                { color: '#7ac096', checked: false, value: '' },
                                { color: '#bde2a0', checked: false, value: '' },
                                { color: '#e7f5ba', checked: false, value: '' },
                                { color: '#feeebc', checked: false, value: '' },
                                { color: '#faba9b', checked: false, value: '' },
                                { color: '#e5827f', checked: false, value: '' }
                            ]
                        },
                        { label: 'High hazard international', type: 'input', value: '' },
                        { label: 'CRESTA zone', type: 'input', value: '' },
                        { label: 'Unisco patrimoine in Danger', type: 'input', value: '' },
                        { label: 'Altitude', type: 'input', value: '432m' },
                    ],
                    rightSide: [
                        { label: 'Windstorm Tier Zone', type: 'level', value: '',
                            colors: [
                                { color: '#FFFFFF', checked: true, value: 'NO' },
                                { color: '#fa6b65', checked: false, value: '' },
                                { color: '#ffae64', checked: false, value: '' },
                            ]
                        },
                        { label: 'Tornado', type: 'level', value: '',
                            colors: [
                                { color: '#FFFFFF', checked: true, value: 'NO' },
                                { color: '#c5d4d8', checked: false, value: '' },
                                { color: '#d4b48c', checked: false, value: '' },
                                { color: '#bd8f7a', checked: false, value: '' },
                                { color: '#a76b67', checked: false, value: '' },
                            ]
                        },
                        { label: 'Hail Zone', type: 'level', value: '',
                            colors: [
                                { color: '#FFFFFF', checked: true, value: 'NO' },
                                { color: '#c5d4d8', checked: false, value: '' },
                                { color: '#d4b48c', checked: false, value: '' },
                                { color: '#bd8f7a', checked: false, value: '' },
                                { color: '#a76b67', checked: false, value: '' },
                            ]
                        },
                        { label: 'Earthquake', type: 'input', value: 'New Madrid' },
                        { label: 'FEMA Flood Zone', type: 'input', value: 'X' },
                        { label: 'FEMA Neighboring Flood Zone', type: 'input', value: 'A' },
                    ]
                }
            },
            rightPanel: {}
        } },
    { label: 'More Information',
        tabs: [
            {
                title: 'Secondary Modifiers',
                content: {
                    header: [
                        { label: 'First floor height', type: 'inputNumber', value: '', colSpan: 16, offset: 0, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].first_floor_height },
                        { label: 'Unit', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].first_floor_height_unit },
                        { label: 'Certified elevation height', type: 'inputNumber', value: '', colSpan: 16, offset: 0, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].certified_elevation_height },
                        { label: 'Unit', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].certified_elevation_height_unit },
                    ],
                    body: [
                        {
                            label: 'Windstorm',
                            value: [
                                {
                                    label: 'Design code',
                                    checked: false,
                                    items: [
                                        { label: 'Wind and Storm Surge', value: '', checked: false },
                                        { label: 'Wind Only', value: '', checked: false },
                                        { label: 'Surge Only', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Flashing',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Flashing and copying quality', value: '', checked: false },
                                        { label: 'Does not comply with  ES-1', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'IFM Vertical exposure distribution',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Basement level ', value: '', checked: false },
                                        { label: 'Grade level', value: '', checked: false },
                                        { label: 'Elevated contents <50%', value: '', checked: false },
                                        { label: 'Elevated contents <10%', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'IFM Structure condition',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Poor', value: '', checked: false },
                                        { label: 'Average', value: '', checked: false },
                                        { label: 'Good', value: '', checked: false },
                                        { label: 'Excellent', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'IFM Outdoor machinery/Equipment bracingn',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No/Poor Bracing', value: '', checked: false },
                                        { label: 'Superior Bracing', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'IFM Site Hazard',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Severe Missile Exposure', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Construction quality',
                                    checked: false,
                                    items: [
                                        { label: 'NAHU Unknown', value: '', checked: false },
                                        { label: 'NAHU Obvious signs of deteriroration or distress', value: '', checked: false },
                                        { label: 'NAHU Certified design & constructionn', value: '', checked: false },
                                        { label: 'TAIWANT/ CHINA Unknown', value: '', checked: false },
                                        { label: 'TAIWAN/ CHINA Obvious signs of deteriroration or distress', value: '', checked: false },
                                        { label: 'TAIWAN/ CHINA Certified design & construction', value: '', checked: false },
                                        { label: 'OTHER Unknown', value: '', checked: false },
                                        { label: 'OTHER Certified design and construction', value: '', checked: false },
                                        { label: 'OTHER Certificate of occupacy', value: '', checked: false },
                                        { label: 'OTHER No design revie or inspection', value: '', checked: false },
                                        { label: 'OTHER Obvious signs of duress/distress', value: '', checked: false },
                                        { label: 'OTHER Certified design and construction', value: '', checked: false },
                                        { label: 'OTHER IBHS Fortified program', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Roof covering',
                                    checked: false,
                                    items: [
                                        { label: 'NAHU/ CHINA/ TAIWAN/ JAPAN Unknown', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN/ JAPAN Metal sheating with exposed fasteners', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN/ JAPAN Metal sheating with concealed fasteners', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN/ JAPAN Built-up roof or single-ply membrane roof with the presence of gutters ', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN/ JAPAN Built-up roof or single-ply membrane roof without the presence of gutters', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN/ JAPAN Concrete/clay tiles', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN/ JAPAN Wood shakes', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN/ JAPAN Normal shingle (55 mph)', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN/ JAPAN Normal shingle (55 mph) with Secondary Water Resistance (SWR)', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN/ JAPAN Shingle rated for high wind speeds (110 mph)', value: '', checked: false },
                                        { label: 'NAHU Concrete Roof', value: '', checked: false },
                                        { label: 'NAHU Bermuda-style Roof', value: '', checked: false },
                                        { label: 'EUROPE Unknown', value: '', checked: false },
                                        { label: 'EUROPE Concrete Fill', value: '', checked: false },
                                        { label: 'EUROPE Metal Sheathing', value: '', checked: false },
                                        { label: 'EUROPE Single ply membrane', value: '', checked: false },
                                        { label: 'EUROPE Concrete/clay tiles', value: '', checked: false },
                                        { label: 'EUROPE Thatch', value: '', checked: false },
                                        { label: 'OTHER  Unknown', value: '', checked: false },
                                        { label: 'OTHER  Concrete Fill', value: '', checked: false },
                                        { label: 'OTHER  Metal Sheathing', value: '', checked: false },
                                        { label: 'OTHER  Single ply membrane', value: '', checked: false },
                                        { label: 'OTHER  Bulit-up', value: '', checked: false },
                                        { label: 'OTHER  Normal shingle (55 mph)', value: '', checked: false },
                                        { label: 'OTHER  Concrete/clay tiles', value: '', checked: false },
                                        { label: 'OTHER  Wood shingles', value: '', checked: false },
                                        { label: 'OTHER  Rated shingle (110 mph)', value: '', checked: false },
                                        { label: 'OTHER  Rated shingle (110 mph) with SWR', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Roof geometry',
                                    checked: false,
                                    items: [
                                        { label: 'NAHU/ CHINA/ TAUWAN Unknown', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Flat roof with parapets', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Flat roof without parapets', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN  Hip roof with slope less than or equal to 6:12 (26.5 degress)', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Hip roof with slope greater than 6:12 (26.5 degress)', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Gable roof with slope less than or equal to 6:12 (26.5 degress)', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Gable roof with slope greater than 6:12 (26.5 degress)', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Braced gable roof with slope less than or equal to 6:12 (26.5 degress)', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Braced gable roof with slope greater than 6:12 (26.5 degress)', value: '', checked: false },
                                        { label: 'EUROPE Unknown', value: '', checked: false },
                                        { label: 'EUROPE Gable roof high pitch', value: '', checked: false },
                                        { label: 'EUROPE Hip roof', value: '', checked: false },
                                        { label: 'EUROPE Gable roof unknown pitch', value: '', checked: false },
                                        { label: 'EUROPE Flat rood (angle of inclination is less than 10 degress)', value: '', checked: false },
                                        { label: 'EUROPE Gable roof medium ptich (Inclination between 10 and 30 degrees)', value: '', checked: false },
                                        { label: 'EUROPE Monoslope roof', value: '', checked: false },
                                        { label: 'EUROPE Braced Gable (medium or unknown pitch)', value: '', checked: false },
                                        { label: 'EUROPE Braced Gable (High pitch)', value: '', checked: false },
                                        { label: 'OTHER Unknown', value: '', checked: false },
                                        { label: 'OTHER High-pitched Roof (Inclination greater than 45 degress)', value: '', checked: false },
                                        { label: 'OTHER Hipped Roof (Inclination between 15 and 45 degrees)', value: '', checked: false },
                                        { label: 'OTHER Gable Roof (Inclination between 15 and 45 degrees and shape is gabled)', value: '', checked: false },
                                        { label: 'OTHER Flat Roof (Inclination less than 15 degrees)', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Roof anchor',
                                    checked: false,
                                    items: [
                                        { label: 'NAHU/ TAIWAN/ CHINA Unknown', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Toe nailing/No achorage', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Clips ', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Single wraps', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Double wraps', value: '', checked: false },
                                        { label: 'OTHER Unknown', value: '', checked: false },
                                        { label: 'OTHER Metal or bolt anchors', value: '', checked: false },
                                        { label: 'OTHER Toe nailing', value: '', checked: false },
                                        { label: 'OTHER No anchorage', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Roof age',
                                    checked: false,
                                    items: [
                                        { label: 'NAHU/ TAIWAN/ CHINA Unknown', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA 0-5 YEARS', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA 6-10 years', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Obvious sIgns of deterioratioan and distress', value: '', checked: false },
                                        { label: 'OTHER Unknown', value: '', checked: false },
                                        { label: 'OTHER 0-5 YEARS', value: '', checked: false },
                                        { label: 'OTHER 5-10 YEARS', value: '', checked: false },
                                        { label: 'OTHER 10 YEAR OR MORE', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Roof framing type',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Poured/Cast-in-place concrete', value: '', checked: false },
                                        { label: 'Precast Concrete', value: '', checked: false },
                                        { label: 'heavy steel frames', value: '', checked: false },
                                        { label: 'Ligh gauge stell purlins', value: '', checked: false },
                                        { label: 'Wood purlins', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Roof maintenance',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Building maintenance enforced', value: '', checked: false },
                                        { label: 'No building maintenance', value: '', checked: false },
                                        { label: 'Good', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Roof parapets/chimneys',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No chimney', value: '', checked: false },
                                        { label: 'Presence of chimney', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Roof equipment hurricane bracing',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Unknown', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Properly installed with adequate anchorage', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Obvious signs of deficiencies in the installation', value: '', checked: false },
                                        { label: 'OTHER Unknown', value: '', checked: false },
                                        { label: 'OTHER No equipment and/or no skylights', value: '', checked: false },
                                        { label: 'OTHER Equipment securely anchored to roof', value: '', checked: false },
                                        { label: 'OTHER Small roof area with poorly anchored equipment (less than 20% of roof area)', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Commercial appurtentant structures',
                                    checked: false,
                                    items: [
                                        { label: 'NAHU  Unknown', value: '', checked: false },
                                        { label: 'NAHU Large signs', value: '', checked: false },
                                        { label: 'NAHU Extensive ornamentation', value: '', checked: false },
                                        { label: 'NAHU None', value: '', checked: false },
                                        { label: 'NAHU Roof-mounted ballasted PV array', value: '', checked: false },
                                        { label: 'NAHU Roof-mounted mechanically attached PV array', value: '', checked: false },
                                        { label: 'NAHU Large-signs and Roof-mounted ballasted PV array', value: '', checked: false },
                                        { label: 'NAHU Large-signs and Roof-mounted mechanically attached PV array', value: '', checked: false },
                                        { label: 'NAHU Extensive ornamentation and roof-mounted', value: '', checked: false },
                                        { label: 'mechanically attached PV array', value: '', checked: false },
                                        { label: 'OTHER Unknown', value: '', checked: false },
                                        { label: 'OTHER Little ornamentation (no or few ornaments)', value: '', checked: false },
                                        { label: 'OTHER Average amount of ornamentation (post-1950)', value: '', checked: false },
                                        { label: 'OTHER Heavy ornamentation ( pre-1950) 0 – Unknown', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Cladding type/Wind missiles',
                                    checked: false,
                                    items: [
                                        { label: 'NAHU/ TAIWAN/ CHINA Unknown', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Brick veneer', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Metal sheating 3 - Wood', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA  EIFS / Stucco', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Impact rated glazing', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Glazing not designed for impact with gravel rooftop within 1000 ft', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Glazing not designed for impact without gravel rooftop within 1000 ft', value: '', checked: false },
                                        { label: 'EUROPE Unknown', value: '', checked: false },
                                        { label: 'EUROPE Concrete or reinforced masonry', value: '', checked: false },
                                        { label: 'EUROPE Unreinforced masonary', value: '', checked: false },
                                        { label: 'EUROPE Brick veneer', value: '', checked: false },
                                        { label: 'EUROPE Metal Sheathing', value: '', checked: false },
                                        { label: 'EUROPE Wood', value: '', checked: false },
                                        { label: 'EUROPE Laminated glass', value: '', checked: false },
                                        { label: 'EUROPE Non-protected glass', value: '', checked: false },
                                        { label: 'OTHER Unknown', value: '', checked: false },
                                        { label: 'OTHER  Concrete or reinfored masonry (steel reinforcements)', value: '', checked: false },
                                        { label: 'OTHER Unreinforced masonry', value: '', checked: false },
                                        { label: 'OTHER Brick veneer', value: '', checked: false },
                                        { label: 'OTHER Metal sheating', value: '', checked: false },
                                        { label: 'OTHER Wood', value: '', checked: false },
                                        { label: 'OTHER EIFS', value: '', checked: false },
                                        { label: 'OTHER Laminated glass (glass with plastic laminate covering)', value: '', checked: false },
                                        { label: 'OTHER Non-protected glass', value: '', checked: false },
                                        { label: 'OTHER Vinyl', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Roof sheathing attachment',
                                    checked: false,
                                    items: [
                                        { label: 'NAHU/ CHINA/ TAIWAN Unknown', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Batten decking/Skipped sheathing', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN 6d Nails - Any nail schedule', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN  8d Nails - Minimum nail schedule (12" panel supports and 6" panel edges)', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN 8d Nails - High Wind nail schedule (6" panel supports and 4" panel edges)', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN 10d Nails- High wind nail schedule (6" panel supports and 4" panel edges)', value: '', checked: false },
                                        { label: 'OTHER Unknown', value: '', checked: false },
                                        { label: 'OTHER Designed for extreme wind loading', value: '', checked: false },
                                        { label: 'OTHER Product evaluation report', value: '', checked: false },
                                        { label: 'OTHER Not designed for extreme wind loading (no engineering review of the cladding)', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Frame foundation connection',
                                    checked: false,
                                    items: [
                                        { label: 'NAHU/ TAIWAN/ CHINA Unknown', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Bolted', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA Unbolted', value: '', checked: false },
                                        { label: 'OTHER Engineered (Foundation has been specifically designed and certified)', value: '', checked: false },
                                        { label: 'OTHER Non-engineered (Foundation has not be specifically designed or certified)', value: '', checked: false },
                                        { label: 'OTHER Poor wall-to-foundation anchorage', value: '', checked: false },
                                        { label: 'OTHER No foundation', value: '', checked: false },
                                        { label: 'OTHER  Pier and beam, stacked block, CMU wall', value: '', checked: false },
                                        { label: 'OTHER  Slab-on-grade, poured-in-place', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Residential appurtenant structures',
                                    checked: false,
                                    items: [
                                        { label: 'NAHU Unknown', value: '', checked: false },
                                        { label: 'NAHU  None', value: '', checked: false },
                                        { label: 'NAHU Fences / Caport', value: '', checked: false },
                                        { label: 'NAHU  Attached Screen enclosure / Lanai', value: '', checked: false },
                                        { label: 'NAHU Detached Screen enclosure / Lanai', value: '', checked: false },
                                        { label: 'TAIWAN/ CHINA Unknown', value: '', checked: false },
                                        { label: 'TAIWAN/ CHINA None', value: '', checked: false },
                                        { label: 'TAIWAN/ CHINA Fences / Caport', value: '', checked: false },
                                        { label: 'TAIWAN/ CHINA Screen enclosure / Lanai (more than 15% of Bldg. value)', value: '', checked: false },
                                        { label: 'TAIWAN/ CHINA Screen enclosure / Lanai (less than 15% of Bldg. value)', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Mechanical electrical equipment side of build',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'None', value: '', checked: false },
                                        { label: 'Generally braced (metal braces or straps have been used to fasten the systems to walls', value: '', checked: false },
                                        { label: 'Generally non-braced (no braces or straps secure the systems)', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Ground level equipment',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'None', value: '', checked: false },
                                        { label: 'Generally protected (the systems are located 5 ft above grounf and/or have waterprood coverings)', value: '', checked: false },
                                        { label: 'Generally unprotected (the systems are not elevated or do not have covering)', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Resistance doors',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Designed for wind pressure and impact resistance', value: '', checked: false },
                                        { label: 'Designed for wind pressure only', value: '', checked: false },
                                        { label: 'Not designed for wind protection (e.g, flexible doors, thin doors, doors poorly attahced to frame)', value: '', checked: false },
                                        { label: 'No door', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Opening protection',
                                    checked: false,
                                    items: [
                                        { label: 'NAHU/ TAIWAN/ CHINA Unknown', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA All openings designed for large missiles', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA All openings designed for medium missiles', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA All openings designed for small missiles', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA All glazed openings designed for large missiles', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA All glazed openings designed for medium missiles', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA All glazed openings designed for small missiles', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA All glazed openings covered with plywood/oriented strand board (OSB)', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA At least one glazed exterior opening does not have wind-borne debris protection', value: '', checked: false },
                                        { label: 'NAHU/ TAIWAN/ CHINA No glazed exterior openings have wind-borne debris protection', value: '', checked: false },
                                        { label: 'JAPAN Unknown', value: '', checked: false },
                                        { label: 'JAPAN Well protected', value: '', checked: false },
                                        { label: 'JAPAN Generally Protected', value: '', checked: false },
                                        { label: 'OTHER Unknown', value: '', checked: false },
                                        { label: 'OTHER Designed for extreme wind (e.g. metal shutters)', value: '', checked: false },
                                        { label: 'OTHER Not designed for extreme wind', value: '', checked: false },
                                        { label: 'OTHER Jalousie or awning windows', value: '', checked: false },
                                        { label: 'OTHER Casement windows', value: '', checked: false },
                                        { label: 'OTHER Sliding windows', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Wind missiles',
                                    checked: false,
                                    items: [
                                        { label: 'NAHU/ CHINA/ TAIWAN Unknown', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN None', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Small airborne missles, e.g. gravel, foliage (structure is within 100ft of missles)', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Protective Foliage', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Gravel ballas present', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Potential severe missile exposure (Trees within striking distance)', value: '', checked: false },
                                        { label: 'NAHU/ CHINA/ TAIWAN Isloated large trees', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Content vulnerability due to Wind',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Low (the structure contains few contents damageable by wind e.g., sturdy, heavy or bolted components)', value: '', checked: false },
                                        { label: 'Average (the structure contains a typical amount of contents damageable by wind e.g., residential units)', value: '', checked: false },
                                        { label: 'High (the structure contains an inordinate amount of contents susceptible to be spoiled by high winds e.g., retail china/crystal shops)', value: '', checked: false },
                                        { label: 'Very High (the structure contents will almost always be damaged by wind', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Content vulnerability due to Water',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Low (the structure contains few contents damageable by water)', value: '', checked: false },
                                        { label: 'Average (the structure contains a typical amount of contents damageable by water e.g., residential units)', value: '', checked: false },
                                        { label: 'High (the structure contains an inordinate amount of contents susceptible to be spoiled by water e.r., perishable foodstuffs, grocery stores)', value: '', checked: false },
                                        { label: 'Very High (the structure contents will almost always be damaged by water)', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Flood protection',
                                    checked: false,
                                    items: [
                                        { label: 'UK Unknown', value: '', checked: false },
                                        { label: 'UK  Yes (such as sandbags and flood doors)', value: '', checked: false },
                                        { label: 'UK None', value: '', checked: false },
                                        { label: 'UK Raised ground floor (ca. 2m above ground level)', value: '', checked: false },
                                        { label: 'UK Raised ground floor (ca. 1m above ground level)', value: '', checked: false },
                                        { label: 'UK Raised ground floor (ca. 6m above ground level)', value: '', checked: false },
                                        { label: 'UK 0.5m flood wall', value: '', checked: false },
                                        { label: 'UK Dry/wet flood proofing', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Flood missile exposure',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'None', value: '', checked: false },
                                        { label: 'Flood-carried missiles, unknown size', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                                {
                                    label: 'Basement',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No basement', value: '', checked: false },
                                        { label: 'Basement with flood protection', value: '', checked: false },
                                        { label: 'Basement without flood protection', value: '', checked: false },
                                        { label: 'Basement with unknown flood protection', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }
                            ],
                            active: true,
                            color: '#7bbe31'
                        },
                        {
                            label: 'Earthquake',
                            value: [
                                {
                                    label: 'Plan irregularity',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Regular', value: '', checked: false },
                                        { label: 'Irregular', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Soft story',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No', value: '', checked: false },
                                        { label: 'Yes', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Vertical irregularity',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No', value: '', checked: false },
                                        { label: 'Yes', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Redundancy',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Some redundancy', value: '', checked: false },
                                        { label: 'Little or no redundancy', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Asymmetry and torsion',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No', value: '', checked: false },
                                        { label: 'Yes', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Exterior walls/Cladding',
                                    checked: false,
                                    items: [
                                        { label: 'NAM Unknown', value: '', checked: false },
                                        { label: 'NAM Glass', value: '', checked: false },
                                        { label: 'NAM Precast Concrete', value: '', checked: false },
                                        { label: 'NAM URM - Full Thickness', value: '', checked: false },
                                        { label: 'NAM URM - Partial Thickness', value: '', checked: false },
                                        { label: 'SE ASIA Unknown', value: '', checked: false },
                                        { label: 'SE ASIA Glass', value: '', checked: false },
                                        { label: 'SE ASIA Precast Concrete', value: '', checked: false },
                                        { label: 'SE ASIA Unreinforced masonry', value: '', checked: false },
                                        { label: 'OTHER Unknown', value: '', checked: false },
                                        { label: 'OTHER No cladding', value: '', checked: false },
                                        { label: 'OTHER Glass or precast concrete', value: '', checked: false },
                                        { label: 'OTHER Unreinforced masonry', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Building exterior - 50% rule',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Less than 50% of wall open', value: '', checked: false },
                                        { label: 'More than 50% of wall open', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Short column condition',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No', value: '', checked: false },
                                        { label: 'Yes', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Interior walls/Partitions',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No', value: '', checked: false },
                                        { label: 'Yes', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Appendages and Ornamentation',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Generally well-braced', value: '', checked: false },
                                        { label: 'Somewhat braced', value: '', checked: false },
                                        { label: 'Generally unbraced', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Quality of Construction',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No', value: '', checked: false },
                                        { label: 'Yes', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Equipment Support Maintenance',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No signs', value: '', checked: false },
                                        { label: 'Few signs', value: '', checked: false },
                                        { label: 'Obvious signs', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Pounding and Impact',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No: Building is 3" or further away for each story', value: '', checked: false },
                                        { label: 'Yes: the adjacent building is less than 3" form your building for each story in the building', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Tank',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No', value: '', checked: false },
                                        { label: 'Yes', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Hazardous Exposures',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No', value: '', checked: false },
                                        { label: 'Yes', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Engineered Foundations',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No', value: '', checked: false },
                                        { label: 'Yes', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Cripple Walls',
                                    checked: false,
                                    items: [
                                        { label: 'JAPAN Unknown', value: '', checked: false },
                                        { label: 'JAPAN Grade 0', value: '', checked: false },
                                        { label: 'JAPAN Grade 1', value: '', checked: false },
                                        { label: 'JAPAN Grade 2', value: '', checked: false },
                                        { label: 'JAPAN Grade 3', value: '', checked: false },
                                        { label: 'OTHER Unknown', value: '', checked: false },
                                        { label: 'OTHER No cripple walls', value: '', checked: false },
                                        { label: 'OTHER Braced cripple walls', value: '', checked: false },
                                        { label: 'OTHER Unbraced cripple walls', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Frame Bolted to Foundation',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Bolted', value: '', checked: false },
                                        { label: 'Unbolted', value: '', checked: false },
                                        { label: 'Earthquake-resistant bracing system (mobile homes only)', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Tilt-Up Retrofit (Anchoring)',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Properly anchored (Tilt-up)', value: '', checked: false },
                                        { label: 'Not properly anchored (Tilt-up)', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'URM Retrofit',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No', value: '', checked: false },
                                        { label: 'Yes', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: false },
                                    ]
                                }, {
                                    label: 'Earthquake Sprinkler Leakage Coverage Flag',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'No', value: '', checked: false },
                                        { label: 'Yes', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'EQSL Susceptibility',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Low', value: '', checked: false },
                                        { label: 'High', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Sprinkler Type',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Wet', value: '', checked: false },
                                        { label: 'Dry', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Sprinkler Installed Year',
                                    checked: false,
                                    items: [
                                        { label: 'Not Used Legacy', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }
                            ],
                            active: false,
                            color: '#e70010'
                        },
                        {
                            label: 'Marine',
                            value: [
                                {
                                    label: 'Salvage potential',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Lowest', value: '', checked: false },
                                        { label: 'Low', value: '', checked: false },
                                        { label: 'Average', value: '', checked: false },
                                        { label: 'High', value: '', checked: false },
                                        { label: 'Very high', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Cargo and specie packaging',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Deficient', value: '', checked: false },
                                        { label: 'Standard', value: '', checked: false },
                                        { label: 'Superior', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Cargo and specie protection',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'None', value: '', checked: false },
                                        { label: 'Typical', value: '', checked: false },
                                        { label: 'Well-protected', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Specie storage',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Window', value: '', checked: false },
                                        { label: 'Outside vault', value: '', checked: false },
                                        { label: 'Inside vault', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Sprinkler type',
                                    checked: false,
                                    items: [
                                        { label: 'Unknown', value: '', checked: false },
                                        { label: 'Wet', value: '', checked: false },
                                        { label: 'Dry', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }
                            ],
                            active: false,
                            color: '#008694'
                        },
                        {
                            label: 'Cargo',
                            value: [
                                {
                                    label: 'Wind',
                                    checked: false,
                                    items: [
                                        { label: 'Highly damageable', value: '', checked: false },
                                        { label: 'Moderately damageable', value: '', checked: false },
                                        { label: 'Damageable', value: '', checked: false },
                                        { label: 'Slightly damageable', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Surge',
                                    checked: false,
                                    items: [
                                        { label: 'Highly damageable', value: '', checked: false },
                                        { label: 'Moderately damageableent', value: '', checked: false },
                                        { label: 'Damageable', value: '' },
                                        { label: 'Slightly damageable', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                }, {
                                    label: 'Earthquake',
                                    checked: false,
                                    items: [
                                        { label: 'Highly damageable', value: '', checked: false },
                                        { label: 'Moderately damageableent', value: '', checked: false },
                                        { label: 'Damageable', value: '', checked: false },
                                        { label: 'Slightly damageable', value: '', checked: false },
                                        { label: 'Default RMS', value: '', checked: true },
                                    ]
                                },
                            ],
                            active: false,
                            color: '#795e55'
                        }
                    ]
                }
            },
            {
                title: 'Binders',
                content: {
                    header: [
                        { label: 'Policy number', value: '', icon: '/assets/images/policyNumber.png', colSpan: 24, offset: 0, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].policy_number, disabled: false },
                        { label: 'Inception', type: 'date', headerLabel: 'From', value: '', colSpan: 12, offset: 0, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].inception, disabled: true },
                        { label: 'Expiry', type: 'date', headerLabel: 'To', value: '', colSpan: 11, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].expiry, disabled: true },
                        { label: 'Participation', type: 'inputNumber', value: '', colSpan: 12, offset: 0, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].participation, disabled: true },
                        { label: 'Order', type: 'inputNumber', value: '', colSpan: 11, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].order, disabled: true },
                        { label: 'Policy Limit', type: 'inputNumber', value: '', colSpan: 18, offset: 0, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].policy_limit_value, disabled: true },
                        { label: 'Currency', type: 'list', value: '', colSpan: 5, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].policy_limit_currency, disabled: true },
                        { label: 'Policy Excess', type: 'inputNumber', value: '', colSpan: 18, offset: 0, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].policy_excess_value, disabled: true },
                        { label: 'Currency', type: 'list', value: '', colSpan: 5, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].policy_excess_currency, disabled: true },
                    ],
                    body: [
                        {
                            label: 'Location',
                            items: [
                                { label: 'Inception date', type: 'date', headerLabel: 'From', value: '', colSpan: 12, offset: 0, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].inception_location_level, disabled: true },
                                { label: 'Expiry date', type: 'date', headerLabel: 'To', value: '', colSpan: 11, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].expiry_location_level, disabled: true },
                                { label: 'Gross written premium', type: 'input', value: '', colSpan: 16, offset: 0, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].gross_written_premium_value, disabled: false },
                                { label: 'Currency', type: 'list', value: '', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].location_currency, disabled: true },
                            ],
                        },
                        {
                            label: 'Covered Perils',
                            items: [
                                { label: 'Binder\'s Earthquake Cover', checked: true, headerLabel: 'From', body: [
                                        {
                                            label: 'Limit',
                                            colSpan: 12,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_earthquake_limit_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_earthquake_limit_currency },
                                            ],
                                        },
                                        {
                                            label: 'Deductible',
                                            colSpan: 11,
                                            offset: 1,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_earthquake_deductible_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_earthquake_deductible_currency }
                                            ],
                                        }
                                    ] },
                                { label: 'Binder\'s Windstorm Cover', checked: true, headerLabel: 'To', body: [
                                        {
                                            label: 'Limit',
                                            colSpan: 12,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_windstorm_limit_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_windstorm_limit_currency },
                                            ],
                                        },
                                        {
                                            label: 'Deductible',
                                            colSpan: 11,
                                            offset: 1,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_windstorm_deductible_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_windstorm_deductible_currency }
                                            ],
                                        }
                                    ] },
                                { label: 'Binder\'s Flood Cover', checked: true, body: [
                                        {
                                            label: 'Limit',
                                            colSpan: 12,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_flood_limit_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_flood_limit_currency },
                                            ],
                                        },
                                        {
                                            label: 'Deductible',
                                            colSpan: 11,
                                            offset: 1,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_flood_deductible_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_flood_deductible_currency }
                                            ],
                                        }
                                    ] },
                                { label: 'Binder\'s Terrorism Cover', checked: true, body: [
                                        {
                                            label: 'Limit',
                                            colSpan: 12,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_terrorism_limit_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_terrorism_limit_currency },
                                            ],
                                        },
                                        {
                                            label: 'Deductible',
                                            colSpan: 11,
                                            offset: 1,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_terrorism_deductible_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_terrorism_deductible_currency }
                                            ],
                                        }
                                    ] },
                                { label: 'Binder\'s Machinery Breakdown  Cover', checked: true, body: [
                                        {
                                            label: 'Limit',
                                            colSpan: 12,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_machinery_limit_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_machinary_limit_currency },
                                            ],
                                        },
                                        {
                                            label: 'Deductible',
                                            colSpan: 11,
                                            offset: 1,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_machinery_deductible_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_machinary_deductible_currency }
                                            ],
                                        }
                                    ] },
                                { label: 'Binder\'s Strike Riot Commotion Cover', checked: true, body: [
                                        {
                                            label: 'Limit',
                                            colSpan: 12,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_strike_limit_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_strike_limit_currency },
                                            ],
                                        },
                                        {
                                            label: 'Deductible',
                                            colSpan: 11,
                                            offset: 1,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_strike_deductible_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_strike_deductible_currency }
                                            ],
                                        }
                                    ] },
                                { label: 'Binder\'s Cyber Cover', checked: true, body: [
                                        {
                                            label: 'Limit',
                                            colSpan: 12,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_cyber_limit_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_cyber_limit_currency },
                                            ],
                                        },
                                        {
                                            label: 'Deductible',
                                            colSpan: 11,
                                            offset: 1,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_cyber_deductible_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_cyber_deductible_currency }
                                            ],
                                        }
                                    ] },
                                { label: 'Binder\'s Fire Cover', checked: true, body: [
                                        {
                                            label: 'Limit',
                                            colSpan: 12,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_fire_limit_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_fire_limit_currency },
                                            ],
                                        },
                                        {
                                            label: 'Deductible',
                                            colSpan: 11,
                                            offset: 1,
                                            items: [
                                                { label: 'Value', type: 'inputNumber', value: '', colSpan: 16, field_code: 'binders_fire_deductible_value' },
                                                { label: 'Currency', value: '', type: 'list', colSpan: 7, offset: 1, field_code: _location_field_codes_const__WEBPACK_IMPORTED_MODULE_0__["LOCATION_FIELD_CODES_ENUM"].binders_fire_deductible_currency }
                                            ],
                                        }
                                    ] },
                            ],
                        },
                    ]
                }
            },
            {
                title: 'Miscellaneous',
                content: [
                    { label: 'Aggregation', value: '', height: '50px' },
                    { label: 'External Reference', value: '', height: '50px' },
                    { label: 'Comment', value: '', height: '150px' }
                ]
            }
        ] },
];
var mondatoryFields = {
    'General': {
        division: true,
        location_name: true,
        company_name: true,
        occupancy_code: true,
        occupancy_scheme: true,
        construction_code: true,
        construction_scheme: true,
        accord_occupancy_code: true,
        accord_occupancy_class: true,
        accord_occupancy_subclass: true,
        accord_construction_code: true,
        accord_construction_class: true,
        year_built: true,
        property_db_id: undefined,
        scor_database_id: undefined,
        number_of_stories_unit: undefined,
        basement: undefined,
        basement_stories_unit: undefined,
        basement_finished: undefined,
        number_of_buildings: undefined,
        building_value: undefined,
        roof_year_upgrade: undefined,
        wiring_year_upgrade: undefined,
        plumbing_year_upgrade: undefined
    },
    'Geographical': {
        cleansed_country: undefined,
        cleansed_iso2: undefined,
        cleansed_iso3: undefined,
        cleansed_state: undefined,
        cleansed_county: undefined,
        cleansed_city: undefined,
        cleansed_street: undefined,
        cleansed_zip_code: undefined,
        cleansed_latitude: undefined,
        cleansed_longitude: undefined,
        final_country: undefined,
        final_iso2: undefined,
        final_iso3: undefined,
        final_state: undefined,
        // final county: undefined ,
        final_city: undefined,
        final_street: undefined,
        final_zip_code: undefined,
        final_latitude: undefined,
        final_longitude: undefined,
        accuracy_level: undefined,
        geocoder: undefined,
        accuracy_validated: undefined,
    },
    'Insured Value': {
        tiv_amount: true,
        tiv_unit: true,
        tiv_currency: false,
        bi_value: true,
        bi_value_unit: true,
        bi_value_currency: undefined,
        pd_value: true,
        pd_value_unit: true,
        pd_value_currency: undefined,
        // site_currency : true,
        bi_type: true,
        indemnity_period_eip: true,
        bi_declaration_period: true,
        building_value: undefined,
        building_unit: undefined,
        building_currency: undefined,
        stock_value: undefined,
        stock_unit: undefined,
        stock_currency: undefined,
        machinery_value: undefined,
        machinery_unit: undefined,
        machinery_currency: undefined,
        other_structure: undefined,
        other_structure_unit: undefined,
        other_structure_currency: undefined,
        content_value: undefined,
        content_currency: undefined,
        content_unit: undefined,
        pd_split: undefined,
        for_interest: undefined,
        interest: undefined,
    },
    'MPL': {
        mpl_pd_value: true,
        mpl_pd_percentage: true,
        mpl_bi_value: true,
        mpl_bi_percentage: true,
        fmls_pd_value: undefined,
        fmls_pd_percentage: undefined,
        fmls_bi_value: undefined,
        fmls_bi_percentage: undefined
    },
    'Pricing': {
        pricing_category: true,
        pricing_sub_category: true,
        asset_quality: true,
        bi_mitigation: true,
        mb_quality: true,
        operational_status: true,
    },
    'More Information': {
        // policy_number : true,
        // inception_location_level : true,
        // expiry_location_level : true,
        // gross_written_premium_value : true,
        // location_currency : true,
        first_floor_height: undefined,
        first_floor_height_unit: undefined,
        certified_elevation_height: undefined,
        certified_elevation_height_unit: undefined,
        policy_number: undefined,
        binders_earthquake_limit_currency: undefined,
        binders_earthquake_deductible_currency: undefined,
        binders_windstorm_limit_currency: undefined,
        binders_windstorm_deductible_currency: undefined,
        binders_flood_limit_currency: undefined,
        binders_flood_deductible_currency: undefined,
        binders_terrorism_limit_currency: undefined,
        binders_terrorism_deductible_currency: undefined,
        binders_machinary_limit_currency: undefined,
        binders_machinary_deductible_currency: undefined,
        binders_strike_limit_currency: undefined,
        binders_strike_deductible_currency: undefined,
        binders_cyber_limit_currency: undefined,
        binders_cyber_deductible_currency: undefined,
        binders_fire_limit_currency: undefined,
        binders_fire_deductible_currency: undefined,
    }
};


/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/more-info/more-info.component.html":
/*!**********************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/more-info/more-info.component.html ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<nz-tabset class=\"info-tabset\" [nzSelectedIndex]=\"currentTabIndex\">\r\n  <nz-tab *ngFor=\"let tab of tabModel\" [nzTitle]=\"tab.title\" style=\"height: 70vh;overflow: scroll;\">\r\n    <ng-container [ngTemplateOutlet]=\"tab.title === 'Binders' ? binders : tab.title === 'Miscellaneous' ? miscellaneous : others\"></ng-container>\r\n    <ng-template #binders>\r\n      <div class=\"binders\">\r\n        <div class=\"binders-header\" style=\"background-color: white; margin: 20px 20%;padding: 50px 50px 20px 50px;\">\r\n          <nz-row >\r\n            <nz-col *ngFor=\"let bindersItem of tab.content.header\" [nzSpan]=\"bindersItem.colSpan\" [nzOffset]=\"bindersItem.offset\" style=\"margin-bottom: 20px\">\r\n              <ng-container [ngTemplateOutlet]=\"bindersItem.type == 'date' ? dateItem : bindersItem.type == 'inputNumber' ? inputItem : bindersItem.type == 'list' ? listItem : defaultItem\"></ng-container>\r\n              <ng-template #dateItem>\r\n                <span>{{bindersItem.headerLabel}}</span><br>\r\n                <nz-date-picker class=\"my-info-date\" style=\"width: 100%\"\r\n                                [nzPlaceHolder]=\"getPlaceHolder(bindersItem)\" [(ngModel)]=\"locationData[bindersItem.field_code]\" (ngModelChange)=\"checkMondatory($event, bindersItem.field_code)\"\r\n                                [ngStyle]=\"{'border': mondatories[bindersItem.field_code] ? '1px solid red' : ''}\" [disabled]=\"bindersItem.disabled\">\r\n                </nz-date-picker>\r\n              </ng-template>\r\n              <ng-template #inputItem>\r\n                <input  type=\"text\" only-number [placeholder]=\"getPlaceHolder(bindersItem)\" [(ngModel)]=\"locationData[bindersItem.field_code]\" (ngModelChange)=\"checkMondatory($event, bindersItem.field_code)\" [disabled]=\"bindersItem.disabled\"\r\n                        [ngStyle]=\"{'border': mondatories[bindersItem.field_code] ? '1px solid red' : ''}\" style=\"background-color: #f4f6fc;width: 100%;height: 33px\">\r\n              </ng-template>\r\n              <ng-template #listItem>\r\n                <nz-select  [nzPlaceHolder]=\"getPlaceHolder(bindersItem)\" nzShowSearch nzAllowClear nzCustomContent class=\"my-select\"\r\n                            [(ngModel)]=\"locationData[bindersItem.field_code]\"\r\n                            (ngModelChange)=\"checkMondatory($event, bindersItem.field_code)\"\r\n                            [ngStyle]=\"{'border': mondatories[bindersItem.field_code] ? '1px solid red' : ''}\"\r\n                            [disabled]=\"bindersItem.disabled\"  style=\"background-color: #f4f6fc;width: 100%;\">\r\n                  <nz-option nzLabel={{o}} nzValue={{o}}\r\n                             *ngFor=\"let o of getReferenceData(bindersItem.field_code)\">\r\n                    {{o}}\r\n                  </nz-option>\r\n                </nz-select>\r\n              </ng-template>\r\n              <ng-template #defaultItem>\r\n                <nz-row>\r\n                  <nz-col nzSpan=\"1\" style=\"height: 55px\">\r\n                    <img [src]=\"bindersItem.icon\" style=\"width: 100%;height: 100%\">\r\n                  </nz-col>\r\n                  <nz-col nzSpan=\"22\" nzOffset=\"1\" style=\"height: 55px\">\r\n                    <input nz-input [(ngModel)]=\"locationData[bindersItem.field_code]\" (ngModelChange)=\"checkMondatory($event, bindersItem.field_code)\" [disabled]=\"bindersItem.disabled\"\r\n                           [ngStyle]=\"{'border': mondatories[bindersItem.field_code] ? '1px solid red' : ''}\" [placeholder]=\"getPlaceHolder(bindersItem)\"  nzSize=\"large\" style=\"background-color: #f4f6fc;height: 100%\" />\r\n                  </nz-col>\r\n                </nz-row>\r\n              </ng-template>\r\n            </nz-col>\r\n          </nz-row>\r\n        </div>\r\n        <div class=\"binders-body\" style=\"background-color: white; margin: 0 20%;padding: 50px 50px 0 50px;margin-bottom: 20px;\">\r\n          <nz-row>\r\n            <nz-col nzSpan=\"24\" style=\"margin-bottom: 20px\">\r\n              <span style=\"font-size: 18px;font-weight: bold\">{{tab.content.body[0].label}}</span>\r\n            </nz-col>\r\n            <nz-col *ngFor=\"let bindersItem of tab.content.body[0].items\" [nzSpan]=\"bindersItem.colSpan\" [nzOffset]=\"bindersItem.offset\" style=\"height: 40px; margin-bottom: 50px\">\r\n              <ng-container [ngTemplateOutlet]=\"bindersItem.type == 'date' ? dateItem : bindersItem.type == 'input' ? inputItem : listItem\"></ng-container>\r\n              <ng-template #dateItem>\r\n                <span>{{bindersItem.headerLabel}}</span><br>\r\n                <nz-date-picker class=\"my-info-date\" style=\"width: 100%\"\r\n                                [nzPlaceHolder]=\"getPlaceHolder(bindersItem)\" [(ngModel)]=\"locationData[bindersItem.field_code]\" (ngModelChange)=\"checkMondatory($event, bindersItem.field_code)\"\r\n                                [ngStyle]=\"{'border': mondatories[bindersItem.field_code] ? '1px solid red' : ''}\" [disabled]=\"bindersItem.disabled\">\r\n                </nz-date-picker>\r\n              </ng-template>\r\n              <ng-template #inputItem>\r\n                <input  nz-input [placeholder]=\"getPlaceHolder(bindersItem)\" [(ngModel)]=\"locationData[bindersItem.field_code]\" (ngModelChange)=\"checkMondatory($event, bindersItem.field_code)\"\r\n                        [ngStyle]=\"{'border': mondatories[bindersItem.field_code] ? '1px solid red' : ''}\" style=\"background-color: #f4f6fc;width: 100%;\" [disabled]=\"bindersItem.disabled\">\r\n              </ng-template>\r\n              <ng-template #listItem>\r\n                <nz-select  [nzPlaceHolder]=\"getPlaceHolder(bindersItem)\" nzShowSearch nzAllowClear nzCustomContent class=\"my-select\"\r\n                            [(ngModel)]=\"locationData[bindersItem.field_code]\"\r\n                            (ngModelChange)=\"checkMondatory($event, bindersItem.field_code)\"\r\n                            [ngStyle]=\"{'border': mondatories[bindersItem.field_code] ? '1px solid red' : ''}\"\r\n                            [disabled]=\"bindersItem.disabled\"  style=\"background-color: #f4f6fc;width: 100%;\">\r\n                  <nz-option nzLabel={{o}} nzValue={{o}}\r\n                             *ngFor=\"let o of getReferenceData(bindersItem.field_code)\">\r\n                    {{o}}\r\n                  </nz-option>\r\n                </nz-select>\r\n              </ng-template>\r\n            </nz-col>\r\n          </nz-row>\r\n        </div>\r\n        <div class=\"binders-sub-body\" style=\"background-color: white; margin: 0 20%;padding: 50px 50px 0 50px;margin-bottom: 20px;\">\r\n          <nz-row *ngFor=\"let it of tab.content.body[1].items\">\r\n            <nz-col [nzSpan]=\"24\" style=\"background-color: white;padding: 20px;height: 100%\">\r\n              <div style=\"margin-bottom: 10px\">\r\n                <label class=\"tand-c-checkbox\" nz-checkbox style=\"font-size: 20px\" [(ngModel)]=\"it.checked\">{{it.label}}</label>\r\n              </div>\r\n              <div *ngIf=\"it.checked\">\r\n                <nz-row>\r\n                  <nz-col *ngFor=\"let valItem of it.body\" [nzSpan]=\"valItem.colSpan\" [nzOffset]=\"valItem.offset ? valItem.offset : 0\">\r\n                    <div style=\"margin-bottom: 10px\">\r\n                      <span style=\"font-size: 14px;font-weight: bold;\">{{valItem.label}}</span>\r\n                    </div>\r\n                    <nz-row>\r\n                      <nz-col *ngFor=\"let item of valItem.items\" [nzSpan]=\"item.colSpan\" [nzOffset]=\"item.offset ? item.offset : 0\">\r\n                        <ng-container [ngSwitch]=\"item.type\">\r\n                          <nz-select  [nzPlaceHolder]=\"getPlaceHolder(item)\" nzShowSearch nzAllowClear nzCustomContent *ngSwitchCase=\"'list'\" class=\"my-select\"\r\n                                      [(ngModel)]=\"locationData[item.field_code]\"\r\n                                      [disabled]=\"item.disabled\"  style=\"background-color: #f4f6fc;width: 100%;\">\r\n                            <nz-option nzLabel={{o}} nzValue={{o}}\r\n                                       *ngFor=\"let o of getReferenceData(item.field_code)\">\r\n                              {{o}}\r\n                            </nz-option>\r\n                          </nz-select>\r\n                          <input *ngSwitchDefault type=\"text\" only-number [(ngModel)]=\"locationData[item.field_code]\"\r\n                                 [placeholder]=\"getPlaceHolder(item)\" style=\"background-color: #f4f6fc;height: 33px;width: 100%;padding-left: 11px\" />\r\n                        </ng-container>\r\n                      </nz-col>\r\n                    </nz-row>\r\n                  </nz-col>\r\n                </nz-row>\r\n              </div>\r\n            </nz-col>\r\n          </nz-row>\r\n\r\n\r\n<!--          <nz-row>-->\r\n<!--            <nz-col nzSpan=\"24\" style=\"margin-bottom: 20px\">-->\r\n<!--              <span style=\"font-size: 18px;font-weight: bold\">{{tab.content.body[1].label}}</span>-->\r\n<!--            </nz-col>-->\r\n<!--            <nz-col *ngFor=\"let bindersItem of tab.content.body[1].items\" [nzSpan]=\"bindersItem.colSpan\" [nzOffset]=\"bindersItem.offset\" style=\"height: 40px; margin-bottom: 50px\">-->\r\n<!--              <input nz-input [placeholder]=\"bindersItem.label\" nzSize=\"large\" style=\"background-color: #f4f6fc;height: 100%\" />-->\r\n<!--            </nz-col>-->\r\n<!--          </nz-row>-->\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template #miscellaneous>\r\n      <div style=\"background-color: white; margin: 50px 20%;padding: 50px;height: 50vh\">\r\n        <nz-row>\r\n          <nz-col nzSpan=\"24\" *ngFor=\"let millItem of tab.content\" [ngStyle]=\"{'height': millItem.height}\" style=\"margin-bottom: 30px\">\r\n            <input nz-input [placeholder]=\"millItem.label\" nzSize=\"large\" style=\"background-color: #f4f6fc;height: 100%\" />\r\n          </nz-col>\r\n        </nz-row>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template #others>\r\n      <div style=\"margin: 10px 20px\">\r\n        <div class=\"global-tab-header\" style=\"background-color: white;padding: 10px 20px;\">\r\n          <nz-row style=\"padding: 0 20%\">\r\n            <nz-col *ngFor=\"let item of tab.content.header\" [nzSpan]=\"item.colSpan\" [nzOffset]=\"item.offset\" style=\"margin-bottom: 15px\">\r\n              <ng-container [ngSwitch]=\"item.type\">\r\n                <nz-select  [nzPlaceHolder]=\"getPlaceHolder(item)\" nzShowSearch nzAllowClear nzCustomContent *ngSwitchCase=\"'list'\"\r\n                            [(ngModel)]=\"locationData[item.field_code]\"  (ngModelChange)=\"checkMondatory($event, item.field_code)\"\r\n                            [disabled]=\"item.disabled || tab.title === 'Final Address'\" [ngStyle]=\"{'border': mondatories[item.field_code] ? '1px solid red' : ''}\" style=\"width: 100%;\">\r\n                  <nz-option nzLabel={{o}} nzValue={{o}}\r\n                             *ngFor=\"let o of getReferenceData(item.field_code)\">\r\n                    {{o}}\r\n                  </nz-option>\r\n                </nz-select>\r\n                <input type=\"text\" only-number [placeholder]=\"getPlaceHolder(item)\" [(ngModel)]=\"locationData[item.field_code]\"  (ngModelChange)=\"checkMondatory($event, item.field_code)\"\r\n                       style=\"background-color: #f4f6fc;height: 33px;width: 100%;padding-left: 11px\" *ngSwitchDefault />\r\n              </ng-container>\r\n            </nz-col>\r\n          </nz-row>\r\n        </div>\r\n        <div class=\"my-tab-content\" style=\"padding: 25px 0;height: 50vh;\">\r\n          <nz-row style=\"height: 100%\">\r\n            <nz-col nzSpan=\"4\" style=\"background-color: white;height: 100%;padding: 15px\">\r\n              <div *ngFor=\"let item of tab.content.body\" style=\"display: flex;height: 50px;margin-bottom: 20px; cursor: pointer\"\r\n                   [ngClass]=\"item.active ? 'body-active-item' : ''\" (click)=\"activeBodyItem(item.label)\">\r\n                <div style=\"width: 10px\" [ngStyle]=\"{'background-color': item.color}\"></div>\r\n                <div style=\"margin-left: 10px;font-size: 18px;width: 100%\">\r\n                  <span style=\"vertical-align: middle;\">{{item.label}}</span>\r\n                  <i nz-icon nzType=\"right\" style=\"float: right;position: relative;top: 10px\"></i>\r\n                </div>\r\n              </div>\r\n            </nz-col>\r\n            <nz-col nzSpan=\"13\" style=\"background-color: white;height: 100%;margin: 0 20px;border-top: 3px solid #7bbe31;padding: 30px;overflow: scroll;\">\r\n              <ng-container *ngFor=\"let item of tab.content.body\">\r\n                <ng-container *ngIf=\"item.active\">\r\n                  <nz-row style=\"margin-bottom: 15px\">\r\n                    <nz-col nzSpan=\"24\"><span style=\"font-size: 18px;font-weight: bold\">{{item.label}}</span></nz-col>\r\n                  </nz-row>\r\n                  <nz-row style=\"margin-bottom: 15px;padding-bottom: 15px;border-bottom: 1px solid grey\">\r\n                    <nz-col nzSpan=\"4\">\r\n                      <input nz-input [placeholder]=\"'Tags'\" nzSize=\"large\" style=\"background-color: #f4f6fc;height: 40px\" />\r\n                    </nz-col>\r\n                    <nz-col nzSpan=\"19\" nzOffset=\"1\">\r\n                      <input nz-input [placeholder]=\"'Search'\" nzSize=\"large\" style=\"background-color: #f4f6fc;height: 40px\" />\r\n                    </nz-col>\r\n                  </nz-row>\r\n                  <ng-container *ngFor=\"let subItem of item.value\">\r\n                    <nz-row style=\"margin-bottom: 15px;border-bottom: 1px solid grey\">\r\n                        <nz-col nzSpan=\"24\" style=\"margin-bottom: 20px\">\r\n                          <label class=\"info-checkbox\" nz-checkbox [(ngModel)]=\"subItem.checked\">{{subItem.label}}</label>\r\n                        </nz-col>\r\n                        <ng-container *ngIf=\"subItem.checked\">\r\n                          <nz-col nzSpan=\"24\" style=\"margin-bottom: 20px; padding-left: 20px\" *ngFor=\"let it of subItem.items\">\r\n                            <label class=\"info-checkbox\" nz-checkbox [(ngModel)]=\"it.checked\">{{it.label}}</label>\r\n                          </nz-col>\r\n                        </ng-container>\r\n                    </nz-row>\r\n                  </ng-container>\r\n                </ng-container>\r\n              </ng-container>\r\n            </nz-col>\r\n            <nz-col nzSpan=\"6\" style=\"background-color: white;height: 100%;border-top: 3px solid #7bbe31;padding: 15px;overflow: scroll\">\r\n              <nz-row style=\"margin-bottom: 10px;\">\r\n                <nz-col nzSpan=\"24\"><span style=\"font-size: 18px;font-weight: bold\">Selection Basket</span></nz-col>\r\n              </nz-row>\r\n              <nz-row style=\"margin-bottom: 15px; border-bottom: 1px solid grey;padding-bottom: 10px\">\r\n                <nz-col nzSpan=\"24\"><nz-alert nzType=\"warning\" nzMessage=\"Default RMS values are not in the summary\" nzShowIcon></nz-alert></nz-col>\r\n              </nz-row>\r\n                <ng-container *ngFor=\"let rightItem of tab.content.body\">\r\n                  <ng-container *ngIf=\"rightItem.active\">\r\n                    <ng-container *ngFor=\"let rightSubItem of rightItem.value\">\r\n                      <ng-container *ngIf=\"rightSubItem.checked\">\r\n                        <div style=\"border-bottom: 1px solid grey\">\r\n                          <nz-row>\r\n                            <nz-col nzSpan=\"24\"><div style=\"font-size: 15px;font-weight: bolder\" class=\"text-overflow\" [title]=\"rightSubItem.label\">{{rightSubItem.label}}</div></nz-col>\r\n                          </nz-row>\r\n                          <ng-container *ngFor=\"let rightSubItem1 of rightSubItem.items\">\r\n                            <ng-container *ngIf=\"rightSubItem1.checked\">\r\n                              <nz-row style=\"padding-left: 15px\">\r\n                                <nz-col  nzSpan=\"24\"><div class=\"text-overflow\" [title]=\"rightSubItem1.label\">{{rightSubItem1.label}}</div></nz-col>\r\n                              </nz-row>\r\n                            </ng-container>\r\n                          </ng-container>\r\n                        </div>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </ng-container>\r\n                </ng-container>\r\n            </nz-col>\r\n          </nz-row>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n  </nz-tab>\r\n</nz-tabset>\r\n"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/more-info/more-info.component.scss":
/*!**********************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/more-info/more-info.component.scss ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".btn-geocode {\n  min-width: 100%;\n  background-color: #005373;\n  color: white; }\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none; }\n\ninput[type=number] {\n  -moz-appearance: textfield; }\n\ninput {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  outline: 0;\n  border-width: 0px 0 1px;\n  border-color: #2b2bff;\n  border-radius: 0;\n  font-size: 12px !important;\n  color: #2b2bff !important; }\n\ninput:focus {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  border-color: #2b2bff;\n  outline: none;\n  box-shadow: 0 0 0 0;\n  color: #2b2bff !important; }\n\n.danger {\n  color: #cd3531;\n  font-size: 12px;\n  font-weight: 500; }\n\n::ng-deep .info-tabset > div.ant-tabs-bar.ant-tabs-top-bar.ant-tabs-default-bar.ng-star-inserted > div > div > div {\n  text-align: center !important;\n  background-color: white; }\n\ninput::-webkit-input-placeholder {\n  color: blue; }\n\ninput:-ms-input-placeholder {\n  color: blue; }\n\ninput::-ms-input-placeholder {\n  color: blue; }\n\ninput::placeholder {\n  color: blue; }\n\n::ng-deep nz-date-picker.my-info-date > nz-picker > span > input {\n  border: 1px solid blue;\n  height: 40px; }\n\n::ng-deep .ant-calendar-picker {\n  width: 100%; }\n\n::ng-deep nz-date-picker.my-info-date > nz-picker > span > span {\n  color: blue; }\n\n.body-active-item {\n  background-color: #fdfbdf;\n  font-weight: bold; }\n\n::ng-deep .info-checkbox .ant-checkbox-checked .ant-checkbox-inner {\n  background-color: blue; }\n\n.text-overflow {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden; }\n\n::ng-deep .info-tabset > div.ant-tabs-content.ant-tabs-top-content.ant-tabs-content-animated.ng-star-inserted > div.ant-tabs-tabpane.ng-star-inserted.ant-tabs-tabpane-active {\n  height: 65vh;\n  overflow-y: scroll; }\n\n::ng-deep .info-tabset > div.ant-tabs-bar.ant-tabs-top-bar.ant-tabs-default-bar.ng-star-inserted > div > div > div > div {\n  height: 40px; }\n\n::ng-deep .info-tabset > div.ant-tabs-bar.ant-tabs-top-bar.ant-tabs-default-bar.ng-star-inserted > div > div > div > div > div:nth-child(1) > div.ant-tabs-tab.ng-star-inserted.ant-tabs-tab-active {\n  font-size: 12px; }\n\n::ng-deep nz-tabset.info-tabset .ant-tabs-nav .ant-tabs-tab-active {\n  font-size: 18px;\n  border-top: none;\n  border-bottom: 2px solid blue;\n  padding-bottom: 2px;\n  color: blue; }\n\n::ng-deep nz-tabset.info-tabset .ant-tabs-ink-bar {\n  display: none !important; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvbW9yZS1pbmZvL0M6XFxGXFxKb2JzXFxkY21fZnJvbnQvc3JjXFxhcHBcXHNoYXJlZFxccG9wdXBzXFxnZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXBcXG1vcmUtaW5mb1xcbW9yZS1pbmZvLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZUFBZTtFQUNmLHlCQUF5QjtFQUN6QixZQUFZLEVBQUE7O0FBR2Q7O0VBRUUsd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UsMEJBQTBCLEVBQUE7O0FBRzVCO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLHVCQUF1QjtFQUN2QixxQkFBOEI7RUFDOUIsZ0JBQWdCO0VBQ2hCLDBCQUEwQjtFQUMxQix5QkFBa0MsRUFBQTs7QUFJcEM7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixxQkFBOEI7RUFDOUIsYUFBYztFQUNkLG1CQUFvQjtFQUNwQix5QkFBa0MsRUFBQTs7QUFHcEM7RUFDRSxjQUFjO0VBQ2QsZUFBYztFQUNkLGdCQUNGLEVBQUE7O0FBRUE7RUFDRSw2QkFBNkI7RUFDN0IsdUJBQXVCLEVBQUE7O0FBR3pCO0VBQ0UsV0FBVyxFQUFBOztBQURiO0VBQ0UsV0FBVyxFQUFBOztBQURiO0VBQ0UsV0FBVyxFQUFBOztBQURiO0VBQ0UsV0FBVyxFQUFBOztBQUdiO0VBQ0Usc0JBQXNCO0VBQ3RCLFlBQVksRUFBQTs7QUFHZDtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLFdBQVcsRUFBQTs7QUFHYjtFQUNFLHlCQUF5QjtFQUN6QixpQkFBaUIsRUFBQTs7QUFHbkI7RUFDRSxzQkFBc0IsRUFBQTs7QUFHeEI7RUFDRSx1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLGdCQUFnQixFQUFBOztBQUdsQjtFQUNFLFlBQVk7RUFDWixrQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSxZQUFZLEVBQUE7O0FBR2Q7RUFDRSxlQUFlLEVBQUE7O0FBR2pCO0VBQ0UsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQiw2QkFBNkI7RUFDN0IsbUJBQW1CO0VBQ25CLFdBQVcsRUFBQTs7QUFHYjtFQUNFLHdCQUF3QixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvbW9yZS1pbmZvL21vcmUtaW5mby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5idG4tZ2VvY29kZSB7XHJcbiAgbWluLXdpZHRoOiAxMDAlO1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICMwMDUzNzM7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXHJcbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPW51bWJlcl0ge1xyXG4gIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xyXG59XHJcblxyXG5pbnB1dCB7XHJcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG4gIGJvcmRlci10b3A6IG5vbmU7XHJcbiAgb3V0bGluZTogMDtcclxuICBib3JkZXItd2lkdGg6IDBweCAwIDFweDtcclxuICBib3JkZXItY29sb3I6IHJnYig0MywgNDMsIDI1NSk7XHJcbiAgYm9yZGVyLXJhZGl1czogMDtcclxuICBmb250LXNpemU6IDEycHggIWltcG9ydGFudDtcclxuICBjb2xvcjogcmdiKDQzLCA0MywgMjU1KSAhaW1wb3J0YW50O1xyXG5cclxufVxyXG5cclxuaW5wdXQ6Zm9jdXMge1xyXG4gIGJvcmRlci1sZWZ0OiBub25lO1xyXG4gIGJvcmRlci1yaWdodDogbm9uZTtcclxuICBib3JkZXItdG9wOiBub25lO1xyXG4gIGJvcmRlci1jb2xvcjogcmdiKDQzLCA0MywgMjU1KTtcclxuICBvdXRsaW5lIDogbm9uZTtcclxuICBib3gtc2hhZG93OiAwIDAgMCAwIDtcclxuICBjb2xvcjogcmdiKDQzLCA0MywgMjU1KSAhaW1wb3J0YW50O1xyXG5cclxufVxyXG4uZGFuZ2VyIHtcclxuICBjb2xvcjogI2NkMzUzMTtcclxuICBmb250LXNpemU6MTJweDtcclxuICBmb250LXdlaWdodDo1MDBcclxufVxyXG5cclxuOjpuZy1kZWVwIC5pbmZvLXRhYnNldCA+IGRpdi5hbnQtdGFicy1iYXIuYW50LXRhYnMtdG9wLWJhci5hbnQtdGFicy1kZWZhdWx0LWJhci5uZy1zdGFyLWluc2VydGVkID4gZGl2ID4gZGl2ID4gZGl2IHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXIgIWltcG9ydGFudDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxufVxyXG5cclxuaW5wdXQ6OnBsYWNlaG9sZGVyIHtcclxuICBjb2xvcjogYmx1ZTtcclxufVxyXG5cclxuOjpuZy1kZWVwICBuei1kYXRlLXBpY2tlci5teS1pbmZvLWRhdGUgPiBuei1waWNrZXIgPiBzcGFuID4gaW5wdXQge1xyXG4gIGJvcmRlcjogMXB4IHNvbGlkIGJsdWU7XHJcbiAgaGVpZ2h0OiA0MHB4O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLmFudC1jYWxlbmRhci1waWNrZXIge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG46Om5nLWRlZXAgbnotZGF0ZS1waWNrZXIubXktaW5mby1kYXRlID4gbnotcGlja2VyID4gc3BhbiA+IHNwYW4ge1xyXG4gIGNvbG9yOiBibHVlO1xyXG59XHJcblxyXG4uYm9keS1hY3RpdmUtaXRlbSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZkZmJkZjtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5pbmZvLWNoZWNrYm94IC5hbnQtY2hlY2tib3gtY2hlY2tlZCAuYW50LWNoZWNrYm94LWlubmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiBibHVlO1xyXG59XHJcblxyXG4udGV4dC1vdmVyZmxvdyB7XHJcbiAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7XHJcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLmluZm8tdGFic2V0ID4gZGl2LmFudC10YWJzLWNvbnRlbnQuYW50LXRhYnMtdG9wLWNvbnRlbnQuYW50LXRhYnMtY29udGVudC1hbmltYXRlZC5uZy1zdGFyLWluc2VydGVkID4gZGl2LmFudC10YWJzLXRhYnBhbmUubmctc3Rhci1pbnNlcnRlZC5hbnQtdGFicy10YWJwYW5lLWFjdGl2ZSB7XHJcbiAgaGVpZ2h0OiA2NXZoO1xyXG4gIG92ZXJmbG93LXk6IHNjcm9sbDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5pbmZvLXRhYnNldCA+IGRpdi5hbnQtdGFicy1iYXIuYW50LXRhYnMtdG9wLWJhci5hbnQtdGFicy1kZWZhdWx0LWJhci5uZy1zdGFyLWluc2VydGVkID4gZGl2ID4gZGl2ID4gZGl2ID4gZGl2IHtcclxuICBoZWlnaHQ6IDQwcHg7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuaW5mby10YWJzZXQgPiBkaXYuYW50LXRhYnMtYmFyLmFudC10YWJzLXRvcC1iYXIuYW50LXRhYnMtZGVmYXVsdC1iYXIubmctc3Rhci1pbnNlcnRlZCA+IGRpdiA+IGRpdiA+IGRpdiA+IGRpdiA+IGRpdjpudGgtY2hpbGQoMSkgPiBkaXYuYW50LXRhYnMtdGFiLm5nLXN0YXItaW5zZXJ0ZWQuYW50LXRhYnMtdGFiLWFjdGl2ZSB7XHJcbiAgZm9udC1zaXplOiAxMnB4O1xyXG59XHJcblxyXG46Om5nLWRlZXAgbnotdGFic2V0LmluZm8tdGFic2V0ICAuYW50LXRhYnMtbmF2IC5hbnQtdGFicy10YWItYWN0aXZlIHtcclxuICBmb250LXNpemU6IDE4cHg7XHJcbiAgYm9yZGVyLXRvcDogbm9uZTtcclxuICBib3JkZXItYm90dG9tOiAycHggc29saWQgYmx1ZTtcclxuICBwYWRkaW5nLWJvdHRvbTogMnB4O1xyXG4gIGNvbG9yOiBibHVlO1xyXG59XHJcblxyXG46Om5nLWRlZXAgbnotdGFic2V0LmluZm8tdGFic2V0ICAuYW50LXRhYnMtaW5rLWJhciB7XHJcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/more-info/more-info.component.ts":
/*!********************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/more-info/more-info.component.ts ***!
  \********************************************************************************************/
/*! exports provided: MoreInfoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MoreInfoComponent", function() { return MoreInfoComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/dcm/store/dcm.selectors */ "./src/app/dcm/store/dcm.selectors.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location.model */ "./src/app/shared/popups/general-location-info-popup/models/location.model.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location-ref-data.const */ "./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var MoreInfoComponent = /** @class */ (function () {
    function MoreInfoComponent(store, formBuilder) {
        var _this = this;
        this.store = store;
        this.formBuilder = formBuilder;
        this.moreInfoForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormGroup"]({});
        this.location = new _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_4__["LocationModel"]();
        this.store.select(_app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_2__["selectPopUp"]).subscribe(function (data) { return _this.location = Object.assign({}, data.location); });
    }
    MoreInfoComponent.prototype.ngOnInit = function () {
        this.moreInfoForm = this.formBuilder.group({
            'yearBuilt': [this.location.yearBuilt],
            'isAggregation': [this.location.isAggregation,],
            'numberOfStories': [this.location.numberOfStories,],
            'numberOfBuilding': [this.location.numberOfBuilding,],
            'largerUnitCapacity': [this.location.largestUnitCapacity,],
        });
    };
    MoreInfoComponent.prototype.validateFormControl = function (controName) {
        var control = this.moreInfoForm.get(controName);
        return control.invalid && control.touched;
    };
    MoreInfoComponent.prototype.onSubmit = function () {
    };
    MoreInfoComponent.prototype.activeBodyItem = function (label) {
        this.tabModel[0].content.body.forEach(function (item) { return item.active = item.label === label; });
    };
    MoreInfoComponent.prototype.checkMondatory = function (ev, fieldCode) {
        if (this.mondatories[fieldCode] !== undefined)
            this.mondatories[fieldCode] = !ev;
    };
    MoreInfoComponent.prototype.getReferenceData = function (fieldCode) {
        return _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_REFERENCE_DATA"].get(fieldCode);
    };
    MoreInfoComponent.prototype.getPlaceHolder = function (item) {
        switch (this.multiple[item.field_code]) {
            case true: return "Multiple";
            default: return item.label;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], MoreInfoComponent.prototype, "tabModel", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], MoreInfoComponent.prototype, "locationData", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], MoreInfoComponent.prototype, "mondatories", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], MoreInfoComponent.prototype, "multiple", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], MoreInfoComponent.prototype, "isMultipleEdit", void 0);
    MoreInfoComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-more-info',
            template: __webpack_require__(/*! ./more-info.component.html */ "./src/app/shared/popups/general-location-info-popup/more-info/more-info.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./more-info.component.scss */ "./src/app/shared/popups/general-location-info-popup/more-info/more-info.component.scss")]
        }),
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]])
    ], MoreInfoComponent);
    return MoreInfoComponent;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/mpl/mpl.component.html":
/*!**********************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/mpl/mpl.component.html ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"padding: 15px 0\">\r\n  <div class=\"global-tab-header\" style=\"background-color: white;padding: 15px;margin: 12px 10%\">\r\n    <nz-row>\r\n      <nz-col nzSpan=\"3\" style=\"height: 33px;margin-left: 20px\">\r\n        <nz-select  [nzPlaceHolder]=\"getPlaceHolder(tabModel.header)\" nzShowSearch nzAllowClear nzCustomContent class=\"my-select\"\r\n                    [(ngModel)]=\"locationData[tabModel.header.field_code]\"  (ngModelChange)=\"checkMondatory($event, tabModel.header.field_code)\"\r\n                    [disabled]=\"tabModel.header.disabled\" [ngStyle]=\"{'border': mondatories[tabModel.header.field_code] ? '1px solid red' : ''}\" style=\"background-color: #f4f6fc;width: 100%;\">\r\n          <nz-option nzLabel={{o}} nzValue={{o}}\r\n                     *ngFor=\"let o of getReferenceData(tabModel.header.field_code)\">\r\n            {{o}}\r\n          </nz-option>\r\n        </nz-select>\r\n      </nz-col>\r\n    </nz-row>\r\n  </div>\r\n  <div class=\"my-tab-content\" style=\"margin: 0 10%;margin-bottom: 20px;height: 55vh;\">\r\n    <nz-row>\r\n      <nz-col *ngFor=\"let val of tabModel.body;let i = index\" [nzSpan]=\"i == 0 ? 12 : 11\"  [nzOffset]=\"i\"\r\n              style=\"background-color: white;padding: 30px;\"\r\n              [ngStyle]=\"{'padding-right' : i==1 ? '20px' : ''}\">\r\n        <div style=\"margin-bottom: 10px\">\r\n          <span style=\"font-size: 18px;font-weight: bold;\">{{val.label}}</span>\r\n        </div>\r\n        <div style=\"width: 100%; height: 40px; margin-bottom: 10px\" *ngFor=\"let valItem of val.items\">\r\n          <input type=\"text\" only-number [(ngModel)]=\"locationData[valItem.field_code]\" (ngModelChange)=\"checkMondatory($event, valItem.field_code)\"\r\n                 [ngStyle]=\"{'border': mondatories[valItem.field_code] ? '1px solid red' : ''}\" [placeholder]=\"getPlaceHolder(valItem)\" style=\"background-color: #f4f6fc;height: 100%;width: 100%;padding-left: 11px\" />\r\n        </div>\r\n      </nz-col>\r\n    </nz-row>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/mpl/mpl.component.scss":
/*!**********************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/mpl/mpl.component.scss ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "input {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  outline: 0;\n  border-width: 0px 0 1px;\n  border-color: #2b2bff;\n  border-radius: 0;\n  font-size: 12px !important;\n  color: #2b2bff !important; }\n\ninput:focus {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  border-color: #2b2bff;\n  outline: none;\n  box-shadow: 0 0 0 0;\n  color: #2b2bff !important; }\n\ninput::-webkit-input-placeholder {\n  color: blue; }\n\ninput:-ms-input-placeholder {\n  color: blue; }\n\ninput::-ms-input-placeholder {\n  color: blue; }\n\ninput::placeholder {\n  color: blue; }\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none; }\n\ninput[type=number] {\n  -moz-appearance: textfield; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvbXBsL0M6XFxGXFxKb2JzXFxkY21fZnJvbnQvc3JjXFxhcHBcXHNoYXJlZFxccG9wdXBzXFxnZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXBcXG1wbFxcbXBsLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLHVCQUF1QjtFQUN2QixxQkFBOEI7RUFDOUIsZ0JBQWdCO0VBQ2hCLDBCQUEwQjtFQUMxQix5QkFBa0MsRUFBQTs7QUFJcEM7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixxQkFBOEI7RUFDOUIsYUFBYztFQUNkLG1CQUFvQjtFQUNwQix5QkFBa0MsRUFBQTs7QUFJcEM7RUFDRSxXQUFXLEVBQUE7O0FBRGI7RUFDRSxXQUFXLEVBQUE7O0FBRGI7RUFDRSxXQUFXLEVBQUE7O0FBRGI7RUFDRSxXQUFXLEVBQUE7O0FBR2I7O0VBRUUsd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UsMEJBQTBCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvcG9wdXBzL2dlbmVyYWwtbG9jYXRpb24taW5mby1wb3B1cC9tcGwvbXBsLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXQge1xyXG4gIGJvcmRlci1sZWZ0OiBub25lO1xyXG4gIGJvcmRlci1yaWdodDogbm9uZTtcclxuICBib3JkZXItdG9wOiBub25lO1xyXG4gIG91dGxpbmU6IDA7XHJcbiAgYm9yZGVyLXdpZHRoOiAwcHggMCAxcHg7XHJcbiAgYm9yZGVyLWNvbG9yOiByZ2IoNDMsIDQzLCAyNTUpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7XHJcbiAgY29sb3I6IHJnYig0MywgNDMsIDI1NSkgIWltcG9ydGFudDtcclxuXHJcbn1cclxuXHJcbmlucHV0OmZvY3VzIHtcclxuICBib3JkZXItbGVmdDogbm9uZTtcclxuICBib3JkZXItcmlnaHQ6IG5vbmU7XHJcbiAgYm9yZGVyLXRvcDogbm9uZTtcclxuICBib3JkZXItY29sb3I6IHJnYig0MywgNDMsIDI1NSk7XHJcbiAgb3V0bGluZSA6IG5vbmU7XHJcbiAgYm94LXNoYWRvdzogMCAwIDAgMCA7XHJcbiAgY29sb3I6IHJnYig0MywgNDMsIDI1NSkgIWltcG9ydGFudDtcclxuXHJcbn1cclxuXHJcbmlucHV0OjpwbGFjZWhvbGRlciB7XHJcbiAgY29sb3I6IGJsdWU7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbmlucHV0W3R5cGU9bnVtYmVyXSB7XHJcbiAgLW1vei1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/mpl/mpl.component.ts":
/*!********************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/mpl/mpl.component.ts ***!
  \********************************************************************************/
/*! exports provided: MplComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MplComponent", function() { return MplComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/dcm/store/dcm.selectors */ "./src/app/dcm/store/dcm.selectors.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location.model */ "./src/app/shared/popups/general-location-info-popup/models/location.model.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location-ref-data.const */ "./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location-field-codes.const */ "./src/app/shared/popups/general-location-info-popup/models/location-field-codes.const.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};







var MplComponent = /** @class */ (function () {
    function MplComponent(store, formBuilder) {
        var _this = this;
        this.store = store;
        this.formBuilder = formBuilder;
        this.moreInfoForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormGroup"]({});
        this.location = new _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_4__["LocationModel"]();
        this.store.select(_app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_2__["selectPopUp"]).subscribe(function (data) { return _this.location = Object.assign({}, data.location); });
    }
    MplComponent.prototype.ngOnInit = function () {
        this.moreInfoForm = this.formBuilder.group({
            'yearBuilt': [this.location.yearBuilt],
            'isAggregation': [this.location.isAggregation,],
            'numberOfStories': [this.location.numberOfStories,],
            'numberOfBuilding': [this.location.numberOfBuilding,],
            'largerUnitCapacity': [this.location.largestUnitCapacity,],
        });
    };
    MplComponent.prototype.validateFormControl = function (controName) {
        var control = this.moreInfoForm.get(controName);
        return control.invalid && control.touched;
    };
    MplComponent.prototype.onSubmit = function () {
    };
    MplComponent.prototype.getReferenceData = function (fieldCode) {
        return _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_REFERENCE_DATA"].get(fieldCode);
    };
    MplComponent.prototype.checkMondatory = function (ev, fieldCode) {
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].mpl_pd_value) {
            this.locationData['mpl_pd_percentage'] = (this.locationData['pd_value'] && this.locationData['pd_value'] !== 0) ? ev / this.locationData['pd_value'] * 100 : 0;
            this.applyMandatoryCheck('mpl_pd_percentage');
        }
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].mpl_bi_value) {
            this.locationData['mpl_bi_percentage'] = (this.locationData['pd_value'] && this.locationData['pd_value'] !== 0) ? ev / this.locationData['pd_value'] * 100 : 0;
            this.applyMandatoryCheck('mpl_bi_percentage');
        }
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].mpl_pd_percentage) {
            this.locationData['mpl_pd_value'] = this.locationData['pd_value'] ? (this.locationData['pd_value'] * ev / 100) : 0;
            this.applyMandatoryCheck('mpl_pd_value');
        }
        if (fieldCode === _app_shared_popups_general_location_info_popup_models_location_field_codes_const__WEBPACK_IMPORTED_MODULE_6__["LOCATION_FIELD_CODES_ENUM"].mpl_bi_percentage) {
            this.locationData['mpl_bi_value'] = this.locationData['bi_value'] ? (this.locationData['bi_value'] * ev / 100) : 0;
            this.applyMandatoryCheck('mpl_bi_value');
        }
        if (this.mondatories[fieldCode] !== undefined)
            this.mondatories[fieldCode] = !ev;
    };
    MplComponent.prototype.applyMandatoryCheck = function (field_code) {
        (this.isMultipleEdit) ? ((this.mondatories[field_code] !== undefined) ? this.mondatories[field_code] = false : '') : this.mondatories[field_code] = false;
    };
    MplComponent.prototype.getPlaceHolder = function (item) {
        switch (this.multiple[item.field_code]) {
            case true: return "Multiple";
            default: return item.label;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], MplComponent.prototype, "tabModel", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], MplComponent.prototype, "locationData", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], MplComponent.prototype, "mondatories", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], MplComponent.prototype, "multiple", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], MplComponent.prototype, "isMultipleEdit", void 0);
    MplComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-mpl',
            template: __webpack_require__(/*! ./mpl.component.html */ "./src/app/shared/popups/general-location-info-popup/mpl/mpl.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./mpl.component.scss */ "./src/app/shared/popups/general-location-info-popup/mpl/mpl.component.scss")]
        }),
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]])
    ], MplComponent);
    return MplComponent;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/pipes/item-visibility.pipe.ts":
/*!*****************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/pipes/item-visibility.pipe.ts ***!
  \*****************************************************************************************/
/*! exports provided: ItemVisibilityPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ItemVisibilityPipe", function() { return ItemVisibilityPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var ItemVisibilityPipe = /** @class */ (function () {
    function ItemVisibilityPipe() {
    }
    ItemVisibilityPipe.prototype.transform = function (item, occupancyScheme) {
        return !(item.conditional && occupancyScheme !== null && occupancyScheme !== 'ACCORD');
    };
    ItemVisibilityPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
            name: 'itemVisibility',
            pure: false
        })
    ], ItemVisibilityPipe);
    return ItemVisibilityPipe;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/pipes/keys.pipe.ts":
/*!******************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/pipes/keys.pipe.ts ***!
  \******************************************************************************/
/*! exports provided: KeysPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "KeysPipe", function() { return KeysPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var KeysPipe = /** @class */ (function () {
    function KeysPipe() {
    }
    KeysPipe.prototype.transform = function (value, args) {
        return Object.keys(value || {});
    };
    KeysPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
            name: 'keys',
            pure: false
        })
    ], KeysPipe);
    return KeysPipe;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/pipes/mondatory.pipe.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/pipes/mondatory.pipe.ts ***!
  \***********************************************************************************/
/*! exports provided: MondatoryPipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MondatoryPipe", function() { return MondatoryPipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var MondatoryPipe = /** @class */ (function () {
    function MondatoryPipe() {
    }
    MondatoryPipe.prototype.transform = function (value, field) {
        return value[field] ? Object.values(value[field]).filter(function (e) { return e === true; }).length : 0;
    };
    MondatoryPipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
            name: 'mondatory',
            pure: false
        })
    ], MondatoryPipe);
    return MondatoryPipe;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/pipes/unit-pipe.pipe.ts":
/*!***********************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/pipes/unit-pipe.pipe.ts ***!
  \***********************************************************************************/
/*! exports provided: UnitPipePipe */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnitPipePipe", function() { return UnitPipePipe; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};

var UnitPipePipe = /** @class */ (function () {
    function UnitPipePipe() {
    }
    UnitPipePipe.prototype.transform = function (value, unit) {
        var result = value;
        if (result) {
            switch (unit) {
                case 'Thousands':
                    result = Number.parseFloat(result) * 1000;
                    break;
                case 'Millions':
                    result = Number.parseFloat(result) * 1000000;
                    break;
                default: break;
            }
        }
        return result;
    };
    UnitPipePipe = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Pipe"])({
            name: 'unitPipe'
        })
    ], UnitPipePipe);
    return UnitPipePipe;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/pricing/pricing.component.html":
/*!******************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/pricing/pricing.component.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"padding: 15px 0\">\r\n  <div class=\"pricing-supheader\" style=\"background-color: white;padding: 10px 25px;margin: 20px 10%;\">\r\n    <nz-row>\r\n      <nz-col nzSpan=\"24\" style=\"font-size: 20px;font-weight: bold;margin-bottom: 10px;\">\r\n        <span style=\"font-size: 20px;font-weight: bold;\">{{tabModel.supHeader.title}}</span>\r\n      </nz-col>\r\n      <nz-col *ngFor=\"let headerItem of tabModel.supHeader.content, let i= index\"\r\n              [nzSpan]=\"i==1 ? 11 : 12\" [nzOffset]=\"i==1 ? 1 : 0\"\r\n              style=\"height: 35px\"\r\n              [ngStyle]=\"{'padding-right' : i==1 ? '20px' : ''}\">\r\n        <nz-select  [nzPlaceHolder]=\"getPlaceHolder(headerItem)\" nzShowSearch nzAllowClear nzCustomContent class=\"my-select\"\r\n                    [(ngModel)]=\"locationData[headerItem.field_code]\" (ngModelChange)=\"checkMondatory($event, headerItem.field_code)\"\r\n                    [ngStyle]=\"{'border': mondatories[headerItem.field_code] ? '1px solid red' : ''}\"\r\n                    [disabled]=\"headerItem.disabled\"  style=\"background-color: #f4f6fc;width: 100%;\">\r\n          <nz-option nzLabel={{o}} nzValue={{o}}\r\n                     *ngFor=\"let o of getReferenceData(headerItem.field_code)\">\r\n            {{o}}\r\n          </nz-option>\r\n        </nz-select>\r\n      </nz-col>\r\n    </nz-row>\r\n  </div>\r\n  <div class=\"pricing-header\" style=\"background-color: white;padding: 10px 25px;margin: 20px 10%;\">\r\n    <nz-row>\r\n      <nz-col nzSpan=\"24\">\r\n        <span style=\"font-size: 20px;font-weight: bold;\">{{tabModel.header.title}}</span>\r\n      </nz-col>\r\n      <nz-col *ngFor=\"let item of tabModel.header.content\" nzSpan=\"5\" nzOffset=\"1\">\r\n        <ng-container [ngTemplateOutlet]=\"item.type ? listItem : others\"></ng-container>\r\n        <ng-template #listItem>\r\n          <nz-select  [nzPlaceHolder]=\"getPlaceHolder(item)\" nzShowSearch nzAllowClear nzCustomContent class=\"my-select\"\r\n                      [(ngModel)]=\"locationData[item.field_code]\" (ngModelChange)=\"checkMondatory($event, item.field_code)\"\r\n                      [ngStyle]=\"{'border': mondatories[item.field_code] ? '1px solid red' : ''}\"\r\n                      [disabled]=\"item.disabled\"  style=\"background-color: #f4f6fc;width: 100%;\">\r\n            <nz-option nzLabel={{o}} nzValue={{o}}\r\n                       *ngFor=\"let o of getReferenceData(item.field_code)\">\r\n              {{o}}\r\n            </nz-option>\r\n          </nz-select>\r\n        </ng-template>\r\n        <ng-template #others>\r\n          <div style=\"width: 100%\"><span style=\"text-overflow: ellipsis;white-space: nowrap;\">{{item.label}}</span></div>\r\n          <div [ngStyle]=\"{'border': mondatories[item.field_code] ? '1px solid red' : ''}\" style=\"padding-bottom: 10px\">\r\n            <nz-slider class=\"pricing-slider\" [nzMarks]=\"marks\" nzDots [(ngModel)]=\"item.value\"\r\n                       (ngModelChange)=\"checkMondatory($event, item.field_code);onChangeValue(item)\"></nz-slider>\r\n          </div>\r\n          <div style=\"text-align: center;color: blue;font-weight: bold\"><span>{{marks[item.value]}}</span></div>\r\n        </ng-template>\r\n      </nz-col>\r\n    </nz-row>\r\n  </div>\r\n  <div class=\"pricing-content\" style=\"margin: 0 10%;margin-bottom: 20px;\">\r\n        <nz-row>\r\n          <nz-col *ngFor=\"let val of tabModel.body;let j = index\"\r\n                  [nzSpan]=\"j == 0 ? 12 : 11\" [nzOffset]=\"j\"\r\n                  style=\"background-color: white;padding: 10px 30px;height: 28vh\">\r\n            <div style=\"margin-bottom: 10px\">\r\n              <span style=\"font-size: 20px;font-weight: bold;\">{{val.label}}</span>\r\n            </div>\r\n            <div>\r\n              <nz-row>\r\n                <ng-container [ngTemplateOutlet]=\"j == 0 ? first : second\"></ng-container>\r\n                <ng-template #first>\r\n                  <nz-col *ngFor=\"let valItem of val.value,let k = index\" nzSpan=\"24\" [ngStyle]=\"{'margin-bottom' : k === 0 ? '30px' : '15px' }\">\r\n                    <div><span>{{valItem.label}}</span></div>\r\n                    <div *ngFor=\"let item of valItem.items\" style=\"height: 30px\">\r\n                      <input [type]=\"item.type === 'inputNumber' ? 'number' : 'text'\" [placeholder]=\"getPlaceHolder(item)\"  style=\"background-color: #f4f6fc;height: 100%;width: 100%;padding-left: 11px\" />\r\n                    </div>\r\n                  </nz-col>\r\n                </ng-template>\r\n                <ng-template #second>\r\n                  <nz-col *ngFor=\"let valItem of val.items\" nzSpan=\"24\" style=\"margin-bottom: 20px\">\r\n                    <input type=\"text\" only-number [placeholder]=\"getPlaceHolder(valItem)\" style=\"background-color: #f4f6fc;height: 33px;width: 100%;padding-left: 11px\" />\r\n                  </nz-col>\r\n                </ng-template>\r\n              </nz-row>\r\n            </div>\r\n          </nz-col>\r\n        </nz-row>\r\n  </div>\r\n  <div class=\"pricing-footer\" style=\"background-color: white;padding: 10px 25px;margin: 20px 10%\">\r\n    <nz-row>\r\n      <nz-col *ngFor=\"let headerItem of tabModel.footer.content, let i= index\" [nzSpan]=\"12\">\r\n        <input type=\"text\" only-number [placeholder]=\"getPlaceHolder(headerItem)\" style=\"background-color: #f4f6fc;height: 33px;width: 100%;padding-left: 11px\"/>\r\n      </nz-col>\r\n    </nz-row>\r\n  </div>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/pricing/pricing.component.scss":
/*!******************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/pricing/pricing.component.scss ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "input {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  outline: 0;\n  border-width: 0px 0 1px;\n  border-color: #2b2bff;\n  border-radius: 0;\n  font-size: 12px !important;\n  color: #2b2bff !important; }\n\ninput:focus {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  border-color: #2b2bff;\n  outline: none;\n  box-shadow: 0 0 0 0;\n  color: #2b2bff !important; }\n\ninput::-webkit-input-placeholder {\n  color: blue; }\n\ninput:-ms-input-placeholder {\n  color: blue; }\n\ninput::-ms-input-placeholder {\n  color: blue; }\n\ninput::placeholder {\n  color: blue; }\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none; }\n\ninput[type=number] {\n  -moz-appearance: textfield; }\n\n::ng-deep nz-slider > div > nz-slider-track > div {\n  background-color: blue !important; }\n\n::ng-deep nz-slider > div > nz-slider-handle > nz-tooltip > div {\n  border: 2px solid blue !important; }\n\n::ng-deep .pricing-slider > div > nz-slider-marks > div > span {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden;\n  display: none; }\n\n::ng-deep .pricing-slider > div {\n  margin-bottom: 0; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvcHJpY2luZy9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxzaGFyZWRcXHBvcHVwc1xcZ2VuZXJhbC1sb2NhdGlvbi1pbmZvLXBvcHVwXFxwcmljaW5nXFxwcmljaW5nLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsVUFBVTtFQUNWLHVCQUF1QjtFQUN2QixxQkFBOEI7RUFDOUIsZ0JBQWdCO0VBQ2hCLDBCQUEwQjtFQUMxQix5QkFBa0MsRUFBQTs7QUFJcEM7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixxQkFBOEI7RUFDOUIsYUFBYztFQUNkLG1CQUFvQjtFQUNwQix5QkFBa0MsRUFBQTs7QUFJcEM7RUFDRSxXQUFXLEVBQUE7O0FBRGI7RUFDRSxXQUFXLEVBQUE7O0FBRGI7RUFDRSxXQUFXLEVBQUE7O0FBRGI7RUFDRSxXQUFXLEVBQUE7O0FBR2I7O0VBRUUsd0JBQXdCLEVBQUE7O0FBRzFCO0VBQ0UsMEJBQTBCLEVBQUE7O0FBRzVCO0VBQ0UsaUNBQWlDLEVBQUE7O0FBR25DO0VBQ0UsaUNBQWlDLEVBQUE7O0FBR25DO0VBQ0UsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsYUFBYSxFQUFBOztBQUdmO0VBQ0UsZ0JBQWdCLEVBQUEiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvcG9wdXBzL2dlbmVyYWwtbG9jYXRpb24taW5mby1wb3B1cC9wcmljaW5nL3ByaWNpbmcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dCB7XHJcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG4gIGJvcmRlci10b3A6IG5vbmU7XHJcbiAgb3V0bGluZTogMDtcclxuICBib3JkZXItd2lkdGg6IDBweCAwIDFweDtcclxuICBib3JkZXItY29sb3I6IHJnYig0MywgNDMsIDI1NSk7XHJcbiAgYm9yZGVyLXJhZGl1czogMDtcclxuICBmb250LXNpemU6IDEycHggIWltcG9ydGFudDtcclxuICBjb2xvcjogcmdiKDQzLCA0MywgMjU1KSAhaW1wb3J0YW50O1xyXG5cclxufVxyXG5cclxuaW5wdXQ6Zm9jdXMge1xyXG4gIGJvcmRlci1sZWZ0OiBub25lO1xyXG4gIGJvcmRlci1yaWdodDogbm9uZTtcclxuICBib3JkZXItdG9wOiBub25lO1xyXG4gIGJvcmRlci1jb2xvcjogcmdiKDQzLCA0MywgMjU1KTtcclxuICBvdXRsaW5lIDogbm9uZTtcclxuICBib3gtc2hhZG93OiAwIDAgMCAwIDtcclxuICBjb2xvcjogcmdiKDQzLCA0MywgMjU1KSAhaW1wb3J0YW50O1xyXG5cclxufVxyXG5cclxuaW5wdXQ6OnBsYWNlaG9sZGVyIHtcclxuICBjb2xvcjogYmx1ZTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxyXG5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcclxufVxyXG5cclxuaW5wdXRbdHlwZT1udW1iZXJdIHtcclxuICAtbW96LWFwcGVhcmFuY2U6IHRleHRmaWVsZDtcclxufVxyXG5cclxuOjpuZy1kZWVwIG56LXNsaWRlciA+IGRpdiA+IG56LXNsaWRlci10cmFjayA+IGRpdiB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAgbnotc2xpZGVyID4gZGl2ID4gbnotc2xpZGVyLWhhbmRsZSA+IG56LXRvb2x0aXAgPiBkaXYge1xyXG4gIGJvcmRlcjogMnB4IHNvbGlkIGJsdWUgIWltcG9ydGFudDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5wcmljaW5nLXNsaWRlciA+IGRpdiA+IG56LXNsaWRlci1tYXJrcyA+IGRpdiA+IHNwYW4ge1xyXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xyXG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICBkaXNwbGF5OiBub25lO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnByaWNpbmctc2xpZGVyID4gZGl2IHtcclxuICBtYXJnaW4tYm90dG9tOiAwO1xyXG59XHJcbiJdfQ== */"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/pricing/pricing.component.ts":
/*!****************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/pricing/pricing.component.ts ***!
  \****************************************************************************************/
/*! exports provided: PricingComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PricingComponent", function() { return PricingComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location.model */ "./src/app/shared/popups/general-location-info-popup/models/location.model.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location-ref-data.const */ "./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var PricingComponent = /** @class */ (function () {
    function PricingComponent(store, formBuilder) {
        this.store = store;
        this.formBuilder = formBuilder;
        this.moreInfoForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormGroup"]({});
        this.location = new _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_3__["LocationModel"]();
        this.marks = { 0: 'Poor', 20: 'Below average', 35: 'Average Minus', 50: 'Average', 65: 'Average Plus', 80: 'Above Average', 100: 'Good' };
        // this.store.select(selectPopUp).subscribe(
        //   data => this.location = Object.assign({}, data.location)
        // )
    }
    PricingComponent.prototype.ngOnInit = function () {
        this.initializeData();
        this.moreInfoForm = this.formBuilder.group({
            'yearBuilt': [this.location.yearBuilt],
            'isAggregation': [this.location.isAggregation,],
            'numberOfStories': [this.location.numberOfStories,],
            'numberOfBuilding': [this.location.numberOfBuilding,],
            'largerUnitCapacity': [this.location.largestUnitCapacity,],
        });
    };
    PricingComponent.prototype.validateFormControl = function (controName) {
        var control = this.moreInfoForm.get(controName);
        return control.invalid && control.touched;
    };
    PricingComponent.prototype.onSubmit = function () {
    };
    PricingComponent.prototype.checkMondatory = function (ev, fieldCode) {
        if (this.mondatories[fieldCode] !== undefined)
            this.mondatories[fieldCode] = !ev;
    };
    PricingComponent.prototype.getReferenceData = function (fieldCode) {
        return _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_4__["LOCATION_REFERENCE_DATA"].get(fieldCode);
    };
    PricingComponent.prototype.initializeData = function () {
        this.tabModel.header.content[0].value = this.locationData['asset_quality'] ? this.getMarkValue(this.locationData['asset_quality']) : 0;
        this.tabModel.header.content[1].value = this.locationData['bi_mitigation'] ? this.getMarkValue(this.locationData['bi_mitigation']) : 0;
        this.tabModel.header.content[2].value = this.locationData['mb_quality'] ? this.getMarkValue(this.locationData['mb_quality']) : 0;
    };
    PricingComponent.prototype.getMarkValue = function (value) {
        switch (value) {
            case 'Poor': return 0;
            case 'Below average': return 20;
            case 'Average Minus': return 35;
            case 'Average': return 50;
            case 'Average Plus': return 65;
            case 'Above Average': return 80;
            case 'Good': return 100;
        }
    };
    PricingComponent.prototype.onChangeValue = function (item) {
        this.locationData[item.field_code] = this.marks[item.value];
    };
    PricingComponent.prototype.getPlaceHolder = function (item) {
        switch (this.multiple[item.field_code]) {
            case true: return "Multiple";
            default: return item.label;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PricingComponent.prototype, "tabModel", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PricingComponent.prototype, "locationData", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PricingComponent.prototype, "mondatories", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PricingComponent.prototype, "multiple", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PricingComponent.prototype, "isMultipleEdit", void 0);
    PricingComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-pricing',
            template: __webpack_require__(/*! ./pricing.component.html */ "./src/app/shared/popups/general-location-info-popup/pricing/pricing.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./pricing.component.scss */ "./src/app/shared/popups/general-location-info-popup/pricing/pricing.component.scss")]
        }),
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"], _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormBuilder"]])
    ], PricingComponent);
    return PricingComponent;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/store-part/load-pop-up.actions.ts":
/*!*********************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/store-part/load-pop-up.actions.ts ***!
  \*********************************************************************************************/
/*! exports provided: LoadPopUpActionTypes, LoadLoadPopUps, LoadAlertPopUps, LocationPopupVisibility */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadPopUpActionTypes", function() { return LoadPopUpActionTypes; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadLoadPopUps", function() { return LoadLoadPopUps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadAlertPopUps", function() { return LoadAlertPopUps; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LocationPopupVisibility", function() { return LocationPopupVisibility; });
var LoadPopUpActionTypes;
(function (LoadPopUpActionTypes) {
    LoadPopUpActionTypes["LoadLoadPopUps"] = "[LoadPopUp] Load LoadPopUps";
    LoadPopUpActionTypes["LoadAlertPopUps"] = "[LoadAlertPopUp] Load AlertPopUps";
    LoadPopUpActionTypes["LocationPopup"] = "[LocationPopup] Location Popup";
})(LoadPopUpActionTypes || (LoadPopUpActionTypes = {}));
var LoadLoadPopUps = /** @class */ (function () {
    function LoadLoadPopUps(payload) {
        this.payload = payload;
        this.type = LoadPopUpActionTypes.LoadLoadPopUps;
    }
    return LoadLoadPopUps;
}());

var LoadAlertPopUps = /** @class */ (function () {
    function LoadAlertPopUps(payload) {
        this.payload = payload;
        this.type = LoadPopUpActionTypes.LoadAlertPopUps;
    }
    return LoadAlertPopUps;
}());

var LocationPopupVisibility = /** @class */ (function () {
    function LocationPopupVisibility(payload) {
        this.payload = payload;
        this.type = LoadPopUpActionTypes.LocationPopup;
    }
    return LocationPopupVisibility;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/store-part/load-pop-up.reducer.ts":
/*!*********************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/store-part/load-pop-up.reducer.ts ***!
  \*********************************************************************************************/
/*! exports provided: LoadPopUpState, initialState, LoadPopUpReducer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadPopUpState", function() { return LoadPopUpState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initialState", function() { return initialState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoadPopUpReducer", function() { return LoadPopUpReducer; });
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location.model */ "./src/app/shared/popups/general-location-info-popup/models/location.model.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_store_part_load_pop_up_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/store-part/load-pop-up.actions */ "./src/app/shared/popups/general-location-info-popup/store-part/load-pop-up.actions.ts");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};


var LoadPopUpState = /** @class */ (function () {
    function LoadPopUpState() {
        this.location = new _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_0__["LocationModel"]();
    }
    return LoadPopUpState;
}());

var initialState = new LoadPopUpState();
function LoadPopUpReducer(state, action) {
    if (state === void 0) { state = initialState; }
    switch (action.type) {
        case _app_shared_popups_general_location_info_popup_store_part_load_pop_up_actions__WEBPACK_IMPORTED_MODULE_1__["LoadPopUpActionTypes"].LoadLoadPopUps:
            return action.payload;
        case _app_shared_popups_general_location_info_popup_store_part_load_pop_up_actions__WEBPACK_IMPORTED_MODULE_1__["LoadPopUpActionTypes"].LoadAlertPopUps:
            return action.payload.alertInfo;
        case _app_shared_popups_general_location_info_popup_store_part_load_pop_up_actions__WEBPACK_IMPORTED_MODULE_1__["LoadPopUpActionTypes"].LocationPopup:
            return __assign({}, state, { locationPopupVisibility: action.payload });
        default:
            return state;
    }
}


/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/store-part/load-pop-up.selectors.ts":
/*!***********************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/store-part/load-pop-up.selectors.ts ***!
  \***********************************************************************************************/
/*! exports provided: selectPopupVisibility */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "selectPopupVisibility", function() { return selectPopupVisibility; });
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_store_dcm_state__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/dcm/store/dcm.state */ "./src/app/dcm/store/dcm.state.ts");


var selectPopupVisibility = Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_0__["createSelector"])(_app_dcm_store_dcm_state__WEBPACK_IMPORTED_MODULE_1__["selectDcm"], function (state) {
    // console.log('My State', state);
    return state.popUp.locationPopupVisibility;
});


/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/tand-C/deductible-checkbox/deductible-checkbox.component.css":
/*!************************************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/tand-C/deductible-checkbox/deductible-checkbox.component.css ***!
  \************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "::ng-deep .tand-c-checkbox .ant-checkbox-checked .ant-checkbox-inner {\r\n  background-color: blue;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvdGFuZC1DL2RlZHVjdGlibGUtY2hlY2tib3gvZGVkdWN0aWJsZS1jaGVja2JveC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usc0JBQXNCO0FBQ3hCIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvdGFuZC1DL2RlZHVjdGlibGUtY2hlY2tib3gvZGVkdWN0aWJsZS1jaGVja2JveC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOjpuZy1kZWVwIC50YW5kLWMtY2hlY2tib3ggLmFudC1jaGVja2JveC1jaGVja2VkIC5hbnQtY2hlY2tib3gtaW5uZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IGJsdWU7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/tand-C/deductible-checkbox/deductible-checkbox.component.html":
/*!*************************************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/tand-C/deductible-checkbox/deductible-checkbox.component.html ***!
  \*************************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"margin-bottom: 15px\">\r\n  <ng-container [ngTemplateOutlet]=\"model.itemsLabel.checkbox ? checkboxItem : label\"></ng-container>\r\n  <ng-template #checkboxItem>\r\n    <label class=\"tand-c-checkbox\" nz-checkbox [(ngModel)]=\"model.itemsLabel.checked\">{{model.itemsLabel.label}}</label>\r\n  </ng-template>\r\n  <ng-template #label>\r\n    <span>{{model.itemsLabel.label}}</span>\r\n  </ng-template>\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/tand-C/deductible-checkbox/deductible-checkbox.component.ts":
/*!***********************************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/tand-C/deductible-checkbox/deductible-checkbox.component.ts ***!
  \***********************************************************************************************************************/
/*! exports provided: DeductibleCheckboxComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeductibleCheckboxComponent", function() { return DeductibleCheckboxComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

var DeductibleCheckboxComponent = /** @class */ (function () {
    function DeductibleCheckboxComponent() {
    }
    DeductibleCheckboxComponent.prototype.ngOnInit = function () {
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], DeductibleCheckboxComponent.prototype, "model", void 0);
    DeductibleCheckboxComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-deductible-checkbox',
            template: __webpack_require__(/*! ./deductible-checkbox.component.html */ "./src/app/shared/popups/general-location-info-popup/tand-C/deductible-checkbox/deductible-checkbox.component.html"),
            styles: [__webpack_require__(/*! ./deductible-checkbox.component.css */ "./src/app/shared/popups/general-location-info-popup/tand-C/deductible-checkbox/deductible-checkbox.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], DeductibleCheckboxComponent);
    return DeductibleCheckboxComponent;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/tand-C/deductible-item/deductible-item.component.css":
/*!****************************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/tand-C/deductible-item/deductible-item.component.css ***!
  \****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "input {\r\n  border-left: none;\r\n  border-right: none;\r\n  border-top: none;\r\n  outline: 0;\r\n  border-width: 0px 0 1px;\r\n  border-color: rgb(43, 43, 255);\r\n  border-radius: 0;\r\n  font-size: 12px !important;\r\n  color: rgb(43, 43, 255) !important;\r\n\r\n}\r\n\r\ninput:focus {\r\n  border-left: none;\r\n  border-right: none;\r\n  border-top: none;\r\n  border-color: rgb(43, 43, 255);\r\n  outline : none;\r\n  box-shadow: 0 0 0 0 ;\r\n  color: rgb(43, 43, 255) !important;\r\n\r\n}\r\n\r\ninput::-webkit-input-placeholder {\r\n  color: blue;\r\n}\r\n\r\ninput:-ms-input-placeholder {\r\n  color: blue;\r\n}\r\n\r\ninput::-ms-input-placeholder {\r\n  color: blue;\r\n}\r\n\r\ninput::placeholder {\r\n  color: blue;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvdGFuZC1DL2RlZHVjdGlibGUtaXRlbS9kZWR1Y3RpYmxlLWl0ZW0uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLFVBQVU7RUFDVix1QkFBdUI7RUFDdkIsOEJBQThCO0VBQzlCLGdCQUFnQjtFQUNoQiwwQkFBMEI7RUFDMUIsa0NBQWtDOztBQUVwQzs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLDhCQUE4QjtFQUM5QixjQUFjO0VBQ2Qsb0JBQW9CO0VBQ3BCLGtDQUFrQzs7QUFFcEM7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRkE7RUFDRSxXQUFXO0FBQ2I7O0FBRkE7RUFDRSxXQUFXO0FBQ2I7O0FBRkE7RUFDRSxXQUFXO0FBQ2IiLCJmaWxlIjoic3JjL2FwcC9zaGFyZWQvcG9wdXBzL2dlbmVyYWwtbG9jYXRpb24taW5mby1wb3B1cC90YW5kLUMvZGVkdWN0aWJsZS1pdGVtL2RlZHVjdGlibGUtaXRlbS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW5wdXQge1xyXG4gIGJvcmRlci1sZWZ0OiBub25lO1xyXG4gIGJvcmRlci1yaWdodDogbm9uZTtcclxuICBib3JkZXItdG9wOiBub25lO1xyXG4gIG91dGxpbmU6IDA7XHJcbiAgYm9yZGVyLXdpZHRoOiAwcHggMCAxcHg7XHJcbiAgYm9yZGVyLWNvbG9yOiByZ2IoNDMsIDQzLCAyNTUpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDA7XHJcbiAgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7XHJcbiAgY29sb3I6IHJnYig0MywgNDMsIDI1NSkgIWltcG9ydGFudDtcclxuXHJcbn1cclxuXHJcbmlucHV0OmZvY3VzIHtcclxuICBib3JkZXItbGVmdDogbm9uZTtcclxuICBib3JkZXItcmlnaHQ6IG5vbmU7XHJcbiAgYm9yZGVyLXRvcDogbm9uZTtcclxuICBib3JkZXItY29sb3I6IHJnYig0MywgNDMsIDI1NSk7XHJcbiAgb3V0bGluZSA6IG5vbmU7XHJcbiAgYm94LXNoYWRvdzogMCAwIDAgMCA7XHJcbiAgY29sb3I6IHJnYig0MywgNDMsIDI1NSkgIWltcG9ydGFudDtcclxuXHJcbn1cclxuXHJcbmlucHV0OjpwbGFjZWhvbGRlciB7XHJcbiAgY29sb3I6IGJsdWU7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/tand-C/deductible-item/deductible-item.component.html":
/*!*****************************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/tand-C/deductible-item/deductible-item.component.html ***!
  \*****************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<nz-row >\r\n  <ng-container *ngFor=\"let it of model\">\r\n    <nz-col [nzSpan]=\"it.colSpan\" style=\"margin-bottom: 10px;font-weight: bold\">\r\n      <ng-container [ngTemplateOutlet]=\"it.itemsLabel.checkbox ? checkboxItem : label\"></ng-container>\r\n      <ng-template #checkboxItem>\r\n        <label class=\"tand-c-checkbox\" nz-checkbox [(ngModel)]=\"it.itemsLabel.checked\">{{it.itemsLabel.label}}</label>\r\n      </ng-template>\r\n      <ng-template #label>\r\n        <span>{{it.itemsLabel.label}}</span>\r\n      </ng-template>\r\n    </nz-col>\r\n  </ng-container>\r\n</nz-row>\r\n<nz-row style=\"padding: 0 0 0 5px\">\r\n  <ng-container *ngFor=\"let it of model\">\r\n    <nz-col [nzSpan]=\"it.colSpan\" style=\"padding: 0 0 0 10px\">\r\n      <ng-container [ngTemplateOutlet]=\"it.itemsLabel.checkbox ? checkboxItem : label\"></ng-container>\r\n      <ng-template #checkboxItem>\r\n        <ng-container [ngTemplateOutlet]=\"it.itemsLabel.checked ? defaultItem : withChildren\">\r\n          <ng-template #withChildren>\r\n            <anms-deductible-item [model]=\"it.childs\" [locationData]=\"locationData\"></anms-deductible-item>\r\n          </ng-template>\r\n          <ng-template #defaultItem>\r\n            <nz-col *ngFor=\"let valItem of it.items\"  [nzSpan]=\"valItem.colSpan\" [nzOffset]=\"valItem.offset ? valItem.offset : 0\" style=\"margin-bottom: 20px\">\r\n              <ng-container [ngSwitch]=\"valItem.type\">\r\n                <nz-select  [nzPlaceHolder]=\"valItem.label\" nzShowSearch nzAllowClear nzCustomContent *ngSwitchCase=\"'list'\" class=\"my-select\"\r\n                            [(ngModel)]=\"locationData[valItem.field_code]\"\r\n                            [disabled]=\"valItem.disabled\"  style=\"background-color: #f4f6fc;width: 100%;\">\r\n                  <nz-option nzLabel={{o}} nzValue={{o}}\r\n                             *ngFor=\"let o of getReferenceData(valItem.field_code)\">\r\n                    {{o}}\r\n                  </nz-option>\r\n                </nz-select>\r\n                <input *ngSwitchDefault [type]=\"['Value', 'FI / 100%', 'Min Amount', 'Max Amount'].includes(valItem.label) ? 'number' : 'text'\" [(ngModel)]=\"locationData[valItem.field_code]\"\r\n                       [placeholder]=\"valItem.label\" style=\"background-color: #f4f6fc;height: 30px;width: 100%;padding-left: 11px\" />\r\n              </ng-container>\r\n            </nz-col>\r\n          </ng-template>\r\n        </ng-container>\r\n      </ng-template>\r\n      <ng-template #label>\r\n        <nz-col *ngFor=\"let valItem of it.items\"  [nzSpan]=\"valItem.colSpan\" [nzOffset]=\"valItem.offset ? valItem.offset : 0\" style=\"margin-bottom: 20px\">\r\n          <ng-container [ngSwitch]=\"valItem.type\">\r\n            <nz-select  [nzPlaceHolder]=\"valItem.label\" nzShowSearch nzAllowClear nzCustomContent *ngSwitchCase=\"'list'\" class=\"my-select\"\r\n                        [(ngModel)]=\"locationData[valItem.field_code]\"\r\n                        [disabled]=\"valItem.disabled\"  style=\"background-color: #f4f6fc;width: 100%;\">\r\n              <nz-option nzLabel={{o}} nzValue={{o}}\r\n                         *ngFor=\"let o of getReferenceData(valItem.field_code)\">\r\n                {{o}}\r\n              </nz-option>\r\n            </nz-select>\r\n            <input *ngSwitchDefault [type]=\"['Value', 'FI / 100%', 'Min Amount', 'Max Amount'].includes(valItem.label) ? 'number' : 'text'\"  [(ngModel)]=\"locationData[valItem.field_code]\"\r\n                   [placeholder]=\"valItem.label\" style=\"background-color: #f4f6fc;height: 30px;width: 100%;padding-left: 11px\" />\r\n          </ng-container>\r\n        </nz-col>\r\n      </ng-template>\r\n    </nz-col>\r\n  </ng-container>\r\n</nz-row>\r\n"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/tand-C/deductible-item/deductible-item.component.ts":
/*!***************************************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/tand-C/deductible-item/deductible-item.component.ts ***!
  \***************************************************************************************************************/
/*! exports provided: DeductibleItemComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DeductibleItemComponent", function() { return DeductibleItemComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location-ref-data.const */ "./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var DeductibleItemComponent = /** @class */ (function () {
    function DeductibleItemComponent() {
    }
    DeductibleItemComponent.prototype.ngOnInit = function () {
    };
    DeductibleItemComponent.prototype.getReferenceData = function (fieldCode) {
        return _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_1__["LOCATION_REFERENCE_DATA"].get(fieldCode);
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], DeductibleItemComponent.prototype, "model", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], DeductibleItemComponent.prototype, "locationData", void 0);
    DeductibleItemComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-deductible-item',
            template: __webpack_require__(/*! ./deductible-item.component.html */ "./src/app/shared/popups/general-location-info-popup/tand-C/deductible-item/deductible-item.component.html"),
            styles: [__webpack_require__(/*! ./deductible-item.component.css */ "./src/app/shared/popups/general-location-info-popup/tand-C/deductible-item/deductible-item.component.css")]
        }),
        __metadata("design:paramtypes", [])
    ], DeductibleItemComponent);
    return DeductibleItemComponent;
}());



/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/tand-C/tand-C-C.component.html":
/*!******************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/tand-C/tand-C-C.component.html ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<nz-tabset>\r\n    <nz-tab  *ngFor=\"let tab of tabModel\" [nzTitle]=\"tabTitle\" >\r\n      <ng-container *ngFor=\"let tabContent of tab.content\">\r\n        <div class=\"tand-C-tab-supheader\" style=\"background-color: white;padding: 25px;margin: 20px 20px;\">\r\n          <nz-row>\r\n            <nz-col>\r\n              <label class=\"tand-c-checkbox\" nz-checkbox style=\"font-size: 20px\" [(ngModel)]=\"tabContent.header.checked\">{{tabContent.header.label}}</label>\r\n            </nz-col>\r\n          </nz-row>\r\n          <nz-row *ngIf=\"tabContent.header.checked\">\r\n            <nz-col *ngFor=\"let child of tabContent.header.childs\" nzSpan=\"4\" nzOffset=\"1\">\r\n              <label class=\"tand-c-checkbox\" nz-checkbox [(ngModel)]=\"child.checked\">{{child.label}}</label>\r\n            </nz-col>\r\n          </nz-row>\r\n        </div>\r\n        <div class=\"insured-tab-content\" style=\"margin: 0 20px;\" *ngIf=\"tabContent.header.checked\">\r\n          <nz-row>\r\n<!--            limit-->\r\n            <nz-col [nzSpan]=\"8\" style=\"background-color: white;padding: 30px;height: 100%\">\r\n              <div style=\"margin-bottom: 10px\">\r\n                <span style=\"font-size: 18px;font-weight: bold;\">{{tabContent.body[0].label}}</span>\r\n              </div>\r\n              <div>\r\n                <nz-row>\r\n                  <nz-col *ngFor=\"let valItem of tabContent.body[0].items\"  [nzSpan]=\"valItem.colSpan\" [nzOffset]=\"valItem.offset ? valItem.offset : 0\" style=\"margin-bottom: 20px\">\r\n                    <ng-container [ngSwitch]=\"valItem.type\">\r\n                      <nz-select  [nzPlaceHolder]=\"getPlaceHolder(valItem)\" nzShowSearch nzAllowClear nzCustomContent *ngSwitchCase=\"'list'\" class=\"my-select\"\r\n                                  [(ngModel)]=\"locationData[valItem.field_code]\"\r\n                                  [disabled]=\"valItem.disabled\"  style=\"background-color: #f4f6fc;width: 100%;\">\r\n                        <nz-option nzLabel={{o}} nzValue={{o}}\r\n                                   *ngFor=\"let o of getReferenceData(valItem.field_code)\">\r\n                          {{o}}\r\n                        </nz-option>\r\n                      </nz-select>\r\n                      <input *ngSwitchDefault [type]=\"['Value', 'FI / 100%'].includes(valItem.label) ? 'number' : 'text'\" [(ngModel)]=\"locationData[valItem.field_code]\"\r\n                             [placeholder]=\"getPlaceHolder(valItem)\" style=\"background-color: #f4f6fc;height: 30px;width: 100%;padding-left: 11px\" />\r\n                    </ng-container>\r\n                  </nz-col>\r\n                </nz-row>\r\n              </div>\r\n            </nz-col>\r\n<!--            Deductible-->\r\n            <nz-col  [nzSpan]=\"15\" [nzOffset]=\"1\" style=\"background-color: white;padding: 30px\">\r\n              <div style=\"margin-bottom: 10px\">\r\n                <span style=\"font-size: 18px;font-weight: bold;\">{{tabContent.body[1].label}}</span>\r\n              </div>\r\n              <div>\r\n<!--                First row-->\r\n                <nz-row style=\"margin-bottom: 10px\">\r\n                  <nz-col *ngFor=\"let valItem of tabContent.body[1].subContent.header.items\"  [nzSpan]=\"valItem.colSpan\" [nzOffset]=\"valItem.offset ? valItem.offset : 0\">\r\n                    <input [type]=\"valItem.label === 'FI / 100%' ? 'number' : 'text'\" [placeholder]=\"getPlaceHolder(valItem)\" nzSize=\"large\" style=\"background-color: #f4f6fc;height: 30px;width: 100%;padding-left: 11px\" />\r\n                  </nz-col>\r\n                </nz-row>\r\n<!--                Deductible body-->\r\n                <nz-row>\r\n                  <anms-deductible-item [model]=\"[tabContent.body[1].subContent.body]\" [locationData]=\"locationData\"></anms-deductible-item>\r\n                </nz-row>\r\n              </div>\r\n            </nz-col>\r\n          </nz-row>\r\n        </div>\r\n      </ng-container>\r\n      <ng-template #tabTitle>\r\n        <nz-row>\r\n          <nz-col nzSpan=\"5\" style=\"height: 55px\">\r\n            <img [src]=\"tab.supHeader.icon\" style=\"width: 100%;height: 100%\">\r\n          </nz-col>\r\n          <nz-col nzSpan=\"18\" nzOffset=\"1\" style=\"height: 55px\">\r\n            <span>{{tab.supHeader.label}}</span>\r\n          </nz-col>\r\n        </nz-row>\r\n      </ng-template>\r\n    </nz-tab>\r\n  </nz-tabset>\r\n<!--</div>-->\r\n"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/tand-C/tand-C-C.component.scss":
/*!******************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/tand-C/tand-C-C.component.scss ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "input {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  outline: 0;\n  border-width: 0px 0 1px;\n  border-color: #2b2bff;\n  border-radius: 0;\n  font-size: 12px !important;\n  color: #2b2bff !important; }\n\ninput:focus {\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  border-color: #2b2bff;\n  outline: none;\n  box-shadow: 0 0 0 0;\n  color: #2b2bff !important; }\n\ninput::-webkit-input-placeholder {\n  color: blue; }\n\ninput:-ms-input-placeholder {\n  color: blue; }\n\ninput::-ms-input-placeholder {\n  color: blue; }\n\ninput::placeholder {\n  color: blue; }\n\ninput[type=number]::-webkit-inner-spin-button,\ninput[type=number]::-webkit-outer-spin-button {\n  -webkit-appearance: none; }\n\ninput[type=number] {\n  -moz-appearance: textfield; }\n\n::ng-deep .tand-c-checkbox .ant-checkbox-checked .ant-checkbox-inner {\n  background-color: blue; }\n\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3BvcHVwcy9nZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXAvdGFuZC1DL0M6XFxGXFxKb2JzXFxkY21fZnJvbnQvc3JjXFxhcHBcXHNoYXJlZFxccG9wdXBzXFxnZW5lcmFsLWxvY2F0aW9uLWluZm8tcG9wdXBcXHRhbmQtQ1xcdGFuZC1DLUMuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGdCQUFnQjtFQUNoQixVQUFVO0VBQ1YsdUJBQXVCO0VBQ3ZCLHFCQUE4QjtFQUM5QixnQkFBZ0I7RUFDaEIsMEJBQTBCO0VBQzFCLHlCQUFrQyxFQUFBOztBQUlwQztFQUNFLGlCQUFpQjtFQUNqQixrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLHFCQUE4QjtFQUM5QixhQUFjO0VBQ2QsbUJBQW9CO0VBQ3BCLHlCQUFrQyxFQUFBOztBQUlwQztFQUNFLFdBQVcsRUFBQTs7QUFEYjtFQUNFLFdBQVcsRUFBQTs7QUFEYjtFQUNFLFdBQVcsRUFBQTs7QUFEYjtFQUNFLFdBQVcsRUFBQTs7QUFHYjs7RUFFRSx3QkFBd0IsRUFBQTs7QUFHMUI7RUFDRSwwQkFBMEIsRUFBQTs7QUFHNUI7RUFDRSxzQkFBc0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC9wb3B1cHMvZ2VuZXJhbC1sb2NhdGlvbi1pbmZvLXBvcHVwL3RhbmQtQy90YW5kLUMtQy5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlucHV0IHtcclxuICBib3JkZXItbGVmdDogbm9uZTtcclxuICBib3JkZXItcmlnaHQ6IG5vbmU7XHJcbiAgYm9yZGVyLXRvcDogbm9uZTtcclxuICBvdXRsaW5lOiAwO1xyXG4gIGJvcmRlci13aWR0aDogMHB4IDAgMXB4O1xyXG4gIGJvcmRlci1jb2xvcjogcmdiKDQzLCA0MywgMjU1KTtcclxuICBib3JkZXItcmFkaXVzOiAwO1xyXG4gIGZvbnQtc2l6ZTogMTJweCAhaW1wb3J0YW50O1xyXG4gIGNvbG9yOiByZ2IoNDMsIDQzLCAyNTUpICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG5pbnB1dDpmb2N1cyB7XHJcbiAgYm9yZGVyLWxlZnQ6IG5vbmU7XHJcbiAgYm9yZGVyLXJpZ2h0OiBub25lO1xyXG4gIGJvcmRlci10b3A6IG5vbmU7XHJcbiAgYm9yZGVyLWNvbG9yOiByZ2IoNDMsIDQzLCAyNTUpO1xyXG4gIG91dGxpbmUgOiBub25lO1xyXG4gIGJveC1zaGFkb3c6IDAgMCAwIDAgO1xyXG4gIGNvbG9yOiByZ2IoNDMsIDQzLCAyNTUpICFpbXBvcnRhbnQ7XHJcblxyXG59XHJcblxyXG5pbnB1dDo6cGxhY2Vob2xkZXIge1xyXG4gIGNvbG9yOiBibHVlO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPW51bWJlcl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXHJcbmlucHV0W3R5cGU9bnVtYmVyXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG5pbnB1dFt0eXBlPW51bWJlcl0ge1xyXG4gIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnRhbmQtYy1jaGVja2JveCAuYW50LWNoZWNrYm94LWNoZWNrZWQgLmFudC1jaGVja2JveC1pbm5lciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcclxufVxyXG4iXX0= */"

/***/ }),

/***/ "./src/app/shared/popups/general-location-info-popup/tand-C/tand-C.component.ts":
/*!**************************************************************************************!*\
  !*** ./src/app/shared/popups/general-location-info-popup/tand-C/tand-C.component.ts ***!
  \**************************************************************************************/
/*! exports provided: TandCComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TandCComponent", function() { return TandCComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/dcm/store/dcm.selectors */ "./src/app/dcm/store/dcm.selectors.ts");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location.model */ "./src/app/shared/popups/general-location-info-popup/models/location.model.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location-ref-data.const */ "./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};






var TandCComponent = /** @class */ (function () {
    function TandCComponent(store, formBuilder) {
        var _this = this;
        this.store = store;
        this.formBuilder = formBuilder;
        this.moreInfoForm = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormGroup"]({});
        this.location = new _app_shared_popups_general_location_info_popup_models_location_model__WEBPACK_IMPORTED_MODULE_4__["LocationModel"]();
        this.store.select(_app_dcm_store_dcm_selectors__WEBPACK_IMPORTED_MODULE_2__["selectPopUp"]).subscribe(function (data) { return _this.location = Object.assign({}, data.location); });
    }
    TandCComponent.prototype.ngOnInit = function () {
        this.moreInfoForm = this.formBuilder.group({
            'yearBuilt': [this.location.yearBuilt],
            'isAggregation': [this.location.isAggregation,],
            'numberOfStories': [this.location.numberOfStories,],
            'numberOfBuilding': [this.location.numberOfBuilding,],
            'largerUnitCapacity': [this.location.largestUnitCapacity,],
        });
    };
    TandCComponent.prototype.validateFormControl = function (controName) {
        var control = this.moreInfoForm.get(controName);
        return control.invalid && control.touched;
    };
    TandCComponent.prototype.onSubmit = function () {
    };
    TandCComponent.prototype.getReferenceData = function (fieldCode) {
        return _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_5__["LOCATION_REFERENCE_DATA"].get(fieldCode);
    };
    TandCComponent.prototype.getPlaceHolder = function (item) {
        switch (this.multiple[item.field_code]) {
            case true: return "Multiple";
            default: return item.label;
        }
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], TandCComponent.prototype, "tabModel", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], TandCComponent.prototype, "locationData", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], TandCComponent.prototype, "multiple", void 0);
    TandCComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-tand-C',
            template: __webpack_require__(/*! ./tand-C-C.component.html */ "./src/app/shared/popups/general-location-info-popup/tand-C/tand-C-C.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./tand-C-C.component.scss */ "./src/app/shared/popups/general-location-info-popup/tand-C/tand-C-C.component.scss")]
        }),
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"]])
    ], TandCComponent);
    return TandCComponent;
}());



/***/ }),

/***/ "./src/app/shared/preview-grid/preview-grid.component.html":
/*!*****************************************************************!*\
  !*** ./src/app/shared/preview-grid/preview-grid.component.html ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div style=\"width: 100%; height: 100%; \">\r\n  <ag-grid-angular\r\n    style=\"width: 100%; height: 100%\"\r\n    class=\"ag-theme-balham\"\r\n    [sideBar]=\"sideBar\"\r\n    [modules]=\"modules\"\r\n    [gridOptions]=\"gridOptions\"\r\n    \r\n    [rowData]=\"rowsData\"\r\n    [columnDefs]=\"columnDefs\"\r\n    \r\n    [defaultColDef]=\"defaultColDef\"\r\n    [pagination]=\"true\"\r\n    [suppressPaginationPanel]=\"true\"\r\n    [paginationPageSize]=\"paginationPageSize\"\r\n    [enterMovesDown]=\"true\"\r\n    [enterMovesDownAfterEdit]=\"true\"\r\n\r\n    (cellValueChanged)=\"onCellValueChanged($event)\"\r\n    (cellFocused)=\"onCellFocused($event)\"\r\n    (cellClicked)=\"onCellClicked($event)\"\r\n\r\n    (paginationChanged)=\"onPaginationChanged($event)\"\r\n    (gridReady)=\"onGridReady($event)\"\r\n  >\r\n  </ag-grid-angular>\r\n<!-- \r\n    [loadingCellRenderer]=\"loadingCellRenderer\"\r\n    [loadingCellRendererParams]=\"loadingCellRendererParams\"\r\n  -->\r\n  <div class=\"test-header\">\r\n\r\n    <ul class=\"pagination\" style=\"margin-top: 5px; display: inline-block; float: right;\">\r\n      <li *ngIf=\"currentPage != 1\"><a id=\"idFirst\" (click)=\"onBtFirst()\"><i class=\"fa  fa-step-backward fa-fw\"\r\n                                                                            aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage == 1\"><a id=\"idFirsta\"><i id=\"idFirstOne\" class=\"fa  fa-step-backward fa-fw\"\r\n                                                       aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage != 1\"><a id=\"idPreview\" (click)=\"onBtPrevious()\"><i class=\"fa fa-chevron-left fa-fw\"\r\n                                                                                 aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage == 1\"><a id=\"idPreview\"><i id=\"idPreviewOne\" class=\" fa fa-chevron-left fa-fw\"\r\n                                                        aria-hidden=\"true\"></i></a></li>\r\n\r\n\r\n      <li *ngIf=\"currentPage==pageFirst\">\r\n        <a id=\"idOne\" class=\"active\">{{currentPage}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage==pageFirst && pageLast - currentPage > 0\" (click)=\"onBtSpecifiquePage(currentPage + 1)\">\r\n        <a id=\"idOne\">{{currentPage + 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage==pageFirst && pageLast - currentPage - 1 > 0\"\r\n          (click)=\"onBtSpecifiquePage(currentPage + 2)\">\r\n        <a id=\"idOne\">{{currentPage + 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage==pageFirst && pageLast - currentPage - 2 > 0\"\r\n          (click)=\"onBtSpecifiquePage(currentPage + 3)\">\r\n        <a id=\"idOne\">{{currentPage + 3}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage==pageFirst && pageLast - currentPage - 3 > 0\"\r\n          (click)=\"onBtSpecifiquePage(currentPage + 4)\">\r\n        <a id=\"idOne\">{{currentPage + 4}}</a>\r\n      </li>\r\n\r\n\r\n      <li *ngIf=\"currentPage == 2\">\r\n        <a id=\"idOne\" (click)=\"onBtFirst()\">{{currentPage - 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 2\">\r\n        <a id=\"idOne\" class=\"active\">{{currentPage}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 2 && pageLast - currentPage > 0\" (click)=\"onBtSpecifiquePage(currentPage + 1)\">\r\n        <a id=\"idOne\">{{currentPage + 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 2 && pageLast - currentPage - 1 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 2)\">\r\n        <a id=\"idOne\">{{currentPage + 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 2 && pageLast - currentPage - 2 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 3)\">\r\n        <a id=\"idOne\">{{currentPage + 3}}</a>\r\n      </li>\r\n\r\n\r\n      <li *ngIf=\"currentPage == 3\" (click)=\"onBtSpecifiquePage(currentPage - 1)\">\r\n        <a id=\"idOne\">{{currentPage - 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 3\" (click)=\"onBtSpecifiquePage(currentPage - 1)\">\r\n        <a id=\"idOne\">{{currentPage - 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 3\">\r\n        <a id=\"idOne\" class=\"active\">{{currentPage}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 3 && pageLast - currentPage - 1 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 2)\">\r\n        <a id=\"idOne\">{{currentPage + 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 3 && pageLast - currentPage - 2 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 3)\">\r\n        <a id=\"idOne\">{{currentPage + 3}}</a></li>\r\n\r\n\r\n      <li\r\n        *ngIf=\"currentPage!=pageFirst && currentPage - 3 > 0  && pageLast - currentPage != 2 && pageLast - currentPage != 1  && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\"\r\n        (click)=\"onBtSpecifiquePage(currentPage -2)\">\r\n        <a id=\"idOne\">{{currentPage - 2}}</a>\r\n      </li>\r\n      <li\r\n        *ngIf=\"currentPage!=pageFirst && currentPage - 3 > 0  && pageLast - currentPage != 2 && pageLast - currentPage != 1  && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\"\r\n        (click)=\"onBtSpecifiquePage(currentPage - 1)\">\r\n        <a id=\"idOne\">{{currentPage - 1}}</a>\r\n      </li>\r\n      <li\r\n        *ngIf=\"currentPage!=pageFirst && currentPage - 3 > 0  && pageLast - currentPage != 2 && pageLast - currentPage != 1  && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\">\r\n        <a id=\"idOne\" class=\"active\">{{currentPage}}</a>\r\n      </li>\r\n\r\n      <li\r\n        *ngIf=\"pageLast - currentPage - 2 > 0 && currentPage != 1 && currentPage != 2 && currentPage != 3 && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\"\r\n        (click)=\"onBtSpecifiquePage(currentPage + 1)\">\r\n        <a id=\"idOne\">{{currentPage + 1}}</a>\r\n      </li>\r\n      <li\r\n        *ngIf=\"pageLast - currentPage - 2 > 0  && currentPage != 1 && currentPage != 2 && currentPage != 3 && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\"\r\n        (click)=\"onBtSpecifiquePage(currentPage + 2)\">\r\n        <a id=\"idOne\">{{currentPage + 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 2)\"><a\r\n        id=\"idOne\">{{currentPage - 2}}</a></li>\r\n      <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 1)\"><a\r\n        id=\"idOne\">{{currentPage - 1}}</a></li>\r\n      <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\"><a id=\"idOne\" class=\"active\">{{currentPage}}</a></li>\r\n      <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage + 1)\"><a\r\n        id=\"idOne\">{{currentPage + 1}}</a></li>\r\n      <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage + 2)\"><a\r\n        id=\"idOne\">{{currentPage + 2}}</a></li>\r\n\r\n      <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\"\r\n                                                                 (click)=\"onBtSpecifiquePage(currentPage - 3)\">{{currentPage - 3}}</a>\r\n      </li>\r\n      <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\"\r\n                                                                 (click)=\"onBtSpecifiquePage(currentPage - 2)\">{{currentPage - 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\"\r\n                                                                 (click)=\"onBtSpecifiquePage(currentPage - 1)\">{{currentPage - 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\" class=\"active\">{{currentPage}}</a></li>\r\n      <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\"\r\n                                                                 (click)=\"onBtSpecifiquePage(currentPage + 1)\">{{currentPage + 1}}</a>\r\n      </li>\r\n\r\n      <li *ngIf=\"currentPage == pageLast && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 4)\"><a\r\n        id=\"idOne\">{{currentPage - 4}}</a></li>\r\n      <li *ngIf=\"currentPage == pageLast && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 3)\"><a\r\n        id=\"idOne\">{{currentPage - 3}}</a></li>\r\n      <li *ngIf=\"currentPage == pageLast && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 2)\"><a\r\n        id=\"idOne\">{{currentPage - 2}}</a></li>\r\n      <li *ngIf=\"currentPage == pageLast && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 1)\"><a\r\n        id=\"idOne\">{{currentPage - 1}}</a></li>\r\n      <li *ngIf=\"currentPage == pageLast\"><a id=\"idOne\" class=\"active\">{{currentPage}}</a></li>\r\n\r\n\r\n      <li *ngIf=\"currentPage != pageLast\"><a id=\"idNext\" (click)=\"onBtNext()\"><i class=\"fa fa-chevron-right fa-fw\"\r\n                                                                                 aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage == pageLast\"><a id=\"idNexta\"><i id=\"idNextL\" class=\"fa fa-chevron-right fa-fw\"\r\n                                                             aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage != pageLast\"><a id=\"idLast\" (click)=\"onBtLast()\"><i class=\"fa fa-step-forward fa-fw\"\r\n                                                                                 aria-hidden=\"true\"></i></a></li>\r\n    </ul>\r\n  </div>\r\n\r\n</div>\r\n"

/***/ }),

/***/ "./src/app/shared/preview-grid/preview-grid.component.scss":
/*!*****************************************************************!*\
  !*** ./src/app/shared/preview-grid/preview-grid.component.scss ***!
  \*****************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".ui-table-input {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  background: rgba(255, 0, 0, 0) !important; }\n\ninput {\n  height: 40px;\n  outline: none; }\n\n/*\r\n  Pagination design\r\n*/\n\nul.pagination {\n  display: inline-block;\n  padding: 0;\n  margin: 0; }\n\nul.pagination li {\n  display: inline; }\n\n.fa-step-backward,\n.fa-chevron-left,\n.fa-chevron-right,\n.fa-step-forward {\n  color: black; }\n\n#idFirstOne,\n#idPreviewOne,\n#idNextL,\n#idLastL {\n  color: #b4b3b3; }\n\nul.pagination li a {\n  color: #008B8B;\n  float: left;\n  padding: 5px 14px;\n  text-decoration: none;\n  border-radius: 5px; }\n\nul.pagination li a.active {\n  color: #20B2AA;\n  border-radius: 5px;\n  border-style: solid;\n  border-width: 1px 1px 1px 1px;\n  border-color: #20B2AA; }\n\nul.pagination li a:hover:not(.active) {\n  background-color: #ddd; }\n\n.ag-header-cell-label .ag-header-cell-text {\n  /*Force the width corresponding at how much width\r\n  we need once the text is laid out vertically*/\n  text-align: center;\n  float: center;\n  font-family: initial;\n  font-size: 25px; }\n\n.ag-pivot-off .ag-header-group-cell {\n  text-align: center;\n  font-family: initial;\n  font-size: 25px; }\n\n::ng-deep .ui-table-scrollable-wrapper {\n  height: 100% !important; }\n\n::ng-deep .ui-table-scrollable-view {\n  height: 100% !important;\n  display: -ms-flexbox !important;\n  display: flex !important;\n  -ms-flex-direction: column !important;\n      flex-direction: column !important; }\n\n::ng-deep .ui-table-scrollable-body {\n  -ms-flex: 1 1 0px !important;\n      flex: 1 1 0 !important; }\n\n::ng-deep .ui-table {\n  height: 100% !important;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-direction: column;\n      flex-direction: column; }\n\n::ng-deep .header-align {\n  text-align: left;\n  margin-left: 10px !important; }\n\n::ng-deep td.ng-star-inserted {\n  min-width: 200px !important; }\n\n::ng-deep th.ui-resizable-column.ng-star-inserted {\n  min-width: 200px !important; }\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3ByZXZpZXctZ3JpZC9DOlxcRlxcSm9ic1xcZGNtX2Zyb250L3NyY1xcYXBwXFxzaGFyZWRcXHByZXZpZXctZ3JpZFxccHJldmlldy1ncmlkLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9zaGFyZWQvcHJldmlldy1ncmlkL3ByZXZpZXctZ3JpZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFNBQVM7RUFDVCxVQUFVO0VBQ1YsU0FBUztFQUNULHlDQUF5QyxFQUFBOztBQUczQztFQUNFLFlBQVk7RUFDWixhQUFhLEVBQUE7O0FBR2Y7O0NDQUM7O0FER0Q7RUFDRSxxQkFBcUI7RUFDckIsVUFBVTtFQUNWLFNBQVMsRUFBQTs7QUFHWDtFQUNFLGVBQWUsRUFBQTs7QUFHakI7Ozs7RUFJRSxZQUFZLEVBQUE7O0FBR2Q7Ozs7RUFJRSxjQUF5QixFQUFBOztBQUczQjtFQUNFLGNBQWM7RUFDZCxXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLHFCQUFxQjtFQUNyQixrQkFBa0IsRUFBQTs7QUFHcEI7RUFDRSxjQUFjO0VBQ2Qsa0JBQWtCO0VBQ2xCLG1CQUFtQjtFQUNuQiw2QkFBNkI7RUFDN0IscUJBQXFCLEVBQUE7O0FBR3ZCO0VBQ0Usc0JBQXNCLEVBQUE7O0FBR3hCO0VBQ0U7K0NDUjZDO0VEVTdDLGtCQUFrQjtFQUNsQixhQUFhO0VBQ2Isb0JBQW9CO0VBQ3BCLGVBQWUsRUFBQTs7QUFFakI7RUFDRSxrQkFBa0I7RUFDbEIsb0JBQW9CO0VBQ3BCLGVBQWUsRUFBQTs7QUFHakI7RUFDRSx1QkFBdUIsRUFBQTs7QUFHekI7RUFDRSx1QkFBdUI7RUFDdkIsK0JBQXdCO0VBQXhCLHdCQUF3QjtFQUN4QixxQ0FBaUM7TUFBakMsaUNBQWlDLEVBQUE7O0FBR25DO0VBQ0UsNEJBQXNCO01BQXRCLHNCQUFzQixFQUFBOztBQUd4QjtFQUNFLHVCQUF1QjtFQUN2QixvQkFBYTtFQUFiLGFBQWE7RUFDYiwwQkFBc0I7TUFBdEIsc0JBQXNCLEVBQUE7O0FBR3hCO0VBQ0UsZ0JBQWdCO0VBQ2hCLDRCQUE0QixFQUFBOztBQUc5QjtFQUNFLDJCQUEyQixFQUFBOztBQUc3QjtFQUNFLDJCQUEyQixFQUFBIiwiZmlsZSI6InNyYy9hcHAvc2hhcmVkL3ByZXZpZXctZ3JpZC9wcmV2aWV3LWdyaWQuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudWktdGFibGUtaW5wdXQge1xyXG4gIG1hcmdpbjogMDtcclxuICBwYWRkaW5nOiAwO1xyXG4gIGJvcmRlcjogMDtcclxuICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMCwgMCwgMCkgIWltcG9ydGFudDtcclxufVxyXG5cclxuaW5wdXQge1xyXG4gIGhlaWdodDogNDBweDtcclxuICBvdXRsaW5lOiBub25lO1xyXG59XHJcblxyXG4vKlxyXG4gIFBhZ2luYXRpb24gZGVzaWduXHJcbiovXHJcbnVsLnBhZ2luYXRpb24ge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBwYWRkaW5nOiAwO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxudWwucGFnaW5hdGlvbiBsaSB7XHJcbiAgZGlzcGxheTogaW5saW5lO1xyXG59XHJcblxyXG4uZmEtc3RlcC1iYWNrd2FyZCxcclxuLmZhLWNoZXZyb24tbGVmdCxcclxuLmZhLWNoZXZyb24tcmlnaHQsXHJcbi5mYS1zdGVwLWZvcndhcmQge1xyXG4gIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuI2lkRmlyc3RPbmUsXHJcbiNpZFByZXZpZXdPbmUsXHJcbiNpZE5leHRMLFxyXG4jaWRMYXN0TCB7XHJcbiAgY29sb3I6IHJnYigxODAsIDE3OSwgMTc5KTtcclxufVxyXG5cclxudWwucGFnaW5hdGlvbiBsaSBhIHtcclxuICBjb2xvcjogIzAwOEI4QjtcclxuICBmbG9hdDogbGVmdDtcclxuICBwYWRkaW5nOiA1cHggMTRweDtcclxuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG59XHJcblxyXG51bC5wYWdpbmF0aW9uIGxpIGEuYWN0aXZlIHtcclxuICBjb2xvcjogIzIwQjJBQTtcclxuICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcclxuICBib3JkZXItd2lkdGg6IDFweCAxcHggMXB4IDFweDtcclxuICBib3JkZXItY29sb3I6ICMyMEIyQUE7XHJcbn1cclxuXHJcbnVsLnBhZ2luYXRpb24gbGkgYTpob3Zlcjpub3QoLmFjdGl2ZSkge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNkZGQ7XHJcbn1cclxuXHJcbi5hZy1oZWFkZXItY2VsbC1sYWJlbCAuYWctaGVhZGVyLWNlbGwtdGV4dCB7XHJcbiAgLypGb3JjZSB0aGUgd2lkdGggY29ycmVzcG9uZGluZyBhdCBob3cgbXVjaCB3aWR0aFxyXG4gIHdlIG5lZWQgb25jZSB0aGUgdGV4dCBpcyBsYWlkIG91dCB2ZXJ0aWNhbGx5Ki9cclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgZmxvYXQ6IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogaW5pdGlhbDtcclxuICBmb250LXNpemU6IDI1cHg7XHJcbn1cclxuLmFnLXBpdm90LW9mZiAuYWctaGVhZGVyLWdyb3VwLWNlbGwge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBmb250LWZhbWlseTogaW5pdGlhbDtcclxuICBmb250LXNpemU6IDI1cHg7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAudWktdGFibGUtc2Nyb2xsYWJsZS13cmFwcGVyIHtcclxuICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC51aS10YWJsZS1zY3JvbGxhYmxlLXZpZXcge1xyXG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xyXG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCAudWktdGFibGUtc2Nyb2xsYWJsZS1ib2R5IHtcclxuICBmbGV4OiAxIDEgMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLnVpLXRhYmxlIHtcclxuICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbjo6bmctZGVlcCAuaGVhZGVyLWFsaWduIHtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIG1hcmdpbi1sZWZ0OiAxMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCB0ZC5uZy1zdGFyLWluc2VydGVkIHtcclxuICBtaW4td2lkdGg6IDIwMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjo6bmctZGVlcCB0aC51aS1yZXNpemFibGUtY29sdW1uLm5nLXN0YXItaW5zZXJ0ZWQge1xyXG4gIG1pbi13aWR0aDogMjAwcHggIWltcG9ydGFudDtcclxufVxyXG4iLCIudWktdGFibGUtaW5wdXQge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGJvcmRlcjogMDtcbiAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDAsIDAsIDApICFpbXBvcnRhbnQ7IH1cblxuaW5wdXQge1xuICBoZWlnaHQ6IDQwcHg7XG4gIG91dGxpbmU6IG5vbmU7IH1cblxuLypcclxuICBQYWdpbmF0aW9uIGRlc2lnblxyXG4qL1xudWwucGFnaW5hdGlvbiB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgcGFkZGluZzogMDtcbiAgbWFyZ2luOiAwOyB9XG5cbnVsLnBhZ2luYXRpb24gbGkge1xuICBkaXNwbGF5OiBpbmxpbmU7IH1cblxuLmZhLXN0ZXAtYmFja3dhcmQsXG4uZmEtY2hldnJvbi1sZWZ0LFxuLmZhLWNoZXZyb24tcmlnaHQsXG4uZmEtc3RlcC1mb3J3YXJkIHtcbiAgY29sb3I6IGJsYWNrOyB9XG5cbiNpZEZpcnN0T25lLFxuI2lkUHJldmlld09uZSxcbiNpZE5leHRMLFxuI2lkTGFzdEwge1xuICBjb2xvcjogI2I0YjNiMzsgfVxuXG51bC5wYWdpbmF0aW9uIGxpIGEge1xuICBjb2xvcjogIzAwOEI4QjtcbiAgZmxvYXQ6IGxlZnQ7XG4gIHBhZGRpbmc6IDVweCAxNHB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDsgfVxuXG51bC5wYWdpbmF0aW9uIGxpIGEuYWN0aXZlIHtcbiAgY29sb3I6ICMyMEIyQUE7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgYm9yZGVyLXN0eWxlOiBzb2xpZDtcbiAgYm9yZGVyLXdpZHRoOiAxcHggMXB4IDFweCAxcHg7XG4gIGJvcmRlci1jb2xvcjogIzIwQjJBQTsgfVxuXG51bC5wYWdpbmF0aW9uIGxpIGE6aG92ZXI6bm90KC5hY3RpdmUpIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RkZDsgfVxuXG4uYWctaGVhZGVyLWNlbGwtbGFiZWwgLmFnLWhlYWRlci1jZWxsLXRleHQge1xuICAvKkZvcmNlIHRoZSB3aWR0aCBjb3JyZXNwb25kaW5nIGF0IGhvdyBtdWNoIHdpZHRoXHJcbiAgd2UgbmVlZCBvbmNlIHRoZSB0ZXh0IGlzIGxhaWQgb3V0IHZlcnRpY2FsbHkqL1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZsb2F0OiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBpbml0aWFsO1xuICBmb250LXNpemU6IDI1cHg7IH1cblxuLmFnLXBpdm90LW9mZiAuYWctaGVhZGVyLWdyb3VwLWNlbGwge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIGZvbnQtZmFtaWx5OiBpbml0aWFsO1xuICBmb250LXNpemU6IDI1cHg7IH1cblxuOjpuZy1kZWVwIC51aS10YWJsZS1zY3JvbGxhYmxlLXdyYXBwZXIge1xuICBoZWlnaHQ6IDEwMCUgIWltcG9ydGFudDsgfVxuXG46Om5nLWRlZXAgLnVpLXRhYmxlLXNjcm9sbGFibGUtdmlldyB7XG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW4gIWltcG9ydGFudDsgfVxuXG46Om5nLWRlZXAgLnVpLXRhYmxlLXNjcm9sbGFibGUtYm9keSB7XG4gIGZsZXg6IDEgMSAwICFpbXBvcnRhbnQ7IH1cblxuOjpuZy1kZWVwIC51aS10YWJsZSB7XG4gIGhlaWdodDogMTAwJSAhaW1wb3J0YW50O1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9XG5cbjo6bmctZGVlcCAuaGVhZGVyLWFsaWduIHtcbiAgdGV4dC1hbGlnbjogbGVmdDtcbiAgbWFyZ2luLWxlZnQ6IDEwcHggIWltcG9ydGFudDsgfVxuXG46Om5nLWRlZXAgdGQubmctc3Rhci1pbnNlcnRlZCB7XG4gIG1pbi13aWR0aDogMjAwcHggIWltcG9ydGFudDsgfVxuXG46Om5nLWRlZXAgdGgudWktcmVzaXphYmxlLWNvbHVtbi5uZy1zdGFyLWluc2VydGVkIHtcbiAgbWluLXdpZHRoOiAyMDBweCAhaW1wb3J0YW50OyB9XG4iXX0= */"

/***/ }),

/***/ "./src/app/shared/preview-grid/preview-grid.component.ts":
/*!***************************************************************!*\
  !*** ./src/app/shared/preview-grid/preview-grid.component.ts ***!
  \***************************************************************/
/*! exports provided: PreviewGridComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PreviewGridComponent", function() { return PreviewGridComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _ag_grid_community_all_modules__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ag-grid-community/all-modules */ "./node_modules/@ag-grid-community/all-modules/dist/es6/main.js");
/* harmony import */ var _app_dcm_modules_upload_containers_import_container_import_container_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/dcm/modules/upload/containers/import-container/import-container.component */ "./src/app/dcm/modules/upload/containers/import-container/import-container.component.ts");
/* harmony import */ var _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @app/dcm/modules/upload/services/file-import.service */ "./src/app/dcm/modules/upload/services/file-import.service.ts");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_actions__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.actions */ "./src/app/dcm/modules/upload/store/import/import.actions.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};









var PreviewGridComponent = /** @class */ (function () {
    function PreviewGridComponent(importContainer, importService, store$) {
        var _this = this;
        this.importContainer = importContainer;
        this.importService = importService;
        this.store$ = store$;
        this.loading = false;
        this.headers = [];
        this.rowData = [];
        this.totalRecords = 0;
        this.numberOfRecords = 0;
        this.nrows = 0;
        this.selectedSheet = 1;
        this.newData = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.newNrows = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.lazyload = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.sizePageChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.goToLastPage = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.rowClickedValue = '';
        this.lastRowLoaded = 0;
        this.isFirstLoaded = true;
        this.indicesRow = [];
        this.contentsTemp = {};
        this.indexRowToSave = [];
        this.contents = [];
        this.pageFirst = 1;
        // public modules: Module[] = AllModules;
        this.modules = _ag_grid_community_all_modules__WEBPACK_IMPORTED_MODULE_2__["AllCommunityModules"];
        this.data$ = new rxjs__WEBPACK_IMPORTED_MODULE_1__["BehaviorSubject"]([]);
        this.oldUpload$ = store$.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_7__["selectOldUpload"]);
        this.gridOptions = {};
        this.defaultColDef = {
            resizable: true,
            sortable: true,
            editable: true,
            scrollable: true,
            paginator: true,
            width: 100,
            filter: 'agTextColumnFilter',
            cellStyle: { 'border-left': '1px solid #cdcdce' },
        };
        this.loadingCellRenderer = 'customLoadingCellRenderer';
        this.loadingCellRendererParams = { loadingMessage: 'One moment please...' };
        this.paginationPageSize = 50;
        importContainer.headers$.subscribe(function (header) {
            _this.headerLoaded = header;
            if (_this.dataLoaded && _this.headerLoaded)
                _this.getLoadedData();
        });
        this.oldUpload$.subscribe(function (data) {
            if (data !== undefined && data !== null && data) {
                _this.oldUpload = data;
            }
        });
        importContainer.data$.subscribe(function (data) {
            _this.allImportedResponse = data;
            _this.dataLoaded = data['data'];
            _this.indexRowsLoaded = data['index'];
            _this.pageLast = data['last_page'];
            _this.pageFirst = data['first_page'];
            _this.currentPage = data['current_page'];
            if (_this.dataLoaded && _this.headerLoaded)
                _this.getLoadedData();
        });
        importContainer.fileMetaData$.subscribe(function (data) {
            if (data) {
                _this.fileMetaData = data;
                _this.paginationPageSize = data['nrows'];
                if (_this.dataLoaded && _this.headerLoaded)
                    _this.getLoadedData();
            }
        });
        importContainer.importData$.subscribe(function (data) {
            _this.fileImported = data;
            _this.fileData = data.fileData;
            _this.selectedSheet = data.selectedSheet;
            if (_this.dataLoaded && _this.headerLoaded)
                _this.getLoadedData();
        });
        this.selectAllData(store$);
    }
    PreviewGridComponent.prototype.ngOnInit = function () {
    };
    // tst
    PreviewGridComponent.prototype.selectAllData = function (store) {
        var _this = this;
        store.select(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_8__["selectFileData"]).subscribe(function (metaData) {
            if (metaData) {
                var data = metaData['document'];
                // headers
                _this.headerLoaded = data['headers'];
                // data
                _this.allImportedResponse = data;
                _this.dataLoaded = data['data'];
                _this.indexRowsLoaded = data['index'];
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                _this.currentPage = data['current_page'];
                if (_this.dataLoaded && _this.headerLoaded)
                    _this.getLoadedData();
            }
        });
        store.select(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_8__["selectImportObjectState"]).subscribe(function (data) {
            if (data.importMetadata) {
                _this.fileImported = data;
                _this.fileData = data.fileData;
                _this.selectedSheet = data.selectedSheet;
                // this.getLoadedData();
            }
        });
    };
    PreviewGridComponent.prototype.getLoadedData = function () {
        if (this.headerLoaded && this.dataLoaded) {
            this.columnDefs = this.createColumnDefs(this.headerLoaded);
            this.rowsData = this.createRowData(this.dataLoaded, this.headerLoaded);
            if (this.gridOptions.api && this.gridOptions.api != null) {
                this.gridOptions.columnDefs = this.columnDefs;
                this.gridOptions.api.setRowData(this.rowsData);
            }
            if (this.isFirstLoaded) {
                // console.log('= firt load =')
                this.firstRefresh(this.columnDefs, this.rowsData);
                this.isFirstLoaded = false;
            }
        }
    };
    PreviewGridComponent.prototype.firstRefresh = function (headers, exposures) {
        this.columnDefs = headers;
        this.rowsData = exposures;
        var params = { force: true };
        if (this.gridApi && this.columnDefs && this.rowsData) {
            if (this.gridOptions.api) {
                this.gridOptions.api.setColumnDefs(this.columnDefs);
                this.gridOptions.api.setRowData(this.rowsData);
            }
            this.gridApi.refreshCells(params);
        }
    };
    PreviewGridComponent.prototype.createColumnDefs = function (headers) {
        var headersModel = [];
        for (var i = 0; i < headers.length; i++) {
            headersModel.push({
                headerName: headers[i],
                field: createFieldCode(headers[i])
            });
        }
        return headersModel;
    };
    PreviewGridComponent.prototype.createRowData = function (rowData, headers) {
        var rowDataModel = [];
        for (var i = 0; i < rowData.length; i++) {
            var obj = {};
            for (var j = 0; j < headers.length; j++) {
                obj[createFieldCode(headers[j])] = rowData[i][j];
            }
            rowDataModel.push(obj);
        }
        return rowDataModel;
    };
    PreviewGridComponent.prototype.getPage = function (pageLoaded, totalRows, paginationPageSize) {
        this.pageFirst = 1;
        this.currentPage = pageLoaded;
        this.pageLast = Math.trunc((totalRows / paginationPageSize));
    };
    PreviewGridComponent.prototype.onCellValueChanged = function ($event) {
        var newValue = $event.newValue;
        var oldValue = $event.oldValue;
        var rowIndex = $event.rowIndex;
        var colId = $event.column.colId;
        var newRowData = $event.data;
        if (oldValue === newValue) {
            console.log('-- No change --');
        }
        else if (newValue === '') {
            console.log('-- change to empty value not allowed --');
        }
        else {
            console.log('-- change detected --');
            // colId = this.getExactColId(colId);
            this.newValueTemp = newValue;
            this.indexRowTemp = rowIndex;
            // this.indexRowTemp = indexRowDb;
            this.contentsTemp[colId] = newValue;
            this.newRowsData = $event.api.gridOptionsWrapper.gridOptions.rowData;
        }
    };
    PreviewGridComponent.prototype.onCellFocused = function ($event) {
        if ($event.column && ($event.rowIndex || $event.rowIndex === 0)) {
            var rowIndex = $event.rowIndex;
            var colId = $event.column.colId;
            var colDefs = $event.column.colDef;
            var data = $event.data;
            this.newRowIndex = rowIndex;
            if (this.oldRowIndex === this.newRowIndex) {
                if (this.contentsTemp && (this.indexRowTemp || this.indexRowTemp === 0)) {
                    this.indexRowToSave.push(this.indexRowTemp);
                    this.contents.push(this.contentsTemp);
                    this.contentsTemp = {};
                    this.indexRowTemp = null;
                }
                this.indexRowTemp = null;
                this.contentsTemp = {};
            }
            else {
                this.oldRowIndex = rowIndex;
                if (this.indexRowToSave.length > 0 && this.contents.length > 0) {
                    var bodyRequest = {
                        allNum: this.indexRowToSave,
                        newValues: this.contents
                    };
                    this.rowIdFocused = rowIndex;
                    this.colIdFocused = $event.column.getColId();
                    if (this.gridOptions.api) {
                        var cell = this.gridOptions.api.getFocusedCell();
                        var allDisplayedCol = this.gridOptions.columnApi.getAllDisplayedColumns();
                        if (cell && allDisplayedCol) {
                            this.colFocused = this.getColumnToShow(this.colIdFocused, allDisplayedCol);
                            this.colRangeFocused = this.getRangeColumnToShow(this.colIdFocused, allDisplayedCol);
                        }
                    }
                    this.saveUpdatedRow(bodyRequest);
                    this.indexRowToSave = [];
                    this.contents = [];
                }
                else {
                    // init all
                    this.indexRowToSave = [];
                    this.contents = [];
                }
            }
        }
    };
    PreviewGridComponent.prototype.getColumnToShow = function (fieldCode, colList) {
        // console.log('= getColumnToShow =');
        if (colList) {
            for (var i = 0; i < colList.length; i++) {
                if (fieldCode === colList[i]['colId'] || fieldCode === this.getExactColId(colList[i]['colId'])) {
                    return colList[i];
                }
            }
        }
        return null;
    };
    PreviewGridComponent.prototype.getRangeColumnToShow = function (fieldCode, colList) {
        // console.log('= getColumnToShow =');
        if (colList) {
            for (var i = 0; i < colList.length; i++) {
                if (fieldCode === colList[i]['colId'] || fieldCode === this.getExactColId(colList[i]['colId'])) {
                    return i;
                }
            }
        }
        return null;
    };
    PreviewGridComponent.prototype.getExactColId = function (colId) {
        var colId1 = colId.split('_1').slice(0, -1).join('_1');
        if (colId1) {
            colId = colId1;
        }
        return colId;
    };
    PreviewGridComponent.prototype.saveUpdatedRow = function (bodyRequest) {
        var _this = this;
        // console.log('= saveUpdatedRow =')
        var newLines = [];
        var newNums = [];
        var request;
        request = {
            filename: this.fileMetaData.fileId
        };
        var worksheetIdSelected;
        if (this.fileMetaData.isExcel) {
            var worksheetSelected = this.fileMetaData.worksheet[this.selectedSheet];
            worksheetIdSelected = this.fileMetaData.worksheetId[worksheetSelected];
        }
        else {
            worksheetIdSelected = this.fileMetaData.worksheetId[Object.keys(this.fileMetaData.worksheetId)[0]];
        }
        var indexRowDatagrid = bodyRequest['allNum'][0];
        var indexRowAbsolute = this.getAbsoluteIndex(bodyRequest['allNum'][0], this.indexRowsLoaded);
        var oldRow = this.dataLoaded[bodyRequest['allNum'][0]];
        var newRow = this.transformObjToArray(this.newRowsData[indexRowDatagrid]);
        var newData = this.getNewData(this.newRowsData);
        newLines.push(newRow);
        newNums.push(indexRowAbsolute);
        bodyRequest['lines'] = newRow;
        bodyRequest['num'] = indexRowAbsolute;
        this.importService.updateRow(worksheetIdSelected, bodyRequest.num, bodyRequest.lines).subscribe(function (data) {
            _this.store$.dispatch(new _app_dcm_modules_upload_store_import_import_actions__WEBPACK_IMPORTED_MODULE_6__["ActionGetDataImported"]({ data: newData }));
            _this.rowsData = _this.newRowsData;
            if (_this.gridOptions.api) {
                _this.gridOptions.api.setRowData(_this.rowsData);
            }
            _this.refreshAfterUpdate();
            _this.bringFocusBack();
        });
    };
    PreviewGridComponent.prototype.getAbsoluteIndex = function (indexInDatagrid, rowIndexDb) {
        for (var i = 0; i < rowIndexDb.length; i++) {
            if (indexInDatagrid === i) {
                return rowIndexDb[i];
            }
        }
        return null;
    };
    PreviewGridComponent.prototype.refreshAfterUpdate = function () {
        var params = { force: true };
        if (this.gridApi && this.rowsData) {
            this.gridApi.refreshCells(params);
        }
        this.bringFocusBack();
    };
    PreviewGridComponent.prototype.getInverseColId = function (colId) {
        var colId1 = colId.split('_1').slice(0, -1).join('_1');
        if (colId1) {
            return colId1;
        }
        return colId + '_1';
    };
    PreviewGridComponent.prototype.bringFocusBack = function () {
        if (this.gridApi && this.rowIdFocused && this.colIdFocused) {
            var inverseColId = this.getInverseColId(this.colIdFocused);
            this.gridApi.setFocusedCell(this.rowIdFocused, inverseColId, null);
            this.gridApi.setFocusedCell(this.rowIdFocused, this.colIdFocused, null);
        }
    };
    PreviewGridComponent.prototype.transformObjToArray = function (obj) {
        var arr = [];
        for (var _i = 0, _a = Object.entries(obj); _i < _a.length; _i++) {
            var _b = _a[_i], key0 = _b[0], value0 = _b[1];
            arr.push(value0);
        }
        return arr;
    };
    PreviewGridComponent.prototype.getNewData = function (rowData) {
        var newData = [];
        for (var i = 0; i < rowData.length; i++) {
            newData.push(this.transformObjToArray(rowData[i]));
        }
        return newData;
    };
    PreviewGridComponent.prototype.localUpdateData = function (indexRowModified, newRow, dataLoaded) {
        var dataTemp = dataLoaded[indexRowModified];
        for (var _i = 0, _a = Object.entries(dataTemp); _i < _a.length; _i++) {
            var _b = _a[_i], key0 = _b[0], value0 = _b[1];
            if (dataTemp[key0] !== newRow[key0]) {
                dataLoaded[indexRowModified][key0] = newRow[key0];
            }
        }
        return dataLoaded;
    };
    PreviewGridComponent.prototype.onCellClicked = function ($event) {
        var rowIndex = $event.rowIndex;
        var colId = $event.column.colId;
        var data = $event.data;
        var dataList = [];
        var clickedCellValue;
        if (data && colId) {
            for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                if (key === colId) {
                    clickedCellValue = value;
                }
            }
        }
    };
    PreviewGridComponent.prototype.onGridReady = function (params) {
        this.gridApi = params.api;
        this.gridColumnApi = params.columnApi;
    };
    PreviewGridComponent.prototype.getUpdateDataNewPage = function (nextLink, currentPage, fileMetaData) {
        var _this = this;
        var newFileMetadata = {
            filename: fileMetaData['filename'],
            filetype: fileMetaData['filetype'],
            fileId: fileMetaData['fileId'],
            worksheetId: fileMetaData['worksheetId'],
            page: currentPage,
            worksheet: fileMetaData['worksheet'],
            totalRows: fileMetaData['totalRows'],
            nrows: fileMetaData['nrows'],
            metadata: fileMetaData['metadata'],
            lobId: fileMetaData['defaultLobId'],
            isExcel: fileMetaData['isExcel'],
            document: fileMetaData['document']
        };
        this.importService.getDataChangedPage(nextLink).subscribe(function (data) {
            if (data) {
                _this.allImportedResponse = data;
                _this.dataLoaded = data['data'];
                _this.indexRowsLoaded = data['index'];
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                _this.currentPage = data['current_page'];
                _this.rowsData = _this.dataLoaded;
                _this.store$.dispatch(new _app_dcm_modules_upload_store_import_import_actions__WEBPACK_IMPORTED_MODULE_6__["ActionUpdateFileData"]({ fileData: newFileMetadata }));
                _this.store$.dispatch(new _app_dcm_modules_upload_store_import_import_actions__WEBPACK_IMPORTED_MODULE_6__["ActionGetDataImported"]({ data: _this.dataLoaded }));
                if (_this.gridOptions.api) {
                    _this.gridOptions.api.setRowData(_this.rowsData);
                }
                _this.refreshAfterUpdate();
            }
        });
    };
    PreviewGridComponent.prototype.onBtFirst = function () {
        if (this.allImportedResponse) {
            var nextLink = this.allImportedResponse._links.first;
            if (nextLink) {
                this.currentPage = this.allImportedResponse._links.first_page;
                this.getUpdateDataNewPage(nextLink, this.currentPage, this.fileMetaData);
            }
        }
    };
    PreviewGridComponent.prototype.onBtPrevious = function () {
        if (this.allImportedResponse) {
            var nextLink = this.allImportedResponse._links.prev;
            if (nextLink) {
                this.currentPage = this.currentPage - 1;
                this.getUpdateDataNewPage(nextLink, this.currentPage, this.fileMetaData);
            }
        }
    };
    PreviewGridComponent.prototype.onBtSpecifiquePage = function (page) {
        if (this.allImportedResponse) {
            var link = this.allImportedResponse._links.self;
            var link1 = link.split('page=').slice(0, -1).join('page=');
            var lastExtracted = link.split('&nrows=').pop();
            var nextLink = link1 + 'page=' + page + '&nrows=' + lastExtracted;
            if (nextLink) {
                this.currentPage = page;
                this.getUpdateDataNewPage(nextLink, this.currentPage, this.fileMetaData);
            }
        }
    };
    PreviewGridComponent.prototype.onBtNext = function () {
        // console.log('== onBtNext ==');
        if (this.allImportedResponse) {
            var nextLink = this.allImportedResponse._links.next;
            if (nextLink) {
                this.currentPage = this.currentPage + 1;
                this.getUpdateDataNewPage(nextLink, this.currentPage, this.fileMetaData);
            }
        }
    };
    PreviewGridComponent.prototype.onBtLast = function () {
        // console.log('== onBtLAst ==');
        if (this.allImportedResponse) {
            var nextLink = this.allImportedResponse._links.last;
            if (nextLink) {
                this.currentPage = this.allImportedResponse._links.last_page;
                this.getUpdateDataNewPage(nextLink, this.currentPage, this.fileMetaData);
            }
        }
    };
    PreviewGridComponent.prototype.ngOnChanges = function (changes) {
        // console.log(changes);
    };
    // tst
    PreviewGridComponent.prototype.onPaginationChanged = function (event) {
        // this.newData.emit(change)
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PreviewGridComponent.prototype, "loading", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PreviewGridComponent.prototype, "headers", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PreviewGridComponent.prototype, "rowData", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PreviewGridComponent.prototype, "totalRecords", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PreviewGridComponent.prototype, "numberOfRecords", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PreviewGridComponent.prototype, "nrows", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Input"])(),
        __metadata("design:type", Object)
    ], PreviewGridComponent.prototype, "selectedSheet", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], PreviewGridComponent.prototype, "newData", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], PreviewGridComponent.prototype, "newNrows", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], PreviewGridComponent.prototype, "lazyload", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], PreviewGridComponent.prototype, "sizePageChanged", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Output"])(),
        __metadata("design:type", Object)
    ], PreviewGridComponent.prototype, "goToLastPage", void 0);
    PreviewGridComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'anms-preview-grid',
            template: __webpack_require__(/*! ./preview-grid.component.html */ "./src/app/shared/preview-grid/preview-grid.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./preview-grid.component.scss */ "./src/app/shared/preview-grid/preview-grid.component.scss")]
        }),
        __metadata("design:paramtypes", [_app_dcm_modules_upload_containers_import_container_import_container_component__WEBPACK_IMPORTED_MODULE_3__["ImportContainerComponent"],
            _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_4__["FileImportService"],
            _ngrx_store__WEBPACK_IMPORTED_MODULE_5__["Store"]])
    ], PreviewGridComponent);
    return PreviewGridComponent;
}());

function createFieldCode(str) {
    return str.replace(/\s/g, '');
}
// tst
function setText(selector, text) {
    document.querySelector(selector).innerHTML = text;
}
// tst
function setLastButtonDisabled(disabled) {
    // document.querySelector('#btLast').disabled = disabled;
}


/***/ }),

/***/ "./src/app/shared/services/geocoding/geo-coding.service.ts":
/*!*****************************************************************!*\
  !*** ./src/app/shared/services/geocoding/geo-coding.service.ts ***!
  \*****************************************************************/
/*! exports provided: GeoCodingService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GeoCodingService", function() { return GeoCodingService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "./node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var GeoCodingService = /** @class */ (function () {
    function GeoCodingService(http) {
        this.http = http;
    }
    GeoCodingService.prototype.reverseGeoCode = function (lat, lng) {
        return this.secondReverseGeo(lat, lng);
    };
    GeoCodingService.prototype.secondReverseGeo = function (lat, lng) {
        return this.http.get('https://api.pitneybowes.com/location-intelligence/geocode-service/v1/transient/advanced/reverseGeocode?x='
            + lng + '&y=' + lat + '&coordSysName=EPSG%3A4326&distance=150&distanceUnits=METERS', { headers: { Authorization: 'Bearer OExaOIJoFueJ1pXVYxJxc5O3z5TP' } });
    };
    GeoCodingService.prototype.getAllCountriesList = function () {
        return this.http.get('https://restcountries.eu/rest/v2/all');
    };
    GeoCodingService.prototype.geoCodeSingleLine = function (country, fullAddress) {
        return this.http.post('https://api.pitneybowes.com/location-intelligence/geocode-service/v1/transient/advanced/geocode', {
            'type': 'ADDRESS',
            'preferences': {
                'maxReturnedCandidates': 1,
                'returnAllCandidateInfo': 'false',
                'preferredDictionaryOrders': [],
                'fallbackToGeographic': 'true',
                'fallbackToPostal': 'true',
                'streetOffset': 7,
                'streetOffsetUnits': 'METERS',
                'cornerOffset': 7,
                'cornerOffsetUnits': 'METERS',
                'clientLocale': 'en_US',
                'clientCoordSysName': 'EPSG:4326',
                'matchMode': 'STANDARD',
                'mustMatchFields': {
                    'matchOnAddressNumber': 'false',
                    'matchOnPostCode1': 'false',
                    'matchOnPostCode2': 'false',
                    'matchOnAreaName1': 'false',
                    'matchOnAreaName2': 'false',
                    'matchOnAreaName3': 'false',
                    'matchOnAreaName4': 'false',
                    'matchOnAllStreetFields': 'false',
                    'matchOnStreetName': 'false',
                    'matchOnStreetType': 'false',
                    'matchOnStreetDirectional': 'false',
                    'matchOnPlaceName': 'false',
                    'matchOnInputFields': 'false'
                },
                'customPreferences': {
                    'FALLBACK_TO_WORLD': 'true'
                },
                'returnFieldsDescriptor': {
                    'returnAllCustomFields': 'false',
                    'returnMatchDescriptor': 'false',
                    'returnStreetAddressFields': 'false',
                    'returnUnitInformation': 'false',
                    'returnedCustomFieldKeys': ['']
                }
            },
            'addresses': [
                {
                    'mainAddressLine': fullAddress,
                    'country': country /* 'USA'*/
                }
            ]
        }, { headers: { Authorization: 'Bearer OExaOIJoFueJ1pXVYxJxc5O3z5TP' } });
    };
    GeoCodingService.prototype.geoCodeMultiLines = function () {
        return this.http.post('https://api.pitneybowes.com/location-intelligence/geocode-service/v1/transient/advanced/geocode', {
            'type': 'ADDRESS',
            'preferences': {
                'maxReturnedCandidates': 1,
                'returnAllCandidateInfo': 'false',
                'preferredDictionaryOrders': [],
                'fallbackToGeographic': 'true',
                'fallbackToPostal': 'true',
                'streetOffset': 7,
                'streetOffsetUnits': 'METERS',
                'cornerOffset': 7,
                'cornerOffsetUnits': 'METERS',
                'clientLocale': 'en_US',
                'clientCoordSysName': 'EPSG:4326',
                'matchMode': 'STANDARD',
                'mustMatchFields': {
                    'matchOnAddressNumber': 'false',
                    'matchOnPostCode1': 'false',
                    'matchOnPostCode2': 'false',
                    'matchOnAreaName1': 'false',
                    'matchOnAreaName2': 'false',
                    'matchOnAreaName3': 'false',
                    'matchOnAreaName4': 'false',
                    'matchOnAllStreetFields': 'false',
                    'matchOnStreetName': 'false',
                    'matchOnStreetType': 'false',
                    'matchOnStreetDirectional': 'false',
                    'matchOnPlaceName': 'false',
                    'matchOnInputFields': 'false'
                },
                'customPreferences': {
                    'FALLBACK_TO_WORLD': 'true'
                },
                'returnFieldsDescriptor': {
                    'returnAllCustomFields': 'false',
                    'returnMatchDescriptor': 'false',
                    'returnStreetAddressFields': 'false',
                    'returnUnitInformation': 'false',
                    'returnedCustomFieldKeys': [
                        ''
                    ]
                }
            },
            'addresses': [
                {
                    'mainAddressLine': '1 Global View',
                    'country': 'USA',
                    'addressLastLine': '',
                    'placeName': 'Pitney Bowes',
                    'areaName1': 'NY',
                    'areaName2': '',
                    'areaName3': 'Troy',
                    'areaName4': '',
                    'postCode1': '12180',
                    'postCode2': '',
                    'addressNumber': '',
                    'streetName': '',
                    'unitType': '',
                    'unitValue': ''
                }
            ]
        }, { headers: { Authorization: 'Bearer OExaOIJoFueJ1pXVYxJxc5O3z5TP' } });
    };
    GeoCodingService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], GeoCodingService);
    return GeoCodingService;
}());



/***/ }),

/***/ "./src/app/shared/shared-location-grid/custom-tooltip.component.ts":
/*!*************************************************************************!*\
  !*** ./src/app/shared/shared-location-grid/custom-tooltip.component.ts ***!
  \*************************************************************************/
/*! exports provided: CustomTooltipComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CustomTooltipComponent", function() { return CustomTooltipComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var CustomTooltipComponent = /** @class */ (function () {
    function CustomTooltipComponent(
    // private cleansingContainer: CleansingContainerComponent,
    // private importService: FileImportService,
    // private cleansingService: CleansingService,
    store, cdrf) {
        var _this = this;
        this.store = store;
        this.cdrf = cdrf;
        this.datachecks$ = this.store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_2__["selectCleansingErrors"]);
        this.datachecks$.subscribe(function (data) {
            if (data) {
                _this.datachecks = data;
                _this.errors = data['errors'];
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    }
    CustomTooltipComponent.prototype.agInit = function (params) {
        this.params = params;
        this.data = params.api.getDisplayedRowAtIndex(params.rowIndex).data;
        // this.data.color = this.params.color || 'white';
        this.colId = this.getExactColId(this.params['column']['colId']);
        this.rowIndex = params.rowIndex;
        // console.log('===> params.rowIndex');
        // console.log(this.rowIndex)
        // console.log(this.errors)
        // console.log(this.colId)
        // console.log(this.errors[this.colId])
        this.errorType = Object.keys(this.errors[this.colId])[0];
        // console.log(this.errorType)
    };
    CustomTooltipComponent.prototype.getExactColId = function (colId) {
        if (colId !== undefined) {
            var colId1 = colId.split('_1').slice(0, -1).join('_1');
            if (colId1) {
                colId = colId1;
            }
        }
        return colId;
    };
    CustomTooltipComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'tooltip-component',
            template: "\n    <div class=\"custom-tooltip\">\n      <p>\n        <span>Error</span>\n      </p>\n      <p><span>Type: </span>{{errorType}}</p>\n    </div>\n  ",
            styles: ["\n      :host {\n        position: absolute;\n        width: 150px;\n        height: 53px;\n        border: 1px solid cornflowerblue;\n        overflow: hidden;\n        pointer-events: none;\n        transition: opacity 1s;\n        background-color: #fff;\n      }\n\n      :host.ag-tooltip-hiding {\n        opacity: 0;\n      }\n\n      .custom-tooltip p {\n        margin: 5px;\n        white-space: nowrap;\n      }\n\n      .custom-tooltip p:first-of-type {\n        font-weight: bold;\n      }\n    "]
        })
        /*
        :host {
                position: absolute;
                width: 150px;
                height: 70px;
                pointer-events: none;
                transition: opacity 1s;
              }
        
        */
        ,
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_1__["Store"],
            _angular_core__WEBPACK_IMPORTED_MODULE_0__["ChangeDetectorRef"]])
    ], CustomTooltipComponent);
    return CustomTooltipComponent;
}());



/***/ }),

/***/ "./src/app/shared/shared-location-grid/data-model.ts":
/*!***********************************************************!*\
  !*** ./src/app/shared/shared-location-grid/data-model.ts ***!
  \***********************************************************/
/*! exports provided: dataModel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "dataModel", function() { return dataModel; });
var dataModel = [[
        '19 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        null,
        48123,
        null,
        42.302325,
        -83.260552,
        'DEARBORN,48123,USA-MI,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'MI-163',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        24722763,
        40519317.908,
        65242080.908,
        1091411.722,
        null,
        66333492.63,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6296 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Peace River',
        ' HWY-2',
        'T8S',
        null,
        56.23954,
        -117.30198,
        'PEACE RIVER,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        63520905.831,
        0,
        63520905.831,
        1402097.76,
        null,
        64923003.591,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1990 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Battle River No 438',
        ' ',
        'S0M',
        null,
        52.828117,
        -108.359367,
        'BLACKFOOT,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        62254933.754,
        0,
        62254933.754,
        1374153.942,
        null,
        63629087.696,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '564 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Otterburn Park',
        '627 Chemin des Patriotes',
        'J3H 1Z4',
        null,
        45.548053,
        -73.209487,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        61255404.497,
        0,
        61255404.497,
        1352091.32,
        null,
        62607495.817,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6018 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '99 33rd Ave W',
        55806,
        null,
        46.75454,
        -92.13856,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        59935059.835,
        0,
        59935059.835,
        1322947.336,
        null,
        61258007.171,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '928 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Lincoln',
        '4162 Bridgeport Dr',
        'L0R',
        null,
        43.165208,
        -79.370289,
        'GRIMSBY,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        59223959.209,
        0,
        59223959.209,
        1307251.202,
        null,
        60531210.411,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6019 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '99 33rd Ave W',
        55806,
        null,
        46.75454,
        -92.13856,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        58698906.961,
        0,
        58698906.961,
        1295661.718,
        null,
        59994568.679,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '589 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' Pont Victoria',
        'H3C',
        null,
        45.49185,
        -73.528795,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        1061356016.651,
        0,
        1061356016.651,
        23427324.811,
        null,
        1084783341.462,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Nova Scotia',
        null,
        'Eastern Passage',
        null,
        'B3G 1M4',
        null,
        44.610916,
        -63.473,
        'Eastern Passage,B3G 1M4,CA-NS,Canada',
        'Town',
        'No',
        'Trillium',
        null,
        'CA-NS',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        377740000,
        619096140.125,
        996836140.125,
        16675719.618,
        null,
        1013511859.743,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '178 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Lévis',
        ' Pont de Québec',
        'G7A',
        null,
        46.744659,
        -71.287489,
        'BRIDGE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        909733729.005,
        0,
        909733729.005,
        20080564.134,
        null,
        929814293.139,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        '1031 Rue Mansfield',
        'H3B',
        null,
        45.4994,
        -73.5668,
        'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        331966714.5,
        544076114.78,
        876042829.28,
        14655010.996,
        null,
        890697840.276,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Ontario',
        null,
        'Toronto',
        null,
        'L4K 2N2',
        null,
        43.826182,
        -79.50579,
        'TORONTO,L4K 2N2,CA-ON,Canada',
        'Post code',
        'No',
        'Trillium',
        null,
        'CA-ON',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        270900000,
        443990957.695,
        714890957.695,
        11959158.269,
        null,
        726850115.964,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '588 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' Pont Victoria',
        'H3C',
        null,
        45.493286,
        -73.524334,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        551070162.13,
        0,
        551070162.13,
        12163778.675,
        null,
        563233940.805,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'United States (USA)',
        'Indiana',
        'Lake',
        'Gary',
        '1312 Martin Luther King Dr',
        46402,
        null,
        41.59128,
        -87.317687,
        'EJ&E,46401,USA-IN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IN-89',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        3000000,
        4916843.385,
        7916843.385,
        132438.076,
        null,
        8049281.461,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5912 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Pennsylvania',
        'Butler',
        'Butler',
        '177 Kittanning St',
        16001,
        null,
        40.859852,
        -79.884644,
        'BESSEMER,USA-PA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'PA-19',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7862691.863,
        0,
        7862691.863,
        173553.297,
        null,
        8036245.16,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6801 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Marathon',
        'Wausau',
        ' ',
        54403,
        null,
        44.9638,
        -89.6356,
        'VALLEY,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-73',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7855359.649,
        0,
        7855359.649,
        173391.453,
        null,
        8028751.102,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6619 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.9853,
        -88.74169,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7831897.607,
        0,
        7831897.607,
        172873.575,
        null,
        8004771.182,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '490 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Daveluyville',
        '119 Rue Principale',
        'G0Z 1B0',
        null,
        46.21275,
        -72.140044,
        'DRUMMONDVILLE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7822532.572,
        0,
        7822532.572,
        172666.861,
        null,
        7995199.433,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1893 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Moose Jaw',
        '251 Coteau St E',
        'S6H',
        null,
        50.382497,
        -105.527308,
        'CENTRAL BUTTE,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7797506.95,
        0,
        7797506.95,
        172114.47,
        null,
        7969621.42,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2907 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        '1558 E Hyde Park Blvd',
        60615,
        null,
        41.802572,
        -87.587233,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7784973.523,
        0,
        7784973.523,
        171837.819,
        null,
        7956811.342,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3924 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Macon',
        'Decatur',
        '237 W Lincoln Park Dr',
        62522,
        null,
        39.82767,
        -88.95837,
        'PEORIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-115',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7783508.125,
        0,
        7783508.125,
        171805.474,
        null,
        7955313.599,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5339 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Manitowoc',
        'Manitowoc',
        '2728 Clay Pit Rd',
        54220,
        null,
        44.10045,
        -87.67907,
        'MANITOWOC,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-71',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7779107.751,
        0,
        7779107.751,
        171708.344,
        null,
        7950816.095,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7289 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.97691,
        -88.7297,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7758328.966,
        0,
        7758328.966,
        171249.694,
        null,
        7929578.66,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6146 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' John Hart Hwy',
        'V0J',
        null,
        55.319602,
        -122.657693,
        'CHETWYND,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7722432.173,
        0,
        7722432.173,
        170457.343,
        null,
        7892889.516,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2913 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 60th St',
        60637,
        null,
        41.786117,
        -87.589048,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7711655.556,
        0,
        7711655.556,
        170219.471,
        null,
        7881875.027,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2912 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 59th St',
        60637,
        null,
        41.787909,
        -87.58864,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7711655.556,
        0,
        7711655.556,
        170219.471,
        null,
        7881875.027,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8810 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.26253,
        -121.545678,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7685733.838,
        0,
        7685733.838,
        169647.3,
        null,
        7855381.138,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '396 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Jean-Port-Joli',
        ' Autoroute Transcanadienne',
        'G0R',
        null,
        47.21201,
        -70.22742,
        'MONTMAGNY,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7670910.368,
        0,
        7670910.368,
        169320.102,
        null,
        7840230.47,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '724 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Brampton',
        '7945 Bramalea Rd',
        'L6T 4J9',
        null,
        43.702456,
        -79.68713,
        'HALTON,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7670910.368,
        0,
        7670910.368,
        169320.102,
        null,
        7840230.47,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5513 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Wood',
        'Babcock',
        ' WI-173',
        54413,
        null,
        44.299683,
        -90.120111,
        'VALLEY,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-141',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7660332.143,
        0,
        7660332.143,
        169086.609,
        null,
        7829418.752,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8835 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Skeena-Queen Charlotte',
        ' Trans Canada Hwy',
        'V0V',
        null,
        54.287254,
        -129.411883,
        'SKEENA,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7659957.292,
        0,
        7659957.292,
        169078.334,
        null,
        7829035.626,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8787 - Canadian National Railways - Telecom',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Homewood',
        null,
        60430,
        null,
        41.5567,
        -87.66522,
        'Homewood,60430,USA-IL,United States (USA)',
        'Post code',
        'Yes',
        'Trillium',
        null,
        'IL-31',
        'ACORD',
        'INDTEL999',
        'Telecommunication and data processing',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'Telecom',
        1301606.75,
        6399796.539,
        7701403.289,
        114921.529,
        null,
        7816324.818,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7234 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Indiana',
        'Lake',
        'Gary',
        '1232 N Clark Rd',
        46406,
        null,
        41.63028,
        -87.402638,
        'LAKEFRONT,USA-IN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IN-89',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7630383.912,
        0,
        7630383.912,
        168425.561,
        null,
        7798809.473,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1450 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Algoma',
        ' ',
        'P0M',
        null,
        49.196783,
        -84.540099,
        'RUEL,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7584057.539,
        0,
        7584057.539,
        167402.998,
        null,
        7751460.537,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3812 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' S Albany Ave',
        60632,
        null,
        41.826349,
        -87.702008,
        'JOLIET,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7576749.076,
        0,
        7576749.076,
        167241.678,
        null,
        7743990.754,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7996 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Ontario',
        null,
        'Vaughan',
        '134 Willis Rd',
        'L4L 2S2',
        null,
        43.794303,
        -79.580856,
        'Canadian National Railways,L4K 1B9,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2882400,
        4724103.125,
        7606503.125,
        127246.503,
        null,
        7733749.628,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8883 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        '17219 HWY-99',
        'V0K',
        null,
        50.752396,
        -121.84061,
        'LILLOOET,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7564789.01,
        0,
        7564789.01,
        166977.684,
        null,
        7731766.694,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6242 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Jackson',
        'Carbondale',
        ' ',
        62901,
        null,
        37.722199,
        -89.215389,
        'CENTRALIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-77',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7529824.992,
        0,
        7529824.992,
        166205.923,
        null,
        7696030.915,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6530 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' AUT-13',
        'H4T',
        null,
        45.47159,
        -73.70457,
        'ST LAURENT,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7523704.022,
        0,
        7523704.022,
        166070.814,
        null,
        7689774.836,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2468 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        53.446883,
        -120.432555,
        'FRASER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7514872.309,
        0,
        7514872.309,
        165875.872,
        null,
        7680748.181,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '375 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Senneterre',
        '450 1e Rue O',
        'J0Y',
        null,
        48.387608,
        -77.236244,
        'ST MAURICE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7510455.409,
        0,
        7510455.409,
        165778.377,
        null,
        7676233.786,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7304 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '2016 108th Ave W',
        55808,
        null,
        46.677259,
        -92.235553,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7502871.792,
        0,
        7502871.792,
        165610.984,
        null,
        7668482.776,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7305 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '2016 108th Ave W',
        55808,
        null,
        46.677259,
        -92.235553,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7502871.792,
        0,
        7502871.792,
        165610.984,
        null,
        7668482.776,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2754 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Oakland',
        'Royal Oak',
        ' E 10 Mile Rd',
        48067,
        null,
        42.47609,
        -83.13664,
        'HOLLY,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-125',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7482900.908,
        0,
        7482900.908,
        165170.167,
        null,
        7648071.075,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6529 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Dorval',
        '1117 Trans Canada Hwy',
        'H9P',
        null,
        45.4901,
        -73.76652,
        'DEUX MONTAGNES,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7482486.579,
        0,
        7482486.579,
        165161.021,
        null,
        7647647.6,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3889 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Logan',
        'Mt Pulaski',
        ' 1525th Ave',
        62548,
        null,
        40.05299,
        -89.30601,
        'PEORIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7475569.738,
        0,
        7475569.738,
        165008.346,
        null,
        7640578.084,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1659 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Portage la Prairie RM',
        ' McIntyre Rd',
        'R0H',
        null,
        49.989151,
        -98.381536,
        'GLADSTONE,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7464821.066,
        0,
        7464821.066,
        164771.09,
        null,
        7629592.156,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8802 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.500682,
        -121.285846,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7455268.673,
        0,
        7455268.673,
        164560.24,
        null,
        7619828.913,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2721 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Genesee',
        'Flint',
        ' I-75',
        48507,
        null,
        42.98242,
        -83.73119,
        'FLINT,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-49',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7430111.053,
        0,
        7430111.053,
        164004.935,
        null,
        7594115.988,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6424 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '956 Kenaston Blvd',
        'R3P',
        null,
        49.847582,
        -97.207759,
        'RIVERS,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7411827.657,
        0,
        7411827.657,
        163601.366,
        null,
        7575429.023,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2206 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Strathcona County',
        ' Range Road 230',
        'T8A',
        null,
        53.565446,
        -113.246586,
        'WAINWRIGHT,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7391217.893,
        0,
        7391217.893,
        163146.446,
        null,
        7554364.339,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2582 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Bulkley-Nechako',
        ' Morice Telkwa Forest Service Rd',
        'V0J',
        null,
        54.44478,
        -126.809273,
        'TELKWA,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7391217.893,
        0,
        7391217.893,
        163146.446,
        null,
        7554364.339,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2210 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Edmonton',
        ' 50 St NW',
        'T5W',
        null,
        53.583519,
        -113.418312,
        'WAINWRIGHT,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7351473.097,
        0,
        7351473.097,
        162269.159,
        null,
        7513742.256,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6106 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'West Vancouver',
        '4398 Keith Rd',
        'V7W 2M2',
        null,
        49.343877,
        -123.242054,
        'SQUAMISH,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7350000.45,
        0,
        7350000.45,
        162236.653,
        null,
        7512237.103,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '389 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Philippe-de-Néri',
        '295 RTE-230',
        'G0L',
        null,
        47.44051,
        -69.92187,
        'MONTMAGNY,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7344112.988,
        0,
        7344112.988,
        162106.699,
        null,
        7506219.687,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6278 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Kentucky',
        'Ballard',
        'Barlow',
        ' E Cairo Rd',
        42024,
        null,
        37.000116,
        -89.141002,
        'CAIRO,USA-KY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'KY-7',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7320133.058,
        0,
        7320133.058,
        161577.39,
        null,
        7481710.448,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2964 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Harvey',
        ' E 155th St',
        60426,
        null,
        41.608146,
        -87.643644,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7320133.058,
        0,
        7320133.058,
        161577.39,
        null,
        7481710.448,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3371 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Holmes',
        'Tchula',
        ' US-49E',
        39169,
        null,
        33.035662,
        -90.330855,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-51',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7299604.946,
        0,
        7299604.946,
        161124.273,
        null,
        7460729.219,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6033 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Douglas',
        'Superior',
        ' E Old 105',
        54880,
        null,
        46.65527,
        -92.16399,
        'SUPERIOR,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7295204.573,
        0,
        7295204.573,
        161027.143,
        null,
        7456231.716,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8884 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        ' Sea To Sky Hwy',
        'V0N',
        null,
        49.606757,
        -123.218024,
        'SQUAMISH,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7259357.535,
        0,
        7259357.535,
        160235.891,
        null,
        7419593.426,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '584 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Lambert',
        ' ',
        'J4R',
        null,
        45.492963,
        -73.514363,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7254316.95,
        0,
        7254316.95,
        160124.63,
        null,
        7414441.58,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1025 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Welland',
        ' Townline Tunnel Rd',
        'L3B',
        null,
        42.9586,
        -79.20069,
        'STAMFORD,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7249901.093,
        0,
        7249901.093,
        160027.159,
        null,
        7409928.252,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2906 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' Mines Dr',
        60616,
        null,
        41.854184,
        -87.617258,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7239483.921,
        0,
        7239483.921,
        159797.22,
        null,
        7399281.141,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '329 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Gédéon',
        '524 Chemin 5e',
        'G0W',
        null,
        48.480754,
        -71.793669,
        'LAC ST JEAN,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7227819.724,
        0,
        7227819.724,
        159539.756,
        null,
        7387359.48,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5885 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Laval',
        '29 Chemin du Tour',
        'H7Y 1G5',
        null,
        45.521639,
        -73.855355,
        'DEUX MONTAGNES,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7208682.607,
        0,
        7208682.607,
        159117.343,
        null,
        7367799.95,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4743 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Hamilton',
        'Webster City',
        ' ',
        50595,
        null,
        42.471529,
        -93.810204,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-79',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7201357.45,
        0,
        7201357.45,
        158955.654,
        null,
        7360313.104,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1602 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '182 Waterfront Dr',
        'R3B',
        null,
        49.894893,
        -97.132831,
        'REDDITT,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7170409.416,
        0,
        7170409.416,
        158272.538,
        null,
        7328681.954,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2059 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Alberta',
        ' Trans Canada Hwy',
        'T0E',
        null,
        53.185508,
        -117.990743,
        'EDSON,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7160105.055,
        0,
        7160105.055,
        158045.09,
        null,
        7318150.145,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '284 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Prosper-de-Champlain',
        ' Rang St-Charles',
        'G0X',
        null,
        46.65962,
        -72.251362,
        'LA TUQUE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7155689.199,
        0,
        7155689.199,
        157947.618,
        null,
        7313636.817,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4374 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Louisiana',
        'Washington',
        'Angie',
        ' La-436-1',
        70426,
        null,
        30.884458,
        -89.833333,
        'BOGALUSA,USA-LA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'LA-117',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7119240.825,
        0,
        7119240.825,
        157143.093,
        null,
        7276383.918,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '716 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Vaughan',
        '7135 Islington Ave',
        'L4L 1V9',
        null,
        43.76837,
        -79.57692,
        'HALTON,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7118887.612,
        0,
        7118887.612,
        157135.297,
        null,
        7276022.909,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5642 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Rusk',
        'Ladysmith',
        'N6416 Bass Lake Rd',
        54848,
        null,
        45.519907,
        -91.1458,
        'SUPERIOR,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7110442.168,
        0,
        7110442.168,
        156948.88,
        null,
        7267391.048,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6984 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        'Lake',
        'Two Harbors',
        ' ',
        55616,
        null,
        47.018608,
        -91.686975,
        'IRON RANGE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MN-75',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7109283.845,
        0,
        7109283.845,
        156923.312,
        null,
        7266207.157,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4790 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Sac',
        'Auburn',
        ' 335th St',
        51433,
        null,
        42.29911,
        -94.8832,
        'OMAHA,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-161',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7103109.953,
        0,
        7103109.953,
        156787.036,
        null,
        7259896.989,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7264 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Quitman',
        'Marks',
        ' MS-3',
        38646,
        null,
        34.29474,
        -90.27172,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-119',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7092507.487,
        0,
        7092507.487,
        156553.008,
        null,
        7249060.495,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2859 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        ' ',
        48120,
        null,
        42.301429,
        -83.179138,
        'DEARBORN,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-163',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7089913.012,
        0,
        7089913.012,
        156495.74,
        null,
        7246408.752,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8841 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser Valley',
        ' Trans Canada Hwy',
        'V0K',
        null,
        49.757371,
        -121.426978,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7073179.219,
        0,
        7073179.219,
        156126.375,
        null,
        7229305.594,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1749 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Portage la Prairie RM',
        ' ',
        'R0H',
        null,
        49.978023,
        -98.381776,
        'RIVERS,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7068836.369,
        0,
        7068836.369,
        156030.515,
        null,
        7224866.884,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5753 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Clark',
        'Withee',
        'W6490 CR-X',
        54498,
        null,
        44.9529,
        -90.63895,
        'MINNEAPOLIS,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-19',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7063519.128,
        0,
        7063519.128,
        155913.147,
        null,
        7219432.275,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8808 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.258727,
        -121.516392,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7047403.716,
        0,
        7047403.716,
        155557.432,
        null,
        7202961.148,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6583 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.98368,
        -88.73946,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7034191.315,
        0,
        7034191.315,
        155265.794,
        null,
        7189457.109,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5299 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Outagamie',
        'Appleton',
        ' ',
        54911,
        null,
        44.25539,
        -88.39384,
        'FOX RIVER,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-87',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7026859.1,
        0,
        7026859.1,
        155103.95,
        null,
        7181963.05,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2963 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Harvey',
        ' E 154th St',
        60426,
        null,
        41.609948,
        -87.642676,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7026859.1,
        0,
        7026859.1,
        155103.95,
        null,
        7181963.05,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3759 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Logan',
        'Mt Pulaski',
        '1108 IL-54',
        62548,
        null,
        39.95136,
        -89.38403,
        'GILMAN,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7022460.816,
        0,
        7022460.816,
        155006.867,
        null,
        7177467.683,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3397 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Madison',
        'Flora',
        '339 Ratliff Rd',
        39071,
        null,
        32.610774,
        -90.339309,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-89',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7016594,
        0,
        7016594,
        154877.368,
        null,
        7171471.368,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3493 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Pike',
        'McComb',
        '3159 Airport Fernwood Rd',
        39648,
        null,
        31.18973,
        -90.44595,
        'MCCOMB,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-113',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7006329.944,
        0,
        7006329.944,
        154650.81,
        null,
        7160980.754,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6730 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Rimouski',
        '126 Boulevard de la Rivière',
        'G5L',
        null,
        48.44296,
        -68.53634,
        'MONT-JOLI,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6993762.635,
        0,
        6993762.635,
        154373.411,
        null,
        7148136.046,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6035 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '773 E McCuen St',
        55808,
        null,
        46.65807,
        -92.21394,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6991666.56,
        0,
        6991666.56,
        154327.145,
        null,
        7145993.705,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1374 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Bracebridge',
        '101 Ecclestone Dr',
        'P1L',
        null,
        45.03895,
        -79.30743,
        'NEWMARKET,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6981985.626,
        0,
        6981985.626,
        154113.457,
        null,
        7136099.083,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1055 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'South Glengarry',
        '20098 Wentworth Rd',
        'K0C',
        null,
        45.131114,
        -74.522127,
        'KINGSTON WEST,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6977568.727,
        0,
        6977568.727,
        154015.963,
        null,
        7131584.69,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '446 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Macamic',
        ' 7e Avenue E',
        'J0Z',
        null,
        48.753315,
        -78.99243,
        'TASCHEREAU,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6965792.761,
        0,
        6965792.761,
        153756.032,
        null,
        7119548.793,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6212 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Peace River',
        ' Range Road 245',
        'V0C',
        null,
        55.778081,
        -120.598021,
        'DAWSON CREEK,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6952545.191,
        0,
        6952545.191,
        153463.618,
        null,
        7106008.809,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4051 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        '65 E Calhoun Ave',
        38103,
        null,
        35.132682,
        -90.059752,
        'MEMPHIS,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6918347.548,
        0,
        6918347.548,
        152708.773,
        null,
        7071056.321,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '23 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Nova Scotia',
        null,
        'Halifax',
        '677 Young Ave',
        'B3H',
        null,
        44.62937,
        -63.5728,
        'BEDFORD,CA-NS,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-NS',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6912798.31,
        0,
        6912798.31,
        152586.285,
        null,
        7065384.595,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6635 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Black Hawk',
        'Waterloo',
        ' US-218',
        50701,
        null,
        42.507263,
        -92.373347,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-13',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6903683.119,
        0,
        6903683.119,
        152385.085,
        null,
        7056068.204,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2015 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Edmonton',
        ' 127 St NW',
        'T5L',
        null,
        53.583601,
        -113.541134,
        'EDSON,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6901022.344,
        0,
        6901022.344,
        152326.354,
        null,
        7053348.698,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8369 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '324 Pandora Ave E',
        'R2C 5K8',
        null,
        49.891413,
        -96.996123,
        'Canadian National Railways,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2625000,
        4302237.962,
        6927237.962,
        115883.317,
        null,
        7043121.279,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6333 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Big Lakes County',
        ' Range Road 100A',
        'T0G',
        null,
        55.33628,
        -115.41367,
        'SLAVE LAKE,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6871580.866,
        0,
        6871580.866,
        151676.492,
        null,
        7023257.358,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4193 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Forrest',
        'Hattiesburg',
        '189 Peps Point Rd',
        39401,
        null,
        31.395751,
        -89.366675,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-35',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6861158.364,
        0,
        6861158.364,
        151446.436,
        null,
        7012604.8,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2134 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Sturgeon County',
        '26305 HWY-633',
        'T8T',
        null,
        53.6578,
        -113.76248,
        'SANGUDO,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6855389.044,
        0,
        6855389.044,
        151319.089,
        null,
        7006708.133,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2464 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        53.353039,
        -120.285831,
        'FRASER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6849499.497,
        0,
        6849499.497,
        151189.089,
        null,
        7000688.586,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2928 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 83rd St',
        60619,
        null,
        41.74407,
        -87.598545,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6831831.595,
        0,
        6831831.595,
        150799.105,
        null,
        6982630.7,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3310 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        ' Heard Ave',
        38108,
        null,
        35.183025,
        -89.964261,
        'FULTON,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6818633.609,
        0,
        6818633.609,
        150507.786,
        null,
        6969141.395,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7912 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        54.072053,
        -122.366645,
        'Canadian National Railways,V0J 1A0,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2592000,
        4248152.685,
        6840152.685,
        114426.498,
        null,
        6954579.183,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2451 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' ',
        'V0E',
        null,
        51.690792,
        -119.40953,
        'CLEARWATER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6802393.55,
        0,
        6802393.55,
        150149.319,
        null,
        6952542.869,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2163 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Woodlands County',
        ' Township Road 600',
        'T0E',
        null,
        54.13861,
        -115.505443,
        'SANGUDO,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6799450.341,
        0,
        6799450.341,
        150084.354,
        null,
        6949534.695,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3313 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        ' Lamar Ave',
        38114,
        null,
        35.108805,
        -89.989103,
        'SHELBY,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6758512.583,
        0,
        6758512.583,
        149180.734,
        null,
        6907693.317,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8786 - Canadian National Railways - Telecom',
        1,
        'Canada',
        'Ontario',
        null,
        'MacMillan yard',
        null,
        'L4A 1B9',
        null,
        43.97002,
        -79.25284,
        'MacMillan yard,L4A 1B9,CA-ON,Canada',
        'Post code',
        'Yes',
        'Trillium',
        null,
        'CA-ON',
        'ACORD',
        'INDTEL999',
        'Telecommunication and data processing',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'Telecom',
        1148703,
        5647992.747,
        6796695.747,
        101421.344,
        null,
        6898117.091,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8885 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        ' ',
        'V0K',
        null,
        50.96188,
        -121.851183,
        'LILLOOET,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        6741184.812,
        0,
        6741184.812,
        148798.258,
        null,
        6889983.07,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4733 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Hardin',
        'Iowa Falls',
        '132 Park Ave',
        50126,
        null,
        42.518357,
        -93.258509,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-83',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6733584.098,
        0,
        6733584.098,
        148630.487,
        null,
        6882214.585,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1470 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Saginaw',
        '6209 Bachelor Rd',
        55779,
        null,
        46.95207,
        -92.33011,
        'RAINY DWP,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6717454.271,
        0,
        6717454.271,
        148274.453,
        null,
        6865728.724,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '824 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Chatham-Kent',
        '12871 River Line',
        'N0P 2K0',
        null,
        42.54095,
        -81.98746,
        'CHATHAM,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6705237.403,
        0,
        6705237.403,
        148004.79,
        null,
        6853242.193,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8415 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Melville',
        ' ',
        'S0A',
        null,
        50.922359,
        -102.802828,
        'Canadian National Railways,S0A 2P0,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2550000,
        4179316.878,
        6729316.878,
        112572.365,
        null,
        6841889.243,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8874 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        54.831867,
        -121.748149,
        'TUMBLER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        544024224.803,
        0,
        544024224.803,
        12008253.611,
        null,
        556032478.414,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3158 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Alexander',
        'Cairo',
        ' Commercial Ave',
        62914,
        null,
        37.022936,
        -89.17554,
        'CAIRO,USA-KY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-3',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        517928014.951,
        0,
        517928014.951,
        11432231.64,
        null,
        529360246.591,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '11 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Quebec',
        null,
        'Taschereau',
        null,
        'H4T 1T1',
        null,
        45.4867,
        -73.68565,
        'Taschereau,H4T 1T1,CA-QC,Canada',
        'Post code',
        'No',
        'Trillium',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        183217500,
        300283917.651,
        483501417.651,
        8088324.401,
        null,
        491589742.052,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8851 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Vancouver',
        '3645 Fellowes St',
        'V5K',
        null,
        49.292018,
        -123.024226,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        425547662.764,
        0,
        425547662.764,
        9393118.955,
        null,
        434940781.719,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8895 - Canadian National Railways - WHARVES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        ' Courtland St',
        55806,
        null,
        46.753495,
        -92.129158,
        'WISCONSIN CENTRAL LTD.,55807,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'WHARVES',
        159219189.362,
        260951939.345,
        420171128.707,
        7028894.371,
        null,
        427200023.078,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '13 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Michigan',
        null,
        'LANSING DELTA',
        null,
        48813,
        null,
        42.571331,
        -84.83411,
        'LANSING DELTA,48813,USA-MI,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'USA-MI',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        157515012,
        258158881.614,
        415673893.614,
        6953661.714,
        null,
        422627555.328,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8896 - Canadian National Railways - WHARVES',
        1,
        'United States (USA)',
        'Minnesota',
        'Lake',
        'Two Harbors',
        ' ',
        55616,
        null,
        47.017179,
        -91.676788,
        'WISCONSIN CENTRAL LTD.,55616,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MN-75',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'WHARVES',
        157354796.362,
        257896296.548,
        415251092.91,
        6946588.83,
        null,
        422197681.74,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8897 - Canadian National Railways - WHARVES',
        1,
        'United States (USA)',
        'Ohio',
        'Ashtabula',
        'Conneaut',
        ' Mariana Dr',
        44030,
        null,
        41.96961,
        -80.549965,
        'BESSEMER & LAKE ERIE RAILROAD,USA-OH,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'OH-7',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'WHARVES',
        136633662.35,
        223935439.646,
        360569101.996,
        6031833.123,
        null,
        366600935.119,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8875 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Peace River',
        ' ',
        'V0C',
        null,
        54.905127,
        -121.577239,
        'TUMBLER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        355372758.695,
        0,
        355372758.695,
        7844147.408,
        null,
        363216906.103,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8871 - Canadian National Railways - TUNNELS',
        1,
        'United States (USA)',
        'Illinois',
        'Pope',
        'Eddyville',
        ' Ozark Rd',
        62928,
        null,
        37.53152,
        -88.698308,
        'BLUFORD,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-151',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        261123829.282,
        0,
        261123829.282,
        5763789.594,
        null,
        266887618.876,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '21 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        null,
        48123,
        null,
        42.302325,
        -83.260552,
        'Dearborn,48123,USA-MI,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'MI-163',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        93929823,
        153946076.301,
        247875899.301,
        4146628.348,
        null,
        252022527.649,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2641 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'New Westminster',
        ' Pattullo Brg',
        'V3L',
        null,
        49.209142,
        -122.896576,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        233443740.379,
        0,
        233443740.379,
        5152806.641,
        null,
        238596547.02,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8794 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'Ontario',
        null,
        'Sarnia',
        '277 Tecumseh St',
        'N7T',
        null,
        42.958208,
        -82.40844,
        'STRATHROY,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        212774589.087,
        0,
        212774589.087,
        4696576.202,
        null,
        217471165.289,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '587 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' Pont Victoria',
        'H3C',
        null,
        45.493412,
        -73.523964,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        176303915.324,
        0,
        176303915.324,
        3891558.558,
        null,
        180195473.882,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8250 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        '1031 Rue Mansfield',
        'H3B',
        null,
        45.4994,
        -73.5668,
        'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        66191646,
        108484652.266,
        174676298.266,
        2922098.083,
        null,
        177598396.349,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Ontario',
        null,
        'Oakville',
        '2143 Devon Rd',
        'L6J 5Z2',
        null,
        43.479491,
        -79.648022,
        'OAKVILLE,L6J 5Z2,CA-ON,Canada',
        'Address',
        'Yes',
        'Trillium',
        null,
        'CA-ON',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        58175000,
        95345787.981,
        153520787.981,
        2568195.025,
        null,
        156088983.006,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Alberta',
        null,
        'Edmonton',
        null,
        'T6S 1AS',
        null,
        53.530222,
        -113.5064,
        'EDMONTON,T6S 1AS,CA-AB,Canada',
        'Town',
        'No',
        'Trillium',
        null,
        'CA-AB',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        57487500,
        94219011.371,
        151706511.371,
        2537844.633,
        null,
        154244356.004,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8898 - Canadian National Railways - WHARVES',
        1,
        'United States (USA)',
        'Michigan',
        'Delta',
        'Escanaba',
        ' ',
        49829,
        null,
        45.767527,
        -87.059451,
        'WISCONSIN CENTRAL LTD.,49894,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-41',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'WHARVES',
        54460543.95,
        89257988.427,
        143718532.377,
        2404216.554,
        null,
        146122748.931,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '17 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        null,
        48123,
        null,
        42.302325,
        -83.260552,
        'DEARBORN,48123,USA-MI,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'MI-163',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        49195380,
        80628659.581,
        129824039.581,
        2171780.493,
        null,
        131995820.074,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8788 - Canadian National Railways - Telecom',
        1,
        'Canada',
        null,
        null,
        'Other sites',
        null,
        null,
        null,
        45.411572,
        -75.698194,
        'Other sites,Canada',
        'Country',
        'No',
        'Trillium',
        null,
        'CA',
        'ACORD',
        'INDTEL999',
        'Telecommunication and data processing',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'Telecom',
        19697341.75,
        96848744.492,
        116546086.242,
        1739118.697,
        null,
        118285204.939,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7158 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Kentucky',
        'McCracken',
        'West Paducah',
        ' Metropolis Ferry Landing Rd',
        42086,
        null,
        37.143486,
        -88.743004,
        'PADUCAH & ILLINOIS RR,USA-KY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'KY-145',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        114000000,
        0,
        114000000,
        2516323.445,
        null,
        116516323.445,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Quebec',
        null,
        'CHARNY',
        null,
        'G6X 5M5',
        null,
        46.716061,
        -71.264406,
        'CHARNY,G6X 5M5,CA-QC,Canada',
        'Town',
        'No',
        'Trillium',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        43087500,
        70618163.122,
        113705663.122,
        1902141.868,
        null,
        115607804.99,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '150 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'New Brunswick',
        null,
        'Drummond Parish',
        ' ',
        'E3Y',
        null,
        47.0323,
        -67.60767,
        'NAPADOGAN,CA-NB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-NB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        107865273.108,
        0,
        107865273.108,
        2380911.541,
        null,
        110246184.649,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8773 - Canadian National Railways - DATA CENTERS',
        1,
        'Canada',
        'Quebec',
        null,
        'CN HQ',
        null,
        'H3B 2M9',
        null,
        45.515111,
        -73.554136,
        'CN HQ,H3B 2M9,CA-QC,Canada',
        'Post code',
        'No',
        'Trillium',
        null,
        'CA-QC',
        'ACORD',
        'INDTEL001',
        'Telecommunication and data processing',
        'Electronic data processing (EDP) centre, call centre',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'DATA CENTERS',
        18210085.7,
        89536139.42,
        107746225.12,
        1607805.81,
        null,
        109354030.93,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Alberta',
        null,
        'Calgary',
        ' 27 St SE',
        'T2C 1M7',
        null,
        51.00677,
        -113.99512,
        'CALGARY,T2C 1M7,CA-AB,Canada',
        'Street',
        'Yes',
        'Trillium',
        null,
        'CA-AB',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        39105000,
        64091053.528,
        103196053.528,
        1726330.322,
        null,
        104922383.85,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '19 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        null,
        48123,
        null,
        42.302325,
        -83.260552,
        'DEARBORN,48123,USA-MI,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'MI-163',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        24722763,
        40519317.908,
        65242080.908,
        1091411.722,
        null,
        66333492.63,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6296 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Peace River',
        ' HWY-2',
        'T8S',
        null,
        56.23954,
        -117.30198,
        'PEACE RIVER,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        63520905.831,
        0,
        63520905.831,
        1402097.76,
        null,
        64923003.591,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1990 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Battle River No 438',
        ' ',
        'S0M',
        null,
        52.828117,
        -108.359367,
        'BLACKFOOT,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        62254933.754,
        0,
        62254933.754,
        1374153.942,
        null,
        63629087.696,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '564 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Otterburn Park',
        '627 Chemin des Patriotes',
        'J3H 1Z4',
        null,
        45.548053,
        -73.209487,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        61255404.497,
        0,
        61255404.497,
        1352091.32,
        null,
        62607495.817,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6018 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '99 33rd Ave W',
        55806,
        null,
        46.75454,
        -92.13856,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        59935059.835,
        0,
        59935059.835,
        1322947.336,
        null,
        61258007.171,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '928 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Lincoln',
        '4162 Bridgeport Dr',
        'L0R',
        null,
        43.165208,
        -79.370289,
        'GRIMSBY,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        59223959.209,
        0,
        59223959.209,
        1307251.202,
        null,
        60531210.411,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6019 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '99 33rd Ave W',
        55806,
        null,
        46.75454,
        -92.13856,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        58698906.961,
        0,
        58698906.961,
        1295661.718,
        null,
        59994568.679,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '589 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' Pont Victoria',
        'H3C',
        null,
        45.49185,
        -73.528795,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        1061356016.651,
        0,
        1061356016.651,
        23427324.811,
        null,
        1084783341.462,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Nova Scotia',
        null,
        'Eastern Passage',
        null,
        'B3G 1M4',
        null,
        44.610916,
        -63.473,
        'Eastern Passage,B3G 1M4,CA-NS,Canada',
        'Town',
        'No',
        'Trillium',
        null,
        'CA-NS',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        377740000,
        619096140.125,
        996836140.125,
        16675719.618,
        null,
        1013511859.743,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '178 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Lévis',
        ' Pont de Québec',
        'G7A',
        null,
        46.744659,
        -71.287489,
        'BRIDGE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        909733729.005,
        0,
        909733729.005,
        20080564.134,
        null,
        929814293.139,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        '1031 Rue Mansfield',
        'H3B',
        null,
        45.4994,
        -73.5668,
        'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        331966714.5,
        544076114.78,
        876042829.28,
        14655010.996,
        null,
        890697840.276,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Ontario',
        null,
        'Toronto',
        null,
        'L4K 2N2',
        null,
        43.826182,
        -79.50579,
        'TORONTO,L4K 2N2,CA-ON,Canada',
        'Post code',
        'No',
        'Trillium',
        null,
        'CA-ON',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        270900000,
        443990957.695,
        714890957.695,
        11959158.269,
        null,
        726850115.964,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '588 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' Pont Victoria',
        'H3C',
        null,
        45.493286,
        -73.524334,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        551070162.13,
        0,
        551070162.13,
        12163778.675,
        null,
        563233940.805,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'United States (USA)',
        'Indiana',
        'Lake',
        'Gary',
        '1312 Martin Luther King Dr',
        46402,
        null,
        41.59128,
        -87.317687,
        'EJ&E,46401,USA-IN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IN-89',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        3000000,
        4916843.385,
        7916843.385,
        132438.076,
        null,
        8049281.461,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5912 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Pennsylvania',
        'Butler',
        'Butler',
        '177 Kittanning St',
        16001,
        null,
        40.859852,
        -79.884644,
        'BESSEMER,USA-PA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'PA-19',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7862691.863,
        0,
        7862691.863,
        173553.297,
        null,
        8036245.16,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6801 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Marathon',
        'Wausau',
        ' ',
        54403,
        null,
        44.9638,
        -89.6356,
        'VALLEY,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-73',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7855359.649,
        0,
        7855359.649,
        173391.453,
        null,
        8028751.102,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6619 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.9853,
        -88.74169,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7831897.607,
        0,
        7831897.607,
        172873.575,
        null,
        8004771.182,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '490 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Daveluyville',
        '119 Rue Principale',
        'G0Z 1B0',
        null,
        46.21275,
        -72.140044,
        'DRUMMONDVILLE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7822532.572,
        0,
        7822532.572,
        172666.861,
        null,
        7995199.433,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1893 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Moose Jaw',
        '251 Coteau St E',
        'S6H',
        null,
        50.382497,
        -105.527308,
        'CENTRAL BUTTE,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7797506.95,
        0,
        7797506.95,
        172114.47,
        null,
        7969621.42,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2907 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        '1558 E Hyde Park Blvd',
        60615,
        null,
        41.802572,
        -87.587233,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7784973.523,
        0,
        7784973.523,
        171837.819,
        null,
        7956811.342,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3924 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Macon',
        'Decatur',
        '237 W Lincoln Park Dr',
        62522,
        null,
        39.82767,
        -88.95837,
        'PEORIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-115',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7783508.125,
        0,
        7783508.125,
        171805.474,
        null,
        7955313.599,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5339 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Manitowoc',
        'Manitowoc',
        '2728 Clay Pit Rd',
        54220,
        null,
        44.10045,
        -87.67907,
        'MANITOWOC,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-71',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7779107.751,
        0,
        7779107.751,
        171708.344,
        null,
        7950816.095,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7289 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.97691,
        -88.7297,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7758328.966,
        0,
        7758328.966,
        171249.694,
        null,
        7929578.66,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6146 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' John Hart Hwy',
        'V0J',
        null,
        55.319602,
        -122.657693,
        'CHETWYND,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7722432.173,
        0,
        7722432.173,
        170457.343,
        null,
        7892889.516,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2913 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 60th St',
        60637,
        null,
        41.786117,
        -87.589048,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7711655.556,
        0,
        7711655.556,
        170219.471,
        null,
        7881875.027,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2912 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 59th St',
        60637,
        null,
        41.787909,
        -87.58864,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7711655.556,
        0,
        7711655.556,
        170219.471,
        null,
        7881875.027,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8810 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.26253,
        -121.545678,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7685733.838,
        0,
        7685733.838,
        169647.3,
        null,
        7855381.138,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '396 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Jean-Port-Joli',
        ' Autoroute Transcanadienne',
        'G0R',
        null,
        47.21201,
        -70.22742,
        'MONTMAGNY,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7670910.368,
        0,
        7670910.368,
        169320.102,
        null,
        7840230.47,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '724 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Brampton',
        '7945 Bramalea Rd',
        'L6T 4J9',
        null,
        43.702456,
        -79.68713,
        'HALTON,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7670910.368,
        0,
        7670910.368,
        169320.102,
        null,
        7840230.47,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5513 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Wood',
        'Babcock',
        ' WI-173',
        54413,
        null,
        44.299683,
        -90.120111,
        'VALLEY,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-141',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7660332.143,
        0,
        7660332.143,
        169086.609,
        null,
        7829418.752,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8835 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Skeena-Queen Charlotte',
        ' Trans Canada Hwy',
        'V0V',
        null,
        54.287254,
        -129.411883,
        'SKEENA,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7659957.292,
        0,
        7659957.292,
        169078.334,
        null,
        7829035.626,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8787 - Canadian National Railways - Telecom',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Homewood',
        null,
        60430,
        null,
        41.5567,
        -87.66522,
        'Homewood,60430,USA-IL,United States (USA)',
        'Post code',
        'Yes',
        'Trillium',
        null,
        'IL-31',
        'ACORD',
        'INDTEL999',
        'Telecommunication and data processing',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'Telecom',
        1301606.75,
        6399796.539,
        7701403.289,
        114921.529,
        null,
        7816324.818,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7234 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Indiana',
        'Lake',
        'Gary',
        '1232 N Clark Rd',
        46406,
        null,
        41.63028,
        -87.402638,
        'LAKEFRONT,USA-IN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IN-89',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7630383.912,
        0,
        7630383.912,
        168425.561,
        null,
        7798809.473,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1450 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Algoma',
        ' ',
        'P0M',
        null,
        49.196783,
        -84.540099,
        'RUEL,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7584057.539,
        0,
        7584057.539,
        167402.998,
        null,
        7751460.537,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3812 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' S Albany Ave',
        60632,
        null,
        41.826349,
        -87.702008,
        'JOLIET,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7576749.076,
        0,
        7576749.076,
        167241.678,
        null,
        7743990.754,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7996 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Ontario',
        null,
        'Vaughan',
        '134 Willis Rd',
        'L4L 2S2',
        null,
        43.794303,
        -79.580856,
        'Canadian National Railways,L4K 1B9,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2882400,
        4724103.125,
        7606503.125,
        127246.503,
        null,
        7733749.628,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8883 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        '17219 HWY-99',
        'V0K',
        null,
        50.752396,
        -121.84061,
        'LILLOOET,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7564789.01,
        0,
        7564789.01,
        166977.684,
        null,
        7731766.694,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6242 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Jackson',
        'Carbondale',
        ' ',
        62901,
        null,
        37.722199,
        -89.215389,
        'CENTRALIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-77',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7529824.992,
        0,
        7529824.992,
        166205.923,
        null,
        7696030.915,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6530 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' AUT-13',
        'H4T',
        null,
        45.47159,
        -73.70457,
        'ST LAURENT,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7523704.022,
        0,
        7523704.022,
        166070.814,
        null,
        7689774.836,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2468 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        53.446883,
        -120.432555,
        'FRASER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7514872.309,
        0,
        7514872.309,
        165875.872,
        null,
        7680748.181,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '375 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Senneterre',
        '450 1e Rue O',
        'J0Y',
        null,
        48.387608,
        -77.236244,
        'ST MAURICE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7510455.409,
        0,
        7510455.409,
        165778.377,
        null,
        7676233.786,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7304 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '2016 108th Ave W',
        55808,
        null,
        46.677259,
        -92.235553,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7502871.792,
        0,
        7502871.792,
        165610.984,
        null,
        7668482.776,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7305 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '2016 108th Ave W',
        55808,
        null,
        46.677259,
        -92.235553,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7502871.792,
        0,
        7502871.792,
        165610.984,
        null,
        7668482.776,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2754 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Oakland',
        'Royal Oak',
        ' E 10 Mile Rd',
        48067,
        null,
        42.47609,
        -83.13664,
        'HOLLY,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-125',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7482900.908,
        0,
        7482900.908,
        165170.167,
        null,
        7648071.075,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6529 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Dorval',
        '1117 Trans Canada Hwy',
        'H9P',
        null,
        45.4901,
        -73.76652,
        'DEUX MONTAGNES,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7482486.579,
        0,
        7482486.579,
        165161.021,
        null,
        7647647.6,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3889 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Logan',
        'Mt Pulaski',
        ' 1525th Ave',
        62548,
        null,
        40.05299,
        -89.30601,
        'PEORIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7475569.738,
        0,
        7475569.738,
        165008.346,
        null,
        7640578.084,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1659 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Portage la Prairie RM',
        ' McIntyre Rd',
        'R0H',
        null,
        49.989151,
        -98.381536,
        'GLADSTONE,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7464821.066,
        0,
        7464821.066,
        164771.09,
        null,
        7629592.156,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8802 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.500682,
        -121.285846,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7455268.673,
        0,
        7455268.673,
        164560.24,
        null,
        7619828.913,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2721 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Genesee',
        'Flint',
        ' I-75',
        48507,
        null,
        42.98242,
        -83.73119,
        'FLINT,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-49',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7430111.053,
        0,
        7430111.053,
        164004.935,
        null,
        7594115.988,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6424 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '956 Kenaston Blvd',
        'R3P',
        null,
        49.847582,
        -97.207759,
        'RIVERS,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7411827.657,
        0,
        7411827.657,
        163601.366,
        null,
        7575429.023,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2206 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Strathcona County',
        ' Range Road 230',
        'T8A',
        null,
        53.565446,
        -113.246586,
        'WAINWRIGHT,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7391217.893,
        0,
        7391217.893,
        163146.446,
        null,
        7554364.339,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2582 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Bulkley-Nechako',
        ' Morice Telkwa Forest Service Rd',
        'V0J',
        null,
        54.44478,
        -126.809273,
        'TELKWA,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7391217.893,
        0,
        7391217.893,
        163146.446,
        null,
        7554364.339,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2210 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Edmonton',
        ' 50 St NW',
        'T5W',
        null,
        53.583519,
        -113.418312,
        'WAINWRIGHT,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7351473.097,
        0,
        7351473.097,
        162269.159,
        null,
        7513742.256,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6106 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'West Vancouver',
        '4398 Keith Rd',
        'V7W 2M2',
        null,
        49.343877,
        -123.242054,
        'SQUAMISH,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7350000.45,
        0,
        7350000.45,
        162236.653,
        null,
        7512237.103,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '389 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Philippe-de-Néri',
        '295 RTE-230',
        'G0L',
        null,
        47.44051,
        -69.92187,
        'MONTMAGNY,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7344112.988,
        0,
        7344112.988,
        162106.699,
        null,
        7506219.687,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6278 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Kentucky',
        'Ballard',
        'Barlow',
        ' E Cairo Rd',
        42024,
        null,
        37.000116,
        -89.141002,
        'CAIRO,USA-KY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'KY-7',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7320133.058,
        0,
        7320133.058,
        161577.39,
        null,
        7481710.448,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2964 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Harvey',
        ' E 155th St',
        60426,
        null,
        41.608146,
        -87.643644,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7320133.058,
        0,
        7320133.058,
        161577.39,
        null,
        7481710.448,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3371 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Holmes',
        'Tchula',
        ' US-49E',
        39169,
        null,
        33.035662,
        -90.330855,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-51',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7299604.946,
        0,
        7299604.946,
        161124.273,
        null,
        7460729.219,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6033 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Douglas',
        'Superior',
        ' E Old 105',
        54880,
        null,
        46.65527,
        -92.16399,
        'SUPERIOR,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7295204.573,
        0,
        7295204.573,
        161027.143,
        null,
        7456231.716,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8884 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        ' Sea To Sky Hwy',
        'V0N',
        null,
        49.606757,
        -123.218024,
        'SQUAMISH,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7259357.535,
        0,
        7259357.535,
        160235.891,
        null,
        7419593.426,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '584 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Lambert',
        ' ',
        'J4R',
        null,
        45.492963,
        -73.514363,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7254316.95,
        0,
        7254316.95,
        160124.63,
        null,
        7414441.58,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1025 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Welland',
        ' Townline Tunnel Rd',
        'L3B',
        null,
        42.9586,
        -79.20069,
        'STAMFORD,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7249901.093,
        0,
        7249901.093,
        160027.159,
        null,
        7409928.252,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2906 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' Mines Dr',
        60616,
        null,
        41.854184,
        -87.617258,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7239483.921,
        0,
        7239483.921,
        159797.22,
        null,
        7399281.141,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '329 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Gédéon',
        '524 Chemin 5e',
        'G0W',
        null,
        48.480754,
        -71.793669,
        'LAC ST JEAN,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7227819.724,
        0,
        7227819.724,
        159539.756,
        null,
        7387359.48,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5885 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Laval',
        '29 Chemin du Tour',
        'H7Y 1G5',
        null,
        45.521639,
        -73.855355,
        'DEUX MONTAGNES,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7208682.607,
        0,
        7208682.607,
        159117.343,
        null,
        7367799.95,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4743 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Hamilton',
        'Webster City',
        ' ',
        50595,
        null,
        42.471529,
        -93.810204,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-79',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7201357.45,
        0,
        7201357.45,
        158955.654,
        null,
        7360313.104,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1602 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '182 Waterfront Dr',
        'R3B',
        null,
        49.894893,
        -97.132831,
        'REDDITT,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7170409.416,
        0,
        7170409.416,
        158272.538,
        null,
        7328681.954,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2059 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Alberta',
        ' Trans Canada Hwy',
        'T0E',
        null,
        53.185508,
        -117.990743,
        'EDSON,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7160105.055,
        0,
        7160105.055,
        158045.09,
        null,
        7318150.145,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '284 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Prosper-de-Champlain',
        ' Rang St-Charles',
        'G0X',
        null,
        46.65962,
        -72.251362,
        'LA TUQUE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7155689.199,
        0,
        7155689.199,
        157947.618,
        null,
        7313636.817,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4374 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Louisiana',
        'Washington',
        'Angie',
        ' La-436-1',
        70426,
        null,
        30.884458,
        -89.833333,
        'BOGALUSA,USA-LA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'LA-117',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7119240.825,
        0,
        7119240.825,
        157143.093,
        null,
        7276383.918,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '716 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Vaughan',
        '7135 Islington Ave',
        'L4L 1V9',
        null,
        43.76837,
        -79.57692,
        'HALTON,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7118887.612,
        0,
        7118887.612,
        157135.297,
        null,
        7276022.909,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5642 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Rusk',
        'Ladysmith',
        'N6416 Bass Lake Rd',
        54848,
        null,
        45.519907,
        -91.1458,
        'SUPERIOR,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7110442.168,
        0,
        7110442.168,
        156948.88,
        null,
        7267391.048,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6984 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        'Lake',
        'Two Harbors',
        ' ',
        55616,
        null,
        47.018608,
        -91.686975,
        'IRON RANGE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MN-75',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7109283.845,
        0,
        7109283.845,
        156923.312,
        null,
        7266207.157,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4790 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Sac',
        'Auburn',
        ' 335th St',
        51433,
        null,
        42.29911,
        -94.8832,
        'OMAHA,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-161',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7103109.953,
        0,
        7103109.953,
        156787.036,
        null,
        7259896.989,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7264 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Quitman',
        'Marks',
        ' MS-3',
        38646,
        null,
        34.29474,
        -90.27172,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-119',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7092507.487,
        0,
        7092507.487,
        156553.008,
        null,
        7249060.495,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2859 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        ' ',
        48120,
        null,
        42.301429,
        -83.179138,
        'DEARBORN,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-163',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7089913.012,
        0,
        7089913.012,
        156495.74,
        null,
        7246408.752,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8841 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser Valley',
        ' Trans Canada Hwy',
        'V0K',
        null,
        49.757371,
        -121.426978,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7073179.219,
        0,
        7073179.219,
        156126.375,
        null,
        7229305.594,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1749 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Portage la Prairie RM',
        ' ',
        'R0H',
        null,
        49.978023,
        -98.381776,
        'RIVERS,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7068836.369,
        0,
        7068836.369,
        156030.515,
        null,
        7224866.884,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5753 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Clark',
        'Withee',
        'W6490 CR-X',
        54498,
        null,
        44.9529,
        -90.63895,
        'MINNEAPOLIS,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-19',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7063519.128,
        0,
        7063519.128,
        155913.147,
        null,
        7219432.275,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8808 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.258727,
        -121.516392,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7047403.716,
        0,
        7047403.716,
        155557.432,
        null,
        7202961.148,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6583 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.98368,
        -88.73946,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7034191.315,
        0,
        7034191.315,
        155265.794,
        null,
        7189457.109,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5299 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Outagamie',
        'Appleton',
        ' ',
        54911,
        null,
        44.25539,
        -88.39384,
        'FOX RIVER,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-87',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7026859.1,
        0,
        7026859.1,
        155103.95,
        null,
        7181963.05,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2963 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Harvey',
        ' E 154th St',
        60426,
        null,
        41.609948,
        -87.642676,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7026859.1,
        0,
        7026859.1,
        155103.95,
        null,
        7181963.05,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3759 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Logan',
        'Mt Pulaski',
        '1108 IL-54',
        62548,
        null,
        39.95136,
        -89.38403,
        'GILMAN,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7022460.816,
        0,
        7022460.816,
        155006.867,
        null,
        7177467.683,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3397 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Madison',
        'Flora',
        '339 Ratliff Rd',
        39071,
        null,
        32.610774,
        -90.339309,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-89',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7016594,
        0,
        7016594,
        154877.368,
        null,
        7171471.368,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3493 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Pike',
        'McComb',
        '3159 Airport Fernwood Rd',
        39648,
        null,
        31.18973,
        -90.44595,
        'MCCOMB,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-113',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7006329.944,
        0,
        7006329.944,
        154650.81,
        null,
        7160980.754,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6730 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Rimouski',
        '126 Boulevard de la Rivière',
        'G5L',
        null,
        48.44296,
        -68.53634,
        'MONT-JOLI,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6993762.635,
        0,
        6993762.635,
        154373.411,
        null,
        7148136.046,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6035 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '773 E McCuen St',
        55808,
        null,
        46.65807,
        -92.21394,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6991666.56,
        0,
        6991666.56,
        154327.145,
        null,
        7145993.705,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1374 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Bracebridge',
        '101 Ecclestone Dr',
        'P1L',
        null,
        45.03895,
        -79.30743,
        'NEWMARKET,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6981985.626,
        0,
        6981985.626,
        154113.457,
        null,
        7136099.083,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1055 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'South Glengarry',
        '20098 Wentworth Rd',
        'K0C',
        null,
        45.131114,
        -74.522127,
        'KINGSTON WEST,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6977568.727,
        0,
        6977568.727,
        154015.963,
        null,
        7131584.69,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '446 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Macamic',
        ' 7e Avenue E',
        'J0Z',
        null,
        48.753315,
        -78.99243,
        'TASCHEREAU,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6965792.761,
        0,
        6965792.761,
        153756.032,
        null,
        7119548.793,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6212 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Peace River',
        ' Range Road 245',
        'V0C',
        null,
        55.778081,
        -120.598021,
        'DAWSON CREEK,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6952545.191,
        0,
        6952545.191,
        153463.618,
        null,
        7106008.809,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4051 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        '65 E Calhoun Ave',
        38103,
        null,
        35.132682,
        -90.059752,
        'MEMPHIS,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6918347.548,
        0,
        6918347.548,
        152708.773,
        null,
        7071056.321,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '23 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Nova Scotia',
        null,
        'Halifax',
        '677 Young Ave',
        'B3H',
        null,
        44.62937,
        -63.5728,
        'BEDFORD,CA-NS,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-NS',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6912798.31,
        0,
        6912798.31,
        152586.285,
        null,
        7065384.595,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6635 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Black Hawk',
        'Waterloo',
        ' US-218',
        50701,
        null,
        42.507263,
        -92.373347,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-13',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6903683.119,
        0,
        6903683.119,
        152385.085,
        null,
        7056068.204,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2015 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Edmonton',
        ' 127 St NW',
        'T5L',
        null,
        53.583601,
        -113.541134,
        'EDSON,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6901022.344,
        0,
        6901022.344,
        152326.354,
        null,
        7053348.698,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8369 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '324 Pandora Ave E',
        'R2C 5K8',
        null,
        49.891413,
        -96.996123,
        'Canadian National Railways,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2625000,
        4302237.962,
        6927237.962,
        115883.317,
        null,
        7043121.279,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6333 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Big Lakes County',
        ' Range Road 100A',
        'T0G',
        null,
        55.33628,
        -115.41367,
        'SLAVE LAKE,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6871580.866,
        0,
        6871580.866,
        151676.492,
        null,
        7023257.358,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4193 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Forrest',
        'Hattiesburg',
        '189 Peps Point Rd',
        39401,
        null,
        31.395751,
        -89.366675,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-35',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6861158.364,
        0,
        6861158.364,
        151446.436,
        null,
        7012604.8,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2134 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Sturgeon County',
        '26305 HWY-633',
        'T8T',
        null,
        53.6578,
        -113.76248,
        'SANGUDO,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6855389.044,
        0,
        6855389.044,
        151319.089,
        null,
        7006708.133,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2464 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        53.353039,
        -120.285831,
        'FRASER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6849499.497,
        0,
        6849499.497,
        151189.089,
        null,
        7000688.586,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2928 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 83rd St',
        60619,
        null,
        41.74407,
        -87.598545,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6831831.595,
        0,
        6831831.595,
        150799.105,
        null,
        6982630.7,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3310 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        ' Heard Ave',
        38108,
        null,
        35.183025,
        -89.964261,
        'FULTON,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6818633.609,
        0,
        6818633.609,
        150507.786,
        null,
        6969141.395,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7912 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        54.072053,
        -122.366645,
        'Canadian National Railways,V0J 1A0,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2592000,
        4248152.685,
        6840152.685,
        114426.498,
        null,
        6954579.183,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2451 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' ',
        'V0E',
        null,
        51.690792,
        -119.40953,
        'CLEARWATER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6802393.55,
        0,
        6802393.55,
        150149.319,
        null,
        6952542.869,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2163 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Woodlands County',
        ' Township Road 600',
        'T0E',
        null,
        54.13861,
        -115.505443,
        'SANGUDO,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6799450.341,
        0,
        6799450.341,
        150084.354,
        null,
        6949534.695,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3313 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        ' Lamar Ave',
        38114,
        null,
        35.108805,
        -89.989103,
        'SHELBY,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6758512.583,
        0,
        6758512.583,
        149180.734,
        null,
        6907693.317,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8786 - Canadian National Railways - Telecom',
        1,
        'Canada',
        'Ontario',
        null,
        'MacMillan yard',
        null,
        'L4A 1B9',
        null,
        43.97002,
        -79.25284,
        'MacMillan yard,L4A 1B9,CA-ON,Canada',
        'Post code',
        'Yes',
        'Trillium',
        null,
        'CA-ON',
        'ACORD',
        'INDTEL999',
        'Telecommunication and data processing',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'Telecom',
        1148703,
        5647992.747,
        6796695.747,
        101421.344,
        null,
        6898117.091,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8885 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        ' ',
        'V0K',
        null,
        50.96188,
        -121.851183,
        'LILLOOET,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        6741184.812,
        0,
        6741184.812,
        148798.258,
        null,
        6889983.07,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4733 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Hardin',
        'Iowa Falls',
        '132 Park Ave',
        50126,
        null,
        42.518357,
        -93.258509,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-83',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6733584.098,
        0,
        6733584.098,
        148630.487,
        null,
        6882214.585,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1470 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Saginaw',
        '6209 Bachelor Rd',
        55779,
        null,
        46.95207,
        -92.33011,
        'RAINY DWP,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6717454.271,
        0,
        6717454.271,
        148274.453,
        null,
        6865728.724,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '824 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Chatham-Kent',
        '12871 River Line',
        'N0P 2K0',
        null,
        42.54095,
        -81.98746,
        'CHATHAM,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6705237.403,
        0,
        6705237.403,
        148004.79,
        null,
        6853242.193,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8415 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Melville',
        ' ',
        'S0A',
        null,
        50.922359,
        -102.802828,
        'Canadian National Railways,S0A 2P0,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2550000,
        4179316.878,
        6729316.878,
        112572.365,
        null,
        6841889.243,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8874 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        54.831867,
        -121.748149,
        'TUMBLER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        544024224.803,
        0,
        544024224.803,
        12008253.611,
        null,
        556032478.414,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3158 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Alexander',
        'Cairo',
        ' Commercial Ave',
        62914,
        null,
        37.022936,
        -89.17554,
        'CAIRO,USA-KY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-3',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        517928014.951,
        0,
        517928014.951,
        11432231.64,
        null,
        529360246.591,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '11 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Quebec',
        null,
        'Taschereau',
        null,
        'H4T 1T1',
        null,
        45.4867,
        -73.68565,
        'Taschereau,H4T 1T1,CA-QC,Canada',
        'Post code',
        'No',
        'Trillium',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        183217500,
        300283917.651,
        483501417.651,
        8088324.401,
        null,
        491589742.052,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8851 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Vancouver',
        '3645 Fellowes St',
        'V5K',
        null,
        49.292018,
        -123.024226,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        425547662.764,
        0,
        425547662.764,
        9393118.955,
        null,
        434940781.719,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8895 - Canadian National Railways - WHARVES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        ' Courtland St',
        55806,
        null,
        46.753495,
        -92.129158,
        'WISCONSIN CENTRAL LTD.,55807,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'WHARVES',
        159219189.362,
        260951939.345,
        420171128.707,
        7028894.371,
        null,
        427200023.078,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8872 - Canadian National Railways - TUNNELS',
        1,
        'United States (USA)',
        'Illinois',
        'Johnson',
        'Simpson',
        ' ',
        62985,
        null,
        37.421433,
        -88.718911,
        'BLUFORD,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-87',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        98004505.558,
        0,
        98004505.558,
        2163254.694,
        null,
        100167760.252,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2488 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Prince George',
        ' Pickering Rd',
        'V2N',
        null,
        53.913284,
        -122.715481,
        'FRASER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        97981855.857,
        0,
        97981855.857,
        2162754.747,
        null,
        100144610.604,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5800 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        'Washington',
        'Stillwater',
        '12045 Arcola Trl N',
        55082,
        null,
        45.12308,
        -92.74357,
        'MINNEAPOLIS,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MN-163',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        94638240.969,
        0,
        94638240.969,
        2088951.093,
        null,
        96727192.062,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3559 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Louisiana',
        null,
        'Laplace',
        ' Bonnet Carre Spillway',
        70068,
        null,
        30.06611,
        -90.39035,
        'MCCOMB,USA-LA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-LA',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        93622045.129,
        0,
        93622045.129,
        2066520.589,
        null,
        95688565.718,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2656 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Vancouver',
        '3643 Fellowes St',
        'V5K',
        null,
        49.292155,
        -123.024316,
        'NEW WESTMINSTER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        90574444.056,
        0,
        90574444.056,
        1999250.852,
        null,
        92573694.908,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '18 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        null,
        48123,
        null,
        42.302325,
        -83.260552,
        'DEARBORN,48123,USA-MI,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'MI-163',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        34061547,
        55825097.354,
        89886644.354,
        1503681.918,
        null,
        91390326.272,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '15 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Markham',
        null,
        60426,
        null,
        41.612703,
        -87.65093,
        'MARKHAM,60426,USA-IL,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'IL-31',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        32551050,
        53349471.626,
        85900521.626,
        1436999.479,
        null,
        87337521.105,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '9 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        null,
        'R2J OK6',
        null,
        49.872429,
        -97.14006,
        'WINNIPEG,R2J OK6,CA-MB,Canada',
        'Town',
        'No',
        'Trillium',
        null,
        'CA-MB',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        31762500,
        52057079.342,
        83819579.342,
        1402188.13,
        null,
        85221767.472,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8876 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'West Vancouver',
        ' Trans Canada Hwy',
        'V7W',
        null,
        49.361661,
        -123.262624,
        'SQUAMISH,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        82498351.202,
        0,
        82498351.202,
        1820987.152,
        null,
        84319338.354,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '271 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Quebec',
        '4266 Rue St-Félix',
        'G1Y',
        null,
        46.748594,
        -71.347368,
        'LA TUQUE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        75890636.022,
        0,
        75890636.022,
        1675134.971,
        null,
        77565770.993,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5410 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Chippewa',
        'Sault Ste Marie',
        ' I-75',
        49783,
        null,
        46.507546,
        -84.361984,
        'MANISTIQUE,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-33',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        74631048.691,
        0,
        74631048.691,
        1647332.084,
        null,
        76278380.775,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '613 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Coteau-du-Lac',
        '75 Rue de Venise',
        'J0P 1B0',
        null,
        45.258791,
        -74.183458,
        'VALLEYFIELD,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        73963706.99,
        0,
        73963706.99,
        1632601.842,
        null,
        75596308.832,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8877 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        ' Seton Portage Rd',
        'V0N',
        null,
        50.718528,
        -122.260039,
        'SQUAMISH,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        72207461.143,
        0,
        72207461.143,
        1593836.205,
        null,
        73801297.348,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1019 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'New York',
        'Erie',
        'Buffalo',
        ' Erie Canal Trl',
        14207,
        null,
        42.929539,
        -78.907686,
        'STAMFORD,USA-NY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'NY-29',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        70959252.186,
        0,
        70959252.186,
        1566284.473,
        null,
        72525536.659,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6157 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Peace River',
        '4803 Johnson Rd',
        'V0C',
        null,
        56.0985,
        -120.45084,
        'FORT ST JOHN,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        70059801.856,
        0,
        70059801.856,
        1546430.895,
        null,
        71606232.751,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3553 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Louisiana',
        'Tangipahoa',
        'Akers',
        ' Old US-51',
        70421,
        null,
        30.285944,
        -90.400166,
        'MCCOMB,USA-LA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'LA-105',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        66866605.369,
        0,
        66866605.369,
        1475947.428,
        null,
        68342552.797,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5894 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Pennsylvania',
        'Allegheny',
        'Oakmont',
        ' Pennsylvania Tpke',
        15139,
        null,
        40.53537,
        -79.82063,
        'BESSEMER,USA-PA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'PA-3',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        66236065.212,
        0,
        66236065.212,
        1462029.507,
        null,
        67698094.719,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '19 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        null,
        48123,
        null,
        42.302325,
        -83.260552,
        'DEARBORN,48123,USA-MI,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'MI-163',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        24722763,
        40519317.908,
        65242080.908,
        1091411.722,
        null,
        66333492.63,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6296 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Peace River',
        ' HWY-2',
        'T8S',
        null,
        56.23954,
        -117.30198,
        'PEACE RIVER,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        63520905.831,
        0,
        63520905.831,
        1402097.76,
        null,
        64923003.591,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1990 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Battle River No 438',
        ' ',
        'S0M',
        null,
        52.828117,
        -108.359367,
        'BLACKFOOT,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        62254933.754,
        0,
        62254933.754,
        1374153.942,
        null,
        63629087.696,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '564 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Otterburn Park',
        '627 Chemin des Patriotes',
        'J3H 1Z4',
        null,
        45.548053,
        -73.209487,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        61255404.497,
        0,
        61255404.497,
        1352091.32,
        null,
        62607495.817,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6018 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '99 33rd Ave W',
        55806,
        null,
        46.75454,
        -92.13856,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        59935059.835,
        0,
        59935059.835,
        1322947.336,
        null,
        61258007.171,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '928 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Lincoln',
        '4162 Bridgeport Dr',
        'L0R',
        null,
        43.165208,
        -79.370289,
        'GRIMSBY,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        59223959.209,
        0,
        59223959.209,
        1307251.202,
        null,
        60531210.411,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6019 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '99 33rd Ave W',
        55806,
        null,
        46.75454,
        -92.13856,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        58698906.961,
        0,
        58698906.961,
        1295661.718,
        null,
        59994568.679,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4612 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Dubuque',
        'Dubuque',
        ' E 4th St',
        52001,
        null,
        42.49863,
        -90.650384,
        'DUBUQUE,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-61',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        57182678.115,
        0,
        57182678.115,
        1262193.979,
        null,
        58444872.094,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2196 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Wainwright No 61',
        ' ',
        'T0B',
        null,
        52.876763,
        -111.057668,
        'WAINWRIGHT,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        55888269.697,
        0,
        55888269.697,
        1233622.486,
        null,
        57121892.183,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6417 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Kentucky',
        'Ballard',
        'Wickliffe',
        ' Cairo Rd',
        42087,
        null,
        36.977416,
        -89.100248,
        'CAIRO,USA-KY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'KY-7',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        54400968.582,
        0,
        54400968.582,
        1200793.269,
        null,
        55601761.851,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8798 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Frederick Rd',
        'V0K',
        null,
        50.729851,
        -120.5685,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        54212549.092,
        0,
        54212549.092,
        1196634.283,
        null,
        55409183.375,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1977 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Saskatoon',
        ' Circle Dr',
        'S7M',
        null,
        52.097619,
        -106.696683,
        'WATROUS,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        54021697.311,
        0,
        54021697.311,
        1192421.61,
        null,
        55214118.921,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8849 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser Valley',
        ' Front St',
        'V0K',
        null,
        49.558201,
        -121.422535,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        53721292.862,
        0,
        53721292.862,
        1185790.778,
        null,
        54907083.64,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1859 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Great Bend No 405',
        ' Range Road 3085',
        'S0K',
        null,
        52.383326,
        -107.13585,
        'ABERDEEN,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        53106073.502,
        0,
        53106073.502,
        1172211.034,
        null,
        54278284.536,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8815 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Kitimat-Stikine',
        ' Bulkley Canyon Station Rd',
        'V0J',
        null,
        55.254767,
        -127.46968,
        'BULKLEY,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        52828238.523,
        0,
        52828238.523,
        1166078.379,
        null,
        53994316.902,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4073 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Louisiana',
        null,
        'Laplace',
        ' ',
        70068,
        null,
        30.01412,
        -90.43669,
        'BATON ROUGE,USA-LA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-LA',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        52119293.1,
        0,
        52119293.1,
        1150429.817,
        null,
        53269722.917,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7110 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Quebec',
        ' Pont de Québec',
        'G1W',
        null,
        46.745527,
        -71.287944,
        'BRIDGE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        50631916.162,
        0,
        50631916.162,
        1117598.927,
        null,
        51749515.089,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7111 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Quebec',
        ' Pont de Québec',
        'G1W',
        null,
        46.745536,
        -71.287915,
        'BRIDGE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        50631916.162,
        0,
        50631916.162,
        1117598.927,
        null,
        51749515.089,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2208 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Edmonton',
        ' Clover Bar Brg',
        'T6S',
        null,
        53.573132,
        -113.371212,
        'WAINWRIGHT,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        50569712.449,
        0,
        50569712.449,
        1116225.904,
        null,
        51685938.353,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7299 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        ' Jenswold St',
        55806,
        null,
        46.753641,
        -92.139978,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        49376361.999,
        0,
        49376361.999,
        1089885.064,
        null,
        50466247.063,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1858 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Corman Park No 344',
        ' Range Road 3042',
        'S0K',
        null,
        52.303759,
        -106.464098,
        'ABERDEEN,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        49052017.77,
        0,
        49052017.77,
        1082725.81,
        null,
        50134743.58,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6031 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Douglas',
        'Superior',
        '3456 S WI-35',
        54880,
        null,
        46.63849,
        -92.09251,
        'SUPERIOR,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        48839015.959,
        0,
        48839015.959,
        1078024.218,
        null,
        49917040.177,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '20 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        null,
        48123,
        null,
        42.302325,
        -83.260552,
        'Dearborn,48123,USA-MI,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'MI-163',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        18594186,
        30474900.147,
        49069086.147,
        820859.407,
        null,
        49889945.554,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8847 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser Valley',
        ' Trans Canada Hwy',
        'V0K',
        null,
        49.601525,
        -121.412229,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        48563102.965,
        0,
        48563102.965,
        1071933.987,
        null,
        49635036.952,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3231 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Obion',
        'Obion',
        ' TN-211',
        38240,
        null,
        36.25144,
        -89.191595,
        'FULTON,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-131',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        47897604.53,
        0,
        47897604.53,
        1057244.432,
        null,
        48954848.962,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2115 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Greenview No 16',
        ' ',
        'T0H',
        null,
        55.071495,
        -118.621993,
        'GRANDE CACHE,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        47316457.823,
        0,
        47316457.823,
        1044416.773,
        null,
        48360874.596,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6660 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'New Brunswick',
        null,
        'Miramichi',
        '226 Island View Dr',
        'E1N 6B4',
        null,
        46.95593,
        -65.5878,
        'NEWCASTLE,CA-NB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-NB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        44908165.999,
        0,
        44908165.999,
        991258.517,
        null,
        45899424.516,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6663 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'New Brunswick',
        null,
        'Miramichi',
        ' Anderson Brg',
        'E1V',
        null,
        46.96553,
        -65.59718,
        'NEWCASTLE,CA-NB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-NB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        44908165.999,
        0,
        44908165.999,
        991258.517,
        null,
        45899424.516,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '868 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Brant',
        '1 River Ln',
        'N3L 1N9',
        null,
        43.197993,
        -80.383172,
        'DUNDAS,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        44132390.513,
        0,
        44132390.513,
        974134.815,
        null,
        45106525.328,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6034 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        ' MN-39',
        55808,
        null,
        46.65665,
        -92.20388,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        44093833.386,
        0,
        44093833.386,
        973283.743,
        null,
        45067117.129,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '19 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        null,
        48123,
        null,
        42.302325,
        -83.260552,
        'DEARBORN,48123,USA-MI,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'MI-163',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        24722763,
        40519317.908,
        65242080.908,
        1091411.722,
        null,
        66333492.63,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6296 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Peace River',
        ' HWY-2',
        'T8S',
        null,
        56.23954,
        -117.30198,
        'PEACE RIVER,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        63520905.831,
        0,
        63520905.831,
        1402097.76,
        null,
        64923003.591,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1990 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Battle River No 438',
        ' ',
        'S0M',
        null,
        52.828117,
        -108.359367,
        'BLACKFOOT,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        62254933.754,
        0,
        62254933.754,
        1374153.942,
        null,
        63629087.696,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '564 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Otterburn Park',
        '627 Chemin des Patriotes',
        'J3H 1Z4',
        null,
        45.548053,
        -73.209487,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        61255404.497,
        0,
        61255404.497,
        1352091.32,
        null,
        62607495.817,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6018 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '99 33rd Ave W',
        55806,
        null,
        46.75454,
        -92.13856,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        59935059.835,
        0,
        59935059.835,
        1322947.336,
        null,
        61258007.171,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '928 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Lincoln',
        '4162 Bridgeport Dr',
        'L0R',
        null,
        43.165208,
        -79.370289,
        'GRIMSBY,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        59223959.209,
        0,
        59223959.209,
        1307251.202,
        null,
        60531210.411,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6019 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '99 33rd Ave W',
        55806,
        null,
        46.75454,
        -92.13856,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        58698906.961,
        0,
        58698906.961,
        1295661.718,
        null,
        59994568.679,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '589 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' Pont Victoria',
        'H3C',
        null,
        45.49185,
        -73.528795,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        1061356016.651,
        0,
        1061356016.651,
        23427324.811,
        null,
        1084783341.462,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Nova Scotia',
        null,
        'Eastern Passage',
        null,
        'B3G 1M4',
        null,
        44.610916,
        -63.473,
        'Eastern Passage,B3G 1M4,CA-NS,Canada',
        'Town',
        'No',
        'Trillium',
        null,
        'CA-NS',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        377740000,
        619096140.125,
        996836140.125,
        16675719.618,
        null,
        1013511859.743,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '178 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Lévis',
        ' Pont de Québec',
        'G7A',
        null,
        46.744659,
        -71.287489,
        'BRIDGE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        909733729.005,
        0,
        909733729.005,
        20080564.134,
        null,
        929814293.139,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        '1031 Rue Mansfield',
        'H3B',
        null,
        45.4994,
        -73.5668,
        'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        331966714.5,
        544076114.78,
        876042829.28,
        14655010.996,
        null,
        890697840.276,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Ontario',
        null,
        'Toronto',
        null,
        'L4K 2N2',
        null,
        43.826182,
        -79.50579,
        'TORONTO,L4K 2N2,CA-ON,Canada',
        'Post code',
        'No',
        'Trillium',
        null,
        'CA-ON',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        270900000,
        443990957.695,
        714890957.695,
        11959158.269,
        null,
        726850115.964,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '588 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' Pont Victoria',
        'H3C',
        null,
        45.493286,
        -73.524334,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        551070162.13,
        0,
        551070162.13,
        12163778.675,
        null,
        563233940.805,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'United States (USA)',
        'Indiana',
        'Lake',
        'Gary',
        '1312 Martin Luther King Dr',
        46402,
        null,
        41.59128,
        -87.317687,
        'EJ&E,46401,USA-IN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IN-89',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        3000000,
        4916843.385,
        7916843.385,
        132438.076,
        null,
        8049281.461,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5912 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Pennsylvania',
        'Butler',
        'Butler',
        '177 Kittanning St',
        16001,
        null,
        40.859852,
        -79.884644,
        'BESSEMER,USA-PA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'PA-19',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7862691.863,
        0,
        7862691.863,
        173553.297,
        null,
        8036245.16,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6801 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Marathon',
        'Wausau',
        ' ',
        54403,
        null,
        44.9638,
        -89.6356,
        'VALLEY,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-73',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7855359.649,
        0,
        7855359.649,
        173391.453,
        null,
        8028751.102,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6619 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.9853,
        -88.74169,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7831897.607,
        0,
        7831897.607,
        172873.575,
        null,
        8004771.182,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '490 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Daveluyville',
        '119 Rue Principale',
        'G0Z 1B0',
        null,
        46.21275,
        -72.140044,
        'DRUMMONDVILLE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7822532.572,
        0,
        7822532.572,
        172666.861,
        null,
        7995199.433,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1893 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Moose Jaw',
        '251 Coteau St E',
        'S6H',
        null,
        50.382497,
        -105.527308,
        'CENTRAL BUTTE,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7797506.95,
        0,
        7797506.95,
        172114.47,
        null,
        7969621.42,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2907 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        '1558 E Hyde Park Blvd',
        60615,
        null,
        41.802572,
        -87.587233,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7784973.523,
        0,
        7784973.523,
        171837.819,
        null,
        7956811.342,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3924 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Macon',
        'Decatur',
        '237 W Lincoln Park Dr',
        62522,
        null,
        39.82767,
        -88.95837,
        'PEORIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-115',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7783508.125,
        0,
        7783508.125,
        171805.474,
        null,
        7955313.599,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5339 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Manitowoc',
        'Manitowoc',
        '2728 Clay Pit Rd',
        54220,
        null,
        44.10045,
        -87.67907,
        'MANITOWOC,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-71',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7779107.751,
        0,
        7779107.751,
        171708.344,
        null,
        7950816.095,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7289 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.97691,
        -88.7297,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7758328.966,
        0,
        7758328.966,
        171249.694,
        null,
        7929578.66,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6146 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' John Hart Hwy',
        'V0J',
        null,
        55.319602,
        -122.657693,
        'CHETWYND,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7722432.173,
        0,
        7722432.173,
        170457.343,
        null,
        7892889.516,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2913 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 60th St',
        60637,
        null,
        41.786117,
        -87.589048,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7711655.556,
        0,
        7711655.556,
        170219.471,
        null,
        7881875.027,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2912 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 59th St',
        60637,
        null,
        41.787909,
        -87.58864,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7711655.556,
        0,
        7711655.556,
        170219.471,
        null,
        7881875.027,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8810 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.26253,
        -121.545678,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7685733.838,
        0,
        7685733.838,
        169647.3,
        null,
        7855381.138,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '396 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Jean-Port-Joli',
        ' Autoroute Transcanadienne',
        'G0R',
        null,
        47.21201,
        -70.22742,
        'MONTMAGNY,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7670910.368,
        0,
        7670910.368,
        169320.102,
        null,
        7840230.47,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '724 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Brampton',
        '7945 Bramalea Rd',
        'L6T 4J9',
        null,
        43.702456,
        -79.68713,
        'HALTON,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7670910.368,
        0,
        7670910.368,
        169320.102,
        null,
        7840230.47,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5513 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Wood',
        'Babcock',
        ' WI-173',
        54413,
        null,
        44.299683,
        -90.120111,
        'VALLEY,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-141',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7660332.143,
        0,
        7660332.143,
        169086.609,
        null,
        7829418.752,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8835 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Skeena-Queen Charlotte',
        ' Trans Canada Hwy',
        'V0V',
        null,
        54.287254,
        -129.411883,
        'SKEENA,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7659957.292,
        0,
        7659957.292,
        169078.334,
        null,
        7829035.626,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8787 - Canadian National Railways - Telecom',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Homewood',
        null,
        60430,
        null,
        41.5567,
        -87.66522,
        'Homewood,60430,USA-IL,United States (USA)',
        'Post code',
        'Yes',
        'Trillium',
        null,
        'IL-31',
        'ACORD',
        'INDTEL999',
        'Telecommunication and data processing',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'Telecom',
        1301606.75,
        6399796.539,
        7701403.289,
        114921.529,
        null,
        7816324.818,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7234 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Indiana',
        'Lake',
        'Gary',
        '1232 N Clark Rd',
        46406,
        null,
        41.63028,
        -87.402638,
        'LAKEFRONT,USA-IN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IN-89',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7630383.912,
        0,
        7630383.912,
        168425.561,
        null,
        7798809.473,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1450 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Algoma',
        ' ',
        'P0M',
        null,
        49.196783,
        -84.540099,
        'RUEL,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7584057.539,
        0,
        7584057.539,
        167402.998,
        null,
        7751460.537,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3812 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' S Albany Ave',
        60632,
        null,
        41.826349,
        -87.702008,
        'JOLIET,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7576749.076,
        0,
        7576749.076,
        167241.678,
        null,
        7743990.754,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7996 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Ontario',
        null,
        'Vaughan',
        '134 Willis Rd',
        'L4L 2S2',
        null,
        43.794303,
        -79.580856,
        'Canadian National Railways,L4K 1B9,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2882400,
        4724103.125,
        7606503.125,
        127246.503,
        null,
        7733749.628,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8883 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        '17219 HWY-99',
        'V0K',
        null,
        50.752396,
        -121.84061,
        'LILLOOET,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7564789.01,
        0,
        7564789.01,
        166977.684,
        null,
        7731766.694,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6242 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Jackson',
        'Carbondale',
        ' ',
        62901,
        null,
        37.722199,
        -89.215389,
        'CENTRALIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-77',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7529824.992,
        0,
        7529824.992,
        166205.923,
        null,
        7696030.915,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6530 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' AUT-13',
        'H4T',
        null,
        45.47159,
        -73.70457,
        'ST LAURENT,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7523704.022,
        0,
        7523704.022,
        166070.814,
        null,
        7689774.836,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2468 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        53.446883,
        -120.432555,
        'FRASER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7514872.309,
        0,
        7514872.309,
        165875.872,
        null,
        7680748.181,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '375 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Senneterre',
        '450 1e Rue O',
        'J0Y',
        null,
        48.387608,
        -77.236244,
        'ST MAURICE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7510455.409,
        0,
        7510455.409,
        165778.377,
        null,
        7676233.786,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7304 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '2016 108th Ave W',
        55808,
        null,
        46.677259,
        -92.235553,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7502871.792,
        0,
        7502871.792,
        165610.984,
        null,
        7668482.776,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7305 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '2016 108th Ave W',
        55808,
        null,
        46.677259,
        -92.235553,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7502871.792,
        0,
        7502871.792,
        165610.984,
        null,
        7668482.776,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2754 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Oakland',
        'Royal Oak',
        ' E 10 Mile Rd',
        48067,
        null,
        42.47609,
        -83.13664,
        'HOLLY,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-125',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7482900.908,
        0,
        7482900.908,
        165170.167,
        null,
        7648071.075,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6529 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Dorval',
        '1117 Trans Canada Hwy',
        'H9P',
        null,
        45.4901,
        -73.76652,
        'DEUX MONTAGNES,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7482486.579,
        0,
        7482486.579,
        165161.021,
        null,
        7647647.6,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3889 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Logan',
        'Mt Pulaski',
        ' 1525th Ave',
        62548,
        null,
        40.05299,
        -89.30601,
        'PEORIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7475569.738,
        0,
        7475569.738,
        165008.346,
        null,
        7640578.084,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1659 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Portage la Prairie RM',
        ' McIntyre Rd',
        'R0H',
        null,
        49.989151,
        -98.381536,
        'GLADSTONE,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7464821.066,
        0,
        7464821.066,
        164771.09,
        null,
        7629592.156,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8802 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.500682,
        -121.285846,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7455268.673,
        0,
        7455268.673,
        164560.24,
        null,
        7619828.913,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2721 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Genesee',
        'Flint',
        ' I-75',
        48507,
        null,
        42.98242,
        -83.73119,
        'FLINT,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-49',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7430111.053,
        0,
        7430111.053,
        164004.935,
        null,
        7594115.988,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6424 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '956 Kenaston Blvd',
        'R3P',
        null,
        49.847582,
        -97.207759,
        'RIVERS,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7411827.657,
        0,
        7411827.657,
        163601.366,
        null,
        7575429.023,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2206 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Strathcona County',
        ' Range Road 230',
        'T8A',
        null,
        53.565446,
        -113.246586,
        'WAINWRIGHT,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7391217.893,
        0,
        7391217.893,
        163146.446,
        null,
        7554364.339,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2582 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Bulkley-Nechako',
        ' Morice Telkwa Forest Service Rd',
        'V0J',
        null,
        54.44478,
        -126.809273,
        'TELKWA,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7391217.893,
        0,
        7391217.893,
        163146.446,
        null,
        7554364.339,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2210 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Edmonton',
        ' 50 St NW',
        'T5W',
        null,
        53.583519,
        -113.418312,
        'WAINWRIGHT,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7351473.097,
        0,
        7351473.097,
        162269.159,
        null,
        7513742.256,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6106 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'West Vancouver',
        '4398 Keith Rd',
        'V7W 2M2',
        null,
        49.343877,
        -123.242054,
        'SQUAMISH,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7350000.45,
        0,
        7350000.45,
        162236.653,
        null,
        7512237.103,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '389 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Philippe-de-Néri',
        '295 RTE-230',
        'G0L',
        null,
        47.44051,
        -69.92187,
        'MONTMAGNY,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7344112.988,
        0,
        7344112.988,
        162106.699,
        null,
        7506219.687,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6278 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Kentucky',
        'Ballard',
        'Barlow',
        ' E Cairo Rd',
        42024,
        null,
        37.000116,
        -89.141002,
        'CAIRO,USA-KY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'KY-7',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7320133.058,
        0,
        7320133.058,
        161577.39,
        null,
        7481710.448,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2964 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Harvey',
        ' E 155th St',
        60426,
        null,
        41.608146,
        -87.643644,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7320133.058,
        0,
        7320133.058,
        161577.39,
        null,
        7481710.448,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3371 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Holmes',
        'Tchula',
        ' US-49E',
        39169,
        null,
        33.035662,
        -90.330855,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-51',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7299604.946,
        0,
        7299604.946,
        161124.273,
        null,
        7460729.219,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6033 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Douglas',
        'Superior',
        ' E Old 105',
        54880,
        null,
        46.65527,
        -92.16399,
        'SUPERIOR,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7295204.573,
        0,
        7295204.573,
        161027.143,
        null,
        7456231.716,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8884 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        ' Sea To Sky Hwy',
        'V0N',
        null,
        49.606757,
        -123.218024,
        'SQUAMISH,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7259357.535,
        0,
        7259357.535,
        160235.891,
        null,
        7419593.426,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '584 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Lambert',
        ' ',
        'J4R',
        null,
        45.492963,
        -73.514363,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7254316.95,
        0,
        7254316.95,
        160124.63,
        null,
        7414441.58,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1025 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Welland',
        ' Townline Tunnel Rd',
        'L3B',
        null,
        42.9586,
        -79.20069,
        'STAMFORD,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7249901.093,
        0,
        7249901.093,
        160027.159,
        null,
        7409928.252,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2906 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' Mines Dr',
        60616,
        null,
        41.854184,
        -87.617258,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7239483.921,
        0,
        7239483.921,
        159797.22,
        null,
        7399281.141,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '329 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Gédéon',
        '524 Chemin 5e',
        'G0W',
        null,
        48.480754,
        -71.793669,
        'LAC ST JEAN,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7227819.724,
        0,
        7227819.724,
        159539.756,
        null,
        7387359.48,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5885 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Laval',
        '29 Chemin du Tour',
        'H7Y 1G5',
        null,
        45.521639,
        -73.855355,
        'DEUX MONTAGNES,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7208682.607,
        0,
        7208682.607,
        159117.343,
        null,
        7367799.95,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4743 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Hamilton',
        'Webster City',
        ' ',
        50595,
        null,
        42.471529,
        -93.810204,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-79',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7201357.45,
        0,
        7201357.45,
        158955.654,
        null,
        7360313.104,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1602 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '182 Waterfront Dr',
        'R3B',
        null,
        49.894893,
        -97.132831,
        'REDDITT,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7170409.416,
        0,
        7170409.416,
        158272.538,
        null,
        7328681.954,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2059 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Alberta',
        ' Trans Canada Hwy',
        'T0E',
        null,
        53.185508,
        -117.990743,
        'EDSON,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7160105.055,
        0,
        7160105.055,
        158045.09,
        null,
        7318150.145,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '284 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Prosper-de-Champlain',
        ' Rang St-Charles',
        'G0X',
        null,
        46.65962,
        -72.251362,
        'LA TUQUE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7155689.199,
        0,
        7155689.199,
        157947.618,
        null,
        7313636.817,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4374 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Louisiana',
        'Washington',
        'Angie',
        ' La-436-1',
        70426,
        null,
        30.884458,
        -89.833333,
        'BOGALUSA,USA-LA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'LA-117',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7119240.825,
        0,
        7119240.825,
        157143.093,
        null,
        7276383.918,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '716 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Vaughan',
        '7135 Islington Ave',
        'L4L 1V9',
        null,
        43.76837,
        -79.57692,
        'HALTON,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7118887.612,
        0,
        7118887.612,
        157135.297,
        null,
        7276022.909,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5642 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Rusk',
        'Ladysmith',
        'N6416 Bass Lake Rd',
        54848,
        null,
        45.519907,
        -91.1458,
        'SUPERIOR,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7110442.168,
        0,
        7110442.168,
        156948.88,
        null,
        7267391.048,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6984 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        'Lake',
        'Two Harbors',
        ' ',
        55616,
        null,
        47.018608,
        -91.686975,
        'IRON RANGE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MN-75',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7109283.845,
        0,
        7109283.845,
        156923.312,
        null,
        7266207.157,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4790 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Sac',
        'Auburn',
        ' 335th St',
        51433,
        null,
        42.29911,
        -94.8832,
        'OMAHA,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-161',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7103109.953,
        0,
        7103109.953,
        156787.036,
        null,
        7259896.989,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7264 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Quitman',
        'Marks',
        ' MS-3',
        38646,
        null,
        34.29474,
        -90.27172,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-119',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7092507.487,
        0,
        7092507.487,
        156553.008,
        null,
        7249060.495,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2859 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        ' ',
        48120,
        null,
        42.301429,
        -83.179138,
        'DEARBORN,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-163',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7089913.012,
        0,
        7089913.012,
        156495.74,
        null,
        7246408.752,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8841 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser Valley',
        ' Trans Canada Hwy',
        'V0K',
        null,
        49.757371,
        -121.426978,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7073179.219,
        0,
        7073179.219,
        156126.375,
        null,
        7229305.594,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1749 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Portage la Prairie RM',
        ' ',
        'R0H',
        null,
        49.978023,
        -98.381776,
        'RIVERS,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7068836.369,
        0,
        7068836.369,
        156030.515,
        null,
        7224866.884,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5753 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Clark',
        'Withee',
        'W6490 CR-X',
        54498,
        null,
        44.9529,
        -90.63895,
        'MINNEAPOLIS,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-19',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7063519.128,
        0,
        7063519.128,
        155913.147,
        null,
        7219432.275,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8808 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.258727,
        -121.516392,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7047403.716,
        0,
        7047403.716,
        155557.432,
        null,
        7202961.148,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6583 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.98368,
        -88.73946,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7034191.315,
        0,
        7034191.315,
        155265.794,
        null,
        7189457.109,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5299 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Outagamie',
        'Appleton',
        ' ',
        54911,
        null,
        44.25539,
        -88.39384,
        'FOX RIVER,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-87',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7026859.1,
        0,
        7026859.1,
        155103.95,
        null,
        7181963.05,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2963 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Harvey',
        ' E 154th St',
        60426,
        null,
        41.609948,
        -87.642676,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7026859.1,
        0,
        7026859.1,
        155103.95,
        null,
        7181963.05,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3759 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Logan',
        'Mt Pulaski',
        '1108 IL-54',
        62548,
        null,
        39.95136,
        -89.38403,
        'GILMAN,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7022460.816,
        0,
        7022460.816,
        155006.867,
        null,
        7177467.683,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3397 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Madison',
        'Flora',
        '339 Ratliff Rd',
        39071,
        null,
        32.610774,
        -90.339309,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-89',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7016594,
        0,
        7016594,
        154877.368,
        null,
        7171471.368,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3493 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Pike',
        'McComb',
        '3159 Airport Fernwood Rd',
        39648,
        null,
        31.18973,
        -90.44595,
        'MCCOMB,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-113',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7006329.944,
        0,
        7006329.944,
        154650.81,
        null,
        7160980.754,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6730 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Rimouski',
        '126 Boulevard de la Rivière',
        'G5L',
        null,
        48.44296,
        -68.53634,
        'MONT-JOLI,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6993762.635,
        0,
        6993762.635,
        154373.411,
        null,
        7148136.046,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6035 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '773 E McCuen St',
        55808,
        null,
        46.65807,
        -92.21394,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6991666.56,
        0,
        6991666.56,
        154327.145,
        null,
        7145993.705,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1374 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Bracebridge',
        '101 Ecclestone Dr',
        'P1L',
        null,
        45.03895,
        -79.30743,
        'NEWMARKET,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6981985.626,
        0,
        6981985.626,
        154113.457,
        null,
        7136099.083,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1055 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'South Glengarry',
        '20098 Wentworth Rd',
        'K0C',
        null,
        45.131114,
        -74.522127,
        'KINGSTON WEST,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6977568.727,
        0,
        6977568.727,
        154015.963,
        null,
        7131584.69,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '446 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Macamic',
        ' 7e Avenue E',
        'J0Z',
        null,
        48.753315,
        -78.99243,
        'TASCHEREAU,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6965792.761,
        0,
        6965792.761,
        153756.032,
        null,
        7119548.793,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6212 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Peace River',
        ' Range Road 245',
        'V0C',
        null,
        55.778081,
        -120.598021,
        'DAWSON CREEK,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6952545.191,
        0,
        6952545.191,
        153463.618,
        null,
        7106008.809,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4051 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        '65 E Calhoun Ave',
        38103,
        null,
        35.132682,
        -90.059752,
        'MEMPHIS,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6918347.548,
        0,
        6918347.548,
        152708.773,
        null,
        7071056.321,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '23 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Nova Scotia',
        null,
        'Halifax',
        '677 Young Ave',
        'B3H',
        null,
        44.62937,
        -63.5728,
        'BEDFORD,CA-NS,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-NS',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6912798.31,
        0,
        6912798.31,
        152586.285,
        null,
        7065384.595,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6635 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Black Hawk',
        'Waterloo',
        ' US-218',
        50701,
        null,
        42.507263,
        -92.373347,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-13',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6903683.119,
        0,
        6903683.119,
        152385.085,
        null,
        7056068.204,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2015 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Edmonton',
        ' 127 St NW',
        'T5L',
        null,
        53.583601,
        -113.541134,
        'EDSON,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6901022.344,
        0,
        6901022.344,
        152326.354,
        null,
        7053348.698,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8369 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '324 Pandora Ave E',
        'R2C 5K8',
        null,
        49.891413,
        -96.996123,
        'Canadian National Railways,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2625000,
        4302237.962,
        6927237.962,
        115883.317,
        null,
        7043121.279,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6333 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Big Lakes County',
        ' Range Road 100A',
        'T0G',
        null,
        55.33628,
        -115.41367,
        'SLAVE LAKE,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6871580.866,
        0,
        6871580.866,
        151676.492,
        null,
        7023257.358,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4193 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Forrest',
        'Hattiesburg',
        '189 Peps Point Rd',
        39401,
        null,
        31.395751,
        -89.366675,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-35',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6861158.364,
        0,
        6861158.364,
        151446.436,
        null,
        7012604.8,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2134 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Sturgeon County',
        '26305 HWY-633',
        'T8T',
        null,
        53.6578,
        -113.76248,
        'SANGUDO,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6855389.044,
        0,
        6855389.044,
        151319.089,
        null,
        7006708.133,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2464 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        53.353039,
        -120.285831,
        'FRASER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6849499.497,
        0,
        6849499.497,
        151189.089,
        null,
        7000688.586,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2928 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 83rd St',
        60619,
        null,
        41.74407,
        -87.598545,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6831831.595,
        0,
        6831831.595,
        150799.105,
        null,
        6982630.7,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3310 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        ' Heard Ave',
        38108,
        null,
        35.183025,
        -89.964261,
        'FULTON,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6818633.609,
        0,
        6818633.609,
        150507.786,
        null,
        6969141.395,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7912 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        54.072053,
        -122.366645,
        'Canadian National Railways,V0J 1A0,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2592000,
        4248152.685,
        6840152.685,
        114426.498,
        null,
        6954579.183,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2451 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' ',
        'V0E',
        null,
        51.690792,
        -119.40953,
        'CLEARWATER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6802393.55,
        0,
        6802393.55,
        150149.319,
        null,
        6952542.869,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2163 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Woodlands County',
        ' Township Road 600',
        'T0E',
        null,
        54.13861,
        -115.505443,
        'SANGUDO,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6799450.341,
        0,
        6799450.341,
        150084.354,
        null,
        6949534.695,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3313 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        ' Lamar Ave',
        38114,
        null,
        35.108805,
        -89.989103,
        'SHELBY,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6758512.583,
        0,
        6758512.583,
        149180.734,
        null,
        6907693.317,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8786 - Canadian National Railways - Telecom',
        1,
        'Canada',
        'Ontario',
        null,
        'MacMillan yard',
        null,
        'L4A 1B9',
        null,
        43.97002,
        -79.25284,
        'MacMillan yard,L4A 1B9,CA-ON,Canada',
        'Post code',
        'Yes',
        'Trillium',
        null,
        'CA-ON',
        'ACORD',
        'INDTEL999',
        'Telecommunication and data processing',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'Telecom',
        1148703,
        5647992.747,
        6796695.747,
        101421.344,
        null,
        6898117.091,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8885 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        ' ',
        'V0K',
        null,
        50.96188,
        -121.851183,
        'LILLOOET,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        6741184.812,
        0,
        6741184.812,
        148798.258,
        null,
        6889983.07,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4733 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Hardin',
        'Iowa Falls',
        '132 Park Ave',
        50126,
        null,
        42.518357,
        -93.258509,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-83',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6733584.098,
        0,
        6733584.098,
        148630.487,
        null,
        6882214.585,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1470 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Saginaw',
        '6209 Bachelor Rd',
        55779,
        null,
        46.95207,
        -92.33011,
        'RAINY DWP,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6717454.271,
        0,
        6717454.271,
        148274.453,
        null,
        6865728.724,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '824 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Chatham-Kent',
        '12871 River Line',
        'N0P 2K0',
        null,
        42.54095,
        -81.98746,
        'CHATHAM,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6705237.403,
        0,
        6705237.403,
        148004.79,
        null,
        6853242.193,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8415 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Melville',
        ' ',
        'S0A',
        null,
        50.922359,
        -102.802828,
        'Canadian National Railways,S0A 2P0,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2550000,
        4179316.878,
        6729316.878,
        112572.365,
        null,
        6841889.243,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8874 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        54.831867,
        -121.748149,
        'TUMBLER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        544024224.803,
        0,
        544024224.803,
        12008253.611,
        null,
        556032478.414,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3158 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Alexander',
        'Cairo',
        ' Commercial Ave',
        62914,
        null,
        37.022936,
        -89.17554,
        'CAIRO,USA-KY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-3',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        517928014.951,
        0,
        517928014.951,
        11432231.64,
        null,
        529360246.591,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '11 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Quebec',
        null,
        'Taschereau',
        null,
        'H4T 1T1',
        null,
        45.4867,
        -73.68565,
        'Taschereau,H4T 1T1,CA-QC,Canada',
        'Post code',
        'No',
        'Trillium',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        183217500,
        300283917.651,
        483501417.651,
        8088324.401,
        null,
        491589742.052,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8851 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Vancouver',
        '3645 Fellowes St',
        'V5K',
        null,
        49.292018,
        -123.024226,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        425547662.764,
        0,
        425547662.764,
        9393118.955,
        null,
        434940781.719,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8895 - Canadian National Railways - WHARVES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        ' Courtland St',
        55806,
        null,
        46.753495,
        -92.129158,
        'WISCONSIN CENTRAL LTD.,55807,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'WHARVES',
        159219189.362,
        260951939.345,
        420171128.707,
        7028894.371,
        null,
        427200023.078,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '19 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        null,
        48123,
        null,
        42.302325,
        -83.260552,
        'DEARBORN,48123,USA-MI,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'MI-163',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        24722763,
        40519317.908,
        65242080.908,
        1091411.722,
        null,
        66333492.63,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6296 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Peace River',
        ' HWY-2',
        'T8S',
        null,
        56.23954,
        -117.30198,
        'PEACE RIVER,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        63520905.831,
        0,
        63520905.831,
        1402097.76,
        null,
        64923003.591,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1990 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Battle River No 438',
        ' ',
        'S0M',
        null,
        52.828117,
        -108.359367,
        'BLACKFOOT,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        62254933.754,
        0,
        62254933.754,
        1374153.942,
        null,
        63629087.696,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '564 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Otterburn Park',
        '627 Chemin des Patriotes',
        'J3H 1Z4',
        null,
        45.548053,
        -73.209487,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        61255404.497,
        0,
        61255404.497,
        1352091.32,
        null,
        62607495.817,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6018 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '99 33rd Ave W',
        55806,
        null,
        46.75454,
        -92.13856,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        59935059.835,
        0,
        59935059.835,
        1322947.336,
        null,
        61258007.171,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '928 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Lincoln',
        '4162 Bridgeport Dr',
        'L0R',
        null,
        43.165208,
        -79.370289,
        'GRIMSBY,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        59223959.209,
        0,
        59223959.209,
        1307251.202,
        null,
        60531210.411,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6019 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '99 33rd Ave W',
        55806,
        null,
        46.75454,
        -92.13856,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        58698906.961,
        0,
        58698906.961,
        1295661.718,
        null,
        59994568.679,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '589 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' Pont Victoria',
        'H3C',
        null,
        45.49185,
        -73.528795,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        1061356016.651,
        0,
        1061356016.651,
        23427324.811,
        null,
        1084783341.462,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Nova Scotia',
        null,
        'Eastern Passage',
        null,
        'B3G 1M4',
        null,
        44.610916,
        -63.473,
        'Eastern Passage,B3G 1M4,CA-NS,Canada',
        'Town',
        'No',
        'Trillium',
        null,
        'CA-NS',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        377740000,
        619096140.125,
        996836140.125,
        16675719.618,
        null,
        1013511859.743,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '178 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Lévis',
        ' Pont de Québec',
        'G7A',
        null,
        46.744659,
        -71.287489,
        'BRIDGE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        909733729.005,
        0,
        909733729.005,
        20080564.134,
        null,
        929814293.139,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        '1031 Rue Mansfield',
        'H3B',
        null,
        45.4994,
        -73.5668,
        'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        331966714.5,
        544076114.78,
        876042829.28,
        14655010.996,
        null,
        890697840.276,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Ontario',
        null,
        'Toronto',
        null,
        'L4K 2N2',
        null,
        43.826182,
        -79.50579,
        'TORONTO,L4K 2N2,CA-ON,Canada',
        'Post code',
        'No',
        'Trillium',
        null,
        'CA-ON',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        270900000,
        443990957.695,
        714890957.695,
        11959158.269,
        null,
        726850115.964,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '588 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' Pont Victoria',
        'H3C',
        null,
        45.493286,
        -73.524334,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        551070162.13,
        0,
        551070162.13,
        12163778.675,
        null,
        563233940.805,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'United States (USA)',
        'Indiana',
        'Lake',
        'Gary',
        '1312 Martin Luther King Dr',
        46402,
        null,
        41.59128,
        -87.317687,
        'EJ&E,46401,USA-IN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IN-89',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        3000000,
        4916843.385,
        7916843.385,
        132438.076,
        null,
        8049281.461,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5912 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Pennsylvania',
        'Butler',
        'Butler',
        '177 Kittanning St',
        16001,
        null,
        40.859852,
        -79.884644,
        'BESSEMER,USA-PA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'PA-19',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7862691.863,
        0,
        7862691.863,
        173553.297,
        null,
        8036245.16,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6801 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Marathon',
        'Wausau',
        ' ',
        54403,
        null,
        44.9638,
        -89.6356,
        'VALLEY,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-73',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7855359.649,
        0,
        7855359.649,
        173391.453,
        null,
        8028751.102,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6619 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.9853,
        -88.74169,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7831897.607,
        0,
        7831897.607,
        172873.575,
        null,
        8004771.182,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '490 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Daveluyville',
        '119 Rue Principale',
        'G0Z 1B0',
        null,
        46.21275,
        -72.140044,
        'DRUMMONDVILLE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7822532.572,
        0,
        7822532.572,
        172666.861,
        null,
        7995199.433,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1893 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Moose Jaw',
        '251 Coteau St E',
        'S6H',
        null,
        50.382497,
        -105.527308,
        'CENTRAL BUTTE,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7797506.95,
        0,
        7797506.95,
        172114.47,
        null,
        7969621.42,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2907 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        '1558 E Hyde Park Blvd',
        60615,
        null,
        41.802572,
        -87.587233,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7784973.523,
        0,
        7784973.523,
        171837.819,
        null,
        7956811.342,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3924 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Macon',
        'Decatur',
        '237 W Lincoln Park Dr',
        62522,
        null,
        39.82767,
        -88.95837,
        'PEORIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-115',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7783508.125,
        0,
        7783508.125,
        171805.474,
        null,
        7955313.599,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5339 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Manitowoc',
        'Manitowoc',
        '2728 Clay Pit Rd',
        54220,
        null,
        44.10045,
        -87.67907,
        'MANITOWOC,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-71',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7779107.751,
        0,
        7779107.751,
        171708.344,
        null,
        7950816.095,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7289 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.97691,
        -88.7297,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7758328.966,
        0,
        7758328.966,
        171249.694,
        null,
        7929578.66,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6146 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' John Hart Hwy',
        'V0J',
        null,
        55.319602,
        -122.657693,
        'CHETWYND,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7722432.173,
        0,
        7722432.173,
        170457.343,
        null,
        7892889.516,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2913 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 60th St',
        60637,
        null,
        41.786117,
        -87.589048,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7711655.556,
        0,
        7711655.556,
        170219.471,
        null,
        7881875.027,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2912 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 59th St',
        60637,
        null,
        41.787909,
        -87.58864,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7711655.556,
        0,
        7711655.556,
        170219.471,
        null,
        7881875.027,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8810 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.26253,
        -121.545678,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7685733.838,
        0,
        7685733.838,
        169647.3,
        null,
        7855381.138,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '396 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Jean-Port-Joli',
        ' Autoroute Transcanadienne',
        'G0R',
        null,
        47.21201,
        -70.22742,
        'MONTMAGNY,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7670910.368,
        0,
        7670910.368,
        169320.102,
        null,
        7840230.47,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '724 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Brampton',
        '7945 Bramalea Rd',
        'L6T 4J9',
        null,
        43.702456,
        -79.68713,
        'HALTON,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7670910.368,
        0,
        7670910.368,
        169320.102,
        null,
        7840230.47,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5513 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Wood',
        'Babcock',
        ' WI-173',
        54413,
        null,
        44.299683,
        -90.120111,
        'VALLEY,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-141',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7660332.143,
        0,
        7660332.143,
        169086.609,
        null,
        7829418.752,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8835 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Skeena-Queen Charlotte',
        ' Trans Canada Hwy',
        'V0V',
        null,
        54.287254,
        -129.411883,
        'SKEENA,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7659957.292,
        0,
        7659957.292,
        169078.334,
        null,
        7829035.626,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8787 - Canadian National Railways - Telecom',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Homewood',
        null,
        60430,
        null,
        41.5567,
        -87.66522,
        'Homewood,60430,USA-IL,United States (USA)',
        'Post code',
        'Yes',
        'Trillium',
        null,
        'IL-31',
        'ACORD',
        'INDTEL999',
        'Telecommunication and data processing',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'Telecom',
        1301606.75,
        6399796.539,
        7701403.289,
        114921.529,
        null,
        7816324.818,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7234 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Indiana',
        'Lake',
        'Gary',
        '1232 N Clark Rd',
        46406,
        null,
        41.63028,
        -87.402638,
        'LAKEFRONT,USA-IN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IN-89',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7630383.912,
        0,
        7630383.912,
        168425.561,
        null,
        7798809.473,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1450 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Algoma',
        ' ',
        'P0M',
        null,
        49.196783,
        -84.540099,
        'RUEL,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7584057.539,
        0,
        7584057.539,
        167402.998,
        null,
        7751460.537,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3812 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' S Albany Ave',
        60632,
        null,
        41.826349,
        -87.702008,
        'JOLIET,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7576749.076,
        0,
        7576749.076,
        167241.678,
        null,
        7743990.754,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7996 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Ontario',
        null,
        'Vaughan',
        '134 Willis Rd',
        'L4L 2S2',
        null,
        43.794303,
        -79.580856,
        'Canadian National Railways,L4K 1B9,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2882400,
        4724103.125,
        7606503.125,
        127246.503,
        null,
        7733749.628,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8883 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        '17219 HWY-99',
        'V0K',
        null,
        50.752396,
        -121.84061,
        'LILLOOET,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7564789.01,
        0,
        7564789.01,
        166977.684,
        null,
        7731766.694,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6242 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Jackson',
        'Carbondale',
        ' ',
        62901,
        null,
        37.722199,
        -89.215389,
        'CENTRALIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-77',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7529824.992,
        0,
        7529824.992,
        166205.923,
        null,
        7696030.915,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6530 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' AUT-13',
        'H4T',
        null,
        45.47159,
        -73.70457,
        'ST LAURENT,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7523704.022,
        0,
        7523704.022,
        166070.814,
        null,
        7689774.836,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2468 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        53.446883,
        -120.432555,
        'FRASER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7514872.309,
        0,
        7514872.309,
        165875.872,
        null,
        7680748.181,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '375 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Senneterre',
        '450 1e Rue O',
        'J0Y',
        null,
        48.387608,
        -77.236244,
        'ST MAURICE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7510455.409,
        0,
        7510455.409,
        165778.377,
        null,
        7676233.786,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7304 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '2016 108th Ave W',
        55808,
        null,
        46.677259,
        -92.235553,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7502871.792,
        0,
        7502871.792,
        165610.984,
        null,
        7668482.776,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7305 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '2016 108th Ave W',
        55808,
        null,
        46.677259,
        -92.235553,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7502871.792,
        0,
        7502871.792,
        165610.984,
        null,
        7668482.776,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2754 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Oakland',
        'Royal Oak',
        ' E 10 Mile Rd',
        48067,
        null,
        42.47609,
        -83.13664,
        'HOLLY,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-125',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7482900.908,
        0,
        7482900.908,
        165170.167,
        null,
        7648071.075,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6529 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Dorval',
        '1117 Trans Canada Hwy',
        'H9P',
        null,
        45.4901,
        -73.76652,
        'DEUX MONTAGNES,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7482486.579,
        0,
        7482486.579,
        165161.021,
        null,
        7647647.6,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3889 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Logan',
        'Mt Pulaski',
        ' 1525th Ave',
        62548,
        null,
        40.05299,
        -89.30601,
        'PEORIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7475569.738,
        0,
        7475569.738,
        165008.346,
        null,
        7640578.084,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1659 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Portage la Prairie RM',
        ' McIntyre Rd',
        'R0H',
        null,
        49.989151,
        -98.381536,
        'GLADSTONE,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7464821.066,
        0,
        7464821.066,
        164771.09,
        null,
        7629592.156,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8802 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.500682,
        -121.285846,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7455268.673,
        0,
        7455268.673,
        164560.24,
        null,
        7619828.913,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2721 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Genesee',
        'Flint',
        ' I-75',
        48507,
        null,
        42.98242,
        -83.73119,
        'FLINT,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-49',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7430111.053,
        0,
        7430111.053,
        164004.935,
        null,
        7594115.988,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6424 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '956 Kenaston Blvd',
        'R3P',
        null,
        49.847582,
        -97.207759,
        'RIVERS,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7411827.657,
        0,
        7411827.657,
        163601.366,
        null,
        7575429.023,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2206 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Strathcona County',
        ' Range Road 230',
        'T8A',
        null,
        53.565446,
        -113.246586,
        'WAINWRIGHT,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7391217.893,
        0,
        7391217.893,
        163146.446,
        null,
        7554364.339,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2582 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Bulkley-Nechako',
        ' Morice Telkwa Forest Service Rd',
        'V0J',
        null,
        54.44478,
        -126.809273,
        'TELKWA,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7391217.893,
        0,
        7391217.893,
        163146.446,
        null,
        7554364.339,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2210 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Edmonton',
        ' 50 St NW',
        'T5W',
        null,
        53.583519,
        -113.418312,
        'WAINWRIGHT,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7351473.097,
        0,
        7351473.097,
        162269.159,
        null,
        7513742.256,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6106 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'West Vancouver',
        '4398 Keith Rd',
        'V7W 2M2',
        null,
        49.343877,
        -123.242054,
        'SQUAMISH,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7350000.45,
        0,
        7350000.45,
        162236.653,
        null,
        7512237.103,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '389 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Philippe-de-Néri',
        '295 RTE-230',
        'G0L',
        null,
        47.44051,
        -69.92187,
        'MONTMAGNY,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7344112.988,
        0,
        7344112.988,
        162106.699,
        null,
        7506219.687,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6278 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Kentucky',
        'Ballard',
        'Barlow',
        ' E Cairo Rd',
        42024,
        null,
        37.000116,
        -89.141002,
        'CAIRO,USA-KY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'KY-7',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7320133.058,
        0,
        7320133.058,
        161577.39,
        null,
        7481710.448,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2964 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Harvey',
        ' E 155th St',
        60426,
        null,
        41.608146,
        -87.643644,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7320133.058,
        0,
        7320133.058,
        161577.39,
        null,
        7481710.448,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3371 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Holmes',
        'Tchula',
        ' US-49E',
        39169,
        null,
        33.035662,
        -90.330855,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-51',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7299604.946,
        0,
        7299604.946,
        161124.273,
        null,
        7460729.219,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6033 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Douglas',
        'Superior',
        ' E Old 105',
        54880,
        null,
        46.65527,
        -92.16399,
        'SUPERIOR,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7295204.573,
        0,
        7295204.573,
        161027.143,
        null,
        7456231.716,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8884 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        ' Sea To Sky Hwy',
        'V0N',
        null,
        49.606757,
        -123.218024,
        'SQUAMISH,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7259357.535,
        0,
        7259357.535,
        160235.891,
        null,
        7419593.426,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '584 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Lambert',
        ' ',
        'J4R',
        null,
        45.492963,
        -73.514363,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7254316.95,
        0,
        7254316.95,
        160124.63,
        null,
        7414441.58,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1025 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Welland',
        ' Townline Tunnel Rd',
        'L3B',
        null,
        42.9586,
        -79.20069,
        'STAMFORD,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7249901.093,
        0,
        7249901.093,
        160027.159,
        null,
        7409928.252,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2906 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' Mines Dr',
        60616,
        null,
        41.854184,
        -87.617258,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7239483.921,
        0,
        7239483.921,
        159797.22,
        null,
        7399281.141,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '329 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Gédéon',
        '524 Chemin 5e',
        'G0W',
        null,
        48.480754,
        -71.793669,
        'LAC ST JEAN,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7227819.724,
        0,
        7227819.724,
        159539.756,
        null,
        7387359.48,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5885 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Laval',
        '29 Chemin du Tour',
        'H7Y 1G5',
        null,
        45.521639,
        -73.855355,
        'DEUX MONTAGNES,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7208682.607,
        0,
        7208682.607,
        159117.343,
        null,
        7367799.95,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4743 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Hamilton',
        'Webster City',
        ' ',
        50595,
        null,
        42.471529,
        -93.810204,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-79',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7201357.45,
        0,
        7201357.45,
        158955.654,
        null,
        7360313.104,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1602 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '182 Waterfront Dr',
        'R3B',
        null,
        49.894893,
        -97.132831,
        'REDDITT,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7170409.416,
        0,
        7170409.416,
        158272.538,
        null,
        7328681.954,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2059 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Alberta',
        ' Trans Canada Hwy',
        'T0E',
        null,
        53.185508,
        -117.990743,
        'EDSON,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7160105.055,
        0,
        7160105.055,
        158045.09,
        null,
        7318150.145,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '284 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Prosper-de-Champlain',
        ' Rang St-Charles',
        'G0X',
        null,
        46.65962,
        -72.251362,
        'LA TUQUE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7155689.199,
        0,
        7155689.199,
        157947.618,
        null,
        7313636.817,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4374 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Louisiana',
        'Washington',
        'Angie',
        ' La-436-1',
        70426,
        null,
        30.884458,
        -89.833333,
        'BOGALUSA,USA-LA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'LA-117',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7119240.825,
        0,
        7119240.825,
        157143.093,
        null,
        7276383.918,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '716 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Vaughan',
        '7135 Islington Ave',
        'L4L 1V9',
        null,
        43.76837,
        -79.57692,
        'HALTON,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7118887.612,
        0,
        7118887.612,
        157135.297,
        null,
        7276022.909,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5642 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Rusk',
        'Ladysmith',
        'N6416 Bass Lake Rd',
        54848,
        null,
        45.519907,
        -91.1458,
        'SUPERIOR,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7110442.168,
        0,
        7110442.168,
        156948.88,
        null,
        7267391.048,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6984 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        'Lake',
        'Two Harbors',
        ' ',
        55616,
        null,
        47.018608,
        -91.686975,
        'IRON RANGE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MN-75',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7109283.845,
        0,
        7109283.845,
        156923.312,
        null,
        7266207.157,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4790 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Sac',
        'Auburn',
        ' 335th St',
        51433,
        null,
        42.29911,
        -94.8832,
        'OMAHA,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-161',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7103109.953,
        0,
        7103109.953,
        156787.036,
        null,
        7259896.989,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7264 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Quitman',
        'Marks',
        ' MS-3',
        38646,
        null,
        34.29474,
        -90.27172,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-119',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7092507.487,
        0,
        7092507.487,
        156553.008,
        null,
        7249060.495,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2859 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        ' ',
        48120,
        null,
        42.301429,
        -83.179138,
        'DEARBORN,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-163',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7089913.012,
        0,
        7089913.012,
        156495.74,
        null,
        7246408.752,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8841 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser Valley',
        ' Trans Canada Hwy',
        'V0K',
        null,
        49.757371,
        -121.426978,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7073179.219,
        0,
        7073179.219,
        156126.375,
        null,
        7229305.594,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1749 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Portage la Prairie RM',
        ' ',
        'R0H',
        null,
        49.978023,
        -98.381776,
        'RIVERS,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7068836.369,
        0,
        7068836.369,
        156030.515,
        null,
        7224866.884,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5753 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Clark',
        'Withee',
        'W6490 CR-X',
        54498,
        null,
        44.9529,
        -90.63895,
        'MINNEAPOLIS,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-19',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7063519.128,
        0,
        7063519.128,
        155913.147,
        null,
        7219432.275,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8808 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.258727,
        -121.516392,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7047403.716,
        0,
        7047403.716,
        155557.432,
        null,
        7202961.148,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6583 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.98368,
        -88.73946,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7034191.315,
        0,
        7034191.315,
        155265.794,
        null,
        7189457.109,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5299 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Outagamie',
        'Appleton',
        ' ',
        54911,
        null,
        44.25539,
        -88.39384,
        'FOX RIVER,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-87',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7026859.1,
        0,
        7026859.1,
        155103.95,
        null,
        7181963.05,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2963 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Harvey',
        ' E 154th St',
        60426,
        null,
        41.609948,
        -87.642676,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7026859.1,
        0,
        7026859.1,
        155103.95,
        null,
        7181963.05,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3759 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Logan',
        'Mt Pulaski',
        '1108 IL-54',
        62548,
        null,
        39.95136,
        -89.38403,
        'GILMAN,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7022460.816,
        0,
        7022460.816,
        155006.867,
        null,
        7177467.683,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3397 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Madison',
        'Flora',
        '339 Ratliff Rd',
        39071,
        null,
        32.610774,
        -90.339309,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-89',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7016594,
        0,
        7016594,
        154877.368,
        null,
        7171471.368,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3493 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Pike',
        'McComb',
        '3159 Airport Fernwood Rd',
        39648,
        null,
        31.18973,
        -90.44595,
        'MCCOMB,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-113',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7006329.944,
        0,
        7006329.944,
        154650.81,
        null,
        7160980.754,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6730 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Rimouski',
        '126 Boulevard de la Rivière',
        'G5L',
        null,
        48.44296,
        -68.53634,
        'MONT-JOLI,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6993762.635,
        0,
        6993762.635,
        154373.411,
        null,
        7148136.046,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6035 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '773 E McCuen St',
        55808,
        null,
        46.65807,
        -92.21394,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6991666.56,
        0,
        6991666.56,
        154327.145,
        null,
        7145993.705,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1374 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Bracebridge',
        '101 Ecclestone Dr',
        'P1L',
        null,
        45.03895,
        -79.30743,
        'NEWMARKET,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6981985.626,
        0,
        6981985.626,
        154113.457,
        null,
        7136099.083,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1055 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'South Glengarry',
        '20098 Wentworth Rd',
        'K0C',
        null,
        45.131114,
        -74.522127,
        'KINGSTON WEST,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6977568.727,
        0,
        6977568.727,
        154015.963,
        null,
        7131584.69,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '446 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Macamic',
        ' 7e Avenue E',
        'J0Z',
        null,
        48.753315,
        -78.99243,
        'TASCHEREAU,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6965792.761,
        0,
        6965792.761,
        153756.032,
        null,
        7119548.793,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6212 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Peace River',
        ' Range Road 245',
        'V0C',
        null,
        55.778081,
        -120.598021,
        'DAWSON CREEK,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6952545.191,
        0,
        6952545.191,
        153463.618,
        null,
        7106008.809,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4051 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        '65 E Calhoun Ave',
        38103,
        null,
        35.132682,
        -90.059752,
        'MEMPHIS,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6918347.548,
        0,
        6918347.548,
        152708.773,
        null,
        7071056.321,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '23 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Nova Scotia',
        null,
        'Halifax',
        '677 Young Ave',
        'B3H',
        null,
        44.62937,
        -63.5728,
        'BEDFORD,CA-NS,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-NS',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6912798.31,
        0,
        6912798.31,
        152586.285,
        null,
        7065384.595,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6635 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Black Hawk',
        'Waterloo',
        ' US-218',
        50701,
        null,
        42.507263,
        -92.373347,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-13',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6903683.119,
        0,
        6903683.119,
        152385.085,
        null,
        7056068.204,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2015 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Edmonton',
        ' 127 St NW',
        'T5L',
        null,
        53.583601,
        -113.541134,
        'EDSON,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6901022.344,
        0,
        6901022.344,
        152326.354,
        null,
        7053348.698,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8369 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '324 Pandora Ave E',
        'R2C 5K8',
        null,
        49.891413,
        -96.996123,
        'Canadian National Railways,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2625000,
        4302237.962,
        6927237.962,
        115883.317,
        null,
        7043121.279,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6333 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Big Lakes County',
        ' Range Road 100A',
        'T0G',
        null,
        55.33628,
        -115.41367,
        'SLAVE LAKE,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6871580.866,
        0,
        6871580.866,
        151676.492,
        null,
        7023257.358,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4193 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Forrest',
        'Hattiesburg',
        '189 Peps Point Rd',
        39401,
        null,
        31.395751,
        -89.366675,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-35',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6861158.364,
        0,
        6861158.364,
        151446.436,
        null,
        7012604.8,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2134 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Sturgeon County',
        '26305 HWY-633',
        'T8T',
        null,
        53.6578,
        -113.76248,
        'SANGUDO,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6855389.044,
        0,
        6855389.044,
        151319.089,
        null,
        7006708.133,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2464 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        53.353039,
        -120.285831,
        'FRASER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6849499.497,
        0,
        6849499.497,
        151189.089,
        null,
        7000688.586,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2928 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 83rd St',
        60619,
        null,
        41.74407,
        -87.598545,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6831831.595,
        0,
        6831831.595,
        150799.105,
        null,
        6982630.7,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3310 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        ' Heard Ave',
        38108,
        null,
        35.183025,
        -89.964261,
        'FULTON,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6818633.609,
        0,
        6818633.609,
        150507.786,
        null,
        6969141.395,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7912 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        54.072053,
        -122.366645,
        'Canadian National Railways,V0J 1A0,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2592000,
        4248152.685,
        6840152.685,
        114426.498,
        null,
        6954579.183,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2451 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' ',
        'V0E',
        null,
        51.690792,
        -119.40953,
        'CLEARWATER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6802393.55,
        0,
        6802393.55,
        150149.319,
        null,
        6952542.869,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2163 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Woodlands County',
        ' Township Road 600',
        'T0E',
        null,
        54.13861,
        -115.505443,
        'SANGUDO,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6799450.341,
        0,
        6799450.341,
        150084.354,
        null,
        6949534.695,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3313 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        ' Lamar Ave',
        38114,
        null,
        35.108805,
        -89.989103,
        'SHELBY,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6758512.583,
        0,
        6758512.583,
        149180.734,
        null,
        6907693.317,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8786 - Canadian National Railways - Telecom',
        1,
        'Canada',
        'Ontario',
        null,
        'MacMillan yard',
        null,
        'L4A 1B9',
        null,
        43.97002,
        -79.25284,
        'MacMillan yard,L4A 1B9,CA-ON,Canada',
        'Post code',
        'Yes',
        'Trillium',
        null,
        'CA-ON',
        'ACORD',
        'INDTEL999',
        'Telecommunication and data processing',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'Telecom',
        1148703,
        5647992.747,
        6796695.747,
        101421.344,
        null,
        6898117.091,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8885 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        ' ',
        'V0K',
        null,
        50.96188,
        -121.851183,
        'LILLOOET,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        6741184.812,
        0,
        6741184.812,
        148798.258,
        null,
        6889983.07,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4733 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Hardin',
        'Iowa Falls',
        '132 Park Ave',
        50126,
        null,
        42.518357,
        -93.258509,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-83',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6733584.098,
        0,
        6733584.098,
        148630.487,
        null,
        6882214.585,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1470 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Saginaw',
        '6209 Bachelor Rd',
        55779,
        null,
        46.95207,
        -92.33011,
        'RAINY DWP,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6717454.271,
        0,
        6717454.271,
        148274.453,
        null,
        6865728.724,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '824 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Chatham-Kent',
        '12871 River Line',
        'N0P 2K0',
        null,
        42.54095,
        -81.98746,
        'CHATHAM,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6705237.403,
        0,
        6705237.403,
        148004.79,
        null,
        6853242.193,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8415 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Melville',
        ' ',
        'S0A',
        null,
        50.922359,
        -102.802828,
        'Canadian National Railways,S0A 2P0,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2550000,
        4179316.878,
        6729316.878,
        112572.365,
        null,
        6841889.243,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8874 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        54.831867,
        -121.748149,
        'TUMBLER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        544024224.803,
        0,
        544024224.803,
        12008253.611,
        null,
        556032478.414,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3158 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Alexander',
        'Cairo',
        ' Commercial Ave',
        62914,
        null,
        37.022936,
        -89.17554,
        'CAIRO,USA-KY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-3',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        517928014.951,
        0,
        517928014.951,
        11432231.64,
        null,
        529360246.591,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '11 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Quebec',
        null,
        'Taschereau',
        null,
        'H4T 1T1',
        null,
        45.4867,
        -73.68565,
        'Taschereau,H4T 1T1,CA-QC,Canada',
        'Post code',
        'No',
        'Trillium',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        183217500,
        300283917.651,
        483501417.651,
        8088324.401,
        null,
        491589742.052,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8851 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Vancouver',
        '3645 Fellowes St',
        'V5K',
        null,
        49.292018,
        -123.024226,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        425547662.764,
        0,
        425547662.764,
        9393118.955,
        null,
        434940781.719,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8895 - Canadian National Railways - WHARVES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        ' Courtland St',
        55806,
        null,
        46.753495,
        -92.129158,
        'WISCONSIN CENTRAL LTD.,55807,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'WHARVES',
        159219189.362,
        260951939.345,
        420171128.707,
        7028894.371,
        null,
        427200023.078,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8251 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        '1031 Rue Mansfield',
        'H3B',
        null,
        45.4994,
        -73.5668,
        'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        16495060.5,
        27034543.037,
        43529603.537,
        728191.359,
        null,
        44257794.896,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8796 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' Trans Canada Hwy',
        'V0E',
        null,
        53.014763,
        -119.098272,
        'ALBREDA,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        42640736.247,
        0,
        42640736.247,
        941209.512,
        null,
        43581945.759,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '248 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Repentigny',
        ' Pont Legardeur',
        'J6A',
        null,
        45.704306,
        -73.485772,
        'JOLIETTE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        41491513.204,
        0,
        41491513.204,
        915842.697,
        null,
        42407355.901,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8852 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'North Vancouver',
        ' Victory Ship Way',
        'V7L',
        null,
        49.309023,
        -123.075322,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        40469505.213,
        0,
        40469505.213,
        893283.902,
        null,
        41362789.115,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1601 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '169 Waterfront Dr',
        'R3B',
        null,
        49.895251,
        -97.131692,
        'REDDITT,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        39917878.778,
        0,
        39917878.778,
        881107.844,
        null,
        40798986.622,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7459 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Homewood',
        '17550 Ashland Ave',
        60430,
        null,
        41.570757,
        -87.657873,
        'Illinois Central Railroad,60430,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        15000000,
        24584216.927,
        39584216.927,
        662190.38,
        null,
        40246407.307,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8000 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Ontario',
        null,
        'Vaughan',
        ' Locke St',
        'L4K',
        null,
        43.823776,
        -79.519633,
        'Canadian National Railways,L4K 1B9,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        15000000,
        24584216.927,
        39584216.927,
        662190.38,
        null,
        40246407.307,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1611 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        'Lake of the Woods',
        'Baudette',
        '194 3rd St NW',
        56623,
        null,
        48.715984,
        -94.601532,
        'SPRAGUE,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MN-77',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        39070822.065,
        0,
        39070822.065,
        862410.751,
        null,
        39933232.816,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2043 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Yellowhead County',
        ' ',
        'T7E',
        null,
        53.632552,
        -116.291871,
        'EDSON,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        38338357.934,
        0,
        38338357.934,
        846243.061,
        null,
        39184600.995,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6133 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Prince George',
        ' ',
        'V2K',
        null,
        53.915037,
        -122.690764,
        'CHETWYND,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        38197040.092,
        0,
        38197040.092,
        843123.75,
        null,
        39040163.842,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8254 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        '1031 Rue Mansfield',
        'H3B',
        null,
        45.4994,
        -73.5668,
        'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        14402403.5,
        23604787.461,
        38007190.961,
        635808.87,
        null,
        38642999.831,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2291 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Lacombe County',
        ' ',
        'T0C',
        null,
        52.303339,
        -113.249657,
        'THREE HILLS,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        37434512.176,
        0,
        37434512.176,
        826292.462,
        null,
        38260804.638,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '247 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Charlemagne',
        '30 Rue Plourde',
        'J5Z 3E2',
        null,
        45.713033,
        -73.487319,
        'JOLIETTE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        36932539.619,
        0,
        36932539.619,
        815212.415,
        null,
        37747752.034,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8801 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Kirkland Ranch Rd',
        'V0K',
        null,
        50.668115,
        -121.313025,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        34929226.906,
        0,
        34929226.906,
        770993.268,
        null,
        35700220.174,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '86 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'New Brunswick',
        null,
        'Sackville',
        '181 Bridge St',
        'E4L',
        null,
        45.89131,
        -64.34641,
        'SPRINGHILL,CA-NB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-NB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        34924648.349,
        0,
        34924648.349,
        770892.206,
        null,
        35695540.555,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6211 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Peace River',
        ' John Hart Hwy',
        'V0C',
        null,
        55.720593,
        -121.20708,
        'DAWSON CREEK,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        34778914.65,
        0,
        34778914.65,
        767675.424,
        null,
        35546590.074,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6703 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Matapédia',
        ' Chemin du Puits',
        'G0J',
        null,
        47.97688,
        -66.928411,
        'MONT-JOLI,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        34599323.616,
        0,
        34599323.616,
        763711.309,
        null,
        35363034.925,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '135 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'New Brunswick',
        null,
        'Chipman',
        ' Bridge St',
        'E4A',
        null,
        46.17922,
        -65.88245,
        'NAPADOGAN,CA-NB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-NB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        34444756.118,
        0,
        34444756.118,
        760299.538,
        null,
        35205055.656,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2489 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Kitimat-Stikine',
        ' Lakelse Ave',
        'V8G',
        null,
        54.515678,
        -128.561031,
        'KITIMAT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        34279885.302,
        0,
        34279885.302,
        756660.343,
        null,
        35036545.645,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '12 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Mississippi',
        'Hinds',
        'Jackson',
        null,
        39213,
        null,
        32.359857,
        -90.21179,
        'JACKSON MS,39213,USA-MS,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'MS-49',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        12844035,
        21050702.844,
        33894737.844,
        567013.095,
        null,
        34461750.939,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '614 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Coteau-du-Lac',
        '75 Rue de Venise',
        'J0P 1B0',
        null,
        45.26117,
        -74.192262,
        'VALLEYFIELD,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        33691060.959,
        0,
        33691060.959,
        743663.216,
        null,
        34434724.175,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '19 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        null,
        48123,
        null,
        42.302325,
        -83.260552,
        'DEARBORN,48123,USA-MI,United States (USA)',
        'Post code',
        'No',
        'Trillium',
        null,
        'MI-163',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        24722763,
        40519317.908,
        65242080.908,
        1091411.722,
        null,
        66333492.63,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6296 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Peace River',
        ' HWY-2',
        'T8S',
        null,
        56.23954,
        -117.30198,
        'PEACE RIVER,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        63520905.831,
        0,
        63520905.831,
        1402097.76,
        null,
        64923003.591,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1990 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Battle River No 438',
        ' ',
        'S0M',
        null,
        52.828117,
        -108.359367,
        'BLACKFOOT,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        62254933.754,
        0,
        62254933.754,
        1374153.942,
        null,
        63629087.696,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '564 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Otterburn Park',
        '627 Chemin des Patriotes',
        'J3H 1Z4',
        null,
        45.548053,
        -73.209487,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        61255404.497,
        0,
        61255404.497,
        1352091.32,
        null,
        62607495.817,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6018 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '99 33rd Ave W',
        55806,
        null,
        46.75454,
        -92.13856,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        59935059.835,
        0,
        59935059.835,
        1322947.336,
        null,
        61258007.171,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '928 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Lincoln',
        '4162 Bridgeport Dr',
        'L0R',
        null,
        43.165208,
        -79.370289,
        'GRIMSBY,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        59223959.209,
        0,
        59223959.209,
        1307251.202,
        null,
        60531210.411,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6019 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '99 33rd Ave W',
        55806,
        null,
        46.75454,
        -92.13856,
        'MISSABE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        58698906.961,
        0,
        58698906.961,
        1295661.718,
        null,
        59994568.679,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '589 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' Pont Victoria',
        'H3C',
        null,
        45.49185,
        -73.528795,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        1061356016.651,
        0,
        1061356016.651,
        23427324.811,
        null,
        1084783341.462,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Nova Scotia',
        null,
        'Eastern Passage',
        null,
        'B3G 1M4',
        null,
        44.610916,
        -63.473,
        'Eastern Passage,B3G 1M4,CA-NS,Canada',
        'Town',
        'No',
        'Trillium',
        null,
        'CA-NS',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        377740000,
        619096140.125,
        996836140.125,
        16675719.618,
        null,
        1013511859.743,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '178 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Lévis',
        ' Pont de Québec',
        'G7A',
        null,
        46.744659,
        -71.287489,
        'BRIDGE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        909733729.005,
        0,
        909733729.005,
        20080564.134,
        null,
        929814293.139,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8253 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        '1031 Rue Mansfield',
        'H3B',
        null,
        45.4994,
        -73.5668,
        'Canadian National Railways,H3B 2M9,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        331966714.5,
        544076114.78,
        876042829.28,
        14655010.996,
        null,
        890697840.276,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Ontario',
        null,
        'Toronto',
        null,
        'L4K 2N2',
        null,
        43.826182,
        -79.50579,
        'TORONTO,L4K 2N2,CA-ON,Canada',
        'Post code',
        'No',
        'Trillium',
        null,
        'CA-ON',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        270900000,
        443990957.695,
        714890957.695,
        11959158.269,
        null,
        726850115.964,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '588 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' Pont Victoria',
        'H3C',
        null,
        45.493286,
        -73.524334,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        551070162.13,
        0,
        551070162.13,
        12163778.675,
        null,
        563233940.805,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8129 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'United States (USA)',
        'Indiana',
        'Lake',
        'Gary',
        '1312 Martin Luther King Dr',
        46402,
        null,
        41.59128,
        -87.317687,
        'EJ&E,46401,USA-IN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IN-89',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        3000000,
        4916843.385,
        7916843.385,
        132438.076,
        null,
        8049281.461,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5912 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Pennsylvania',
        'Butler',
        'Butler',
        '177 Kittanning St',
        16001,
        null,
        40.859852,
        -79.884644,
        'BESSEMER,USA-PA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'PA-19',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7862691.863,
        0,
        7862691.863,
        173553.297,
        null,
        8036245.16,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6801 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Marathon',
        'Wausau',
        ' ',
        54403,
        null,
        44.9638,
        -89.6356,
        'VALLEY,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-73',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7855359.649,
        0,
        7855359.649,
        173391.453,
        null,
        8028751.102,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6619 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.9853,
        -88.74169,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7831897.607,
        0,
        7831897.607,
        172873.575,
        null,
        8004771.182,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '490 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Daveluyville',
        '119 Rue Principale',
        'G0Z 1B0',
        null,
        46.21275,
        -72.140044,
        'DRUMMONDVILLE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7822532.572,
        0,
        7822532.572,
        172666.861,
        null,
        7995199.433,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1893 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Moose Jaw',
        '251 Coteau St E',
        'S6H',
        null,
        50.382497,
        -105.527308,
        'CENTRAL BUTTE,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7797506.95,
        0,
        7797506.95,
        172114.47,
        null,
        7969621.42,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2907 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        '1558 E Hyde Park Blvd',
        60615,
        null,
        41.802572,
        -87.587233,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7784973.523,
        0,
        7784973.523,
        171837.819,
        null,
        7956811.342,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3924 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Macon',
        'Decatur',
        '237 W Lincoln Park Dr',
        62522,
        null,
        39.82767,
        -88.95837,
        'PEORIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-115',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7783508.125,
        0,
        7783508.125,
        171805.474,
        null,
        7955313.599,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5339 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Manitowoc',
        'Manitowoc',
        '2728 Clay Pit Rd',
        54220,
        null,
        44.10045,
        -87.67907,
        'MANITOWOC,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-71',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7779107.751,
        0,
        7779107.751,
        171708.344,
        null,
        7950816.095,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7289 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.97691,
        -88.7297,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7758328.966,
        0,
        7758328.966,
        171249.694,
        null,
        7929578.66,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6146 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' John Hart Hwy',
        'V0J',
        null,
        55.319602,
        -122.657693,
        'CHETWYND,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7722432.173,
        0,
        7722432.173,
        170457.343,
        null,
        7892889.516,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2913 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 60th St',
        60637,
        null,
        41.786117,
        -87.589048,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7711655.556,
        0,
        7711655.556,
        170219.471,
        null,
        7881875.027,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2912 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 59th St',
        60637,
        null,
        41.787909,
        -87.58864,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7711655.556,
        0,
        7711655.556,
        170219.471,
        null,
        7881875.027,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8810 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.26253,
        -121.545678,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7685733.838,
        0,
        7685733.838,
        169647.3,
        null,
        7855381.138,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '396 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Jean-Port-Joli',
        ' Autoroute Transcanadienne',
        'G0R',
        null,
        47.21201,
        -70.22742,
        'MONTMAGNY,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7670910.368,
        0,
        7670910.368,
        169320.102,
        null,
        7840230.47,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '724 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Brampton',
        '7945 Bramalea Rd',
        'L6T 4J9',
        null,
        43.702456,
        -79.68713,
        'HALTON,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7670910.368,
        0,
        7670910.368,
        169320.102,
        null,
        7840230.47,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5513 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Wood',
        'Babcock',
        ' WI-173',
        54413,
        null,
        44.299683,
        -90.120111,
        'VALLEY,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-141',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7660332.143,
        0,
        7660332.143,
        169086.609,
        null,
        7829418.752,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8835 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Skeena-Queen Charlotte',
        ' Trans Canada Hwy',
        'V0V',
        null,
        54.287254,
        -129.411883,
        'SKEENA,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7659957.292,
        0,
        7659957.292,
        169078.334,
        null,
        7829035.626,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8787 - Canadian National Railways - Telecom',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Homewood',
        null,
        60430,
        null,
        41.5567,
        -87.66522,
        'Homewood,60430,USA-IL,United States (USA)',
        'Post code',
        'Yes',
        'Trillium',
        null,
        'IL-31',
        'ACORD',
        'INDTEL999',
        'Telecommunication and data processing',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'Telecom',
        1301606.75,
        6399796.539,
        7701403.289,
        114921.529,
        null,
        7816324.818,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7234 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Indiana',
        'Lake',
        'Gary',
        '1232 N Clark Rd',
        46406,
        null,
        41.63028,
        -87.402638,
        'LAKEFRONT,USA-IN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IN-89',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7630383.912,
        0,
        7630383.912,
        168425.561,
        null,
        7798809.473,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1450 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Algoma',
        ' ',
        'P0M',
        null,
        49.196783,
        -84.540099,
        'RUEL,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7584057.539,
        0,
        7584057.539,
        167402.998,
        null,
        7751460.537,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3812 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' S Albany Ave',
        60632,
        null,
        41.826349,
        -87.702008,
        'JOLIET,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7576749.076,
        0,
        7576749.076,
        167241.678,
        null,
        7743990.754,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7996 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Ontario',
        null,
        'Vaughan',
        '134 Willis Rd',
        'L4L 2S2',
        null,
        43.794303,
        -79.580856,
        'Canadian National Railways,L4K 1B9,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2882400,
        4724103.125,
        7606503.125,
        127246.503,
        null,
        7733749.628,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8883 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        '17219 HWY-99',
        'V0K',
        null,
        50.752396,
        -121.84061,
        'LILLOOET,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7564789.01,
        0,
        7564789.01,
        166977.684,
        null,
        7731766.694,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6242 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Jackson',
        'Carbondale',
        ' ',
        62901,
        null,
        37.722199,
        -89.215389,
        'CENTRALIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-77',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7529824.992,
        0,
        7529824.992,
        166205.923,
        null,
        7696030.915,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6530 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Montreal',
        ' AUT-13',
        'H4T',
        null,
        45.47159,
        -73.70457,
        'ST LAURENT,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7523704.022,
        0,
        7523704.022,
        166070.814,
        null,
        7689774.836,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2468 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        53.446883,
        -120.432555,
        'FRASER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7514872.309,
        0,
        7514872.309,
        165875.872,
        null,
        7680748.181,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '375 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Senneterre',
        '450 1e Rue O',
        'J0Y',
        null,
        48.387608,
        -77.236244,
        'ST MAURICE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7510455.409,
        0,
        7510455.409,
        165778.377,
        null,
        7676233.786,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7304 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '2016 108th Ave W',
        55808,
        null,
        46.677259,
        -92.235553,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7502871.792,
        0,
        7502871.792,
        165610.984,
        null,
        7668482.776,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7305 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '2016 108th Ave W',
        55808,
        null,
        46.677259,
        -92.235553,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7502871.792,
        0,
        7502871.792,
        165610.984,
        null,
        7668482.776,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2754 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Oakland',
        'Royal Oak',
        ' E 10 Mile Rd',
        48067,
        null,
        42.47609,
        -83.13664,
        'HOLLY,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-125',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7482900.908,
        0,
        7482900.908,
        165170.167,
        null,
        7648071.075,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6529 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Dorval',
        '1117 Trans Canada Hwy',
        'H9P',
        null,
        45.4901,
        -73.76652,
        'DEUX MONTAGNES,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7482486.579,
        0,
        7482486.579,
        165161.021,
        null,
        7647647.6,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3889 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Logan',
        'Mt Pulaski',
        ' 1525th Ave',
        62548,
        null,
        40.05299,
        -89.30601,
        'PEORIA,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7475569.738,
        0,
        7475569.738,
        165008.346,
        null,
        7640578.084,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1659 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Portage la Prairie RM',
        ' McIntyre Rd',
        'R0H',
        null,
        49.989151,
        -98.381536,
        'GLADSTONE,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7464821.066,
        0,
        7464821.066,
        164771.09,
        null,
        7629592.156,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8802 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.500682,
        -121.285846,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7455268.673,
        0,
        7455268.673,
        164560.24,
        null,
        7619828.913,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2721 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Genesee',
        'Flint',
        ' I-75',
        48507,
        null,
        42.98242,
        -83.73119,
        'FLINT,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-49',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7430111.053,
        0,
        7430111.053,
        164004.935,
        null,
        7594115.988,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6424 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '956 Kenaston Blvd',
        'R3P',
        null,
        49.847582,
        -97.207759,
        'RIVERS,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7411827.657,
        0,
        7411827.657,
        163601.366,
        null,
        7575429.023,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2206 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Strathcona County',
        ' Range Road 230',
        'T8A',
        null,
        53.565446,
        -113.246586,
        'WAINWRIGHT,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7391217.893,
        0,
        7391217.893,
        163146.446,
        null,
        7554364.339,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2582 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Bulkley-Nechako',
        ' Morice Telkwa Forest Service Rd',
        'V0J',
        null,
        54.44478,
        -126.809273,
        'TELKWA,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7391217.893,
        0,
        7391217.893,
        163146.446,
        null,
        7554364.339,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2210 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Edmonton',
        ' 50 St NW',
        'T5W',
        null,
        53.583519,
        -113.418312,
        'WAINWRIGHT,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7351473.097,
        0,
        7351473.097,
        162269.159,
        null,
        7513742.256,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6106 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'West Vancouver',
        '4398 Keith Rd',
        'V7W 2M2',
        null,
        49.343877,
        -123.242054,
        'SQUAMISH,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7350000.45,
        0,
        7350000.45,
        162236.653,
        null,
        7512237.103,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '389 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Philippe-de-Néri',
        '295 RTE-230',
        'G0L',
        null,
        47.44051,
        -69.92187,
        'MONTMAGNY,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7344112.988,
        0,
        7344112.988,
        162106.699,
        null,
        7506219.687,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6278 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Kentucky',
        'Ballard',
        'Barlow',
        ' E Cairo Rd',
        42024,
        null,
        37.000116,
        -89.141002,
        'CAIRO,USA-KY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'KY-7',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7320133.058,
        0,
        7320133.058,
        161577.39,
        null,
        7481710.448,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2964 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Harvey',
        ' E 155th St',
        60426,
        null,
        41.608146,
        -87.643644,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7320133.058,
        0,
        7320133.058,
        161577.39,
        null,
        7481710.448,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3371 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Holmes',
        'Tchula',
        ' US-49E',
        39169,
        null,
        33.035662,
        -90.330855,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-51',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7299604.946,
        0,
        7299604.946,
        161124.273,
        null,
        7460729.219,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6033 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Douglas',
        'Superior',
        ' E Old 105',
        54880,
        null,
        46.65527,
        -92.16399,
        'SUPERIOR,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7295204.573,
        0,
        7295204.573,
        161027.143,
        null,
        7456231.716,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8884 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        ' Sea To Sky Hwy',
        'V0N',
        null,
        49.606757,
        -123.218024,
        'SQUAMISH,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7259357.535,
        0,
        7259357.535,
        160235.891,
        null,
        7419593.426,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '584 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Lambert',
        ' ',
        'J4R',
        null,
        45.492963,
        -73.514363,
        'ST HYACINTHE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7254316.95,
        0,
        7254316.95,
        160124.63,
        null,
        7414441.58,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1025 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Welland',
        ' Townline Tunnel Rd',
        'L3B',
        null,
        42.9586,
        -79.20069,
        'STAMFORD,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7249901.093,
        0,
        7249901.093,
        160027.159,
        null,
        7409928.252,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2906 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' Mines Dr',
        60616,
        null,
        41.854184,
        -87.617258,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7239483.921,
        0,
        7239483.921,
        159797.22,
        null,
        7399281.141,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '329 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Gédéon',
        '524 Chemin 5e',
        'G0W',
        null,
        48.480754,
        -71.793669,
        'LAC ST JEAN,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7227819.724,
        0,
        7227819.724,
        159539.756,
        null,
        7387359.48,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5885 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Laval',
        '29 Chemin du Tour',
        'H7Y 1G5',
        null,
        45.521639,
        -73.855355,
        'DEUX MONTAGNES,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7208682.607,
        0,
        7208682.607,
        159117.343,
        null,
        7367799.95,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4743 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Hamilton',
        'Webster City',
        ' ',
        50595,
        null,
        42.471529,
        -93.810204,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-79',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7201357.45,
        0,
        7201357.45,
        158955.654,
        null,
        7360313.104,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1602 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '182 Waterfront Dr',
        'R3B',
        null,
        49.894893,
        -97.132831,
        'REDDITT,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7170409.416,
        0,
        7170409.416,
        158272.538,
        null,
        7328681.954,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2059 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Alberta',
        ' Trans Canada Hwy',
        'T0E',
        null,
        53.185508,
        -117.990743,
        'EDSON,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7160105.055,
        0,
        7160105.055,
        158045.09,
        null,
        7318150.145,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '284 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'St-Prosper-de-Champlain',
        ' Rang St-Charles',
        'G0X',
        null,
        46.65962,
        -72.251362,
        'LA TUQUE,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7155689.199,
        0,
        7155689.199,
        157947.618,
        null,
        7313636.817,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4374 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Louisiana',
        'Washington',
        'Angie',
        ' La-436-1',
        70426,
        null,
        30.884458,
        -89.833333,
        'BOGALUSA,USA-LA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'LA-117',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7119240.825,
        0,
        7119240.825,
        157143.093,
        null,
        7276383.918,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '716 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Vaughan',
        '7135 Islington Ave',
        'L4L 1V9',
        null,
        43.76837,
        -79.57692,
        'HALTON,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7118887.612,
        0,
        7118887.612,
        157135.297,
        null,
        7276022.909,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5642 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Rusk',
        'Ladysmith',
        'N6416 Bass Lake Rd',
        54848,
        null,
        45.519907,
        -91.1458,
        'SUPERIOR,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7110442.168,
        0,
        7110442.168,
        156948.88,
        null,
        7267391.048,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6984 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        'Lake',
        'Two Harbors',
        ' ',
        55616,
        null,
        47.018608,
        -91.686975,
        'IRON RANGE,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MN-75',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7109283.845,
        0,
        7109283.845,
        156923.312,
        null,
        7266207.157,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4790 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Sac',
        'Auburn',
        ' 335th St',
        51433,
        null,
        42.29911,
        -94.8832,
        'OMAHA,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-161',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7103109.953,
        0,
        7103109.953,
        156787.036,
        null,
        7259896.989,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7264 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Quitman',
        'Marks',
        ' MS-3',
        38646,
        null,
        34.29474,
        -90.27172,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-119',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7092507.487,
        0,
        7092507.487,
        156553.008,
        null,
        7249060.495,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2859 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Michigan',
        'Wayne',
        'Dearborn',
        ' ',
        48120,
        null,
        42.301429,
        -83.179138,
        'DEARBORN,USA-MI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MI-163',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7089913.012,
        0,
        7089913.012,
        156495.74,
        null,
        7246408.752,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8841 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser Valley',
        ' Trans Canada Hwy',
        'V0K',
        null,
        49.757371,
        -121.426978,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7073179.219,
        0,
        7073179.219,
        156126.375,
        null,
        7229305.594,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1749 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Manitoba',
        null,
        'Portage la Prairie RM',
        ' ',
        'R0H',
        null,
        49.978023,
        -98.381776,
        'RIVERS,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7068836.369,
        0,
        7068836.369,
        156030.515,
        null,
        7224866.884,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5753 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Clark',
        'Withee',
        'W6490 CR-X',
        54498,
        null,
        44.9529,
        -90.63895,
        'MINNEAPOLIS,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-19',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7063519.128,
        0,
        7063519.128,
        155913.147,
        null,
        7219432.275,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8808 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' Trans Canada Hwy',
        'V0K',
        null,
        50.258727,
        -121.516392,
        'ASHCROFT,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        7047403.716,
        0,
        7047403.716,
        155557.432,
        null,
        7202961.148,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6583 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'George',
        'Lucedale',
        ' Merrill-Salem Rd',
        39452,
        null,
        30.98368,
        -88.73946,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-39',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7034191.315,
        0,
        7034191.315,
        155265.794,
        null,
        7189457.109,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '5299 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Wisconsin',
        'Outagamie',
        'Appleton',
        ' ',
        54911,
        null,
        44.25539,
        -88.39384,
        'FOX RIVER,USA-WI,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'WI-87',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7026859.1,
        0,
        7026859.1,
        155103.95,
        null,
        7181963.05,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2963 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Harvey',
        ' E 154th St',
        60426,
        null,
        41.609948,
        -87.642676,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7026859.1,
        0,
        7026859.1,
        155103.95,
        null,
        7181963.05,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3759 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Logan',
        'Mt Pulaski',
        '1108 IL-54',
        62548,
        null,
        39.95136,
        -89.38403,
        'GILMAN,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-107',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7022460.816,
        0,
        7022460.816,
        155006.867,
        null,
        7177467.683,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3397 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Madison',
        'Flora',
        '339 Ratliff Rd',
        39071,
        null,
        32.610774,
        -90.339309,
        'YAZOO,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-89',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7016594,
        0,
        7016594,
        154877.368,
        null,
        7171471.368,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3493 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Pike',
        'McComb',
        '3159 Airport Fernwood Rd',
        39648,
        null,
        31.18973,
        -90.44595,
        'MCCOMB,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-113',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        7006329.944,
        0,
        7006329.944,
        154650.81,
        null,
        7160980.754,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6730 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Rimouski',
        '126 Boulevard de la Rivière',
        'G5L',
        null,
        48.44296,
        -68.53634,
        'MONT-JOLI,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6993762.635,
        0,
        6993762.635,
        154373.411,
        null,
        7148136.046,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6035 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        '773 E McCuen St',
        55808,
        null,
        46.65807,
        -92.21394,
        'SUPERIOR,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6991666.56,
        0,
        6991666.56,
        154327.145,
        null,
        7145993.705,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1374 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Bracebridge',
        '101 Ecclestone Dr',
        'P1L',
        null,
        45.03895,
        -79.30743,
        'NEWMARKET,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6981985.626,
        0,
        6981985.626,
        154113.457,
        null,
        7136099.083,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1055 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'South Glengarry',
        '20098 Wentworth Rd',
        'K0C',
        null,
        45.131114,
        -74.522127,
        'KINGSTON WEST,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6977568.727,
        0,
        6977568.727,
        154015.963,
        null,
        7131584.69,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '446 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Quebec',
        null,
        'Macamic',
        ' 7e Avenue E',
        'J0Z',
        null,
        48.753315,
        -78.99243,
        'TASCHEREAU,CA-QC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-QC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6965792.761,
        0,
        6965792.761,
        153756.032,
        null,
        7119548.793,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6212 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Peace River',
        ' Range Road 245',
        'V0C',
        null,
        55.778081,
        -120.598021,
        'DAWSON CREEK,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6952545.191,
        0,
        6952545.191,
        153463.618,
        null,
        7106008.809,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4051 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        '65 E Calhoun Ave',
        38103,
        null,
        35.132682,
        -90.059752,
        'MEMPHIS,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6918347.548,
        0,
        6918347.548,
        152708.773,
        null,
        7071056.321,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '23 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Nova Scotia',
        null,
        'Halifax',
        '677 Young Ave',
        'B3H',
        null,
        44.62937,
        -63.5728,
        'BEDFORD,CA-NS,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-NS',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6912798.31,
        0,
        6912798.31,
        152586.285,
        null,
        7065384.595,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6635 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Black Hawk',
        'Waterloo',
        ' US-218',
        50701,
        null,
        42.507263,
        -92.373347,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-13',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6903683.119,
        0,
        6903683.119,
        152385.085,
        null,
        7056068.204,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2015 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Edmonton',
        ' 127 St NW',
        'T5L',
        null,
        53.583601,
        -113.541134,
        'EDSON,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6901022.344,
        0,
        6901022.344,
        152326.354,
        null,
        7053348.698,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8369 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Manitoba',
        null,
        'Winnipeg',
        '324 Pandora Ave E',
        'R2C 5K8',
        null,
        49.891413,
        -96.996123,
        'Canadian National Railways,CA-MB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-MB',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2625000,
        4302237.962,
        6927237.962,
        115883.317,
        null,
        7043121.279,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '6333 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Big Lakes County',
        ' Range Road 100A',
        'T0G',
        null,
        55.33628,
        -115.41367,
        'SLAVE LAKE,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6871580.866,
        0,
        6871580.866,
        151676.492,
        null,
        7023257.358,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4193 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Mississippi',
        'Forrest',
        'Hattiesburg',
        '189 Peps Point Rd',
        39401,
        null,
        31.395751,
        -89.366675,
        'BEAUMONT,USA-MS,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'MS-35',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6861158.364,
        0,
        6861158.364,
        151446.436,
        null,
        7012604.8,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2134 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Sturgeon County',
        '26305 HWY-633',
        'T8T',
        null,
        53.6578,
        -113.76248,
        'SANGUDO,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6855389.044,
        0,
        6855389.044,
        151319.089,
        null,
        7006708.133,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2464 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        53.353039,
        -120.285831,
        'FRASER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6849499.497,
        0,
        6849499.497,
        151189.089,
        null,
        7000688.586,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2928 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Cook',
        'Chicago',
        ' E 83rd St',
        60619,
        null,
        41.74407,
        -87.598545,
        'CHICAGO,USA-IL,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-31',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6831831.595,
        0,
        6831831.595,
        150799.105,
        null,
        6982630.7,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3310 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        ' Heard Ave',
        38108,
        null,
        35.183025,
        -89.964261,
        'FULTON,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6818633.609,
        0,
        6818633.609,
        150507.786,
        null,
        6969141.395,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '7912 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        54.072053,
        -122.366645,
        'Canadian National Railways,V0J 1A0,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2592000,
        4248152.685,
        6840152.685,
        114426.498,
        null,
        6954579.183,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2451 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'British Columbia',
        null,
        'Thompson-Nicola',
        ' ',
        'V0E',
        null,
        51.690792,
        -119.40953,
        'CLEARWATER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6802393.55,
        0,
        6802393.55,
        150149.319,
        null,
        6952542.869,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '2163 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Alberta',
        null,
        'Woodlands County',
        ' Township Road 600',
        'T0E',
        null,
        54.13861,
        -115.505443,
        'SANGUDO,CA-AB,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-AB',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6799450.341,
        0,
        6799450.341,
        150084.354,
        null,
        6949534.695,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3313 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Tennessee',
        'Shelby',
        'Memphis',
        ' Lamar Ave',
        38114,
        null,
        35.108805,
        -89.989103,
        'SHELBY,USA-TN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'TN-157',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6758512.583,
        0,
        6758512.583,
        149180.734,
        null,
        6907693.317,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8786 - Canadian National Railways - Telecom',
        1,
        'Canada',
        'Ontario',
        null,
        'MacMillan yard',
        null,
        'L4A 1B9',
        null,
        43.97002,
        -79.25284,
        'MacMillan yard,L4A 1B9,CA-ON,Canada',
        'Post code',
        'Yes',
        'Trillium',
        null,
        'CA-ON',
        'ACORD',
        'INDTEL999',
        'Telecommunication and data processing',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'Telecom',
        1148703,
        5647992.747,
        6796695.747,
        101421.344,
        null,
        6898117.091,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8885 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Squamish-Lillooet',
        ' ',
        'V0K',
        null,
        50.96188,
        -121.851183,
        'LILLOOET,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        6741184.812,
        0,
        6741184.812,
        148798.258,
        null,
        6889983.07,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '4733 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Iowa',
        'Hardin',
        'Iowa Falls',
        '132 Park Ave',
        50126,
        null,
        42.518357,
        -93.258509,
        'WATERLOO,USA-IA,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IA-83',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6733584.098,
        0,
        6733584.098,
        148630.487,
        null,
        6882214.585,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '1470 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Saginaw',
        '6209 Bachelor Rd',
        55779,
        null,
        46.95207,
        -92.33011,
        'RAINY DWP,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6717454.271,
        0,
        6717454.271,
        148274.453,
        null,
        6865728.724,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '824 - Canadian National Railways - BRIDGES',
        1,
        'Canada',
        'Ontario',
        null,
        'Chatham-Kent',
        '12871 River Line',
        'N0P 2K0',
        null,
        42.54095,
        -81.98746,
        'CHATHAM,CA-ON,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-ON',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        6705237.403,
        0,
        6705237.403,
        148004.79,
        null,
        6853242.193,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8415 - Canadian National Railways - BUILDINGS & CONTENTS',
        1,
        'Canada',
        'Saskatchewan',
        null,
        'Melville',
        ' ',
        'S0A',
        null,
        50.922359,
        -102.802828,
        'Canadian National Railways,S0A 2P0,CA-SK,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-SK',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BUILDINGS & CONTENTS',
        2550000,
        4179316.878,
        6729316.878,
        112572.365,
        null,
        6841889.243,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8874 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Fraser-Fort George',
        ' ',
        'V0J',
        null,
        54.831867,
        -121.748149,
        'TUMBLER,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        544024224.803,
        0,
        544024224.803,
        12008253.611,
        null,
        556032478.414,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '3158 - Canadian National Railways - BRIDGES',
        1,
        'United States (USA)',
        'Illinois',
        'Alexander',
        'Cairo',
        ' Commercial Ave',
        62914,
        null,
        37.022936,
        -89.17554,
        'CAIRO,USA-KY,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'IL-3',
        'ACORD',
        'INFENG002',
        'Civil work and special engineering structure',
        'Bridge',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'BRIDGES',
        517928014.951,
        0,
        517928014.951,
        11432231.64,
        null,
        529360246.591,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '11 - Canadian National Railways - AUTO COMPOUNDS',
        1,
        'Canada',
        'Quebec',
        null,
        'Taschereau',
        null,
        'H4T 1T1',
        null,
        45.4867,
        -73.68565,
        'Taschereau,H4T 1T1,CA-QC,Canada',
        'Post code',
        'No',
        'Trillium',
        null,
        'CA-QC',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'AUTO COMPOUNDS',
        183217500,
        300283917.651,
        483501417.651,
        8088324.401,
        null,
        491589742.052,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8851 - Canadian National Railways - TUNNELS',
        1,
        'Canada',
        'British Columbia',
        null,
        'Vancouver',
        '3645 Fellowes St',
        'V5K',
        null,
        49.292018,
        -123.024226,
        'YALE,CA-BC,Canada',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'CA-BC',
        'ACORD',
        'INFENG001',
        'Civil work and special engineering structure',
        'Alluvium tunnel',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'TUNNELS',
        425547662.764,
        0,
        425547662.764,
        9393118.955,
        null,
        434940781.719,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ],
    [
        '8895 - Canadian National Railways - WHARVES',
        1,
        'United States (USA)',
        'Minnesota',
        null,
        'Duluth',
        ' Courtland St',
        55806,
        null,
        46.753495,
        -92.129158,
        'WISCONSIN CENTRAL LTD.,55807,USA-MN,United States (USA)',
        'Coordinates',
        'Yes',
        'HERE',
        null,
        'USA-MN',
        'ACORD',
        'INDTRN999',
        'Transportation services, repair, maintenance',
        'Unspecified',
        'ACORD',
        'UNSUNS',
        'Unspecified',
        null,
        null,
        null,
        'No',
        null,
        'WHARVES',
        159219189.362,
        260951939.345,
        420171128.707,
        7028894.371,
        null,
        427200023.078,
        100,
        null,
        18,
        'FI',
        'Yes',
        'No'
    ]
];


/***/ }),

/***/ "./src/app/shared/shared-location-grid/shared-location-grid.component.html":
/*!*********************************************************************************!*\
  !*** ./src/app/shared/shared-location-grid/shared-location-grid.component.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"notify\" id=\"id_notify_success_div\" class=\"alert-success\" style=\"float: right; z-index: 1;\r\n\"><strong>Success!</strong>\r\n  <!--<span class=\"closebtn\">&times;</span>-->\r\n</div>\r\n <!-- <div id=\"mySidenav\" class=\"sidenav body template-bg template-border radius-all\"\r\n  style=\"float: right; z-index:1; position:relative\" class=\"sidebar-class\">\r\n  <a id=\"sideBar\" (click)=\"onShowSideBar()\"><i class=\" fa fa-bars fa-fw\" aria-hidden=\"true\"></i></a>\r\n  <a (click)=\"getStateCols()\" id=\"helps\"  nz-popover nzContent=\"Field Management\" >\r\n    <i class=\"fa fa-cog fa-spin fa-fw\" aria-hidden=\"true\"  ></i>\r\n  </a>-->\r\n  <!-- <a href=\"#/dcm/upload\" id=\"setting\"><i class=\"fa fa-user fa-fw\" aria-hidden=\"true\"></i></a>\r\n  <a (click)=\"goToAdmin()\" id=\"helps\"  nz-popover nzContent=\"Field Management\" >\r\n    <i class=\"fa fa-cog fa-spin fa-fw\" aria-hidden=\"true\"  ></i>\r\n  </a>\r\n</div>  *ngIf=\"startSave\"-->\r\n\r\n<div *ngIf=\"startSave\" class=\"spinner-save\" style=\"z-index:1;\">\r\n  <div>\r\n    <nz-spin style=\"width: 60px\"></nz-spin>\r\n  </div>\r\n</div>\r\n\r\n<div style=\"display: inline-block; width: 96%; height: 100%; margin-left: 20px; position:relative;\" class=\"d-aggrid\">\r\n  <!-- <div style=\"display: inline-block; width: 96%; height: 100%; margin-left: 20px; z-index:1; position:relative;\" class=\"d-aggrid\"> -->\r\n <ag-grid-angular\r\n      #agGrid\r\n      style=\"width: 100%; height: calc(100% - 40px);\"\r\n      id=\"myGrid\"\r\n      class=\"ag-theme-balham\"\r\n      [sideBar]=\"sideBar\"\r\n      [modules]=\"modules\"\r\n      floatingFilter\r\n      [gridOptions]=\"gridOptions\"\r\n      [defaultColDef]=\"defaultColDef\"\r\n      [tooltipShowDelay]=\"tooltipShowDelay\"\r\n      [animateRows]=\"true\"\r\n      [frameworkComponents]=\"frameworkComponents\"\r\n      [enableRangeSelection]=\"true\"\r\n      [suppressRowClickSelection]=\"true\"\r\n\r\n      [rowData]=\"rowData\"\r\n      [columnDefs]=\"columnDefs\"\r\n      \r\n        [pivotPanelShow]=\"pivotPanelShow\"\r\n        [icons]=\"icons\"\r\n      [pagination]=\"true\"\r\n      [suppressPaginationPanel]=\"true\"\r\n      [enterMovesDown]=\"true\"\r\n      [enterMovesDownAfterEdit]=\"true\"\r\n      [enableFillHandle]=\"true\"\r\n      [enableCellChangeFlash]=\"false\"\r\n      [aggregateOnlyChangedColumns]=\"true\"\r\n      [rememberGroupStateWhenNewData]=\"true\"\r\n      [components]=\"components\"\r\n      [rowBuffer]=\"rowBuffer\"\r\n      [rowSelection]=\"rowSelection\"\r\n      [paginationPageSize]=\"paginationPageSize\"\r\n      [getContextMenuItems]=\"getContextMenuItems\"\r\n      (cellValueChanged)=\"onCellValueChanged($event)\"\r\n    (cellClicked)=\"onCellClicked($event)\"\r\n            (cellKeyDown)=\"onCellKeyDown($event)\"\r\n            (cellKeyPress)=\"onCellKeyPress($event)\"\r\n      \r\n      (gridReady)=\"onGridReady($event)\"\r\n    (cellFocused)=\"onCellFocused($event)\"\r\n    (cellDoubleClicked)=\"onCellDoubleClicked($event)\"\r\n      >\r\n\r\n  </ag-grid-angular>\r\n  <!-- (paginationChanged)=\"onPaginationChanged($event)\" -->\r\n  <!-- costomize pagination -->\r\n  <div class=\"test-header\">\r\n    <!-- <div style=\"display: inline-block; margin-left: 10%;\">\r\n    <span class=\"ms-1\"><i class=\"fas fa-pen\" (click)=\"invokeEditMethod($event)\" style=\"margin-top: 15px; cursor: pointer;\"></i></span>\r\n      <span class=\"ms-1\"><i class=\"fa fa-trash\" (click)=\"invokeDeleteMethod($event)\" style=\"margin-top: 15px; cursor: pointer;\"></i></span>\r\n      <span class=\"ms-1\"><i class=\"fa fa-link\" (click)=\"invokeLinkMethod($event)\" style=\"margin-top: 15px; cursor: pointer;\"></i></span>\r\n      \r\n      <input type=\"text\" placeholder=\"'TIV       %'\" style=\"display: inline-block; margin-left: 50px; color: blue; border: none; border-bottom: 1px solid blue; width: 60px; align-content: center;\">\r\n      \r\n    <section class=\"example-section\" style=\"display: inline-block;\">\r\n      <ul class=\"tiv-class\">\r\n        <li *ngFor=\"let elmt of calculTiv\" style=\"display: inline-block;\">\r\n          <mat-checkbox class=\"example-margin\"\r\n          *ngIf=\"!colorPdBi\"\r\n        [checked]=\"elmt.checked\"\r\n        [color]=\"blue\"\r\n        (change)=\"setCheck($event.checked, elmt.id)\" style=\"margin-left: 30px; color: grey;\">\r\n        {{elmt.name}}\r\n      </mat-checkbox>\r\n      <mat-checkbox class=\"example-margin\"\r\n      *ngIf=\"colorPdBi\"\r\n        [checked]=\"elmt.checked\"\r\n        [color]=\"blue\"\r\n        (change)=\"setCheck($event.checked, elmt.id)\" style=\"margin-left: 30px; color: red;\">\r\n        {{elmt.name}}\r\n      </mat-checkbox>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n    <span class=\"ms-1\"><i class=\"fa fa-floppy-o\" (click)=\"invokeTivMethod($event)\" style=\"margin-top: 15px; cursor: pointer;\"></i></span>\r\n  </div> -->\r\n\r\n  <div style=\"display: inline-block; float: right; margin-right: 10px;\">\r\n\r\n    <ul class=\"pagination\" style=\"margin-top: 5px; display: inline-block; float: right;  margin-right: 10px;\">\r\n      <li *ngIf=\"currentPage != 1\"><a id=\"idFirst\" (click)=\"onBtFirst()\"><i class=\"fa  fa-step-backward fa-fw\" aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage == 1\"><a id=\"idFirsta\"><i id=\"idFirstOne\" class=\"fa  fa-step-backward fa-fw\"\r\n            aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage != 1\"><a id=\"idPreview\" (click)=\"onBtPrevious()\"><i class=\"fa fa-chevron-left fa-fw\"\r\n            aria-hidden=\"true\"></i></a></li>\r\n            <li *ngIf=\"currentPage == 1\"><a id=\"idPreview\"><i id=\"idPreviewOne\" class=\" fa fa-chevron-left fa-fw\"\r\n                  aria-hidden=\"true\"></i></a></li>\r\n                  \r\n      <li *ngIf=\"currentPage==pageFirst\">\r\n        <a id=\"idOne\" class=\"active\">{{currentPage}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage==pageFirst && pageLast - currentPage > 0\" (click)=\"onBtSpecifiquePage(currentPage + 1)\">\r\n        <a id=\"idOne\">{{currentPage + 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage==pageFirst && pageLast - currentPage - 1 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 2)\">\r\n        <a id=\"idOne\">{{currentPage + 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage==pageFirst && pageLast - currentPage - 2 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 3)\">\r\n        <a id=\"idOne\">{{currentPage + 3}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage==pageFirst && pageLast - currentPage - 3 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 4)\">\r\n        <a id=\"idOne\">{{currentPage + 4}}</a>\r\n      </li>\r\n    \r\n    \r\n      <li *ngIf=\"currentPage == 2\">\r\n        <a id=\"idOne\" (click)=\"onBtFirst()\">{{currentPage - 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 2\">\r\n        <a id=\"idOne\" class=\"active\">{{currentPage}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 2 && pageLast - currentPage > 0\" (click)=\"onBtSpecifiquePage(currentPage + 1)\">\r\n        <a id=\"idOne\">{{currentPage + 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 2 && pageLast - currentPage - 1 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 2)\">\r\n        <a id=\"idOne\">{{currentPage + 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 2 && pageLast - currentPage - 2 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 3)\">\r\n        <a id=\"idOne\">{{currentPage + 3}}</a>\r\n      </li>\r\n    \r\n    \r\n      <li *ngIf=\"currentPage == 3\" (click)=\"onBtSpecifiquePage(currentPage - 1)\">\r\n        <a id=\"idOne\">{{currentPage - 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 3\" (click)=\"onBtSpecifiquePage(currentPage - 1)\">\r\n        <a id=\"idOne\">{{currentPage - 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 3\">\r\n        <a id=\"idOne\" class=\"active\">{{currentPage}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 3 && pageLast - currentPage - 1 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 2)\">\r\n        <a id=\"idOne\">{{currentPage + 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 3 && pageLast - currentPage - 2 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 3)\">\r\n        <a id=\"idOne\">{{currentPage + 3}}</a></li>\r\n    \r\n    \r\n      <li\r\n        *ngIf=\"currentPage!=pageFirst && currentPage - 3 > 0  && pageLast - currentPage != 2 && pageLast - currentPage != 1  && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\"\r\n        (click)=\"onBtSpecifiquePage(currentPage -2)\">\r\n        <a id=\"idOne\" >{{currentPage - 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage!=pageFirst && currentPage - 3 > 0  && pageLast - currentPage != 2 && pageLast - currentPage != 1  && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\"\r\n        (click)=\"onBtSpecifiquePage(currentPage - 1)\">\r\n        <a id=\"idOne\">{{currentPage - 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage!=pageFirst && currentPage - 3 > 0  && pageLast - currentPage != 2 && pageLast - currentPage != 1  && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\">\r\n        <a id=\"idOne\" class=\"active\">{{currentPage}}</a>\r\n      </li>\r\n    \r\n      <li *ngIf=\"pageLast - currentPage - 2 > 0 && currentPage != 1 && currentPage != 2 && currentPage != 3 && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\"\r\n        (click)=\"onBtSpecifiquePage(currentPage + 1)\">\r\n        <a id=\"idOne\">{{currentPage + 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"pageLast - currentPage - 2 > 0  && currentPage != 1 && currentPage != 2 && currentPage != 3 && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\"\r\n        (click)=\"onBtSpecifiquePage(currentPage + 2)\">\r\n        <a id=\"idOne\">{{currentPage + 2}}</a>\r\n      </li>\r\n    \r\n        <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 2)\"><a id=\"idOne\">{{currentPage - 2}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 1)\"><a id=\"idOne\">{{currentPage - 1}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\"><a id=\"idOne\" class=\"active\">{{currentPage}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage + 1)\"><a id=\"idOne\">{{currentPage + 1}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage + 2)\"><a id=\"idOne\">{{currentPage + 2}}</a></li>\r\n    \r\n        <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\" (click)=\"onBtSpecifiquePage(currentPage - 3)\">{{currentPage - 3}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\" (click)=\"onBtSpecifiquePage(currentPage - 2)\">{{currentPage - 2}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\" (click)=\"onBtSpecifiquePage(currentPage - 1)\">{{currentPage - 1}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\" class=\"active\">{{currentPage}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\" (click)=\"onBtSpecifiquePage(currentPage + 1)\">{{currentPage + 1}}</a></li>\r\n    \r\n          <li *ngIf=\"currentPage == pageLast && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 4)\"><a id=\"idOne\">{{currentPage - 4}}</a></li>\r\n          <li *ngIf=\"currentPage == pageLast && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 3)\"><a id=\"idOne\">{{currentPage - 3}}</a></li>\r\n          <li *ngIf=\"currentPage == pageLast && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 2)\"><a id=\"idOne\">{{currentPage - 2}}</a></li>\r\n          <li *ngIf=\"currentPage == pageLast && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 1)\"><a id=\"idOne\">{{currentPage - 1}}</a></li>\r\n          <li *ngIf=\"currentPage == pageLast && pageLast > 4\"><a id=\"idOne\" class=\"active\">{{currentPage}}</a></li>\r\n    \r\n      <li *ngIf=\"currentPage != pageLast\"><a id=\"idNext\" (click)=\"onBtNext()\"><i class=\"fa fa-chevron-right fa-fw\" aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage == pageLast\"><a id=\"idNexta\"><i id=\"idNextL\" class=\"fa fa-chevron-right fa-fw\"\r\n        aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage != pageLast\"><a id=\"idLast\" (click)=\"onBtLast()\"><i class=\"fa fa-step-forward fa-fw\" aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage == pageLast\"><a id=\"idLast\"><i id=\"idLastL\" class=\"fa fa-step-forward fa-fw\"\r\n          aria-hidden=\"true\"></i></a></li>\r\n    </ul>\r\n  </div>\r\n  </div>\r\n</div>\r\n<div style=\"display: inline-block; float: right; z-index:1; position:fixed; margin-top: 20px;\">\r\n  <a (click)=\"onManageColumn()\"><mat-icon style=\" margin-right: 4px; font-size: 30px;\">menu</mat-icon></a>\r\n</div>\r\n\r\n    <nz-modal\r\n      [(nzVisible)]=\"isManageColumn\"\r\n      [nzTitle]=\"modalTitleManageColumn\"\r\n      [nzContent]=\"modalContentManageColumn\"\r\n      [nzFooter]=\"modalFooterManageColumn\"\r\n      (nzOnCancel)=\"handleOutsideClick()\"\r\n      [nzBodyStyle]=\"{'overflow': 'scroll'}\"\r\n    >\r\n      <ng-template #modalTitleManageColumn>Manage Columns</ng-template>\r\n\r\n      <ng-template #modalContentManageColumn style=\"overflow: scroll;\">\r\n\r\n        <div  class=\"example-list mt-20\" >  \r\n          <section class=\"example-section\">\r\n            <div class=\"search-box\">\r\n              <input #myInput class=\"form-control\" [(ngModel)]=\"name\"  style=\"height: 30px;font-size: 12px;text-align: center;padding: 0.5rem;background: #cccccc52\">\r\n              <div class=\"search-box-placeholder-wrapper\">\r\n                <mat-icon class=\"search-box-placeholder\">search</mat-icon>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section class=\"example-section p-3\">\r\n            <mat-checkbox class=\"example-margin\" (change)=\"setAllTree($event.checked)\">Select All</mat-checkbox>\r\n          </section>\r\n       \r\n          <mat-accordion class=\"example-headers-align\" multi>\r\n         \r\n  <mat-expansion-panel  *ngFor=\"let line of categoriesFilter(task) ; let i = index\">\r\n   \r\n\r\n    <mat-expansion-panel-header>\r\n      <mat-panel-title>\r\n        <mat-checkbox class=\"example-margin\"\r\n              [checked]=\"allComplete\"\r\n              (click)=\"$event.stopPropagation()\" \r\n                (keydown)=\"$event.stopPropagation()\"\r\n              (change)=\"setAll($event.checked, i)\"\r\n              >\r\n            </mat-checkbox>\r\n      </mat-panel-title>\r\n      <mat-panel-description>\r\n        <span >\r\n          {{line.name}}\r\n        </span>\r\n       \r\n      </mat-panel-description>\r\n    </mat-expansion-panel-header>\r\n\r\n    \r\n      <ul  cdkDropList class=\"example-list pl-4 pr-2\" (cdkDropListDropped)=\"drop($event,i)\">\r\n          \r\n        <li class=\"example-box pr-2 pl-2 \"    [cdkDragDisabled]=\"!subtask.checked\" [class.highlight]=\"subtask.checked\" *ngFor=\"let subtask of  dataFiltered(line)\" cdkDrag>\r\n          <mat-checkbox [(ngModel)]=\"subtask.checked\" class=\"mt-2\"\r\n                        (ngModelChange)=\"updateAllComplete()\"\r\n                        >\r\n                        <span (click)=\"onClickSheet($event, line.name, subtask.name)\" class=\"w-100 drag-content\">\r\n                          {{subtask.name}}\r\n                        </span>\r\n            \r\n          </mat-checkbox>\r\n        </li>\r\n      </ul>\r\n    \r\n  </mat-expansion-panel>\r\n\r\n          </mat-accordion>\r\n          \r\n        \r\n        \r\n\r\n              \r\n      </div>\r\n      </ng-template>\r\n\r\n      <ng-template #modalFooterManageColumn>\r\n        <button nz-button class=\"cancel-btn\" nzType=\"default\" (click)=\"handleCancelManageColumn()\">Cancel</button>\r\n        <button nz-button class=\"reset-btn\" (click)=\"handleResetManageColumn()\">Reset</button>\r\n        <button nz-button class=\"save-btn\" (click)=\"handleOkManageColumn()\" [nzLoading]=\"isConfirmLoading\">Save</button>\r\n      </ng-template>\r\n    </nz-modal>\r\n\r\n    <div *ngIf=\"laoding$|async\" style=\"margin-top: -200px;\">\r\n      <div class=\"app-loading\">\r\n        <div class=\"logo\">\r\n          <svg class=\"spinner\" viewBox=\"25 25 50 50\">\r\n            <circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n    <nz-modal\r\n    [(nzVisible)]=\"isVisiblePdBi\"\r\n    [nzTitle]=\"modalTitlePb\"\r\n    [nzContent]=\"modalContentPb\"\r\n    [nzFooter]=\"modalFooterPb\"\r\n    (nzOnCancel)=\"handleCancelPdBi()\"\r\n    >\r\n    <ng-template #modalTitlePb>Confirm</ng-template>\r\n    \r\n    <ng-template #modalContentPb>\r\n      <p>Do you want to save the changes?</p>\r\n      <!-- <div>\r\n        <textarea nz-input placeholder=\"Add comments here... \" [nzAutosize]=\"{ minRows: 3, maxRows: 5 }\"></textarea>\r\n      </div> -->\r\n    </ng-template>\r\n    \r\n    <ng-template #modalFooterPb>\r\n      <button nz-button nzType=\"default\" (click)=\"handleCancelPdBi()\">Cancel</button>\r\n      <button nz-button class=\"confirm-btn\" nzType=\"primary\" (click)=\"handleOkPdBi()\" [nzLoading]=\"isConfirmLoading\">Confirm</button>\r\n    </ng-template>\r\n    </nz-modal>\r\n\r\n<nz-modal [(nzVisible)]=\"isVisibleRestor\" nzTitle=\"Modal Title\" (nzOnCancel)=\"handleCancelRestor()\"\r\n          (nzOnOk)=\"handleOkRestor()\" [nzOkLoading]=\"isOkLoadingRestor\" *ngIf=\"isVisibleRestor\">\r\n  <p>Restore initial data</p>\r\n</nz-modal>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/shared/shared-location-grid/shared-location-grid.component.scss":
/*!*********************************************************************************!*\
  !*** ./src/app/shared/shared-location-grid/shared-location-grid.component.scss ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "/*\r\n    sideBar Design\r\n*/\n#mySidenav a {\n  right: 0px;\n  transition: 0.3s;\n  padding: 15px;\n  position: fixed;\n  width: 47px;\n  text-decoration: none;\n  font-size: 20px;\n  color: white;\n  border-radius: 5px 0px 0px 5px;\n  border: 7px solid #DCDCDC; }\n#id_notify_success_div {\n  position: fixed;\n  right: 0px;\n  top: 130px;\n  margin-right: 10px;\n  transition: opacity 0.6s;\n  padding: 20px;\n  width: 200px;\n  font-size: 17px;\n  background-color: #4CAF50;\n  color: white;\n  opacity: 1; }\n#sideBar {\n  top: calc(100% - 180px);\n  background-color: white; }\n.fa-bars {\n  position: absolute;\n  left: 15%;\n  top: 15%;\n  font-size: 20px !important;\n  color: #20B2AA; }\n#sideBar:hover {\n  background-color: #20B2AA; }\n#sideBar:hover .fa-bars {\n  color: white; }\n#setting {\n  top: calc(100% - 180px);\n  background-color: white; }\n.fa-user {\n  position: absolute;\n  left: 15%;\n  top: 15%;\n  font-size: 20px !important;\n  color: #2196F3; }\n#setting:hover {\n  background-color: #2196F3; }\n#setting:hover .fa-user {\n  color: white; }\n#helps {\n  top: calc(100% - 140px);\n  background-color: white; }\n.fa-cog {\n  position: absolute;\n  left: 15%;\n  top: 15%;\n  font-size: 20px !important;\n  color: #FFA500; }\n#helps:hover {\n  background-color: #FFA500; }\n#helps:hover .fa-cog {\n  color: white; }\n.ui-table-input {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  background: rgba(255, 0, 0, 0) !important; }\n/*\r\n  Pagination design\r\n*/\nul.pagination {\n  display: inline-block;\n  padding: 0;\n  margin: 0; }\nul.pagination li {\n  display: inline; }\n.fa-step-backward, .fa-chevron-left, .fa-chevron-right, .fa-step-forward {\n  color: black; }\n#idFirstOne, #idPreviewOne, #idNextL, #idLastL {\n  color: #b4b3b3; }\nul.pagination li a {\n  color: #008B8B;\n  float: left;\n  padding: 5px 14px;\n  text-decoration: none;\n  border-radius: 5px; }\nul.pagination li a.active {\n  background-color: #20B2AA;\n  color: white;\n  border-radius: 5px; }\nul.pagination li a:hover:not(.active) {\n  background-color: #ddd; }\n::ng-deep .ui-table-scrollable-wrapper {\n  height: 100% !important; }\n::ng-deep .ui-table-scrollable-view {\n  height: 100% !important;\n  display: -ms-flexbox !important;\n  display: flex !important;\n  -ms-flex-direction: column !important;\n      flex-direction: column !important; }\n::ng-deep .ui-table-scrollable-body {\n  -ms-flex: 1 1 0px !important;\n      flex: 1 1 0 !important; }\n::ng-deep .ui-table {\n  height: 100% !important;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-direction: column;\n      flex-direction: column; }\n::ng-deep .header-align {\n  text-align: left;\n  font-family: initial;\n  margin-left: 20px !important;\n  font-size: 12px; }\n.font-icon-medium {\n  color: #67BECD; }\n.font-icon-medium-size {\n  font-size: medium; }\n.app-loading {\n  position: relative;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-direction: column;\n      flex-direction: column;\n  -ms-flex-align: center;\n      align-items: center;\n  -ms-flex-pack: center;\n      justify-content: center;\n  height: 100%; }\n.app-loading .spinner {\n  height: 200px;\n  width: 200px;\n  -webkit-animation: rotate 2s linear infinite;\n          animation: rotate 2s linear infinite;\n  -webkit-transform-origin: center center;\n      -ms-transform-origin: center center;\n          transform-origin: center center;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  margin: auto; }\n.app-loading .spinner .path {\n  stroke-dasharray: 1, 200;\n  stroke-dashoffset: 0;\n  -webkit-animation: dash 1.5s ease-in-out infinite;\n          animation: dash 1.5s ease-in-out infinite;\n  stroke-linecap: round;\n  stroke: #ddd; }\n@-webkit-keyframes rotate {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n@keyframes rotate {\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n@-webkit-keyframes dash {\n  0% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0; }\n  50% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -35px; }\n  100% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -124px; } }\n@keyframes dash {\n  0% {\n    stroke-dasharray: 1, 200;\n    stroke-dashoffset: 0; }\n  50% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -35px; }\n  100% {\n    stroke-dasharray: 89, 200;\n    stroke-dashoffset: -124px; } }\n.app-loading .logo {\n  width: 200px;\n  height: 87px;\n  background: url('logo.png') center center no-repeat;\n  background-size: cover; }\n@-webkit-keyframes spinners {\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n@keyframes spinners {\n  to {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg); } }\n.spinners:before {\n  content: '';\n  box-sizing: border-box;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  width: 30px;\n  height: 30px;\n  margin-top: -15px;\n  margin-left: -15px;\n  border-radius: 50%;\n  border: 1px solid #ccc;\n  border-top-color: #07d;\n  -webkit-animation: spinner .6s linear infinite;\n          animation: spinner .6s linear infinite; }\n::ng-deep input[type=checkbox]:checked {\n  background-color: #a77e2d !important;\n  color: #ffffff !important; }\n::ng-deep body .ui-paginator .ui-paginator-pages .ui-paginator-page.ui-state-active {\n  background-color: transparent;\n  color: #00334d !important; }\n::ng-deep body .ui-dropdown-panel .ui-dropdown-items .ui-dropdown-item.ui-state-highlight {\n  background-color: transparent;\n  color: #00334d !important;\n  font-weight: bold;\n  border: #00334d 1px solid;\n  border-radius: 5px; }\n::ng-deep body .ui-table .ui-table-thead > tr > th {\n  padding: 0; }\n::ng-deep th, td {\n  padding: 3px !important;\n  font-size: 12px;\n  font-family: 'Roboto', sans-serif; }\n::ng-deep #div-grid > div > p-table > div > p-paginator > div > p-dropdown {\n  float: right;\n  margin-right: 15px;\n  border: rgba(117, 117, 117, 0.88) 1px solid;\n  border-radius: 5px; }\n::ng-deep #div-grid > div > p-table > div > p-paginator > div > p-dropdown > div > label {\n  padding: 0px 27px 0px 0px;\n  vertical-align: middle; }\n::ng-deep #div-grid > div > p-table > div > p-paginator > div > p-dropdown > div {\n  height: 20px; }\n.ms-1 {\n  color: #646464;\n  margin-left: 30px;\n  font-size: 13px; }\n.vl {\n  border-left: 1px solid #b4b4b4;\n  height: 25px; }\n::-webkit-input-placeholder {\n  color: blue;\n  opacity: 1;\n  /* Firefox */ }\n:-ms-input-placeholder {\n  color: blue;\n  opacity: 1;\n  /* Firefox */ }\n::-ms-input-placeholder {\n  color: blue;\n  opacity: 1;\n  /* Firefox */ }\n::placeholder {\n  color: blue;\n  opacity: 1;\n  /* Firefox */ }\n.tiv-class {\n  white-space: nowrap;\n  display: inline-block;\n  list-style-type: none; }\n.confirm-btn {\n  background-color: #172be0;\n  color: white; }\nul {\n  list-style-type: none; }\n.save-btn {\n  background: #172be0 !important;\n  border-radius: 25px;\n  border: none;\n  outline: none;\n  color: white;\n  width: 170px; }\n.save-btn:hover {\n  transition: 0.7s;\n  background: #253bff !important;\n  border-radius: 25px;\n  border: none;\n  outline: none;\n  color: white; }\n.cancel-btn, .reset-btn {\n  border: none;\n  text-transform: uppercase;\n  color: #525ecc;\n  font-weight: bold;\n  font-family: \"Lucida Console\", \"Courier New\", monospace; }\n.example-list {\n  /* width: 500px; */\n  max-width: 100%;\n  /* border: solid 1px #ccc; */\n  min-height: 60px;\n  display: block;\n  background: white;\n  border-radius: 4px;\n  overflow: hidden; }\n.container {\n  width: 100%;\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-align: center;\n      align-items: center; }\n.drag-icon {\n  position: relative; }\n.drag-icon i {\n  cursor: move; }\ni.disable {\n  position: absolute;\n  cursor: not-allowed !important;\n  top: 0;\n  left: 0;\n  bottom: 0;\n  right: 0;\n  color: transparent; }\n.example-box {\n  /* padding: 20px 10px; */\n  border-bottom: solid 1px #ccc;\n  color: rgba(0, 0, 0, 0.87);\n  display: -ms-flexbox;\n  display: flex;\n  -ms-flex-direction: row;\n      flex-direction: row;\n  -ms-flex-align: center;\n      align-items: center;\n  -ms-flex-pack: justify;\n      justify-content: space-between;\n  box-sizing: border-box;\n  background: white;\n  font-size: 14px;\n  margin-bottom: 5px;\n  box-shadow: #ccc 0px 3px 1px -2px, #ccc 0px 2px 2px 0px, #ccc 0px 1px 5px 0px; }\n.highlight {\n  background: rgba(255, 165, 0, 0.27); }\n.cdk-drag-preview {\n  box-sizing: border-box;\n  border-radius: 4px;\n  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2), 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12); }\n.cdk-drag-placeholder {\n  opacity: 0; }\n.cdk-drag-animating {\n  transition: -webkit-transform 250ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 250ms cubic-bezier(0, 0, 0.2, 1); }\n/* .example-box:last-child {\r\n  border: none;\r\n} */\n.example-list.cdk-drop-list-dragging .example-box:not(.cdk-drag-placeholder) {\n  transition: -webkit-transform 250ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);\n  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1), -webkit-transform 250ms cubic-bezier(0, 0, 0.2, 1); }\n.search-box {\n  position: relative; }\n.search-box-placeholder-wrapper {\n    pointer-events: none;\n    position: absolute;\n    left: 17px;\n    -webkit-transform: translateX(-50%);\n        -ms-transform: translateX(-50%);\n            transform: translateX(-50%);\n    top: 7px;\n    font-size: 2px; }\n.search-box-input:focus + .search-box-placeholder-wrapper {\n    display: none; }\n.search-box .form-control:focus {\n    background-color: #fff;\n    border-color: transparent;\n    outline: 0;\n    box-shadow: #ccc0 0px 3px 1px -2px, #ccc0 0px 2px 2px 0px, #ccc 0px 1px 5px 0px; }\n.spinner-save {\n  margin: 0;\n  position: absolute;\n  top: 60%;\n  left: 50%;\n  -ms-transform: translate(-50%, -50%);\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  background: rgba(0, 0, 0, 0.07);\n  padding: 50%; }\n\r\n/*# sourceMappingURL=data:application/json;base64, */"

/***/ }),

/***/ "./src/app/shared/shared-location-grid/shared-location-grid.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/shared/shared-location-grid/shared-location-grid.component.ts ***!
  \*******************************************************************************/
/*! exports provided: SharedLocationGridComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharedLocationGridComponent", function() { return SharedLocationGridComponent; });
/* harmony import */ var _customized_shared_location_grid_customized_grid_buttons_service__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../customized-shared-location-grid/customized-grid-buttons.service */ "./src/app/shared/customized-shared-location-grid/customized-grid-buttons.service.ts");
/* harmony import */ var _customized_shared_location_grid_customized_shared_location_grid_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./../customized-shared-location-grid/customized-shared-location-grid.component */ "./src/app/shared/customized-shared-location-grid/customized-shared-location-grid.component.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _customized_shared_location_grid_GridLineInfo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../customized-shared-location-grid/GridLineInfo */ "./src/app/shared/customized-shared-location-grid/GridLineInfo.ts");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _app_dcm_modules_upload_store_mapping_mapping_selectors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/dcm/modules/upload/store/mapping/mapping.selectors */ "./src/app/dcm/modules/upload/store/mapping/mapping.selectors.ts");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var ng_keyboard_shortcuts__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ng-keyboard-shortcuts */ "./node_modules/ng-keyboard-shortcuts/fesm5/ng-keyboard-shortcuts.js");
/* harmony import */ var _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @app/dcm/modules/upload/services/file-import.service */ "./src/app/dcm/modules/upload/services/file-import.service.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
/* harmony import */ var _ag_grid_enterprise_all_modules__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ag-grid-enterprise/all-modules */ "./node_modules/@ag-grid-enterprise/all-modules/dist/es6/main.js");
/* harmony import */ var _app_dcm_components_header_component_sortable_header_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @app/dcm/components/header-component/sortable-header.component */ "./src/app/dcm/components/header-component/sortable-header.component.ts");
/* harmony import */ var _data_model__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./data-model */ "./src/app/shared/shared-location-grid/data-model.ts");
/* harmony import */ var _app_dcm_components_header_group_component_header_group_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @app/dcm/components/header-group-component/header-group.component */ "./src/app/dcm/components/header-group-component/header-group.component.ts");
/* harmony import */ var _app_dcm_components_header_icons_component_edit_component_header_edit_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @app/dcm/components/header-icons-component/edit-component/header-edit.component */ "./src/app/dcm/components/header-icons-component/edit-component/header-edit.component.ts");
/* harmony import */ var _app_dcm_components_header_icons_component_geocode_component_header_geocode_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @app/dcm/components/header-icons-component/geocode-component/header-geocode.component */ "./src/app/dcm/components/header-icons-component/geocode-component/header-geocode.component.ts");
/* harmony import */ var _app_dcm_components_header_icons_component_supp_component_header_supp_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @app/dcm/components/header-icons-component/supp-component/header-supp.component */ "./src/app/dcm/components/header-icons-component/supp-component/header-supp.component.ts");
/* harmony import */ var _app_dcm_modules_upload_models_cleansing_models_explosures_model__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @app/dcm/modules/upload/models/cleansing-models/explosures-model */ "./src/app/dcm/modules/upload/models/cleansing-models/explosures-model.ts");
/* harmony import */ var _app_dcm_modules_upload_containers_cleansing_container_cleansing_container_component__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @app/dcm/modules/upload/containers/cleansing-container/cleansing-container.component */ "./src/app/dcm/modules/upload/containers/cleansing-container/cleansing-container.component.ts");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _custom_tooltip_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./custom-tooltip.component */ "./src/app/shared/shared-location-grid/custom-tooltip.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_dropdown_error_filter_dropdown_error_filter_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_division_filter_division_filter_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_default_filter_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_quick_search_default_filtered_quick_search_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_tiv_filters_tiv_filter_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component.ts");
/* harmony import */ var _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @angular/cdk/drag-drop */ "./node_modules/@angular/cdk/esm5/drag-drop.es5.js");
/* harmony import */ var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! @angular/material/expansion */ "./node_modules/@angular/material/esm5/expansion.es5.js");
/* harmony import */ var _pipes_filter_pipe__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../pipes/filter.pipe */ "./src/app/shared/pipes/filter.pipe.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_store_part_load_pop_up_actions__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/store-part/load-pop-up.actions */ "./src/app/shared/popups/general-location-info-popup/store-part/load-pop-up.actions.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location-ref-data.const */ "./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_editor_by_type_doubling_editor_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/editor-by-type/doubling-editor.component */ "./src/app/dcm/modules/upload/componenets/cleansing/editor-by-type/doubling-editor.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_editor_by_type_numeric_editor_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/editor-by-type/numeric-editor.component */ "./src/app/dcm/modules/upload/componenets/cleansing/editor-by-type/numeric-editor.component.ts");
/* harmony import */ var _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! @app/dcm/modules/upload/models/cleansing-models/location-by-type.const */ "./src/app/dcm/modules/upload/models/cleansing-models/location-by-type.const.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_edit_all_edit_all_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/edit-all/edit-all.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/edit-all/edit-all.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/manage-column/group-column.const */ "./src/app/dcm/modules/upload/componenets/manage-column/group-column.const.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};










































var SharedLocationGridComponent = /** @class */ (function () {
    // test
    function SharedLocationGridComponent(cleansingContainer, service, importService, cleansingService, keyboard, store, cdrf, notif, 
    // private fakeServer: FakeServer,
    router) {
        var _this = this;
        this.cleansingContainer = cleansingContainer;
        this.service = service;
        this.importService = importService;
        this.cleansingService = cleansingService;
        this.keyboard = keyboard;
        this.store = store;
        this.cdrf = cdrf;
        this.notif = notif;
        this.router = router;
        this.prefix = '';
        this.editable = false;
        this.loading = false;
        this.errorsInfo$ = new rxjs__WEBPACK_IMPORTED_MODULE_5__["Observable"]();
        this.metadata = null;
        this.headers = null;
        this.exposures = null;
        this.datachecks = null;
        this.editLocationButtonClick = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        this.geocodeLocationButtonClick = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        this.cellEdited = new _angular_core__WEBPACK_IMPORTED_MODULE_3__["EventEmitter"]();
        this.data$ = new rxjs__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]([]);
        this.isVisibleRestor = false;
        this.previousState = null;
        this.fakeRowData = null;
        this.isOkLoadingRestor = false;
        this.lastState = null;
        this.sideBar = false;
        // (free_ver) public modules: Module[] = AllCommunityModules;
        this.modules = _ag_grid_enterprise_all_modules__WEBPACK_IMPORTED_MODULE_14__["AllModules"];
        this.currentPage = 1;
        this.lastPageLoaded = 0;
        this.eventModif = false;
        this.numRow = 0;
        this.fieldCodeId = [];
        this.headerName = [];
        this.colDef = [];
        this.numberIdChange = 1;
        this.numberIdFocusedCellChange = 1;
        this.idFocusedBack = 1;
        this.rowDataClicked1 = {};
        this.isFirstLoaded = true;
        this.pageOne = 1;
        this.pageTow = 2;
        this.pageThree = 3;
        this.pageFour = 4;
        this.pageFive = 5;
        this.pageFirst = 1;
        this.typeError = 'errors';
        this.typeWarning = 'warnings';
        this.columnWithNumber = ['tiv_amount', 'machinery_value', 'content_value', 'pd_value', 'bi_value', 'building_value', 'stock_value', 'mpl_pd_value', 'mpl_bi_value'];
        this.dropdownCell = ['occupancy_sub_class', 'occupancy_code', 'construction_class', 'construction_code', 'country', 'site_currency'];
        this.startSave = false;
        // as spec
        this.columnDisplayByDefault = [
            'location_name',
            'company_name',
            'property_db_id',
            'accord_occupancy_code',
            'accord_construction_code',
            /* 'final_country', // Geographical
            'final_city', // Geographical
            'final_latitude', // Geographical
            'final_longitude', // Geographical */
            /* 'original_country', // Geographical
            'original_city', // Geographical
            'original_latitude', // Geographical
            'original_longitude', // Geographical */
            'site_currency',
            'tiv_amount',
            'pd_value',
            'indemnity_period_eip',
            'bi_value',
            'mpl_pd_value',
            'mpl_pd_percentage',
            'mpl_bi_value',
            'mpl_bi_percentage',
        ];
        this.hidedDisplayByDefault = [
            // Geographical
            'original_country',
            'original_city',
            'original_latitude',
            'original_longitude',
            // T & C
            'windstorm_cover',
            'earthquake_cover_deductible',
            'windstorm_cover_deductible',
            'earthquake_cover_limit',
            // More Infos
            'windstorm_basement',
            'windstorm_flood_protection',
            'earthquake_soft_story',
            'gross_written_premium_value',
            // Pricing
            'mb_quality',
            'asset_quality',
            'operational_status',
            'bi_mitigation'
        ];
        this.codeCountry = ['original_country', 'cleansed_country', 'final_country'];
        this.displayByDefaultAfterCollapse = this.hidedDisplayByDefault.concat(this.columnDisplayByDefault);
        this.columnDisplayColumnState = [];
        this.firstLoadManageColumn = true;
        this.expandedColsLength = 0;
        this.expandedColsLengthBeforeEdit = 0;
        this.isModification = false;
        this.listModification = [];
        this.selectedDisplayColumnExpanded = [];
        this.selectedDisplayColumn = [];
        this.isGridEditable = true;
        this.uniqueIndexRowWithError = [];
        this.isChangeDetected = false;
        this.notify = false;
        this.isNewPage = true;
        this.oldDataNewPage = null;
        this.isLoading = false;
        this.KEY_LEFT = 37;
        this.KEY_UP = 38;
        this.KEY_RIGHT = 39;
        this.KEY_DOWN = 40;
        this.KEY_ENTER = 13;
        this.isFirstLoad = true;
        this.indicesRow = [];
        this.neValuesInRow = [];
        this.isNewRowFocused = false;
        this.newValueToSave = [];
        this.indexToSaveMultipleRow = [];
        this.colIdToSaveMultipleCol = {};
        this.firstChangeMultipleRow = true;
        this.isMultipleColToModify = false;
        this.indexRowToSave = [];
        this.indexRowModify = [];
        this.contents = {};
        this.isEnterForSave = false;
        this.countryWithStates = [];
        this.uniqueCountry = [];
        this.countryStates = {};
        this.stateWithCounties = {};
        this.uniqueState = [];
        this.listFilteredColumn = [];
        this.isVisibleComment = false;
        this.isVisiblePdBi = false;
        this.isManageColumn = false;
        this.columnState = [];
        this.groupColumnState = [];
        this.calculTiv = [
            {
                name: 'PD',
                id: 'pd_value',
                value: [],
                index: [],
                checked: false,
                color: 'grey'
            },
            {
                name: 'BI',
                id: 'bi_value',
                value: [],
                index: [],
                checked: false,
                color: 'grey'
            }
        ];
        this.colorPdBi = false;
        this.initColumnState = [];
        this.allComplete = false;
        this.filterPipe = new _pipes_filter_pipe__WEBPACK_IMPORTED_MODULE_33__["FilterPipe"]();
        this.gridOptions = {};
        this.exposureModelSub = new rxjs__WEBPACK_IMPORTED_MODULE_5__["ReplaySubject"](3);
        this.headersModelSub = new rxjs__WEBPACK_IMPORTED_MODULE_5__["ReplaySubject"](3);
        this.datacheckModelSub = new rxjs__WEBPACK_IMPORTED_MODULE_5__["ReplaySubject"](3);
        this.importData$ = this.store.select(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_13__["selectImportObjectState"]);
        this.target$ = this.store.select(_app_dcm_modules_upload_store_mapping_mapping_selectors__WEBPACK_IMPORTED_MODULE_6__["selectMappingTarget"]);
        this.loading$ = store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectCleansingLoading"]);
        this.jobId$ = store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectCleansingJobId"]);
        this.mappingId$ = store.select(_app_dcm_modules_upload_store_mapping_mapping_selectors__WEBPACK_IMPORTED_MODULE_6__["selectMappingId"]);
        this.columnState$ = store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectColumnState"]);
        this.groupColumnState$ = store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectGroupColumnState"]);
        this.filterColumn$ = this.store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectFilterErrorsByColumn"]);
        this.filterColumn$.subscribe(function (filterColumn) {
            if (filterColumn) {
                _this.isFilterActive = filterColumn['active'];
                _this.listFilteredErrors = filterColumn['lists'];
                _this.colIdFiltered = filterColumn['contents'][0];
                // this.refreshGrid();
            }
        });
        this.columnState$.subscribe(function (colSt) {
            if (colSt !== undefined) {
                _this.columnState = colSt;
                _this.columnDisplayColumnState = _this.getDisplayedColumn(_this.columnState);
                /* if (this.columnState) {
                  this.setStateToGrid()
                } */
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectFilterQuickSearch"]).subscribe(function (data) {
            _this.listFilteredColumn = [];
            if (data) {
                var contents = data.contents;
                if (data.active) {
                    _this.listFilteredColumn.push(Object.keys(contents)[0]);
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        this.groupColumnState$.subscribe(function (groupColSt) {
            console.log(groupColSt);
            if (groupColSt !== undefined && groupColSt !== null && groupColSt) {
                console.log('===> groupColumnState$: ');
                var colsTemp = _this.getColumnAfterExpanded(groupColSt['children']);
                if (groupColSt['expanded'] && _this.selectedDisplayColumn.length > 0) {
                    _this.expandedColsLength += 1;
                    _this.selectedDisplayColumnExpanded = colsTemp.concat(_this.selectedDisplayColumn);
                    if (!_this.isModification) {
                        _this.expandedColsLengthBeforeEdit += 1;
                    }
                }
                else {
                    if (!groupColSt['expanded']) {
                        if (_this.expandedColsLength > 0) {
                            _this.expandedColsLength -= 1;
                        }
                        if (_this.expandedColsLengthBeforeEdit > 0) {
                            _this.expandedColsLengthBeforeEdit -= 1;
                            _this.isModification = false;
                        }
                    }
                    // if in manage column and default value
                    // console.log('columnDisplayColumnState, colsTemp, selectedDisplayColumnExpanded => ')
                    // console.log(this.columnDisplayColumnState)
                    // console.log(colsTemp)
                    // console.log(this.selectedDisplayColumnExpanded)
                    // console.log('this.hidedDisplayByDefault => ')
                    // console.log(this.displayByDefaultAfterCollapse)
                    // collapse show in default column
                    var newColsTemp = _this.removeDefaultColumnAfterCollape(_this.displayByDefaultAfterCollapse, colsTemp);
                    // collapse show checked in manage column
                    // const newColsTemp = this.removeDefaultColumnAfterCollape(this.columnDisplayColumnState, colsTemp)
                    // console.log(newColsTemp)
                    // console.log(this.selectedDisplayColumnExpanded)
                    var newlistCols = _this.removeColumnAfterCollape(_this.selectedDisplayColumnExpanded, newColsTemp);
                    // console.log(newlistCols)
                    _this.selectedDisplayColumnExpanded = newlistCols;
                    // if (this.listModification.length > 0) {
                    console.log('getLoadedData ==>');
                    _this.getLoadedData();
                    // }
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        this.importData$.subscribe(function (importData) {
            _this.fileData = importData.fileData;
            _this.selectedSheet = importData.selectedSheet;
        });
        this.jobId$.subscribe(function (jobId) {
            _this.jobId = jobId;
        });
        this.mappingId$.subscribe(function (mappingId) {
            _this.mappingId = mappingId;
        });
        this.getAllData(cleansingContainer);
        this.selectAllData(store);
        this.getAllRefs(cleansingService);
        this.loadingTemplate =
            "<span class=\"ag-overlay-loading-center\">data is loading...</span>";
        this.noRowsTemplate =
            "\"<span\">no rows to show</span>\"";
        service.getEditsObserver().subscribe(function (info) {
            var line = {};
            var multiple = {};
            var page = _this.currentPage - 1;
            var original_rowId = info.rowId + (page * 50);
            var selectedRowsData = _this.gridApi.getSelectedRows();
            var selectedRowsIndex = _this.gridApi.getSelectedNodes().map(function (s) { return s.childIndex; });
            var original_indices = selectedRowsIndex.map(function (s) { return (_this.indexRowsLoaded[s]); });
            Object.keys(info.line).forEach(function (col, i) {
                if (!selectedRowsData.map(function (e) { return e[col]; }).every(function (i) { return i === info.line[col]; })) {
                    line[col] = null;
                    multiple[col] = true;
                }
                else {
                    line[col] = info.line[col];
                    multiple[col] = false;
                }
            });
            if (selectedRowsIndex.length > 1 && selectedRowsIndex.includes(info.rowId)) {
                var obj = {
                    line: line,
                    backup: info.line,
                    rowId: info.rowId,
                    indices: selectedRowsIndex,
                    multiple: multiple,
                    isMultipleEdit: true,
                    current_page: _this.currentPage,
                    original_rowId: original_rowId,
                    original_indices: original_indices
                };
                _this.editLocationButtonClick.emit(obj);
            }
            else {
                var obj = {
                    line: line,
                    backup: info.line,
                    rowId: info.rowId,
                    indices: [info.rowId],
                    multiple: multiple,
                    isMultipleEdit: false,
                    current_page: _this.currentPage,
                    original_rowId: original_rowId,
                    original_indices: [original_rowId]
                };
                _this.editLocationButtonClick.emit(obj);
            }
        });
        service
            .getGeocodeObserver()
            .subscribe(function (info) {
            return _this.geocodeLocationButtonClick.emit(info);
        });
        this.fileMetaData$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_7__["select"])(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_13__["selectFileData"]));
        this.tooltipShowDelay = 0;
        this.frameworkComponents = {
            sortableHeaderComponent: _app_dcm_components_header_component_sortable_header_component__WEBPACK_IMPORTED_MODULE_15__["SortableHeaderComponent"],
            headerGroupComponent: _app_dcm_components_header_group_component_header_group_component__WEBPACK_IMPORTED_MODULE_17__["HeaderGroupComponent"],
            headerEditComponent: _app_dcm_components_header_icons_component_edit_component_header_edit_component__WEBPACK_IMPORTED_MODULE_18__["HeaderEditComponent"],
            headerGeocodeComponent: _app_dcm_components_header_icons_component_geocode_component_header_geocode_component__WEBPACK_IMPORTED_MODULE_19__["HeaderGeocodeComponent"],
            headerSuppComponent: _app_dcm_components_header_icons_component_supp_component_header_supp_component__WEBPACK_IMPORTED_MODULE_20__["HeaderSuppComponent"],
            dropdownErrorFilterComponent: _app_dcm_modules_upload_componenets_cleansing_filters_dropdown_error_filter_dropdown_error_filter_component__WEBPACK_IMPORTED_MODULE_26__["DropdownErrorFilterComponent"],
            customizedSharedLocationGridComponent: _customized_shared_location_grid_customized_shared_location_grid_component__WEBPACK_IMPORTED_MODULE_1__["CustomizedSharedLocationGridComponent"],
            customTooltipComponent: _custom_tooltip_component__WEBPACK_IMPORTED_MODULE_25__["CustomTooltipComponent"],
            // partialMatchFilterComponent: PartialMatchFilterComponent,
            defaultFilterComponent: _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_default_filter_component__WEBPACK_IMPORTED_MODULE_28__["DefaultFilterComponent"],
            divisionFilterComponent: _app_dcm_modules_upload_componenets_cleansing_filters_division_filter_division_filter_component__WEBPACK_IMPORTED_MODULE_27__["DivisionFilterComponent"],
            tivFilterComponent: _app_dcm_modules_upload_componenets_cleansing_filters_tiv_filters_tiv_filter_component__WEBPACK_IMPORTED_MODULE_30__["TivFilterComponent"],
            defaultFilteredQuickSearchComponent: _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_quick_search_default_filtered_quick_search_component__WEBPACK_IMPORTED_MODULE_29__["DefaultFilteredQuickSearchComponent"],
            doublingEditor: _app_dcm_modules_upload_componenets_cleansing_editor_by_type_doubling_editor_component__WEBPACK_IMPORTED_MODULE_36__["DoublingEditor"],
            numericEditor: _app_dcm_modules_upload_componenets_cleansing_editor_by_type_numeric_editor_component__WEBPACK_IMPORTED_MODULE_37__["NumericEditor"],
            editAllComponent: _app_dcm_modules_upload_componenets_cleansing_filters_edit_all_edit_all_component__WEBPACK_IMPORTED_MODULE_39__["EditAllComponent"],
        };
        this.defaultColDef = {
            cellStyle: {
                'background-color': 'white',
            },
            resizable: true,
            sortable: true,
            // flex: 1,
            editable: this.isGridEditable,
            scrollable: true,
            valueFormatter: numberFormatter,
            paginator: true,
            suppressCellFlash: true,
            tooltipComponent: 'customTooltipComponent',
            // tooltipComponentParams: { color: '#fff' },
            filter: 'agTextColumnFilter',
            // cellEditor: editByType(fieldCode, LOCATION_TYPE_DOUBLE/* , LOCATION_TYPE_NUM */),
            filterParams: { /* buttons: ['apply'] */ debounceMs: 1000 },
            headerComponentParams: {
                menuIcon: 'fa-bars'
            }
        };
        this.keyboard.add([
            {
                key: 'ctrl z',
                command: function () { return _this.showModalRestor(); }
            },
            {
                key: 'enter',
                command: function () { return _this.onEnter(); }
            }
        ]);
        this.datasource = {
            rowCount: null,
            getRows: function (params) {
                setTimeout(function () {
                    var rowsThisPage = _data_model__WEBPACK_IMPORTED_MODULE_16__["dataModel"].slice(params.startRow, params.endRow);
                    for (var i = 0; i < rowsThisPage.length; i++) {
                        var item = rowsThisPage[i];
                        var itemCopy = JSON.parse(JSON.stringify(item));
                        rowsThisPage[i] = itemCopy;
                    }
                    var lastRow = -1;
                    if (_data_model__WEBPACK_IMPORTED_MODULE_16__["dataModel"].length <= params.endRow) {
                        lastRow = _data_model__WEBPACK_IMPORTED_MODULE_16__["dataModel"].length;
                    }
                    params.successCallback(rowsThisPage, lastRow);
                }, 3000);
            }
        };
        this.components = {
            loadingRenderer: function (params) {
                if (params.value !== undefined) {
                    return params.value;
                }
                else {
                    return '<img src="assets/icons/loding.gif">';
                }
            }
        };
        this.paginationPageSize = 50;
        this.autoGroupColumnDef = { minWidth: 120 };
        this.config = {
            itemsPerPage: 5,
            currentPage: 1,
            totalItems: _app_dcm_modules_upload_models_cleansing_models_explosures_model__WEBPACK_IMPORTED_MODULE_21__["explosuresModel"].length
        };
        this.rowBuffer = 0;
        this.rowSelection = 'multiple';
        this.cacheOverflowSize = 2;
        this.maxConcurrentDatasourceRequests = 1;
        this.infiniteInitialRowCount = 15;
        this.maxBlocksInCache = 10;
        this.rowModelType = 'serverSide';
        this.rowGroupPanelShow = 'always';
        this.pivotPanelShow = 'always';
        this.icons = {
            columns: '<i class="fa fa-handshake"/>'
        };
    }
    SharedLocationGridComponent.prototype.ngOnInit = function () { };
    SharedLocationGridComponent.prototype.getColumnAfterExpanded = function (newcolumns) {
        var cols = [];
        for (var i = 0; i < newcolumns.length; i++) {
            var elemnts = newcolumns[i];
            cols.push(elemnts['field']);
        }
        return cols;
    };
    SharedLocationGridComponent.prototype.removeColumnAfterCollape = function (oldcolumns, newcolumns) {
        var cols = [];
        for (var i = 0; i < oldcolumns.length; i++) {
            var elemnts = this.getExactColId(oldcolumns[i]);
            if (!newcolumns.includes(elemnts)) {
                cols.push(elemnts);
            }
        }
        return cols;
    };
    SharedLocationGridComponent.prototype.removeDefaultColumnAfterCollape = function (defaultColumns, columns) {
        var cols = [];
        for (var i = 0; i < columns.length; i++) {
            var elemnts = columns[i];
            if (!defaultColumns.includes(elemnts)) {
                cols.push(elemnts);
            }
        }
        /* if (cols.length === 0) {
          for (let i = 0; i < columns.length; i++) {
            const elemnts = columns[i];
            if (i < 4) {
              cols.push(elemnts)
            }
          }
        } */
        return cols;
    };
    SharedLocationGridComponent.prototype.selectAllData = function (store) {
        var _this = this;
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectEditGrid"]).subscribe(function (editable) {
            if (editable !== undefined) {
                _this.isGridEditable = editable;
                // this.refreshAllGrid();
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectColumnStructure"]).subscribe(function (cols) {
            if (cols !== undefined) {
                var newTask = _this.setWorkTaskes(cols);
                _this.task = newTask;
                /* if (this.task && this.columnState) {
                  this.setStateToGrid()
                } */
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectCleansingHeaders"]).subscribe(function (data) {
            if (data) {
                _this.headersOriginal = data;
                _this.headersLoaded = _this.transformHeaders(data);
                _this.headersMod = _this.getListFieldCode(_this.headersLoaded);
                _this.getLoadedData();
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectCleansingData"]).subscribe(function (data) {
            if (data) {
                _this.exposureOriginal = data;
                _this.exposuresLoaded = data.exposures;
                if (data.abolute_index) {
                    _this.indexRowsLoaded = data.abolute_index;
                }
                else {
                    _this.indexRowsLoaded = data.index;
                }
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                _this.currentPage = data['current_page'];
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectCleansingErrors"]).subscribe(function (data) {
            if (data) {
                // console.log('===>selectCleansingErrors: datacheck ')
                // console.log(data)
                _this.datachecksLoaded = data;
                if (_this.datachecksLoaded) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectCleansingCsMetadata"]).subscribe(function (data) {
            if (data) {
                _this.csMetadataLoaded = data;
                if (_this.csMetadataLoaded) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    };
    SharedLocationGridComponent.prototype.getAllData = function (cleansingContainer) {
        var _this = this;
        cleansingContainer.headers$.subscribe(function (data) {
            if (data) {
                _this.headersOriginal = data;
                _this.headersLoaded = _this.transformHeaders(data);
                if (_this.headersLoaded) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        cleansingContainer.columnState$.subscribe(function (data) {
            if (data) {
                _this.columnState = data;
                if (_this.columnState) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        cleansingContainer.columnStructure$.subscribe(function (data) {
            if (data) {
                _this.task = _this.setWorkTaskes(data);
                if (_this.task && _this.columnState) {
                    // this.setStateToGrid()
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        cleansingContainer.exposure$.subscribe(function (data) {
            if (data) {
                _this.exposureOriginal = data;
                _this.exposuresLoaded = data.exposures;
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                _this.currentPage = data['current_page'];
                if (data.abolute_index) {
                    _this.indexRowsLoaded = data.abolute_index;
                }
                else {
                    _this.indexRowsLoaded = data.index;
                }
                var countriesInit = _this.getInitialListOfCountry(_this.exposuresLoaded);
                _this.uniqueCountry = _this.getInitialDistinctCountry(countriesInit);
                _this.cleansingService.getCountries().subscribe(function (d) {
                    _this.countries = d['countries'];
                    var countriesObj = _this.transformElements(_this.countries);
                    _this.countriesNameLists = countriesObj.elementsNameList;
                    _this.countriesCodeLists = countriesObj.elementsCodeList;
                    _this.countriesNameCode = countriesObj.elementsNameCode;
                    _this.countriesCodeName = countriesObj.elementsCodeName;
                    _this.createCountryWithStates(_this.uniqueCountry, _this.countriesNameCode);
                    if (_this.exposuresLoaded && _this.countryWithStates) {
                        _this.getLoadedData();
                    }
                });
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        cleansingContainer.datacheck$.subscribe(function (data) {
            if (data) {
                // console.log('===>cleansingContainer: datacheck ')
                // console.log(data)
                _this.datachecksLoaded = data;
                if (_this.datachecksLoaded) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        cleansingContainer.metadata$.subscribe(function (data) {
            if (data) {
                _this.csMetadataLoaded = data;
                if (_this.csMetadataLoaded) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    };
    SharedLocationGridComponent.prototype.getAllRefs = function (cleansingService) {
        this.getCountries(cleansingService);
        this.getOccupancies(cleansingService);
        this.getCurrencies(cleansingService);
        this.getConstructions(cleansingService);
        this.getConstructionsCode(cleansingService);
        this.getOccupanciesSubclasses(cleansingService);
        this.getOccupanciesCodes(cleansingService);
    };
    SharedLocationGridComponent.prototype.getOccupancies = function (cleansingService) {
        var _this = this;
        cleansingService.getOccupanciesClasses().subscribe(function (data) {
            _this.occupancies_classes = data.classes;
        });
    };
    SharedLocationGridComponent.prototype.getOccupanciesSubclasses = function (cleansingService) {
        var _this = this;
        cleansingService.getOccupanciesSubclasses().subscribe(function (data) {
            _this.occupancies_subclasses = data.subclasses;
        });
    };
    SharedLocationGridComponent.prototype.getOccupanciesCodes = function (cleansingService) {
        var _this = this;
        cleansingService.getOccupanciesCodes().subscribe(function (data) {
            _this.occupancies_codes = data.codes;
        });
    };
    SharedLocationGridComponent.prototype.getConstructionsCode = function (cleansingService) {
        var _this = this;
        cleansingService.getConstructionsCode().subscribe(function (data) {
            _this.construction_codes = data.codes;
        });
    };
    SharedLocationGridComponent.prototype.getCurrencies = function (cleansingService) {
        var _this = this;
        cleansingService.getCurrencies().subscribe(function (data) {
            _this.currencies = data.currencies;
        });
    };
    SharedLocationGridComponent.prototype.getConstructions = function (cleansingService) {
        var _this = this;
        cleansingService.getConstructionsClasses().subscribe(function (data) {
            _this.construction_classes = data.classes;
        });
    };
    // ***** get Countries **** //
    SharedLocationGridComponent.prototype.getCountries = function (cleansingService) {
        var _this = this;
        cleansingService.getCountries().subscribe(function (data) {
            _this.countries = data.countries;
            var countriesObj = _this.transformElements(_this.countries);
            _this.countriesNameLists = countriesObj.elementsNameList;
            _this.countriesCodeLists = countriesObj.elementsCodeList;
            _this.countriesNameCode = countriesObj.elementsNameCode;
            _this.countriesCodeName = countriesObj.elementsCodeName;
        });
    };
    // ***** get state **** //
    SharedLocationGridComponent.prototype.getCodeOfElement = function (elementObjNameCode, nameElement) {
        return elementObjNameCode[nameElement];
    };
    SharedLocationGridComponent.prototype.getCountiesByState = function (StateCode, stateNameSelected) {
        var _this = this;
        this.cleansingService.getCountiesByState(StateCode).subscribe(function (data) {
            _this.counties = data['counties'];
            var countiesObj = _this.transformElements(_this.counties);
            _this.countiesNameLists = countiesObj.elementsNameList;
            _this.countiesCodeLists = countiesObj.elementsCodeList;
            _this.countiesNameCode = countiesObj.elementsNameCode;
            _this.countiesCodeName = countiesObj.elementsCodeName;
            if (!_this.uniqueState.includes(stateNameSelected)) {
                _this.uniqueState.push(stateNameSelected);
                _this.stateWithCounties[stateNameSelected] = _this.counties;
            }
            else {
                console.log('= state with counties is already loaded =');
            }
        });
    };
    SharedLocationGridComponent.prototype.getStatesByCountry = function (countryCode, countryNameSelected) {
        var _this = this;
        this.cleansingService.getStatesByCountry(countryCode).subscribe(function (data) {
            _this.states = data['states'];
            var statesObj = _this.transformElements(_this.states);
            _this.statesNameLists = statesObj.elementsNameList;
            _this.statesCodeLists = statesObj.elementsCodeList;
            _this.statesNameCode = statesObj.elementsNameCode;
            _this.statesCodeName = statesObj.elementsCodeName;
            if (_this.uniqueCountry.length > 0) {
                if (!_this.uniqueCountry.includes(countryNameSelected)) {
                    _this.uniqueCountry.push(countryNameSelected);
                    _this.createCountryWithStates(_this.uniqueCountry, _this.countriesNameCode);
                }
                else {
                    console.log('= country with state is already loaded =');
                }
            }
        });
    };
    SharedLocationGridComponent.prototype.getInitialListOfCountry = function (exposuresLoaded) {
        var countriesList = [];
        if (exposuresLoaded) {
            for (var i = 0; i < exposuresLoaded.length; i++) {
                countriesList.push((exposuresLoaded[i])['country']);
            }
        }
        return countriesList;
    };
    SharedLocationGridComponent.prototype.getInitialDistinctCountry = function (listOfCountry) {
        var uniqueCountry = listOfCountry.filter(onlyUnique);
        this.uniqueCountry = uniqueCountry;
        return uniqueCountry;
    };
    SharedLocationGridComponent.prototype.createCountryWithStates = function (uniqueCountry, countriesNameCode) {
        var _this = this;
        if (uniqueCountry && !uniqueCountry.includes(undefined)) {
            var observablesList = [];
            for (var i = 0; i < uniqueCountry.length; i++) {
                if (countriesNameCode) {
                    var codeCountry = this.getCodeOfElement(countriesNameCode, uniqueCountry[i]);
                    observablesList.push(this.cleansingService.getStatesByCountry(codeCountry));
                }
            }
            var countryWithStatesTemp_1 = {};
            Object(rxjs__WEBPACK_IMPORTED_MODULE_5__["forkJoin"])(observablesList).subscribe(function (response) {
                for (var _i = 0, _a = Object.entries(response); _i < _a.length; _i++) {
                    var _b = _a[_i], key0 = _b[0], value0 = _b[1];
                    for (var _c = 0, _d = Object.entries(value0); _c < _d.length; _c++) {
                        var _e = _d[_c], key1 = _e[0], value1 = _e[1];
                        countryWithStatesTemp_1[uniqueCountry[key0]] = value1;
                    }
                }
                _this.countryStates = countryWithStatesTemp_1;
            });
        }
    };
    SharedLocationGridComponent.prototype.getUniqueIndexRowWithError = function (datacheck) {
        var rowIndexWithError = [];
        for (var i = 0; i < datacheck.length; i++) {
            var elemnt = datacheck[i];
            for (var j = 0; j < elemnt.indexDataGrid.length; j++) {
                var element = elemnt.indexDataGrid[j];
                if (!rowIndexWithError.includes(element)) {
                    rowIndexWithError.push(element);
                }
            }
        }
        return rowIndexWithError;
    };
    SharedLocationGridComponent.prototype.getLoadedData = function () {
        if (this.headersLoaded && this.exposuresLoaded) {
            // transform header for selected value in manage column
            this.newHeadersLoaded = this.getSelectedColumn(this.columnState, this.headersLoaded);
            this.columnDefs = this.createColumnDefs(this.newHeadersLoaded);
            // this.columnDefs = this.createColumnDefs(this.headersLoaded);
            this.rowsData = this.createRowData(this.exposuresLoaded);
            if (this.datachecksLoaded && this.exposureOriginal) {
                this.colsIdWithErros = this.getColsIdWithError(this.datachecksLoaded);
                this.datacheckErrors = this.createDataCheckStructure(this.datachecksLoaded, this.typeError, this.exposureOriginal);
                this.datacheckWarnings = this.createDataCheckStructure(this.datachecksLoaded, this.typeWarning, this.exposureOriginal);
                this.uniqueIndexRowWithError = this.getUniqueIndexRowWithError(this.datacheckErrors);
            }
            if (this.gridApi) {
                if (this.columnDefs && this.rowsData && this.rowsData != null && this.columnDefs != null) {
                    if (this.gridOptions.api && this.gridOptions.api != null) {
                        this.gridOptions.columnDefs = this.columnDefs;
                        this.gridOptions.api.setRowData(this.rowsData);
                        this.adjustSizeDataGrid();
                    }
                    if (this.isFirstLoaded) {
                        // console.log('= firt load =')
                        this.firstRefresh(this.columnDefs, this.rowsData);
                        this.isFirstLoaded = false;
                    }
                }
                this.adjustSizeDataGrid();
            }
        }
    };
    SharedLocationGridComponent.prototype.getDisplayedColumn = function (columnState) {
        var colsTemp = [];
        for (var j = 0; j < columnState.length; j++) {
            var sLoaded = columnState[j];
            if (sLoaded['hide'] === false) {
                colsTemp.push(sLoaded['colId']);
            }
        }
        return colsTemp;
    };
    SharedLocationGridComponent.prototype.getSelectedColumn = function (columnState, headersLoaded) {
        var newHeaders = [];
        var selectedCategorie = [];
        var selectedDisplayColumnTemp = [];
        if (columnState !== undefined && headersLoaded !== undefined) {
            for (var j = 0; j < columnState.length; j++) {
                var sLoaded = columnState[j];
                // if (sLoaded['hide'] === false  ) {
                for (var i = 0; i < headersLoaded.length; i++) {
                    var hLoaded = headersLoaded[i];
                    if ((sLoaded['colId'] === hLoaded['fieldCode']) && (sLoaded['hide'] === false)) {
                        newHeaders.push(hLoaded);
                        if (!selectedCategorie.includes(hLoaded['categoryName'])) {
                            selectedCategorie.push(hLoaded['categoryName']);
                        }
                        if (!selectedDisplayColumnTemp.includes(hLoaded['fieldCode'])) {
                            selectedDisplayColumnTemp.push(hLoaded['fieldCode']);
                        }
                    }
                    else if (((sLoaded['colId'] === hLoaded['fieldCode']) && (sLoaded['hide'] === true)) && selectedCategorie.includes(hLoaded['categoryName'])) {
                        newHeaders.push(hLoaded);
                    }
                }
                // }
            }
        }
        if (this.selectedDisplayColumnExpanded.length > 0) {
            this.selectedDisplayColumn = this.selectedDisplayColumnExpanded;
        }
        else {
            this.selectedDisplayColumn = selectedDisplayColumnTemp;
        }
        return newHeaders;
    };
    SharedLocationGridComponent.prototype.dataFiltered = function (task) {
        var filtered = task.subtask;
        filtered = this.filterPipe.transform(filtered, 'name', this.name);
        return filtered;
    };
    SharedLocationGridComponent.prototype.categoriesFilter = function (task) {
        var taskTemp = [];
        if (this.name && this.name !== '') {
            for (var j = 0; j < task.length; j++) {
                var filtered = task[j].subtask;
                filtered = this.filterPipe.transform(filtered, 'name', this.name);
                if (filtered.length > 0) {
                    // taskTemp[j] = task[j]
                    taskTemp.push(task[j]);
                }
            }
            // return task;
            return taskTemp;
        }
        else {
            return task;
        }
    };
    SharedLocationGridComponent.prototype.getRowErrors = function (fieldCode, datacheckModel) {
        var rowWithErr;
        var indexWithErr;
        var datacheckMod = datacheckModel['datacheckMod'];
        var typeError = datacheckModel['typeError'];
        if (datacheckMod) {
            for (var _i = 0, _a = Object.entries(datacheckMod); _i < _a.length; _i++) {
                var _b = _a[_i], key0 = _b[0], value0 = _b[1];
                for (var _c = 0, _d = Object.entries(datacheckMod[key0]); _c < _d.length; _c++) {
                    var _e = _d[_c], key = _e[0], value = _e[1];
                    if (value === fieldCode) {
                        var rowWithErrors = datacheckMod[key0]['rowWithErrors'];
                        var indexDataGrid = datacheckMod[key0]['indexDataGrid'];
                        if (rowWithErrors && rowWithErrors.length > 0) {
                            rowWithErr = rowWithErrors;
                            indexWithErr = indexDataGrid;
                        }
                    }
                }
            }
        }
        return {
            rowWithErr: rowWithErr,
            indexWithErr: indexWithErr
        };
    };
    SharedLocationGridComponent.prototype.defColoredColumn = function (headerName, fieldCode, widthColumn, columnGroupShow, datacheckOrigin, typeError, nrows, indexRowsLoaded) {
        var editable = true;
        if (fieldCode === 'tiv_amount') {
            editable = false;
        }
        // const errorsModel = this.changeDataCheckModel(datacheckOrigin, typeError);
        var panned = false;
        /* if (fieldCode === 'division' || fieldCode === 'location_name') {
          panned = true;
        } */
        var columnWithNumber = this.columnWithNumber;
        var children = {
            headerName: headerName,
            field: fieldCode,
            width: widthColumn,
            expanded: false,
            enableRowGroup: true,
            enablePivot: true,
            editable: editable,
            pinned: panned,
            tooltipField: fieldCode,
            tooltipComponentParams: { color: '#fff' },
            columnGroupShow: columnGroupShow,
            cellEditor: editByType(fieldCode, _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_DOUBLE"], _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_NUM"]),
            floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
            floatingFilterComponentParams: {
                suppressFilterButton: true
            },
            valueSetter: function (params) {
                params.data[fieldCode] = params.newValue;
                return true;
            },
            cellStyle: function (params) {
                var color = 'transparent';
                if (datacheckOrigin[typeError] !== undefined && datacheckOrigin[typeError][fieldCode]) {
                    var indexErrL = Object.values(datacheckOrigin[typeError][fieldCode]);
                    var listError = getEquivalentIndexInGrid(indexRowsLoaded, indexErrL[0]);
                    // const listError = indexErrL[0];
                    var isIndexInListOfError = isIndexInError(listError, nrows, params.node.childIndex);
                    if (isIndexInListOfError) {
                        color = '#FF4C4C';
                    }
                }
                var alignValue = 'left';
                if (columnWithNumber.includes(fieldCode)) {
                    alignValue = 'right';
                }
                return {
                    'background-color': color,
                    // 'border-left': border,
                    'text-align': alignValue
                };
            },
        };
        return children;
    };
    SharedLocationGridComponent.prototype.transformHeaders = function (headers) {
        var headersMod = [];
        /* // error indicator
        const firstColheaders = {
          categoryName: '',
          fieldName: 'error',
          fieldCode: 'indique_error',
          fieldOrder: 0,
          fieldType: 'number'
        };
        headersMod.push(firstColheaders); */
        headers.forEach(function (element) {
            var headersTemp = {
                categoryName: element.category['label'],
                fieldName: element.name,
                fieldCode: element.code,
                fieldOrder: element.inCategoryOrder,
                fieldType: element.dataType
            };
            headersMod.push(headersTemp);
        });
        return headersMod;
    };
    SharedLocationGridComponent.prototype.transformElements = function (elements) {
        var elementsNameList = [];
        var elementsCodeList = [];
        var elementsNameCode = {};
        var elementsCodeName = {};
        if (elements) {
            for (var i = 0; i < elements.length; i++) {
                elementsNameList.push((elements[i])['name']);
                elementsCodeList.push((elements[i])['code']);
                elementsNameCode[(elements[i])['name']] = (elements[i])['code'];
                elementsCodeName[(elements[i])['code']] = (elements[i])['name'];
            }
        }
        return {
            elementsNameList: elementsNameList,
            elementsCodeList: elementsCodeList,
            elementsNameCode: elementsNameCode,
            elementsCodeName: elementsCodeName
        };
    };
    SharedLocationGridComponent.prototype.isFirstColumn = function (params) {
        var displayedColumns = params.columnApi.getAllDisplayedColumns();
        var thisIsFirstColumn = displayedColumns[0] === params.column;
        return thisIsFirstColumn;
    };
    SharedLocationGridComponent.prototype.getCurrentValueElement = function (exposuresLoaded, order, fieldCode) {
        return (exposuresLoaded[order])[fieldCode];
    };
    SharedLocationGridComponent.prototype.createDropdownInCell = function (fieldCode, headerName, listes, widthColumn, columnGroupShow) {
        var panned = false;
        /* if (fieldCode === 'division' || fieldCode === 'location_name') {
          panned = true;
        } */
        var editable = true;
        if (fieldCode === 'tiv_amount') {
            editable = false;
        }
        var columnWithNumber = this.columnWithNumber;
        return {
            headerName: headerName,
            field: fieldCode,
            width: widthColumn,
            expanded: false,
            enableRowGroup: true,
            enablePivot: true,
            editable: editable,
            panned: panned,
            columnGroupShow: columnGroupShow,
            cellRenderer: 'headerEditComponent',
            cellEditor: 'agRichSelectCellEditor',
            floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
            floatingFilterComponentParams: {
                suppressFilterButton: true
            },
            /* valueGetter: params => {
              return params.data[fieldCode];
          }, */
            valueSetter: function (params) {
                params.data[fieldCode] = params.newValue;
                return true;
            },
            cellStyle: function (params) {
                var alignValue = 'left';
                if (columnWithNumber.includes(fieldCode)) {
                    alignValue = 'right';
                }
                return {
                    // 'border-left': '1px solid #cdcdce',
                    'text-align': alignValue
                };
            },
            cellEditorParams: {
                cellHeight: 35,
                values: listes,
            },
        };
    };
    SharedLocationGridComponent.prototype.createDropdownCellWithError = function (fieldCode, children, list) {
        var value = {
            cellHeight: 35,
            values: list,
        };
        children['cellRenderer'] = 'headerEditComponent';
        children['cellEditor'] = 'agRichSelectCellEditor';
        children['tooltipField'] = fieldCode;
        children['tooltipComponentParams'] = { color: '#fff' };
        children['cellEditorParams'] = value;
        return children;
    };
    SharedLocationGridComponent.prototype.getDropdownCellContent = function (fieldCode) {
        if (_app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_35__["COLOMN_LISTS"].includes(fieldCode)) {
            // console.log('getDropdownCellContent fieldCode')
            // console.log(fieldCode)
            // console.log(LOCATION_REFERENCE_DATA.get(fieldCode))
            return _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_35__["LOCATION_REFERENCE_DATA"].get(fieldCode);
        }
        return null;
    };
    /* getDropdownCellContent(fieldCode) {
      switch (fieldCode) {
        case 'occupancy_sub_class':
          return this.occupancies_subclasses;
        case 'occupancy_code':
          return this.occupancies_codes;
        case 'construction_class':
          return this.construction_classes;
        case 'construction_code':
          return this.construction_codes;
        // case 'country':
        //   return sortBy(this.countriesNameLists);
        case 'site_currency':
          return this.currencies;
        case 'bi_type':
          return LOCATION_REFERENCE_DATA.get('bi_type');
        
        default:
          return null;
      }
    } */
    SharedLocationGridComponent.prototype.createColumnDefsChildrenStructure = function (headerName, fieldCode, order) {
        var children;
        var widthColumn;
        var nrows = this.fileData.nrows;
        var indexRowsLoaded = this.indexRowsLoaded;
        var editable = true;
        if (fieldCode === 'tiv_amount') {
            editable = false;
        }
        if (this.datacheckErrors || this.datacheckWarnings) {
            var datacheckErrMod = {
                datacheckMod: this.datacheckErrors,
                typeError: this.typeError
            };
            var datacheckWarningMod = {
                datacheckMod: this.datacheckWarnings,
                typeError: this.typeWarning
            };
            if (fieldCode === 'division' || fieldCode === 'location_name') {
                widthColumn = 120;
            }
            else {
                widthColumn = 147;
            }
            var columnGroupShow = void 0;
            if (this.selectedDisplayColumn.includes(fieldCode)) {
                columnGroupShow = 'close';
            }
            else {
                columnGroupShow = 'open';
            }
            /*  if (this.columnDisplayByDefaultTest.includes(fieldCode)) {
               columnGroupShow = 'close';
       
           } else {
               columnGroupShow = 'open';
           } */
            var colsIdWithErrors = this.colsIdWithErros;
            var children1 = void 0;
            if (colsIdWithErrors.length > 0 && colsIdWithErrors.includes(fieldCode)) {
                // const rowWithErr = this.getRowErrors(fieldCode, datacheckErrMod);
                // children1 = this.defColoredColumn(headerName, fieldCode, widthColumn, columnGroupShow, datacheckErrMod, this.typeError, nrows);
                children1 = this.defColoredColumn(headerName, fieldCode, widthColumn, columnGroupShow, this.datachecksLoaded, this.typeError, nrows, this.indexRowsLoaded);
                if (this.getDropdownCellContent(fieldCode) !== null) {
                    children1 = this.createDropdownCellWithError(fieldCode, children1, this.getDropdownCellContent(fieldCode));
                }
                else if (fieldCode === 'occupancy_class' && this.occupancies_classes) {
                    children1 = this.createDropdownCellWithError(fieldCode, children1, this.occupancies_classes);
                }
                else if (fieldCode === 'country' && this.countriesNameLists) {
                    var countriesNSorted = sortBy(this.countriesNameLists);
                    children1 = this.createDropdownCellWithError(fieldCode, children1, countriesNSorted);
                }
                else if (fieldCode === 'state' && this.countryStates) {
                    var countryStates_1 = this.countryStates;
                    var datacheckOrigin_1 = this.datachecksLoaded;
                    var typeError_1 = this.typeError;
                    var columnWithNumber_1 = this.columnWithNumber;
                    var datacheck = [];
                    var type = void 0;
                    if (datacheckErrMod) {
                        datacheck = datacheckErrMod['datacheckMod'];
                        type = datacheckErrMod['typeError'];
                    }
                    children1 = {
                        headerName: headerName,
                        field: fieldCode,
                        width: widthColumn,
                        expanded: false,
                        enableRowGroup: true,
                        enablePivot: true,
                        editable: editable,
                        cellEditor: editByType(fieldCode, _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_DOUBLE"], _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_NUM"]),
                        cellRenderer: 'headerEditComponent',
                        columnGroupShow: columnGroupShow,
                        tooltipField: fieldCode,
                        tooltipComponentParams: { color: '#fff' },
                        floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
                        floatingFilterComponentParams: {
                            suppressFilterButton: true
                        },
                        /* valueGetter: params => {
                  return params.data[fieldCode];
              }, */
                        valueSetter: function (params) {
                            params.data[fieldCode] = params.newValue;
                            return true;
                        },
                        cellStyle: function (params) {
                            // const border = '1px solid #cdcdce';
                            var color = 'transparent';
                            if (datacheckOrigin_1[typeError_1] !== undefined && datacheckOrigin_1[typeError_1][fieldCode]) {
                                var indexErrL = Object.values(datacheckOrigin_1[typeError_1][fieldCode]);
                                var listError = getEquivalentIndexInGrid(indexRowsLoaded, indexErrL[0]);
                                // const listError = indexErrL[0];
                                var isIndexInListOfError = isIndexInError(listError, nrows, params.node.childIndex);
                                if (isIndexInListOfError) {
                                    color = '#FF4C4C';
                                }
                            }
                            var alignValue = 'left';
                            if (columnWithNumber_1.includes(fieldCode)) {
                                alignValue = 'right';
                            }
                            return {
                                'background-color': color,
                                // 'border-left': border,
                                'text-align': alignValue,
                            };
                        },
                        cellEditorParams: function (params) {
                            var selectedCountry = params.data.country;
                            var allowedStates = [];
                            if (isDefined(selectedCountry)) {
                                var allowedStatesObj = mapElementToSpecifiqueObj(countryStates_1, selectedCountry);
                                allowedStates = sortBy(allowedStatesObj.elementsNameList);
                            }
                            return {
                                values: allowedStates,
                                formatValue: function (value) {
                                    return value;
                                },
                            };
                        },
                    };
                }
                else if (fieldCode === 'county' && this.stateWithCounties) {
                    var stateWithCounties_1 = this.stateWithCounties;
                    var datacheckOrigin_2 = this.datachecksLoaded;
                    var typeError_2 = this.typeError;
                    var columnWithNumber_2 = this.columnWithNumber;
                    var datacheck = [];
                    var type = void 0;
                    if (datacheckErrMod) {
                        datacheck = datacheckErrMod['datacheckMod'];
                        type = datacheckErrMod['typeError'];
                    }
                    children1 = {
                        headerName: headerName,
                        field: fieldCode,
                        width: widthColumn,
                        expanded: false,
                        enableRowGroup: true,
                        enablePivot: true,
                        editable: editable,
                        cellEditor: editByType(fieldCode, _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_DOUBLE"], _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_NUM"]),
                        cellRenderer: 'headerEditComponent',
                        columnGroupShow: columnGroupShow,
                        tooltipField: fieldCode,
                        tooltipComponentParams: { color: '#fff' },
                        floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
                        floatingFilterComponentParams: {
                            suppressFilterButton: true
                        },
                        /* valueGetter: params => {
                  return params.data[fieldCode];
              }, */
                        valueSetter: function (params) {
                            params.data[fieldCode] = params.newValue;
                            return true;
                        },
                        cellStyle: function (params) {
                            // const border = '1px solid #cdcdce';
                            var color = 'transparent';
                            if (datacheckOrigin_2[typeError_2] !== undefined && datacheckOrigin_2[typeError_2][fieldCode]) {
                                var indexErrL = Object.values(datacheckOrigin_2[typeError_2][fieldCode]);
                                var listError = getEquivalentIndexInGrid(indexRowsLoaded, indexErrL[0]);
                                // const listError = indexErrL[0];
                                var isIndexInListOfError = isIndexInError(listError, nrows, params.node.childIndex);
                                if (isIndexInListOfError) {
                                    color = '#FF4C4C';
                                }
                            }
                            var alignValue = 'left';
                            if (columnWithNumber_2.includes(fieldCode)) {
                                alignValue = 'right';
                            }
                            return {
                                'background-color': color,
                                // 'border-left': border,
                                'text-align': alignValue,
                            };
                        },
                        cellEditorParams: function (params) {
                            var selectedState = params.data.state;
                            var allowedCounties = [];
                            if (isDefined(selectedState)) {
                                var allowedCountiesObj = mapElementToSpecifiqueObj(stateWithCounties_1, selectedState);
                                allowedCounties = sortBy(allowedCountiesObj.elementsNameList);
                            }
                            return {
                                values: allowedCounties,
                                formatValue: function (value) {
                                    return value;
                                },
                            };
                        },
                    };
                }
                // children1['tooltipField'] = fieldCode;
                // children1['tooltipComponentParams'] = { color: '#fff' };
                children = children1;
            }
            // #
            else if (fieldCode === 'occupancy_class' && this.occupancies_classes) {
                var listes = this.occupancies_classes;
                var columnWithNumber_3 = this.columnWithNumber;
                children = {
                    headerName: headerName,
                    field: fieldCode,
                    width: widthColumn,
                    expanded: false,
                    enableRowGroup: true,
                    enablePivot: true,
                    editable: editable,
                    floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
                    floatingFilterComponentParams: {
                        suppressFilterButton: true
                    },
                    /* valueGetter: params => {
                return params.data[fieldCode];
            }, */
                    valueSetter: function (params) {
                        params.data[fieldCode] = params.newValue;
                        return true;
                    },
                    cellStyle: function (params) {
                        var alignValue = 'left';
                        if (columnWithNumber_3.includes(fieldCode)) {
                            alignValue = 'right';
                        }
                        return {
                            // 'border-left': '1px solid #cdcdce',
                            'text-align': alignValue
                        };
                    },
                    cellRenderer: 'headerEditComponent',
                    columnGroupShow: columnGroupShow,
                    cellEditor: editByType(fieldCode, _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_DOUBLE"], _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_NUM"]),
                    cellEditorParams: {
                        cellHeight: 35,
                        values: listes,
                    },
                };
            }
            else if (this.getDropdownCellContent(fieldCode) !== null) {
                children = this.createDropdownInCell(fieldCode, headerName, this.getDropdownCellContent(fieldCode), widthColumn, columnGroupShow);
            }
            else if (fieldCode === 'country' && this.countriesNameLists) {
                var panned = false;
                var listes = sortBy(this.countriesNameLists);
                var columnWithNumber_4 = this.columnWithNumber;
                return {
                    headerName: headerName,
                    field: fieldCode,
                    width: widthColumn,
                    expanded: false,
                    enableRowGroup: true,
                    enablePivot: true,
                    editable: editable,
                    panned: panned,
                    columnGroupShow: columnGroupShow,
                    cellRenderer: countryCellRendererDrowpdown,
                    // cellRenderer: 'headerEditComponent',
                    cellEditor: editByType(fieldCode, _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_DOUBLE"], _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_NUM"]),
                    // cellEditor: 'agRichSelectCellEditor',
                    floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
                    floatingFilterComponentParams: {
                        suppressFilterButton: true
                    },
                    valueSetter: function (params) {
                        params.data[fieldCode] = params.newValue;
                        return true;
                    },
                    cellStyle: function (params) {
                        var alignValue = 'left';
                        if (columnWithNumber_4.includes(fieldCode)) {
                            alignValue = 'right';
                        }
                        return {
                            // 'border-left': '1px solid #cdcdce',
                            'text-align': alignValue
                        };
                    },
                    cellEditorParams: {
                        cellHeight: 35,
                        values: listes,
                        cellRenderer: countryCellRenderer,
                    },
                };
            }
            else if (fieldCode === 'state' && this.countryStates) {
                var countryStates_2 = this.countryStates;
                var columnWithNumber_5 = this.columnWithNumber;
                children = {
                    headerName: headerName,
                    field: fieldCode,
                    width: widthColumn,
                    expanded: false,
                    enableRowGroup: true,
                    enablePivot: true,
                    editable: editable,
                    columnGroupShow: columnGroupShow,
                    cellRenderer: 'headerEditComponent',
                    cellEditor: editByType(fieldCode, _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_DOUBLE"], _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_NUM"]),
                    floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
                    floatingFilterComponentParams: {
                        suppressFilterButton: true
                    },
                    valueSetter: function (params) {
                        params.data[fieldCode] = params.newValue;
                        return true;
                    },
                    cellStyle: function (params) {
                        var alignValue = 'left';
                        if (columnWithNumber_5.includes(fieldCode)) {
                            alignValue = 'right';
                        }
                        return {
                            // 'border-left': '1px solid #cdcdce',
                            'text-align': alignValue
                        };
                    },
                    cellEditorParams: function (params) {
                        var selectedCountry = params.data.country;
                        var allowedStates = [];
                        if (isDefined(selectedCountry)) {
                            var allowedStatesObj = mapElementToSpecifiqueObj(countryStates_2, selectedCountry);
                            allowedStates = sortBy(allowedStatesObj.elementsNameList);
                        }
                        return {
                            values: allowedStates,
                            formatValue: function (value) {
                                return value;
                                // return value + ' (' + selectedCountry + ')';
                            },
                        };
                    },
                };
            }
            else if (fieldCode === 'county' && this.stateWithCounties) {
                var stateWithCounties_2 = this.stateWithCounties;
                var columnWithNumber_6 = this.columnWithNumber;
                children = {
                    headerName: headerName,
                    field: fieldCode,
                    width: widthColumn,
                    expanded: false,
                    enableRowGroup: true,
                    enablePivot: true,
                    editable: editable,
                    columnGroupShow: columnGroupShow,
                    cellRenderer: 'headerEditComponent',
                    cellEditor: editByType(fieldCode, _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_DOUBLE"], _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_NUM"]),
                    floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
                    floatingFilterComponentParams: {
                        suppressFilterButton: true
                    },
                    valueSetter: function (params) {
                        params.data[fieldCode] = params.newValue;
                        return true;
                    },
                    cellStyle: function (params) {
                        var alignValue = 'left';
                        if (columnWithNumber_6.includes(fieldCode)) {
                            alignValue = 'right';
                        }
                        return {
                            // 'border-left': '1px solid #cdcdce',
                            'text-align': alignValue
                        };
                    },
                    cellEditorParams: function (params) {
                        var selectedState = params.data.state;
                        var allowedCounties = [];
                        if (isDefined(selectedState)) {
                            var allowedCountiesObj = mapElementToSpecifiqueObj(stateWithCounties_2, selectedState);
                            allowedCounties = sortBy(allowedCountiesObj.elementsNameList);
                        }
                        return {
                            values: allowedCounties,
                            formatValue: function (value) {
                                return value;
                                // return value + ' (' + selectedCountry + ')';
                            },
                        };
                    },
                };
            }
            else {
                var panned = false;
                var borderPannedTop_1 = 'transparent';
                /*  if (fieldCode === 'division' || fieldCode === 'location_name') {
                   panned = true;
                   borderPannedTop = '1px solid #cdcdce';
                 }   */
                var columnWithNumber_7 = this.columnWithNumber;
                children = {
                    headerName: headerName,
                    field: fieldCode,
                    width: widthColumn,
                    expanded: false,
                    enableRowGroup: true,
                    enablePivot: true,
                    editable: editable,
                    pinned: panned,
                    // tooltipField: fieldCode,
                    valueFormatter: numberFormatter,
                    columnGroupShow: columnGroupShow,
                    cellEditor: editByType(fieldCode, _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_DOUBLE"], _app_dcm_modules_upload_models_cleansing_models_location_by_type_const__WEBPACK_IMPORTED_MODULE_38__["LOCATION_TYPE_NUM"]),
                    floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
                    floatingFilterComponentParams: {
                        suppressFilterButton: true
                    },
                    /* valueGetter: params => {
                return params.data[fieldCode];
            }, */
                    valueSetter: function (params) {
                        params.data[fieldCode] = params.newValue;
                        return true;
                    },
                    cellStyle: function (params) {
                        var alignValue = 'left';
                        if (columnWithNumber_7.includes(fieldCode)) {
                            alignValue = 'right';
                        }
                        return {
                            // 'border-left': '1px solid #cdcdce',
                            // 'border-left': '#fff',
                            'text-align': alignValue,
                            'border-top': borderPannedTop_1
                        };
                    }
                };
            }
        }
        return children;
    };
    SharedLocationGridComponent.prototype.createColumnDefsParentStructure = function (categoryName, children) {
        var parent = {
            headerName: categoryName,
            scrollable: true,
            collapsable: true,
            headerGroupComponent: 'headerGroupComponent',
            children: children
        };
        return parent;
    };
    SharedLocationGridComponent.prototype.listCategories = function (headerModel) {
        var flags = [], output = [], l = headerModel.length;
        for (var i = 0; i < l; i++) {
            if (flags[headerModel[i].categoryName])
                continue;
            flags[headerModel[i].categoryName] = true;
            output.push(headerModel[i].categoryName);
        }
        return output;
    };
    SharedLocationGridComponent.prototype.onShowAutoSideBar = function () {
        if (this.sideBar === false) {
            this.gridApi.openToolPanel('columns');
            this.sideBar = 'columns';
            return true;
        }
        else {
            this.sideBar = false;
            return false;
        }
    };
    SharedLocationGridComponent.prototype.onShowSideBar = function () {
        // console.log(event);
        var isVisible = this.onShowAutoSideBar();
        if (this.gridApi.isSideBarVisible() || isVisible) {
            if (isVisible) {
                document.getElementById('mySidenav').style.width = '7px';
                document.getElementById('sideBar').style.width = '35px';
                // document.getElementById('setting').style.width = '35px';
                // document.getElementById('helps').style.width = '35px';
            }
            else {
                document.getElementById('sideBar').style.width = '47px';
                // document.getElementById('setting').style.width = '47px';
                // document.getElementById('helps').style.width = '47px';
            }
            this.refreshGrid();
            this.openToolPanel('columns');
            this.refreshGrid();
        }
        // const columnToolPanel =  this.gridOptions.api.getToolPanelInstance('columns');
        // console.log(this.gridColumnApi.getAllDisplayedColumns())
        // console.log(columnToolPanel)
    };
    SharedLocationGridComponent.prototype.groupeFielByCategoryName = function (headerModels) {
        var grouped = lodash__WEBPACK_IMPORTED_MODULE_2__["mapValues"](lodash__WEBPACK_IMPORTED_MODULE_2__["groupBy"](headerModels, 'categoryName'), function (clist) { return clist.map(function (headerModel) { return lodash__WEBPACK_IMPORTED_MODULE_2__["omit"](headerModel, 'categoryName'); }); });
        return grouped;
    };
    SharedLocationGridComponent.prototype.createColumnDefs = function (headerModel) {
        var columnDefsTemp;
        // let linesWithErrors = this.getEquivalentIndexInDataGrid(this.indexRowsLoaded, this.uniqueIndexRowWithError);
        var linesWithErrors = this.uniqueIndexRowWithError;
        var headerCategoryList = this.listCategories(headerModel);
        var headergroupedByCategory = this.groupeFielByCategoryName(headerModel);
        var parents = [];
        for (var i = 0; i < headerCategoryList.length; i++) {
            var categoryName = headerCategoryList[i];
            var children = [];
            var childrens = [];
            for (var j = 0; j < headergroupedByCategory[headerCategoryList[i]].length; j++) {
                children.push(headergroupedByCategory[headerCategoryList[i]][j]);
                childrens.push(this.createColumnDefsChildrenStructure(children[j]['fieldName'], children[j]['fieldCode'], j));
            }
            parents.push(this.createColumnDefsParentStructure(categoryName, childrens));
        }
        var iconsAction = [
            {
                headerName: '',
                field: 'mycheckbox',
                width: 35,
                headerCheckboxSelection: true,
                checkboxSelection: true,
                resizable: false,
                sortable: false,
                filter: false,
                editable: false,
                menuTabs: false,
                scrollable: false,
                paginator: false,
                suppressMenu: true,
                suppressColumnsToolPanel: true,
                cellStyle: {
                    'border-left': '0px',
                },
                // fixed left side
                pinned: true
            },
            // unify column
            {
                headerName: '',
                field: 'indiqueError',
                valueGetter: 'node.id',
                width: 40,
                resizable: false,
                sortable: false,
                filter: false,
                menuTabs: false,
                editable: false,
                scrollable: false,
                paginator: false,
                pinned: true,
                headerComponent: 'editAllComponent',
                suppressMenu: true,
                suppressColumnsToolPanel: true,
                /* cellRenderer: function (params) {
                  // if error
                  return '<i class="fa fa-genderless text-danger icon-xxl" style="font-size: 19px; margin-top: 3px;"></i>'
                  // if not error
                  // return '<i class="fa fa-genderless text-success icon-xxl" style="font-size: 19px; margin-top: 3px;"></i>'
                }, */
                cellStyle: function (params) {
                    var color = 'black';
                    var background = 'transparent';
                    if (isErrorInRow(linesWithErrors, Number(params.node.id))) {
                        // background = 'transparent';
                        color = '#fff';
                        background = '#FF4C4C';
                    }
                    return {
                        'border-right': '1px solid #cdcdce',
                        'border-left': '1px solid #cdcdce',
                        // 'border-left': '#fff',
                        // 'border-right-color': 'white',
                        'background-color': background,
                        'color': color,
                        'text-align': 'left',
                    };
                }
            },
            {
                headerName: '',
                field: 'cstLoc',
                width: 84,
                resizable: false,
                sortable: false,
                filter: false,
                headerComponent: 'dropdownErrorFilterComponent',
                cellRenderer: 'customizedSharedLocationGridComponent',
                menuTabs: false,
                editable: false,
                scrollable: false,
                paginator: false,
                // fixed left side
                pinned: true,
                suppressMenu: true,
                suppressColumnsToolPanel: true,
                cellStyle: {
                    'text-align': 'right',
                },
            }
        ];
        columnDefsTemp = iconsAction;
        columnDefsTemp.push.apply(iconsAction, parents);
        return columnDefsTemp;
    };
    SharedLocationGridComponent.prototype.createRowData = function (exposures) {
        /* // error indicator
        let exposureTemp = [...exposures];
        for (let i = 0; i < exposureTemp.length; i++) {
          const elmt = exposureTemp[i];
          exposureTemp[i] = {
            ...elmt,
            indique_error: i
          };
        }
        return exposureTemp; */
        /* const copyExposures = [];
        // const copyExposures2 = [];
        for (const [key1, value1] of Object.entries(exposures)) {
          let copyObj = Object.assign({}, value1)
          copyExposures.push(copyObj);
          // let copyObj2 = JSON.parse(JSON.stringify(value1))
          // copyExposures2.push(copyObj2);
        }
        return copyExposures; */
        var clonedExposures = exposures.map(function (x) { return Object.assign({}, x); });
        return clonedExposures;
        // return exposures;
    };
    SharedLocationGridComponent.prototype.getColsIdWithError = function (datacheckMod) {
        var colsIdWithErrors = [];
        if (datacheckMod['errors']) {
            for (var _i = 0, _a = Object.entries(datacheckMod['errors']); _i < _a.length; _i++) {
                var _b = _a[_i], colsCode = _b[0], value = _b[1];
                colsIdWithErrors.push(colsCode);
            }
        }
        return colsIdWithErrors;
    };
    SharedLocationGridComponent.prototype.changeDataCheckModel = function (datacheck, type) {
        var datacheckMod = datacheck[type];
        var datacheckErrorModel = [];
        if (datacheckMod) {
            for (var _i = 0, _a = Object.entries(datacheckMod); _i < _a.length; _i++) {
                var _b = _a[_i], colsCode = _b[0], typeErrWithlistIndexErr = _b[1];
                for (var _c = 0, _d = Object.entries(typeErrWithlistIndexErr); _c < _d.length; _c++) {
                    var _e = _d[_c], typeError = _e[0], listIndexErr = _e[1];
                    var listIndexErrDataGrid = this.getEquivalentIndexInDataGrid(this.indexRowsLoaded, listIndexErr);
                    datacheckErrorModel.push({
                        fieldCode: colsCode,
                        typeError: typeError,
                        indexRowDb: listIndexErr,
                        indexDataGrid: listIndexErrDataGrid,
                    });
                }
            }
        }
        return datacheckErrorModel;
    };
    SharedLocationGridComponent.prototype.createDataCheckStructure = function (datacheck, type, exposuresOrigin) {
        var datacheckErrorModel = [];
        var datacheckMod;
        var exposureTransformed = this.createExposureStructure(exposuresOrigin);
        if (exposureTransformed) {
            datacheckMod = datacheck[type];
            if (datacheckMod) {
                var _loop_1 = function (colsCode, value) {
                    var typeError = void 0;
                    var columnCode = void 0;
                    if (type === 'errors') {
                        typeError = Object.keys(datacheckMod[colsCode])[0];
                        var temp = datacheckMod[colsCode];
                        columnCode = temp[typeError];
                    }
                    else if (type === 'warnings') {
                        typeError = 'warnings';
                        columnCode = datacheckMod[colsCode];
                    }
                    else {
                        return { value: null };
                    }
                    var datacheckErrorModelTemp = {};
                    var rowWithErrors = [];
                    var indexErrorDataGrid = [];
                    if (columnCode) {
                        datacheckErrorModelTemp = {};
                        var _loop_2 = function (index, value2) {
                            columnCode.forEach(function (indexColWithError) {
                                if (Number(index) === indexColWithError) {
                                    indexErrorDataGrid.push(Number(index));
                                    rowWithErrors.push(exposureTransformed[0][index]);
                                }
                                /* if (Number(index) === columnCode[indexColWithError]) {
                                  indexErrorDataGrid.push(Number(index));
                                  rowWithErrors.push(exposureTransformed[0][index])
                                } */
                            });
                        };
                        for (var _i = 0, _a = Object.entries(exposureTransformed[0]); _i < _a.length; _i++) {
                            var _b = _a[_i], index = _b[0], value2 = _b[1];
                            _loop_2(index, value2);
                        }
                        indexErrorDataGrid = this_1.getEquivalentIndexInDataGrid(this_1.indexRowsLoaded, indexErrorDataGrid);
                        datacheckErrorModelTemp = {
                            fieldCode: colsCode,
                            typeError: typeError,
                            rowWithErrors: rowWithErrors,
                            indexDataGrid: indexErrorDataGrid,
                        };
                        datacheckErrorModel.push(datacheckErrorModelTemp);
                    }
                };
                var this_1 = this;
                for (var _i = 0, _a = Object.entries(datacheckMod); _i < _a.length; _i++) {
                    var _b = _a[_i], colsCode = _b[0], value = _b[1];
                    var state_1 = _loop_1(colsCode, value);
                    if (typeof state_1 === "object")
                        return state_1.value;
                }
            }
        }
        return datacheckErrorModel;
    };
    SharedLocationGridComponent.prototype.createExposureStructure = function (exposuresOrigin) {
        var data = exposuresOrigin.exposures;
        var indexRows = exposuresOrigin.index;
        var exposureTransformed = [];
        if (data && indexRows) {
            exposureTransformed.push(this.creatKeyValue(indexRows, data));
        }
        return exposureTransformed;
    };
    SharedLocationGridComponent.prototype.creatKeyValue = function (keys, values) {
        var result = {};
        keys.forEach(function (key, i) { return result[key] = values[i]; });
        return result;
    };
    SharedLocationGridComponent.prototype.refreshGrid = function () {
        var params = { force: false };
        this.gridApi.refreshCells(params);
    };
    SharedLocationGridComponent.prototype.firstRefresh = function (headers, exposures) {
        this.columnDefs = headers;
        this.rowsData = exposures;
        var params = { force: true };
        if (this.gridApi && this.columnDefs && this.rowsData) {
            if (this.gridOptions.api) {
                this.gridOptions.api.setColumnDefs(this.columnDefs);
                this.gridOptions.api.setRowData(this.rowsData);
            }
            this.gridApi.refreshCells(params);
        }
        this.adjustSizeDataGrid();
    };
    SharedLocationGridComponent.prototype.getListFieldCode = function (headers) {
        var fieldCodeList = [];
        for (var i = 0; i < headers.length; i++) {
            var element = headers[i];
            fieldCodeList.push(element['fieldCode']);
        }
        return fieldCodeList;
    };
    SharedLocationGridComponent.prototype.scramble = function () {
        var rows = this.rowsData;
        var indexRowModify = this.indexRowModify;
        var headersMod = this.headersMod;
        var fieldCodeId = this.fieldCodeId;
        var contents = this.contents;
        if (rows && indexRowModify.length > 0) {
            for (var i = 0; i < rows.length; i++) {
                var item = rows[i];
                if (indexRowModify.includes(i)) {
                    this.scrambleItem(item, headersMod, fieldCodeId, contents);
                }
            }
        }
    };
    SharedLocationGridComponent.prototype.scrambleItem = function (item, headersMod, fieldCodeId, contents) {
        if (headersMod && fieldCodeId.length > 0 && contents !== {}) {
            headersMod.forEach(function (colId) {
                if (fieldCodeId.includes(colId)) {
                    item[colId] = contents[colId];
                }
                else {
                    return;
                }
            });
        }
    };
    SharedLocationGridComponent.prototype.purgeCache = function () {
        this.gridApi.purgeServerSideCache([]);
    };
    SharedLocationGridComponent.prototype.refreshAfterUpdate = function () {
        // const params = { force: false };
        if (this.gridApi && this.columnDefs && this.rowsData) {
            if (this.gridOptions.api && this.gridColumnApi) {
                this.saveState();
            }
            this.gridOptions.api.setColumnDefs(this.columnDefs);
            this.gridOptions.api.setRowData(this.rowsData);
            // this.gridApi.refreshCells(params);
            if (this.gridOptions.api && this.gridColumnApi) {
                this.restoreState();
                // this.gridApi.refreshCells(params);
                this.adjustSizeDataGrid();
            }
        }
        this.contents = {};
        this.fieldCodeId = [];
        this.headerName = [];
        this.colDef = [];
        this.indexRowToSave = [];
        this.indexRowModify = [];
        this.firstChangeMultipleRow = true;
    };
    SharedLocationGridComponent.prototype.saveState = function () {
        this.colState = this.gridColumnApi.getColumnState();
        if (this.colState && this.numberIdChange === 1) {
            for (var i = 0; i < this.colState.length; i++) {
                this.colState[i]['colId'] = this.getExactColId(this.colState[i]['colId']);
            }
        }
        this.groupState = this.gridColumnApi.getColumnGroupState();
        this.sortState = this.gridApi.getSortModel();
        this.filterState = this.gridApi.getFilterModel();
        console.log('column state saved');
    };
    SharedLocationGridComponent.prototype.getStateOfAllColumns = function (colState) {
        var columnState = [];
        var firstIndexCol = 3;
        for (var i = firstIndexCol; i < colState.length; i++) {
            var elmtName = this.getExactColId(colState[i]['colId']);
            var elmtState = colState[i]['hide'];
            columnState.push({
                colId: elmtName,
                hide: elmtState
            });
        }
        return columnState;
    };
    SharedLocationGridComponent.prototype.getStateInitColumns = function (colState) {
        var columnState = [];
        var firstIndexCol = 3;
        for (var i = firstIndexCol; i < colState.length; i++) {
            var elmtName = this.getExactColId(colState[i]['colId']);
            var elmtState = colState[i]['hide'];
            columnState.push({
                colId: elmtName,
                hide: false
            });
        }
        return columnState;
    };
    SharedLocationGridComponent.prototype.restoreState = function () {
        if (!this.colState) {
            console.log('no columns state to restore by, you must save state first');
            return;
        }
        this.numberIdChange = 2;
        this.gridColumnApi.setColumnGroupState(this.groupState);
        this.gridApi.setSortModel(this.sortState);
        // setFilter
        this.gridApi.setFilterModel(this.filterState);
        this.gridApi.setFilterModel(this.filterModel);
        console.log('column state restored');
    };
    SharedLocationGridComponent.prototype.refreshAll = function (headers, exposures) {
        this.contents = {};
        this.fieldCodeId = [];
        this.headerName = [];
        this.colDef = [];
        this.columnDefs = headers;
        this.rowsData = exposures;
        var params = { force: false };
        if (this.gridApi && this.columnDefs && this.rowsData) {
            if (this.gridOptions.api) {
                this.gridOptions.api.setColumnDefs(this.columnDefs);
                this.gridOptions.api.setRowData(this.rowsData);
            }
        }
    };
    SharedLocationGridComponent.prototype.scrambleAndRefreshAll = function () {
        var params = { force: false };
        this.gridApi.refreshCells(params);
    };
    SharedLocationGridComponent.prototype.onGridReady = function (params) {
        this.gridApi = params.api;
        // console.log(this.gridApi);
        this.gridColumnApi = params.columnApi;
        this.gridOptions.context = {
            thisComponent: this
        };
        this.gridApi.openToolPanel('columns');
        this.lastPageLoaded = this.gridApi.paginationGetTotalPages();
        this.adjustSizeDataGrid();
        // setTimeout(function(){params.api.refreshView(),0})
        /* if (this.columnState) {
          this.setStateToGrid()
        } */
    };
    SharedLocationGridComponent.prototype.resetCalculTiv = function (tiv) {
        for (var i = 0; i < tiv.length; i++) {
            this.calculTiv[i].value = [];
            this.calculTiv[i].index = [];
        }
    };
    SharedLocationGridComponent.prototype.getInputTiv = function () {
        console.log('==> get tiv ');
    };
    SharedLocationGridComponent.prototype.setCheck = function (check, id) {
        var indexDb = this.exposureOriginal.index;
        var allValue = this.gridApi.getSelectedRows();
        for (var i = 0; i < this.calculTiv.length; i++) {
            if (this.calculTiv[i].id === id) {
                var indexTemp = [];
                var valueTemp = [];
                for (var j = 0; j < allValue.length; j++) {
                    var element = allValue[j];
                    var indexList = this.gridApi.getSelectedNodes()[j].childIndex;
                    indexTemp.push(indexList);
                    valueTemp.push(element[id]);
                    // this.calculTiv[i].index.push(index);
                }
                if (allValue.length > 0) {
                    this.calculTiv[i].index = this.getListOfEquivalentIndexInDb(indexDb, indexTemp);
                    this.calculTiv[i].value = valueTemp;
                }
                this.calculTiv[i].checked = check;
                this.colorPdBi = false;
            }
            if (!this.calculTiv[i].checked) {
                this.calculTiv[i].value = [];
                this.calculTiv[i].index = [];
            }
        }
        console.log('==> new calculTiv :');
        console.log(this.calculTiv);
    };
    SharedLocationGridComponent.prototype.isChecked = function (elmt) {
        for (var i = 0; i < elmt.length; i++) {
            if (elmt[i].checked === true) {
                return true;
            }
        }
        return false;
    };
    SharedLocationGridComponent.prototype.isCheckedRows = function (elmt) {
        for (var i = 0; i < elmt.length; i++) {
            if (elmt[i].value.length > 0 && elmt[i].index.length > 0) {
                return true;
            }
        }
        return false;
    };
    SharedLocationGridComponent.prototype.invokeTivMethod = function ($event) {
        console.log('==> validate: ');
        // if one of BD and BI checked  and tiv not empty
        // show popup (Do you confirm to change, model in last version), if ok: send a request, else initialize all value
        // else change color PD and BI to red
        console.log('Is one of PD and BI checked : ');
        console.log(this.isChecked(this.calculTiv));
        if (this.isChecked(this.calculTiv) && this.isCheckedRows(this.calculTiv)) {
            console.log('######## popup, change color BD and BI to grey #######');
            this.colorPdBi = false;
            this.isVisiblePdBi = true;
        }
        else if (this.isChecked(this.calculTiv) && !this.isCheckedRows(this.calculTiv)) {
            // this.resetCalculTiv(this.calculTiv)
            this.colorPdBi = false;
            console.log('------ No rows checked ------');
        }
        else if (!this.isChecked(this.calculTiv) && this.isCheckedRows(this.calculTiv)) {
            // this.resetCalculTiv(this.calculTiv)
            this.colorPdBi = true;
            console.log('------ row checked but PD and BI No => change color PD and BI to red ------');
        }
        else {
            this.colorPdBi = true;
            console.log('------ No row checked, PD and BI No checked => change color PD and BI to red ------');
            this.resetCalculTiv(this.calculTiv);
        }
    };
    SharedLocationGridComponent.prototype.invokeLinkMethod = function ($event) {
        console.log('invoke link method');
    };
    SharedLocationGridComponent.prototype.invokeEditMethod = function ($event) {
        // console.log(this.gridApi.getSelectedNodes());
        var rowIndex = this.gridApi.getSelectedNodes()[0].childIndex;
        this.store.dispatch(new _app_shared_popups_general_location_info_popup_store_part_load_pop_up_actions__WEBPACK_IMPORTED_MODULE_34__["LoadLoadPopUps"]({ location: this.gridApi.getSelectedRows()[0] }));
        this.service.setNextEdit(new _customized_shared_location_grid_GridLineInfo__WEBPACK_IMPORTED_MODULE_4__["GridLineInfo"](rowIndex, rowIndex));
        // console.log(this.gridApi.getSelectedRows());
    };
    SharedLocationGridComponent.prototype.invokeDeleteMethod = function () {
        // this.gridApi.updateRowData({remove: this.gridApi.getSelectedRows()})
        if (this.gridApi.getSelectedRows().length > 0) {
            var dataList = [];
            var indexList = [];
            if (this.gridApi) {
                var selectedRows = this.getSelectedRowsInfos(this.gridApi);
                dataList = selectedRows.selectedRowsData;
                indexList = selectedRows.selectedRowsIndex;
                this.deleteRows(this.gridApi, dataList);
            }
            var exposures = this.exposureOriginal;
            if (exposures) {
                var indexDb = exposures.index;
                var listIndex = this.getListOfEquivalentIndexInDb(indexDb, indexList);
                var body = {
                    is_all: false,
                    indices: listIndex
                };
                if (this.importData$) {
                    if (this.csMetadataLoaded) {
                        var jobId = this.csMetadataLoaded.jobId;
                        if (jobId) {
                            var fileData = this.fileData;
                            var selectedSheet = this.selectedSheet;
                            this.cleansingService.deleteRow(fileData, selectedSheet, jobId, body).subscribe(function (isDeleted) {
                                // console.log('delete ok');
                            });
                        }
                    }
                }
            }
        }
    };
    // restore data with ctrl + Z 
    SharedLocationGridComponent.prototype.showModalRestor = function () {
        // this.isVisibleRestor = true;
        if (this.columnDefs && this.rowsData) {
            if (this.gridOptions.api) {
                this.gridOptions.api.setColumnDefs(this.columnDefs);
                this.gridOptions.api.setRowData(this.rowsData);
            }
            this.refreshAll(this.columnDefs, this.rowsData);
        }
        this.cdrf.detectChanges();
    };
    SharedLocationGridComponent.prototype.refreshAllGrid = function () {
        if (this.columnDefs && this.rowsData) {
            if (this.gridOptions.api) {
                this.gridOptions.api.setColumnDefs(this.columnDefs);
                this.gridOptions.api.setRowData(this.rowsData);
            }
            // this.refreshAll(this.columnDefs, this.rowsData);
        }
        // this.cdrf.detectChanges();
    };
    SharedLocationGridComponent.prototype.getSelectedRowsInfos = function (gridApi) {
        var selectedRowsIndex = [];
        var selectedRowsData = gridApi.getSelectedRows();
        var selectedRowsNode = gridApi.getSelectedNodes();
        for (var i = 0; i < selectedRowsNode.length; i++) {
            var element = selectedRowsNode[i].childIndex;
            selectedRowsIndex.push(element);
        }
        return {
            selectedRowsData: selectedRowsData,
            selectedRowsIndex: selectedRowsIndex
        };
    };
    SharedLocationGridComponent.prototype.deleteRows = function (gridApi, dataList) {
        gridApi.updateRowData({ remove: dataList });
    };
    SharedLocationGridComponent.prototype.getListOfEquivalentIndexInDb = function (rowIndexDb, rowIndexDataGrid) {
        var indexDb = [];
        for (var i = 0; i < rowIndexDataGrid.length; i++) {
            var index = rowIndexDb[rowIndexDataGrid[i]];
            indexDb.push(index);
        }
        return indexDb;
    };
    SharedLocationGridComponent.prototype.handleCancelRestor = function () {
        this.isVisibleRestor = false;
    };
    SharedLocationGridComponent.prototype.handleOkRestor = function () {
        this.previousState = JSON.parse(JSON.stringify(this.rowsData));
        this.fakeRowData = _app_dcm_modules_upload_models_cleansing_models_explosures_model__WEBPACK_IMPORTED_MODULE_21__["explosuresModel"];
        this.isOkLoadingRestor = true;
        window.setTimeout(function () { }, 4000);
        this.isVisibleRestor = false;
        this.isOkLoadingRestor = false;
        this.cdrf.detectChanges();
    };
    // tst
    SharedLocationGridComponent.prototype.onPageSizeChanged = function (newPageSize) {
        var value = document.getElementById('pageSize').value;
        this.gridApi.paginationSetPageSize(Number(value));
    };
    // tst
    SharedLocationGridComponent.prototype.getIndexRow = function (event) {
        if (event)
            return event.rowIndex;
        else
            return null;
    };
    SharedLocationGridComponent.prototype.openToolPanel = function (key) {
        this.gridApi.openToolPanel(key);
    };
    SharedLocationGridComponent.prototype.onBtStartEditing = function (rowIndex, colKey) {
        this.gridApi.startEditingCell({
            rowIndex: rowIndex,
            colKey: colKey,
        });
    };
    SharedLocationGridComponent.prototype.getEquivalentIndexInDb = function (rowIndexDataGrid, rowIndexDb) {
        return rowIndexDb[rowIndexDataGrid];
    };
    SharedLocationGridComponent.prototype.getEquivalentIndexInDataGrid = function (listRowIndexDb, listRowIndexDbSpecific) {
        var indexInDataGrid = [];
        /* for (const [indexDg, indexDbSp] of Object.entries(listRowIndexDbSpecific)) {
          if (listRowIndexDb.includes(indexDbSp)) {
            const index = listRowIndexDb.indexOf(Number(indexDbSp));
            indexInDataGrid.push(index);
          }
        } */
        for (var _i = 0, _a = Object.entries(listRowIndexDb); _i < _a.length; _i++) {
            var _b = _a[_i], indexDg = _b[0], indexDbSp = _b[1];
            if (listRowIndexDbSpecific.includes(indexDbSp)) {
                indexInDataGrid.push(Number(indexDg));
            }
        }
        return indexInDataGrid;
    };
    SharedLocationGridComponent.prototype.onEnter = function () {
        console.log(' ++ enter ++ ');
        this.isEnterForSave = true;
    };
    SharedLocationGridComponent.prototype.getExactColId = function (colId) {
        if (colId !== undefined) {
            var colId1 = colId.split('_1').slice(0, -1).join('_1');
            if (colId1) {
                colId = colId1;
            }
        }
        return colId;
    };
    SharedLocationGridComponent.prototype.getInverseColId = function (colId) {
        if (colId !== undefined) {
            var colId1 = colId.split('_1').slice(0, -1).join('_1');
            if (colId1) {
                return colId1;
            }
        }
        return colId + '_1';
    };
    SharedLocationGridComponent.prototype.onCellValueChanged = function (event) {
        // when edit on cell
        console.log('= onCellValueChanged =');
        var newValue = event.newValue;
        var oldValue = event.oldValue;
        var rowIndex = event.rowIndex;
        var colId = event.column.colId;
        var colDef = event.column.colDef;
        var headerName = colDef.headerName;
        var indexRowDb = this.getEquivalentIndexInDb(rowIndex, this.indexRowsLoaded);
        if (!this.oldRowIndex || this.oldRowIndex === 0) {
            // console.log('** new row db grid**')
            this.oldRowIndex = rowIndex;
            this.indicesRow.push(indexRowDb);
        }
        if (oldValue === newValue) {
            console.log('-- No change --');
            this.isChangeDetected = false;
        }
        else if (newValue === '') {
            console.log('-- empty value not allowed --');
            this.isChangeDetected = false;
        }
        else {
            console.log('-- change detected --');
            colId = this.getExactColId(colId);
            this.newValueTemp = newValue;
            this.contents[colId] = newValue;
            this.fieldCodeId.push(colId);
            this.headerName.push(headerName);
            this.colDef.push(colDef);
            this.indexRowTemp = indexRowDb;
            this.indexRowModifyTemp = rowIndex;
            this.isChangeDetected = true;
            if (this.firstChangeMultipleRow) {
                this.newValueMultipleRow = newValue;
                this.firstChangeMultipleRow = false;
            }
            if (this.newValueMultipleRow === newValue) {
                if (this.indexToSaveMultipleRow.length > 0 && this.indexToSaveMultipleRow.includes(rowIndex)) {
                    this.colIdToSaveMultipleCol[colId] = newValue;
                    this.isMultipleColToModify = true;
                }
                this.colIdToSaveMultipleCol[colId] = newValue;
                this.indexToSaveMultipleRow.push(rowIndex);
                this.colIdToSaveMultipleRow = colId;
            }
            if (this.isNewRowFocused) {
                this.indicesRow = [];
                this.isNewRowFocused = false;
            }
        }
    };
    SharedLocationGridComponent.prototype.onCellFocused = function ($event) {
        // console.log('onCellFocused')
        if ($event.column && ($event.rowIndex || $event.rowIndex === 0)) {
            var rowIndex = $event.rowIndex;
            this.focusedRowIndex = $event.rowIndex;
            this.focusedColId = $event.column.colId;
            // console.log(this.focusedColId)
            this.newRowIndex = rowIndex;
            if (this.oldRowIndex === this.newRowIndex) {
                if (this.newValueTemp !== undefined && this.newValueTemp !== null && this.indexRowTemp !== undefined && this.indexRowTemp !== null) {
                    this.newValueToSave.push(this.newValueTemp);
                    this.indexRowToSave.push(this.indexRowTemp);
                    this.indexRowModify.push(this.indexRowModifyTemp);
                }
                this.newValueTemp = null;
                this.indexRowTemp = null;
            }
            else {
                this.oldRowIndex = rowIndex;
                this.isNewRowFocused = true;
                if (this.indexToSaveMultipleRow.length > 1 && this.colIdToSaveMultipleRow && this.newValueMultipleRow !== undefined && this.newValueMultipleRow !== null) {
                    var contents = {};
                    var indexTemp = [];
                    if (this.isMultipleColToModify) {
                        console.log('** multiple column **');
                        // multiple column but same row
                        contents = this.colIdToSaveMultipleCol;
                        indexTemp.push(this.indexToSaveMultipleRow[0]);
                    }
                    else {
                        console.log('** multiple row **');
                        // multiple row but same column
                        contents[this.colIdToSaveMultipleRow] = this.newValueMultipleRow;
                        indexTemp = this.indexToSaveMultipleRow;
                    }
                    var bodyRequest = {
                        is_all: false,
                        indices: indexTemp,
                        content: contents
                    };
                    if (this.gridOptions.api) {
                        var cell = this.gridOptions.api.getFocusedCell();
                        var allDisplayedCol = this.gridOptions.columnApi.getAllDisplayedColumns();
                        if (cell && allDisplayedCol) {
                            this.rowIdFocused = cell.rowIndex;
                            this.colIdFocused = cell.column.getColId();
                            this.colFocused = this.getColumnToShow(this.colIdFocused, allDisplayedCol);
                            this.colRangeFocused = this.getRangeColumnToShow(this.colIdFocused, allDisplayedCol);
                        }
                    }
                    this.saveUpdatedData(bodyRequest);
                    this.newValueMultipleRow = null;
                    this.firstChangeMultipleRow = true;
                    this.indexToSaveMultipleRow = [];
                    this.colIdToSaveMultipleRow = null;
                    this.isMultipleColToModify = false;
                    this.isChangeDetected = false;
                    this.newValueToSave = [];
                    this.indexRowToSave = [];
                }
                else if (this.indexRowToSave.length > 0 && this.contents !== {}) {
                    var indexRowUnique = [];
                    indexRowUnique.push(this.indexRowToSave[0]);
                    var bodyRequest = {
                        is_all: false,
                        indices: indexRowUnique,
                        content: this.contents
                    };
                    if (bodyRequest.content['country']) {
                        var countryNameSelected = bodyRequest.content['country'];
                        if (this.countriesNameCode && countryNameSelected) {
                            var codeElement = this.getCodeOfElement(this.countriesNameCode, countryNameSelected);
                            this.getStatesByCountry(codeElement, countryNameSelected);
                        }
                    }
                    if (bodyRequest.content['state']) {
                        var stateNameSelected = bodyRequest.content['state'];
                        if (this.statesNameCode && stateNameSelected) {
                            var codeElement = this.getCodeOfElement(this.statesNameCode, stateNameSelected);
                            this.getCountiesByState(codeElement, stateNameSelected);
                        }
                    }
                    if (this.gridOptions.api) {
                        var cell = this.gridOptions.api.getFocusedCell();
                        var allDisplayedCol = this.gridOptions.columnApi.getAllDisplayedColumns();
                        if (cell && allDisplayedCol) {
                            this.rowIdFocused = cell.rowIndex;
                            this.colIdFocused = cell.column.getColId();
                            this.colFocused = this.getColumnToShow(this.colIdFocused, allDisplayedCol);
                            this.colRangeFocused = this.getRangeColumnToShow(this.colIdFocused, allDisplayedCol);
                        }
                    }
                    this.saveUpdatedData(bodyRequest);
                    this.newValueToSave = [];
                    this.indexRowToSave = [];
                    this.newValueMultipleRow = null;
                    this.firstChangeMultipleRow = true;
                    this.indexToSaveMultipleRow = [];
                    this.colIdToSaveMultipleRow = null;
                    this.isMultipleColToModify = false;
                    this.isChangeDetected = false;
                }
                else {
                    // init all
                    this.newValueToSave = [];
                    this.indexRowToSave = [];
                    this.contents = {};
                    this.fieldCodeId = [];
                    this.headerName = [];
                    this.colDef = [];
                    this.newValueMultipleRow = null;
                    this.firstChangeMultipleRow = true;
                    this.indexToSaveMultipleRow = [];
                    this.colIdToSaveMultipleRow = null;
                    this.isMultipleColToModify = false;
                    this.isChangeDetected = false;
                }
            }
        }
        if (this.isFirstLoad) {
            if (this.exposureOriginal) {
                var self_1 = this.exposureOriginal._links.self;
                if (self_1) {
                    this.getUpdatedData(self_1, this.headersLoaded, false);
                }
            }
            this.isFirstLoad = false;
        }
    };
    SharedLocationGridComponent.prototype.updateExposures = function (selfLink) {
        var _this = this;
        this.cleansingService.getUpdateExposures(selfLink).subscribe(function (data) {
            if (data) {
                _this.exposureOriginal = data;
                var exposureTemp = data['exposures'];
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                _this.currentPage = data['current_page'];
                if (data['abolute_index']) {
                    _this.indexRowsLoaded = data['abolute_index'];
                }
                else {
                    _this.indexRowsLoaded = data['index'];
                }
                _this.oldDataNewPage = data['exposures'];
                _this.exposuresLoaded = exposureTemp;
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
            }
        });
    };
    SharedLocationGridComponent.prototype.updateCsMetadata = function (jobId) {
        var _this = this;
        this.cleansingService.getUpdateCsMetadata(jobId).subscribe(function (data) {
            if (data) {
                console.log('++ updateCsMetadata succesfully ++');
                _this.datachecksLoaded = data;
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadCsMetadata"]({ csMetadata: data }));
            }
        }, function (err) {
            _this.startSave = false;
            _this.notif.error('Update data Error');
        });
    };
    SharedLocationGridComponent.prototype.updateCheck = function (fileData, selectedSheet) {
        var _this = this;
        this.cleansingService.getUpdateCheck(fileData, selectedSheet, this.currentPage).subscribe(function (data) {
            if (data) {
                console.log('++ updateCheck succesfully ++');
                _this.datachecksLoaded = data;
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadErrors"]({ errors: data }));
            }
        }, function (err) {
            _this.startSave = false;
            _this.notif.error('Update data Error');
        });
    };
    SharedLocationGridComponent.prototype.updateCheckAfterFilter = function () {
        var _this = this;
        this.cleansingService.getUpdateCheckFilter(this.fileData, this.currentPage, this.listFilteredErrors, this.colIdFiltered).subscribe(function (check) {
            if (check) {
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadErrors"]({ errors: check }));
            }
        }, function (err) {
            _this.startSave = false;
            _this.notif.error('Update data Error');
        });
    };
    SharedLocationGridComponent.prototype.changeValues = function (data) {
        console.log('++ getUpdateExposures succesfully ++');
        /* if (!this.isNewPage) {
          this.store.dispatch(new ActionLoadAllData({ data: data }));
        } */
        this.exposureOriginal = data;
        this.pageLast = data['last_page'];
        this.pageFirst = data['first_page'];
        var exposureTemp = data['exposures'];
        this.currentPage = data['current_page'];
        if (data['abolute_index']) {
            this.indexRowsLoaded = data['abolute_index'];
        }
        else {
            this.indexRowsLoaded = data['index'];
        }
        this.oldDataNewPage = data['exposures'];
        this.exposuresLoaded = exposureTemp;
        if (exposureTemp) {
            this.exposuresLoaded = exposureTemp;
            this.oldDataClickedCell = exposureTemp;
            // to comment when using scramble() in refresh
            this.rowsData = this.createRowData(exposureTemp);
            // set selected value in manage column
            this.newHeadersLoaded = this.getSelectedColumn(this.columnState, this.headersLoaded);
            this.columnDefs = this.createColumnDefs(this.newHeadersLoaded);
            // this.columnDefs = this.createColumnDefs(this.headersLoaded);
        }
        if (this.columnDefs && this.rowsData) {
            // console.log('in update exposures ==> do refresh')
            // setTimeout(function(){this.gridOptions.api.refreshView(),0})
            this.refreshAfterUpdate();
            this.bringFocusBack();
        }
    };
    SharedLocationGridComponent.prototype.saveUpdatedData1 = function (body) {
        var _this = this;
        var fileData = this.fileData;
        var selectedSheet = this.selectedSheet;
        this.cleansingService.doUpdateData(this.jobId, fileData, selectedSheet, this.mappingId, body).subscribe(function (jobId) {
            if (jobId) {
                console.log('++ doUpdateData succesfully ++');
                _this.cleansingService.getUpdateCsMetadata(jobId['job_id']).subscribe(function (metadata) {
                    if (metadata) {
                        console.log('++ updateCsMetadata succesfully ++');
                        _this.datachecksLoaded = metadata;
                        // this.store.dispatch(new ActionLoadCsMetadata({ csMetadata: metadata }));
                        var self_2 = _this.exposureOriginal._links.self;
                        if (self_2) {
                            _this.cleansingService.getUpdateExposures(self_2).subscribe(function (exposures) {
                                if (exposures) {
                                    if (_this.isFilterActive) {
                                        _this.cleansingService.getUpdateCheckFilter(_this.fileData, _this.currentPage, _this.listFilteredErrors, _this.colIdFiltered).subscribe(function (check) {
                                            if (check) {
                                                console.log('++ getUpdateCheckFilter succesfully ++');
                                                // this.store.dispatch(new ActionLoadErrors({ errors: check }));
                                                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionCleansingUpdateAll"]({ csMetadata: metadata, errors: check, data: exposures }));
                                                _this.changeValues(exposures);
                                            }
                                        });
                                    }
                                    else {
                                        _this.cleansingService.getUpdateCheck(fileData, selectedSheet, _this.currentPage).subscribe(function (check) {
                                            if (check) {
                                                console.log('++ updateCheck succesfully ++');
                                                _this.datachecksLoaded = check;
                                                // this.store.dispatch(new ActionLoadErrors({ errors: check }));
                                                _this.changeValues(exposures);
                                            }
                                        });
                                    }
                                }
                            });
                        }
                    }
                });
            }
            else {
                _this.startSave = false;
                _this.onUpdateFailed();
            }
        });
    };
    SharedLocationGridComponent.prototype.saveUpdatedData2 = function (body) {
        var _this = this;
        var fileData = this.fileData;
        var selectedSheet = this.selectedSheet;
        this.cleansingService.doUpdateData(this.jobId, fileData, selectedSheet, this.mappingId, body).subscribe(function (jobId) {
            if (jobId) {
                _this.cleansingService.getUpdateCsMetadata(jobId['job_id']).subscribe(function (metadata) {
                    if (metadata) {
                        console.log('++ updateCsMetadata succesfully ++');
                        _this.datachecksLoaded = metadata;
                        _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadCsMetadata"]({ csMetadata: metadata }));
                        var self_3 = _this.exposureOriginal._links.self;
                        if (self_3) {
                            _this.cleansingService.getUpdateExposures(self_3).subscribe(function (exposures) {
                                if (exposures) {
                                    if (_this.isFilterActive) {
                                        _this.cleansingService.getUpdateCheckFilter(_this.fileData, _this.currentPage, _this.listFilteredErrors, _this.colIdFiltered).subscribe(function (check) {
                                            if (check) {
                                                console.log('++ getUpdateCheckFilter succesfully ++');
                                                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadErrors"]({ errors: check }));
                                                _this.changeValues(exposures);
                                            }
                                        });
                                    }
                                    else {
                                        _this.cleansingService.getUpdateCheck(fileData, selectedSheet, _this.currentPage).subscribe(function (check) {
                                            if (check) {
                                                console.log('++ updateCheck succesfully ++');
                                                _this.datachecksLoaded = check;
                                                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadErrors"]({ errors: check }));
                                                _this.changeValues(exposures);
                                            }
                                        });
                                    }
                                }
                            }, function (err) {
                                _this.startSave = false;
                                _this.notif.error('Update data Error');
                            });
                        }
                    }
                });
            }
            else {
                _this.startSave = false;
                _this.onUpdateFailed();
            }
        });
    };
    SharedLocationGridComponent.prototype.getColIdExpanded = function (columns) {
        var newSelectedDisplayColumn = [];
        for (var i = 0; i < columns.length; i++) {
            var elemnt = columns[i];
            newSelectedDisplayColumn.push(elemnt['colId']);
        }
        return newSelectedDisplayColumn;
    };
    SharedLocationGridComponent.prototype.getStateGroupColumns = function () {
        if (this.gridColumnApi) {
            this.groupState = this.gridColumnApi.getColumnGroupState();
            /* this.displayedCenterColumns = this.gridColumnApi.getDisplayedCenterColumns();
            if(this.firstLoadManageColumn) {
              this.selectedDisplayColumnExpanded = this.getColIdExpanded(this.displayedCenterColumns);
              this.firstLoadManageColumn = false;
            } */
            if (this.listModification.length === 0) {
                this.listModification = this.getGroupExpanded(this.groupState);
            }
        }
    };
    SharedLocationGridComponent.prototype.getGroupExpanded = function (goupCols) {
        var isModifTemp = [];
        for (var i = 0; i < goupCols.length; i++) {
            var elemnts = goupCols[i];
            if (elemnts['open']) {
                isModifTemp.push({ groupId: elemnts['groupId'], open: elemnts['open'] });
            }
        }
        return isModifTemp;
    };
    SharedLocationGridComponent.prototype.saveUpdatedData = function (body) {
        var _this = this;
        this.getStateGroupColumns();
        var fileData = this.fileData;
        var selectedSheet = this.selectedSheet;
        this.startSave = true;
        this.cleansingService.doUpdateData(this.jobId, fileData, selectedSheet, this.mappingId, body).subscribe(function (jobId) {
            if (jobId) {
                // this.startSave = false;
                _this.updateCsMetadata(jobId['job_id']);
                if (_this.isFilterActive) {
                    _this.updateCheckAfterFilter();
                }
                else {
                    _this.updateCheck(fileData, selectedSheet);
                }
                // console.log('++ update succesfully ++')
                var self_4 = _this.exposureOriginal._links.self;
                if (self_4) {
                    _this.cleansingService.getUpdateExposures(self_4).subscribe(function (data) {
                        if (data) {
                            console.log('++ getUpdateExposures succesfully ++');
                            if (!_this.isNewPage) {
                                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
                            }
                            _this.exposureOriginal = data;
                            _this.pageLast = data['last_page'];
                            _this.pageFirst = data['first_page'];
                            var exposureTemp = data['exposures'];
                            _this.currentPage = data['current_page'];
                            if (data['abolute_index']) {
                                _this.indexRowsLoaded = data['abolute_index'];
                            }
                            else {
                                _this.indexRowsLoaded = data['index'];
                            }
                            _this.oldDataNewPage = data['exposures'];
                            _this.exposuresLoaded = exposureTemp;
                            if (exposureTemp) {
                                _this.exposuresLoaded = exposureTemp;
                                _this.oldDataClickedCell = exposureTemp;
                                // to comment when using scramble() in refresh
                                _this.rowsData = _this.createRowData(exposureTemp);
                                // set selected value in manage column
                                _this.newHeadersLoaded = _this.getSelectedColumn(_this.columnState, _this.headersLoaded);
                                _this.columnDefs = _this.createColumnDefs(_this.newHeadersLoaded);
                                // this.columnDefs = this.createColumnDefs(this.headersLoaded);
                            }
                            if (_this.columnDefs && _this.rowsData) {
                                _this.expandedColsLengthBeforeEdit = _this.expandedColsLength;
                                _this.expandedColsLength = 0;
                                _this.isModification = true;
                                // console.log('in update exposures ==> do refresh')
                                // setTimeout(function(){this.gridOptions.api.refreshView(),0})
                                _this.refreshAfterUpdate();
                                _this.bringFocusBack();
                                // this.refreshGrid();
                            }
                            if (_this.isFilterActive) {
                                _this.updateCheckAfterFilter();
                            }
                            else {
                                _this.updateCheck(fileData, selectedSheet);
                            }
                            _this.getUpdatedData(self_4, _this.headersLoaded, false);
                            // console.log('after getUpdatedData');
                        }
                        // this.startSave = false;
                    }, function (err) {
                        _this.startSave = false;
                        _this.notif.error('Update data Error');
                    });
                }
            }
            else {
                _this.startSave = false;
                _this.onUpdateFailed();
            }
        }, function (err) {
            _this.startSave = false;
            _this.notif.error('Update data Error');
            _this.refreshAfterUpdate();
            _this.bringFocusBack();
            _this.startSave = false;
        });
    };
    SharedLocationGridComponent.prototype.getColumnToShow = function (fieldCode, colList) {
        if (colList) {
            for (var i = 0; i < colList.length; i++) {
                if (fieldCode === colList[i]['colId'] || fieldCode === this.getExactColId(colList[i]['colId'])) {
                    return colList[i];
                }
            }
        }
        return null;
    };
    SharedLocationGridComponent.prototype.getRangeColumnToShow = function (fieldCode, colList) {
        if (colList) {
            for (var i = 0; i < colList.length; i++) {
                if (fieldCode === colList[i]['colId'] || fieldCode === this.getExactColId(colList[i]['colId'])) {
                    return i;
                }
            }
        }
        return null;
    };
    SharedLocationGridComponent.prototype.adjustSizeDataGrid = function () {
        if (this.gridOptions.columnApi && this.gridOptions.api) {
            var allDisplayed = this.gridOptions.columnApi.getAllDisplayedColumns();
            if (allDisplayed.length < 9) {
                this.gridOptions.api.sizeColumnsToFit();
            }
        }
    };
    SharedLocationGridComponent.prototype.bringFocusBack = function () {
        // console.log('= bringFocusBack =');
        if (this.gridOptions.api && this.rowIdFocused && this.colIdFocused && this.colFocused && this.colRangeFocused) {
            var displayedCol = this.gridOptions.columnApi.getAllDisplayedColumns()[this.colRangeFocused];
            var displayedColCenter = this.gridOptions.columnApi.getDisplayedCenterColumns()[this.colRangeFocused];
            var displayedColLeft = this.gridOptions.columnApi.getDisplayedLeftColumns()[this.colRangeFocused];
            var displayedColRight = this.gridOptions.columnApi.getDisplayedRightColumns()[this.colRangeFocused];
            // scrolls to the exact row
            this.gridOptions.api.ensureIndexVisible(this.rowIdFocused);
            // scrolls to the exact column
            this.gridOptions.api.ensureColumnVisible(displayedCol);
            this.gridOptions.api.ensureColumnVisible(displayedColCenter);
            this.gridOptions.api.ensureColumnVisible(displayedColLeft);
            this.gridOptions.api.ensureColumnVisible(displayedColRight);
            this.gridOptions.api.setFocusedCell(this.rowIdFocused, displayedCol, null);
            this.adjustSizeDataGrid();
        }
    };
    SharedLocationGridComponent.prototype.onBtStartEditingCell = function () {
        // console.log('= onBtStartEditingCell =');
        if (this.gridApi && this.focusedRowIndex && this.colIdFocused) {
            // this.bringFocusBack();
            var inverseColId = this.getInverseColId(this.colIdFocused);
            this.gridOptions.api.startEditingCell({
                rowIndex: this.focusedRowIndex,
                colKey: inverseColId,
            });
            this.gridOptions.api.startEditingCell({
                rowIndex: this.focusedRowIndex,
                colKey: this.colIdFocused,
            });
        }
    };
    SharedLocationGridComponent.prototype.getNewInsertData = function (gridApi) {
        var newExposures = [];
        gridApi.forEachNode(function (rowNode, index) {
            newExposures.push(rowNode.data);
        });
        return newExposures;
    };
    SharedLocationGridComponent.prototype.getDataIfModifyOneRow = function (oldExposures, newExposures, indexRowsLoaded) {
        var contents = {};
        var indices = [];
        var i = 0;
        for (var _i = 0, _a = Object.entries(newExposures); _i < _a.length; _i++) {
            var _b = _a[_i], key0 = _b[0], value0 = _b[1];
            if (JSON.stringify(oldExposures[key0]) !== JSON.stringify(value0)) {
                for (var _c = 0, _d = Object.entries(value0); _c < _d.length; _c++) {
                    var _e = _d[_c], key = _e[0], valueNew = _e[1];
                    if (oldExposures[key0][key] !== valueNew) {
                        if (i === 0 || indices.includes(indexRowsLoaded[key0])) {
                            indices.push(indexRowsLoaded[key0]);
                        }
                        i = i + 1;
                        if (valueNew) {
                            contents[key] = valueNew;
                        }
                        else {
                            // the backend don't authorize empty value
                            return false;
                        }
                    }
                }
                return {
                    is_all: false,
                    indices: indices,
                    content: contents
                };
            }
        }
        return false;
    };
    SharedLocationGridComponent.prototype.getDataIfModify = function (oldExposures, newExposures, indexRowsLoaded) {
        if (JSON.stringify(oldExposures) === JSON.stringify(newExposures)) {
            console.log('No modification');
            return false;
        }
        else {
            var contents = {};
            var indices = [];
            var i = 0;
            for (var _i = 0, _a = Object.entries(newExposures); _i < _a.length; _i++) {
                var _b = _a[_i], key0 = _b[0], value0 = _b[1];
                if (JSON.stringify(oldExposures[key0]) !== JSON.stringify(value0)) {
                    for (var _c = 0, _d = Object.entries(value0); _c < _d.length; _c++) {
                        var _e = _d[_c], key = _e[0], valueNew = _e[1];
                        // probleme de duplication de clé pour les memes colonnes
                        if (oldExposures[key0][key] !== valueNew) {
                            // adapted to the structure, only a modification in one line each time
                            if (i === 0 || indices.includes(indexRowsLoaded[key0])) {
                                indices.push(indexRowsLoaded[key0]);
                            }
                            i = i + 1;
                            if (valueNew) {
                                contents[key] = valueNew;
                            }
                            else {
                                return false;
                            }
                        }
                    }
                }
            }
            var modifyData = {
                is_all: false,
                indices: indices,
                content: contents
            };
            return modifyData;
        }
    };
    SharedLocationGridComponent.prototype.onMakeAnUpdate = function (oldDataClickedCell, newExposures, indexRowsLoaded) {
        var _this = this;
        if (this.gridApi) {
            var isModify_1 = this.getDataIfModify(oldDataClickedCell, newExposures, indexRowsLoaded);
            if (isModify_1) {
                var exposureUpdated_1;
                if (this.importData$) {
                    this.importData$.subscribe(function (importData) {
                        var fileData = importData.fileData;
                        var selectedSheet = importData.selectedSheet;
                        exposureUpdated_1 = _this.exposureOriginal;
                        _this.cleansingService.doUpdateData(_this.jobId, fileData, selectedSheet, _this.mappingId, isModify_1).subscribe(function (jobId) {
                            if (exposureUpdated_1 && jobId) {
                                var self_5 = _this.exposureOriginal._links.self;
                                if (self_5) {
                                    _this.updateCsMetadata(jobId['job_id']);
                                    // update check
                                    _this.updateCheck(fileData, selectedSheet);
                                    // this.getUpdatedData(self, this.headersLoaded, true);
                                    _this.cleansingService.getUpdateExposures(self_5).subscribe(function (data) {
                                        if (data) {
                                            if (isModify_1) {
                                                if (!_this.isNewPage) {
                                                    _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
                                                }
                                            }
                                            _this.exposureOriginal = data;
                                            var exposureTemp = data['exposures'];
                                            if (exposureTemp) {
                                                _this.exposuresLoaded = exposureTemp;
                                                _this.oldDataClickedCell = exposureTemp;
                                                _this.rowsData = _this.createRowData(exposureTemp);
                                            }
                                            if (_this.columnDefs && _this.rowsData) {
                                                _this.refreshAfterUpdate();
                                            }
                                        }
                                    });
                                }
                            }
                            else {
                                // setTimeout(function () { return true; }, 20000);
                                _this.onUpdateFailed();
                            }
                        });
                    });
                }
            }
            else if (!this.isNewPage) {
                console.log('No modification detected!');
                if (this.exposureOriginal) {
                    var self_6 = this.exposureOriginal._links.self;
                    if (self_6) {
                        this.getUpdatedData(self_6, this.headersLoaded, false);
                    }
                }
            }
        }
    };
    SharedLocationGridComponent.prototype.onCellDoubleClicked = function (event) {
        var clickedCellValue;
        if (event.data && event.column) {
            for (var _i = 0, _a = Object.entries(event.data); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                if (key === event.column.colId) {
                    clickedCellValue = value;
                }
            }
        }
    };
    SharedLocationGridComponent.prototype.onCellClicked = function ($event) {
        var rowIndex = $event.rowIndex;
        var colId = this.getExactColId($event.column.colId);
        var data = $event.data;
        var dataList = [];
        var clickedCellValue;
        if (data && colId) {
            for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                if (key === colId) {
                    clickedCellValue = value;
                }
            }
        }
        this.eventModif = true;
        this.indexRow = $event.rowIndex;
        this.idRow = $event.rowIndex;
        this.dataRow = $event.data;
    };
    SharedLocationGridComponent.prototype.getContextMenuItems = function (params) {
        var result = [];
        if (params.value) {
            result = [
                {
                    name: 'Copy: ' + params.value + ' ?',
                    disabled: true,
                    cssClasses: ['redFont', 'bold'],
                },
                {
                    name: 'Copy to all rows',
                    icon: '<i class="fas fa-save"></i>',
                    // action: () => params.context.thisComponent.saveDataToAllCols(params.value, params.column.colId)
                    action: function () {
                        params.context.thisComponent.startSave = true;
                        params.context.thisComponent.saveDataToAllCols(params.value, params.column.colId);
                        // window.alert('Alerting about ' + params.value);
                    },
                },
                'separator',
                'copy',
            ];
        }
        return result;
    };
    SharedLocationGridComponent.prototype.saveDataToAllCols = function (value, colId) {
        // this.startSave = true;
        console.log('this.startSave => ');
        console.log(this.startSave);
        var index = this.indexRowsLoaded;
        var id = this.getExactColId(colId);
        var contents = {};
        contents[id] = value;
        var body = {
            is_all: false,
            indices: index,
            content: contents
        };
        // console.log(body);
        this.saveUpdatedData(body);
    };
    SharedLocationGridComponent.prototype.onUpdateSaved = function () {
        this.notif.success('Update successfully');
    };
    SharedLocationGridComponent.prototype.onUpdateFailed = function () {
        this.notif.error('Update failed');
    };
    SharedLocationGridComponent.prototype.getUpdatedData = function (self, headersLoaded, isModify) {
        var _this = this;
        this.cleansingService.getUpdateExposures(self).subscribe(function (data) {
            if (data) {
                // console.log('in getUpdatedData');
                if (isModify) {
                    console.log('Need to synchronize data after modification');
                    // this.store.dispatch(new ActionLoadAllData({ data: data }));
                }
                _this.exposureOriginal = data;
                var exposureTemp = data['exposures'];
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                _this.currentPage = data['current_page'];
                if (data['abolute_index']) {
                    _this.indexRowsLoaded = data['abolute_index'];
                }
                else {
                    _this.indexRowsLoaded = data['index'];
                }
                _this.exposuresLoaded = exposureTemp;
                if (exposureTemp) {
                    _this.rowsDataOld = _this.rowsData;
                    _this.rowsData = _this.createRowData(exposureTemp);
                    // set selected value in manage column
                    _this.newHeadersLoaded = _this.getSelectedColumn(_this.columnState, headersLoaded);
                    _this.columnDefs = _this.createColumnDefs(_this.newHeadersLoaded);
                    // this.columnDefs = this.createColumnDefs(headersLoaded);
                }
                if (_this.columnDefs && _this.rowsData) {
                    _this.refreshAfterUpdate();
                }
            }
            _this.startSave = false;
        }, function (err) {
            _this.startSave = false;
            _this.notif.error('Update data Error');
        });
    };
    SharedLocationGridComponent.prototype.onBtNextCell = function () {
        this.gridApi.tabToNextCell();
    };
    SharedLocationGridComponent.prototype.onBtPreviousCell = function () {
        this.gridApi.tabToPreviousCell();
    };
    SharedLocationGridComponent.prototype.onBtWhich = function () {
        var cellDefs = this.gridApi.getEditingCells();
        if (cellDefs.length > 0) {
            var cellDef = cellDefs[0];
            console.log('editing cell is: row = ' +
                cellDef.rowIndex +
                ', col = ' +
                cellDef.column.getId() +
                ', floating = ' +
                cellDef.rowPinned);
        }
        else {
            console.log('no cells are editing');
        }
    };
    SharedLocationGridComponent.prototype.onBtStartEditingDown = function (key, char, pinned, indexRow, colId) {
        this.gridApi.startEditingCell({
            rowIndex: indexRow,
            colKey: colId,
            rowPinned: pinned,
            keyPress: key,
            charPress: char,
        });
    };
    SharedLocationGridComponent.prototype.onBtStopEditing = function () {
        this.gridApi.stopEditing();
        this.cdrf.detectChanges();
    };
    SharedLocationGridComponent.prototype.onCellKeyDown = function (e) {
        var keyPressed = e.event.key;
        if (this.gridApi.getEditingCells().length > 0) {
            if (keyPressed === 'ArrowLeft') {
                this.onBtStopEditing();
                this.onBtPreviousCell();
            }
            if (keyPressed === 'ArrowRight') {
                this.onBtStopEditing();
                this.onBtNextCell();
            }
            if (keyPressed === 'ArrowDown') {
                if (this.focusedRowIndex && this.focusedColId) {
                    this.focusedRowIndex = this.focusedRowIndex + 1;
                    this.onBtStopEditing();
                    this.onBtStartEditingDown(13, null, '', this.focusedRowIndex, this.focusedColId);
                }
            }
            if (keyPressed === 'ArrowUp') {
                if (this.focusedRowIndex && this.focusedColId) {
                    this.focusedRowIndex = this.focusedRowIndex - 1;
                    this.onBtStopEditing();
                    this.onBtStartEditingDown(13, null, '', this.focusedRowIndex, this.focusedColId);
                }
            }
        }
    };
    SharedLocationGridComponent.prototype.onCellKeyPress = function (e) {
        console.log(' = enter = ');
        var keyPressed = e.event.key;
        if (keyPressed === 'Enter') {
            console.log('= onCellEnterkey = ');
            this.isEnterForSave = true;
            var rowNode = e.node;
            var newSelection = !rowNode.selected;
            if (this.isChangeDetected) {
                console.log('==> change detected after onCellEnterkey : ');
                // console.log(this.indexRowToSave)
                // console.log(this.contents)
                // const body = getUpadedCell();
                if (this.indexRowToSave.length > 0 && this.contents !== {}) {
                    // const indexRowUnique = [];
                    // indexRowUnique.push(this.indexRowToSave[0]);
                    var contents = {};
                    var indexTemp = [];
                    if (this.isMultipleColToModify) {
                        console.log('** onCellEnterkey multiple column **');
                        // multiple column but same row
                        contents = this.colIdToSaveMultipleCol;
                        indexTemp.push(this.indexToSaveMultipleRow[0]);
                    }
                    else {
                        console.log('** onCellEnterkey multiple row **');
                        // multiple row but same column
                        contents[this.colIdToSaveMultipleRow] = this.newValueMultipleRow;
                        indexTemp = this.indexToSaveMultipleRow;
                    }
                    var bodyRequest = {
                        is_all: false,
                        indices: indexTemp,
                        content: contents
                    };
                    /* const bodyRequest = {
                      is_all: false,
                      indices: indexRowUnique,
                      content: this.contents
                    } */
                    if (bodyRequest.content['country']) {
                        var countryNameSelected = bodyRequest.content['country'];
                        if (this.countriesNameCode && countryNameSelected) {
                            var codeElement = this.getCodeOfElement(this.countriesNameCode, countryNameSelected);
                            this.getStatesByCountry(codeElement, countryNameSelected);
                        }
                    }
                    if (bodyRequest.content['state']) {
                        var stateNameSelected = bodyRequest.content['state'];
                        if (this.statesNameCode && stateNameSelected) {
                            var codeElement = this.getCodeOfElement(this.statesNameCode, stateNameSelected);
                            this.getCountiesByState(codeElement, stateNameSelected);
                        }
                    }
                    if (this.gridOptions.api) {
                        var cell = this.gridOptions.api.getFocusedCell();
                        var allDisplayedCol = this.gridOptions.columnApi.getAllDisplayedColumns();
                        if (cell && allDisplayedCol) {
                            this.rowIdFocused = cell.rowIndex;
                            this.colIdFocused = cell.column.getColId();
                            this.colFocused = this.getColumnToShow(this.colIdFocused, allDisplayedCol);
                            this.colRangeFocused = this.getRangeColumnToShow(this.colIdFocused, allDisplayedCol);
                        }
                    }
                    this.saveUpdatedData(bodyRequest);
                    this.newValueToSave = [];
                    this.indexRowToSave = [];
                    this.newValueMultipleRow = null;
                    this.firstChangeMultipleRow = true;
                    this.indexToSaveMultipleRow = [];
                    this.colIdToSaveMultipleRow = null;
                    this.isMultipleColToModify = false;
                    this.isChangeDetected = false;
                }
            }
        }
    };
    SharedLocationGridComponent.prototype.navigateToNextCell = function (params) {
        var previousCell = params.previousCellPosition;
        var suggestedNextCell = params.nextCellPosition;
        console.log(params.key);
        switch (params.key) {
            case this.KEY_DOWN:
                var nextRowIndex1 = previousCell.rowIndex + 1;
                if (nextRowIndex1 < 0) {
                    return null;
                }
                else {
                    // this.onBtStopEditing();
                    return {
                        rowIndex: nextRowIndex1,
                        column: previousCell.column,
                        floating: previousCell.floating,
                    };
                }
            case this.KEY_UP:
                var nextRowIndex2 = previousCell.rowIndex - 1;
                var renderedRowCount = this.gridApi.getModel().getRowCount();
                if (nextRowIndex2 >= renderedRowCount) {
                    return null;
                }
                else {
                    // this.onBtStopEditing();
                    return {
                        rowIndex: nextRowIndex2,
                        column: previousCell.column,
                        floating: previousCell.floating,
                    };
                }
            case this.KEY_LEFT:
            case this.KEY_RIGHT:
                return suggestedNextCell;
        }
    };
    SharedLocationGridComponent.prototype.onBtFirst = function () {
        // console.log('= onBtFirst() =');
        var newExposures = this.getNewInsertData(this.gridApi);
        if (this.oldRowDataClikedCell && this.oldInfoClickedCell && this.oldDataClickedCell && newExposures) {
            this.onMakeAnUpdate(this.oldDataClickedCell, newExposures, this.indexRowsLoaded);
        }
        if (this.firstPageData) {
            this.isNewPage = true;
            var data = this.firstPageData;
            this.exposureOriginal = data;
            this.pageLast = data['last_page'];
            this.pageFirst = data['first_page'];
            var exposureTemp = data['exposures'];
            this.currentPage = data['current_page'];
            if (data['abolute_index']) {
                this.indexRowsLoaded = data['abolute_index'];
            }
            else {
                this.indexRowsLoaded = data['index'];
            }
            this.exposuresLoaded = exposureTemp;
            this.oldDataNewPage = data['exposures'];
            this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
            if (exposureTemp) {
                this.rowsData = this.createRowData(exposureTemp);
                // set selected value in manage column
                this.newHeadersLoaded = this.getSelectedColumn(this.columnState, this.headersLoaded);
                this.columnDefs = this.createColumnDefs(this.newHeadersLoaded);
                // this.columnDefs = this.createColumnDefs(this.headersLoaded);
            }
            if (this.columnDefs && this.rowsData) {
                this.gridOptions.api.setRowData(this.rowsData);
                this.gridOptions.api.setColumnDefs(this.columnDefs);
                this.refreshAll(this.columnDefs, this.rowsData);
            }
        }
        else if (this.exposureOriginal) {
            this.isNewPage = true;
            var firstLink = this.exposureOriginal._links.first;
            if (firstLink) {
                this.currentPage = this.pageFirst;
                this.getUpdateDataNewPage(firstLink);
            }
        }
    };
    SharedLocationGridComponent.prototype.onBtLast = function () {
        // console.log('= onBtLast() =');
        var newExposures = this.getNewInsertData(this.gridApi);
        if (this.oldRowDataClikedCell && this.oldInfoClickedCell && this.oldDataClickedCell && newExposures) {
            this.onMakeAnUpdate(this.oldDataClickedCell, newExposures, this.indexRowsLoaded);
        }
        if (this.lastPageData) {
            this.isNewPage = true;
            var data = this.lastPageData;
            this.exposureOriginal = data;
            this.pageLast = data['last_page'];
            this.pageFirst = data['first_page'];
            var exposureTemp = data['exposures'];
            this.currentPage = data['current_page'];
            if (data['abolute_index']) {
                this.indexRowsLoaded = data['abolute_index'];
            }
            else {
                this.indexRowsLoaded = data['index'];
            }
            // this.indexRowsLoaded = data['index'];
            this.oldDataNewPage = data['exposures'];
            this.exposuresLoaded = exposureTemp;
            this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
            if (exposureTemp) {
                this.rowsData = this.createRowData(exposureTemp);
                // set selected value in manage column
                this.newHeadersLoaded = this.getSelectedColumn(this.columnState, this.headersLoaded);
                this.columnDefs = this.createColumnDefs(this.newHeadersLoaded);
                // this.columnDefs = this.createColumnDefs(this.headersLoaded);
            }
            if (this.columnDefs && this.rowsData) {
                this.gridOptions.api.setRowData(this.rowsData);
                // this.gridOptions.api.sizeColumnsToFit();
                this.gridOptions.columnDefs = this.columnDefs;
                this.refreshAll(this.columnDefs, this.rowsData);
            }
        }
        else if (this.exposureOriginal) {
            this.isNewPage = true;
            var link = this.exposureOriginal._links.last;
            this.currentPage = this.pageLast;
            if (link) {
                this.getUpdateDataNewPage(link);
            }
        }
    };
    SharedLocationGridComponent.prototype.getUpdateDataNewPage = function (link) {
        var _this = this;
        var fileData = this.fileData;
        var selectedSheet = this.selectedSheet;
        var jobId = this.jobId;
        this.cleansingService.getExposuresChangedPage(link).subscribe(function (data) {
            if (data) {
                // update csMetadata
                _this.updateCsMetadata(jobId);
                // update check
                _this.updateCheck(fileData, selectedSheet);
                _this.exposureOriginal = data;
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                var exposureTemp = data['exposures'];
                _this.currentPage = data['current_page'];
                if (data['abolute_index']) {
                    _this.indexRowsLoaded = data['abolute_index'];
                }
                else {
                    _this.indexRowsLoaded = data['index'];
                }
                _this.oldDataNewPage = data['exposures'];
                _this.exposuresLoaded = exposureTemp;
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
                if (exposureTemp) {
                    _this.rowsData = _this.createRowData(exposureTemp);
                    // set selected value in manage column
                    _this.newHeadersLoaded = _this.getSelectedColumn(_this.columnState, _this.headersLoaded);
                    _this.columnDefs = _this.createColumnDefs(_this.newHeadersLoaded);
                    // this.columnDefs = this.createColumnDefs(this.headersLoaded);
                }
                if (_this.columnDefs && _this.rowsData) {
                    _this.refreshAfterUpdate();
                }
                var self_7 = _this.exposureOriginal._links.self;
                if (self_7) {
                    _this.getUpdatedData(self_7, _this.headersLoaded, false);
                }
            }
        });
    };
    SharedLocationGridComponent.prototype.onBtSpecifiquePage = function (page) {
        if (this.exposureOriginal) {
            this.isNewPage = true;
            var link = this.exposureOriginal._links.first;
            this.currentPage = page;
            if (link) {
                var linkSpecifique = void 0;
                var headLink = link.split('?page=').slice(0, -1).join('?page=');
                var nrowsExtracted = link.split('&nrows=').pop();
                // i temp
                if (headLink === '') {
                    headLink = link.split('&page=').slice(0, -1).join('&page=');
                    linkSpecifique = headLink + '&page=' + page + '&nrows=' + nrowsExtracted;
                }
                else {
                    linkSpecifique = headLink + '?page=' + page + '&nrows=' + nrowsExtracted;
                }
                // f temp
                this.getUpdateDataNewPage(linkSpecifique);
            }
        }
    };
    SharedLocationGridComponent.prototype.onBtNext = function () {
        if (this.exposureOriginal) {
            this.isNewPage = true;
            var nextLink = this.exposureOriginal._links.next;
            if (nextLink) {
                this.currentPage = this.currentPage + 1;
                this.getUpdateDataNewPage(nextLink);
            }
        }
    };
    SharedLocationGridComponent.prototype.onBtPrevious = function () {
        var newExposures = this.getNewInsertData(this.gridApi);
        if (this.oldRowDataClikedCell && this.oldInfoClickedCell && this.oldDataClickedCell && newExposures) {
            this.onMakeAnUpdate(this.oldDataClickedCell, newExposures, this.indexRowsLoaded);
        }
        if (this.exposureOriginal) {
            this.isNewPage = true;
            var link = this.exposureOriginal._links.prev;
            if (link) {
                this.currentPage = this.currentPage - 1;
                this.getUpdateDataNewPage(link);
            }
        }
    };
    SharedLocationGridComponent.prototype.setColumnVisible = function () {
        this.gridColumnApi.setColumnsVisible(["COL_ID_1", "COL_ID_2"], false);
    };
    SharedLocationGridComponent.prototype.ngAfterViewInit = function () {
    };
    SharedLocationGridComponent.prototype.inFirstColumn = function (cell) {
        // cell.column is not a documented property!!
        return cell.column.colId === cell.column.parent.displayedChildren[0].colId;
    };
    SharedLocationGridComponent.prototype.goToAdmin = function () {
        this.router.navigate(['dcm/administration']);
    };
    /* getStateCols() {
      console.log('= getStateCols =');
      const colSt =  this.gridColumnApi.getColumnState();
      if (isDefined(colSt)) {
        this.columnState = this.getStateOfAllColumns(colSt)
        this.store.dispatch(new ActionColumnState({columnState: this.columnState}));
      }
    } */
    // popup manage column
    SharedLocationGridComponent.prototype.onManageColumn = function () {
        this.task = this.onSortCategorie(this.task);
        this.isManageColumn = true;
    };
    SharedLocationGridComponent.prototype.onSortCategorie = function (categories) {
        var sortCategories = [];
        var sortCategoriesNotInList = [];
        var index = 0;
        for (var i = 0; i < _app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_40__["CATEGORIES"].length; i++) {
            var elemnt1 = _app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_40__["CATEGORIES"][i];
            console.log(elemnt1);
            for (var j = 0; j < categories.length; j++) {
                var elemnt2 = categories[j];
                if (elemnt1 === elemnt2['code']) {
                    sortCategories[index] = elemnt2;
                    index++;
                }
                if (!_app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_40__["CATEGORIES"].includes(elemnt2['code']) && !sortCategoriesNotInList.includes(elemnt2)) {
                    sortCategoriesNotInList.push(elemnt2);
                }
            }
        }
        var newCategories = sortCategories.concat(sortCategoriesNotInList);
        return newCategories;
    };
    SharedLocationGridComponent.prototype.setWorkTaskes = function (cols) {
        var outPut = [];
        for (var i = 0; i < cols.length; i++) {
            var subtask = [];
            var cat = cols[i];
            for (var j = 0; j < cat['subtask'].length; j++) {
                var hed = cat['subtask'][j];
                /* subtask.push({
                  name: hed['name'],
                  code: hed['code'],
                  checked: true
                }) */
                if (this.columnDisplayByDefault.includes(hed['code'])) {
                    subtask.push({
                        name: hed['name'],
                        code: hed['code'],
                        checked: true
                    });
                }
                else {
                    subtask.push({
                        name: hed['name'],
                        code: hed['code'],
                        checked: false
                    });
                }
            }
            outPut.push({
                name: cat['name'],
                code: cat['code'],
                checked: false,
                subtask: subtask
            });
        }
        return outPut;
    };
    SharedLocationGridComponent.prototype.handleOkManageColumn = function () {
        this.isManageColumn = false;
        this.selectedDisplayColumnExpanded = [];
        // this.listModification = [];
        var cols = this.task;
        var columnState = [];
        for (var i = 0; i < cols.length; i++) {
            var categories = cols[i];
            for (var j = 0; j < categories['subtask'].length; j++) {
                var column = categories['subtask'][j];
                columnState.push({
                    colId: column['code'],
                    hide: !column['checked']
                });
            }
        }
        if (isDefined(columnState)) {
            this.columnState = columnState;
            this.getLoadedData();
            // this.setStateToGrid();
            // console.log('manage column columnState => ')
            // console.log(columnState)
            this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionColumnState"]({ columnState: this.columnState }));
        }
    };
    SharedLocationGridComponent.prototype.handleCancelManageColumn = function () {
        this.isManageColumn = false;
    };
    SharedLocationGridComponent.prototype.handleOutsideClick = function () {
        console.log('click outside');
    };
    SharedLocationGridComponent.prototype.handleResetManageColumn = function () {
        if (this.headersOriginal) {
            var data = this.getStructureTransformColomn(this.headersOriginal);
            var initColunmState = data['columnState'];
            var columnStructure = data['columnStructure'];
            this.columnState = initColunmState;
            this.getLoadedData();
            this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionColumnState"]({ columnState: initColunmState }));
            this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionColumnStructure"]({ columnStructure: columnStructure }));
        }
        this.isManageColumn = false;
        // return {headers: res, columnState: columnStates.columnState, columnStructure: columnStates.columnStructure};
        // this.resetStateGrid();
    };
    SharedLocationGridComponent.prototype.getStructureTransformColomn = function (headers) {
        var headersMod = [];
        headers.forEach(function (element) {
            var headersTemp = {
                categoryName: element.category['label'],
                fieldName: element.name,
                fieldCode: element.code,
                fieldOrder: element.inCategoryOrder,
                fieldType: element.dataType
            };
            headersMod.push(headersTemp);
        });
        var outPut = [];
        var categories = [];
        for (var i = 0; i < headersMod.length; i++) {
            var elmt = headersMod[i];
            if (!categories.includes(elmt['categoryName'])) {
                categories.push(elmt['categoryName']);
            }
        }
        for (var i = 0; i < categories.length; i++) {
            var subtask = [];
            var cat = categories[i];
            for (var j = 0; j < headersMod.length; j++) {
                var hed = headersMod[j];
                if (cat === hed['categoryName']) {
                    if (this.columnDisplayByDefault.includes(hed['fieldCode'])) {
                        subtask.push({
                            name: hed['fieldName'],
                            code: hed['fieldCode'],
                            checked: true
                        });
                    }
                    else {
                        subtask.push({
                            name: hed['fieldName'],
                            code: hed['fieldCode'],
                            checked: false
                        });
                    }
                }
            }
            outPut.push({
                name: cat,
                code: cat,
                checked: false,
                subtask: subtask
            });
        }
        var cols = outPut;
        var columnState = [];
        var initColunmState = [];
        for (var i = 0; i < cols.length; i++) {
            var categories_1 = cols[i];
            for (var j = 0; j < categories_1['subtask'].length; j++) {
                var column = categories_1['subtask'][j];
                columnState.push({
                    colId: column['code'],
                    hide: !column['checked']
                });
                if (this.columnDisplayByDefault.includes(column['code'])) {
                    initColunmState.push({
                        colId: column['code'],
                        hide: false
                    });
                }
                else {
                    initColunmState.push({
                        colId: column['code'],
                        hide: true
                    });
                }
            }
        }
        return { columnState: columnState, columnStructure: outPut };
    };
    SharedLocationGridComponent.prototype.getOrderdColumnState = function () {
        var _this = this;
        var oldState = this.gridColumnApi.getColumnState();
        return oldState.slice(0, 3).concat(this.columnState.map(function (e) { return oldState.find(function (t) { return t.colId === _this.getInverseColId(e.colId); }); }));
    };
    SharedLocationGridComponent.prototype.getOrderdColumnRefreshState = function () {
        var _this = this;
        var oldState = this.gridColumnApi.getColumnState();
        return oldState.slice(0, 3).concat(this.columnState.map(function (e) { return oldState.find(function (t) { return t.colId === _this.getInverseColId(e.colId); }); }));
    };
    SharedLocationGridComponent.prototype.setStateToGrid = function () {
        if (this.isFirstLoaded) {
            var displayedCol = this.getDisplayedColumnsRefresh(this.columnState);
            if (displayedCol) {
                this.gridColumnApi.setColumnsVisible(displayedCol.displayedCol, true);
                this.gridColumnApi.setColumnsVisible(displayedCol.hideCol, false);
                this.gridColumnApi.setColumnState(this.getOrderdColumnRefreshState());
            }
            this.adjustSizeDataGrid();
        }
        else {
            var displayedCol = this.getDisplayedColumns(this.columnState);
            if (displayedCol) {
                this.gridColumnApi.setColumnsVisible(displayedCol.displayedCol, true);
                this.gridColumnApi.setColumnsVisible(displayedCol.hideCol, false);
                this.gridColumnApi.setColumnState(this.getOrderdColumnState());
                this.adjustSizeDataGrid();
            }
        }
    };
    SharedLocationGridComponent.prototype.resetStateGrid = function () {
        var displayedCol = this.getDisplayedColumns(this.initColumnState);
        console.log(displayedCol);
        this.gridColumnApi.setColumnsVisible(displayedCol.displayedCol, true);
        this.gridColumnApi.setColumnsVisible(displayedCol.hideCol, false);
        this.adjustSizeDataGrid();
    };
    SharedLocationGridComponent.prototype.drop = function (event, index) {
        Object(_angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_31__["moveItemInArray"])(this.task[index].subtask, event.previousIndex, event.currentIndex);
    };
    SharedLocationGridComponent.prototype.handleCancelPdBi = function ($event) {
        this.isVisiblePdBi = false;
    };
    SharedLocationGridComponent.prototype.handleOkPdBi = function ($event) {
        console.log('<= handleOkPdBi =>');
    };
    // //#start
    SharedLocationGridComponent.prototype.updateAllComplete = function () {
        for (var t = 0; t < this.task.length; t++) {
            var element = this.task[t];
            this.allComplete = this.task[t].subtask != null && this.task[t].subtask.every(function (t) { return t.checked; });
        }
        // this.valide(this.task);
    };
    SharedLocationGridComponent.prototype.someComplete = function () {
        for (var tsk = 0; tsk < this.task.length; tsk++) {
            if (this.task[tsk].subtask == null) {
                return this.task[tsk].checked && !this.allComplete;
                // return false;
            }
            return this.task[tsk].subtask.filter(function (t) { return t.checked; }).length > 0 && !this.allComplete;
        }
    };
    SharedLocationGridComponent.prototype.setAll = function (checked, checkedIndex) {
        if (this.task[checkedIndex].checked) {
            this.task[checkedIndex].checked = false;
            checked = false;
        }
        else {
            this.task[checkedIndex].checked = true;
            checked = true;
        }
        if (this.task[checkedIndex].subtask == null) {
            return;
        }
        if (this.task[checkedIndex].subtask.length > 0) {
            this.task[checkedIndex].subtask.forEach(function (t) { return t.checked = checked; });
        }
        // this.valide(this.task);
        // this.valide();
    };
    SharedLocationGridComponent.prototype.setAllTree = function (checked) {
        for (var tsk = 0; tsk < this.task.length; tsk++) {
            this.allComplete = checked;
            this.task[tsk].checked = checked;
            if (this.task[tsk].subtask == null) {
                return;
            }
            this.task[tsk].subtask.forEach(function (t) { return t.checked = checked; });
        }
        // this.valide(this.task);
    };
    SharedLocationGridComponent.prototype.transformForManageColumn = function (headers) {
        var outPut = [];
        var categories = this.getCategories(headers);
        for (var i = 0; i < categories.length; i++) {
            var subtask = [];
            var cat = categories[i];
            for (var j = 0; j < headers.length; j++) {
                var hed = headers[j];
                if (cat === hed['categoryName']) {
                    subtask.push({
                        name: hed['fieldName'],
                        code: hed['fieldCode'],
                        checked: true
                    });
                }
            }
            outPut.push({
                name: cat,
                code: cat,
                checked: true,
                subtask: subtask
            });
        }
        return outPut;
    };
    SharedLocationGridComponent.prototype.getCategories = function (headers) {
        var categories = [];
        for (var i = 0; i < headers.length; i++) {
            var elmt = headers[i];
            if (!categories.includes(elmt['categoryName'])) {
                categories.push(elmt['categoryName']);
            }
        }
        return categories;
    };
    SharedLocationGridComponent.prototype.getDisplayedColumns = function (colState) {
        var displayedCol = [];
        var hideCol = [];
        for (var i = 0; i < colState.length; i++) {
            var elmtName = colState[i]['colId'];
            var elmtState = colState[i]['hide'];
            if (elmtState) {
                hideCol.push(this.getInverseColId(elmtName));
            }
            else {
                displayedCol.push(this.getInverseColId(elmtName));
            }
        }
        return { displayedCol: displayedCol, hideCol: hideCol };
    };
    // #end
    SharedLocationGridComponent.prototype.getDisplayedColumnsRefresh = function (colState) {
        var displayedCol = [];
        var hideCol = [];
        for (var i = 0; i < colState.length; i++) {
            var elmtName = colState[i]['colId'];
            var elmtState = colState[i]['hide'];
            if (elmtState) {
                hideCol.push(elmtName);
            }
            else {
                displayedCol.push(elmtName);
            }
        }
        return { displayedCol: displayedCol, hideCol: hideCol };
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"])(_angular_material_expansion__WEBPACK_IMPORTED_MODULE_32__["MatAccordion"]),
        __metadata("design:type", _angular_material_expansion__WEBPACK_IMPORTED_MODULE_32__["MatAccordion"])
    ], SharedLocationGridComponent.prototype, "accordion", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])(),
        __metadata("design:type", Object)
    ], SharedLocationGridComponent.prototype, "prefix", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])(),
        __metadata("design:type", Object)
    ], SharedLocationGridComponent.prototype, "editable", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])(),
        __metadata("design:type", Object)
    ], SharedLocationGridComponent.prototype, "loading", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])(),
        __metadata("design:type", rxjs__WEBPACK_IMPORTED_MODULE_5__["Observable"])
    ], SharedLocationGridComponent.prototype, "errorsInfo$", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])(),
        __metadata("design:type", Object)
    ], SharedLocationGridComponent.prototype, "metadata", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])(),
        __metadata("design:type", Object)
    ], SharedLocationGridComponent.prototype, "headers", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])(),
        __metadata("design:type", Object)
    ], SharedLocationGridComponent.prototype, "exposures", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Input"])(),
        __metadata("design:type", Object)
    ], SharedLocationGridComponent.prototype, "datachecks", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"])(),
        __metadata("design:type", Object)
    ], SharedLocationGridComponent.prototype, "editLocationButtonClick", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"])(),
        __metadata("design:type", Object)
    ], SharedLocationGridComponent.prototype, "geocodeLocationButtonClick", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Output"])(),
        __metadata("design:type", Object)
    ], SharedLocationGridComponent.prototype, "cellEdited", void 0);
    SharedLocationGridComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'anms-shared-location-grid',
            template: __webpack_require__(/*! ./shared-location-grid.component.html */ "./src/app/shared/shared-location-grid/shared-location-grid.component.html"),
            providers: [ng_keyboard_shortcuts__WEBPACK_IMPORTED_MODULE_11__["KeyboardShortcutsService"]],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./shared-location-grid.component.scss */ "./src/app/shared/shared-location-grid/shared-location-grid.component.scss")]
        }),
        __metadata("design:paramtypes", [_app_dcm_modules_upload_containers_cleansing_container_cleansing_container_component__WEBPACK_IMPORTED_MODULE_22__["CleansingContainerComponent"],
            _customized_shared_location_grid_customized_grid_buttons_service__WEBPACK_IMPORTED_MODULE_0__["CustomizedSharedGridService"],
            _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_12__["FileImportService"],
            _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_23__["CleansingService"],
            ng_keyboard_shortcuts__WEBPACK_IMPORTED_MODULE_11__["KeyboardShortcutsService"],
            _ngrx_store__WEBPACK_IMPORTED_MODULE_7__["Store"],
            _angular_core__WEBPACK_IMPORTED_MODULE_3__["ChangeDetectorRef"],
            _app_core__WEBPACK_IMPORTED_MODULE_8__["NotificationService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_24__["Router"]])
    ], SharedLocationGridComponent);
    return SharedLocationGridComponent;
}());

function editByType(fieldCode, listDoubleCols, listNumericCols) {
    var type = '';
    if (listDoubleCols.includes(fieldCode)) {
        type = 'doublingEditor';
    }
    else if (listNumericCols.includes(fieldCode)) {
        type = 'numericEditor';
    }
    return type;
}
function getFilter(listsFilteredColumn, fieldCode) {
    // console.log('listsFilteredColumn => ');
    // console.log(listsFilteredColumn);
    var defaultFilter = 'defaultFilterComponent';
    /* if (fieldCode === 'division') {
      defaultFilter = 'divisionFilterComponent';
    } */
    /* if (fieldCode === 'tiv_amount') {
      defaultFilter = 'tivFilterComponent';
    } */
    if (listsFilteredColumn.includes(fieldCode) /*  && fieldCode !== 'division' */) {
        defaultFilter = 'defaultFilteredQuickSearchComponent';
    }
    return defaultFilter;
}
function isErrorInList(errorsModel, fieldCode, id) {
    for (var i = 0; i < errorsModel.length; i++) {
        var elmnt = errorsModel[i];
        if (elmnt['fieldCode'] === fieldCode && errorsModel['indexDataGrid'].includes(id)) {
            return true;
        }
    }
    return false;
}
function isIndexInError(listError, nrows, childIndex) {
    // const nrows = 50;
    var errorIndexRelative = [];
    for (var i = 0; i < nrows; i++) {
        /* if (listError.includes(listError[0] + i)) {
          errorIndexRelative.push(i);
        } */
        if (listError.includes(i)) {
            errorIndexRelative.push(i);
        }
    }
    if (errorIndexRelative.includes(childIndex)) {
        return true;
    }
    return false;
}
function getEquivalentIndexInGrid(listRowIndexDb, listRowIndexDbSpecific) {
    var indexInDataGrid = [];
    for (var _i = 0, _a = Object.entries(listRowIndexDb); _i < _a.length; _i++) {
        var _b = _a[_i], indexDg = _b[0], indexDbSp = _b[1];
        if (listRowIndexDbSpecific.includes(indexDbSp)) {
            indexInDataGrid.push(Number(indexDg));
        }
    }
    return indexInDataGrid;
}
function comparateObject(obj, list) {
    for (var _i = 0, _a = Object.entries(list); _i < _a.length; _i++) {
        var _b = _a[_i], key = _b[0], value = _b[1];
        if (JSON.stringify(value) === JSON.stringify(obj)) {
            return true;
        }
    }
    return false;
}
function onlyUnique(value, index, self) {
    return self.indexOf(value) === index;
}
function isDefined(elements) {
    var isDef = false;
    if (elements !== undefined && elements !== null && elements !== '' && elements !== {}) {
        isDef = true;
    }
    return isDef;
}
function sortBy(items) {
    var itemsSorted;
    if (items === undefined) {
        itemsSorted = [];
    }
    else {
        itemsSorted = items.slice().sort(function (a, b) { return a > b ? 1 : -1; });
    }
    return itemsSorted;
}
function mapElementToSpecifiqueObj(countryStates, selectedCountry) {
    var elements = countryStates[selectedCountry];
    var elementsNameList = [];
    var elementsCodeList = [];
    var elementsNameCode = {};
    var elementsCodeName = {};
    if (elements) {
        for (var i = 0; i < elements.length; i++) {
            elementsNameList.push((elements[i])['name']);
            elementsCodeList.push((elements[i])['code']);
            elementsNameCode[(elements[i])['name']] = (elements[i])['code'];
            elementsCodeName[(elements[i])['code']] = (elements[i])['name'];
        }
    }
    return {
        elementsNameList: elementsNameList,
        elementsCodeList: elementsCodeList,
        elementsNameCode: elementsNameCode,
        elementsCodeName: elementsCodeName
    };
}
function numberWithCommas(number) {
    // return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',').toLocaleString('en-US').replace(',', ' ');
    return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ' ');
}
function numberFormatter(params) {
    var columnWithNumber = ['tiv_amount', 'machinery_value', 'content_value', 'pd_value', 'bi_value', 'building_value', 'stock_value', 'mpl_pd_value', 'mpl_bi_value'];
    if (columnWithNumber.includes(params.colDef.field)) {
        if (params.value !== null && params.value !== undefined) {
            return numberWithCommas(params.value);
        }
        return '';
        // return null;
    }
    return params.value;
}
function isErrorInRow(linesWithErrors, index) {
    return linesWithErrors.includes(index);
}
function countryCellRenderer(params) {
    var val = params.value;
    if (val !== undefined && countrySpecific(params.value) !== undefined) {
        val = countrySpecific(params.value);
        return "<img border='0' width='15' height='14' style='margin-bottom: 2px; margin-left: -7px; margin-right: 5px' src='assets/images/flags/" + countryFlagName(val) + ".png' /><span>" + val + "</span>";
    }
    else {
        return '';
        // return null;
    }
}
function countryCellRendererDrowpdown(params) {
    var val = params.value;
    if (val !== undefined && countrySpecific(params.value) !== undefined) {
        val = countrySpecific(params.value);
        return "<img border='0' width='15' height='14' style='margin-bottom: 2px; margin-left: -7px; margin-right: 5px' src='assets/images/flags/" + countryFlagName(val) + ".png' /><span><img src=\"assets/icons/sort-down.png\" alt=\"image\" style = \"width: 10px; float: right; margin-top: 7px;\" />" + val + "</span>";
    }
    else {
        return '';
        // return null;
    }
}
function countryFlagName(country) {
    return country.split(' ').join('-');
}
function countrySpecific(country) {
    switch (country) {
        case 'Cura�ao':
            return country = 'Curacao';
        case 'Saint Barth�lemy':
            return country = 'Saint Barthelemy';
        case '�land Islands':
            return country = 'Aland Islands';
        default:
            return country;
    }
}
function createFlagImg(flag) {
    return ('<img border="0" width="15" height="10" src="https://flags.fmcdn.net/data/flags/mini/' +
        flag +
        '.png"/>');
}
function getNewData(fieldCode, newValue, data) {
    var newData = {};
    for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
        var _b = _a[_i], key1 = _b[0], value1 = _b[1];
        newData[key1] = value1;
        if (fieldCode === key1) {
            newData[key1] = newValue;
        }
    }
    return newData;
}


/***/ }),

/***/ "./src/app/shared/shared-location-grid/shared-location-upload-grid.component .ts":
/*!***************************************************************************************!*\
  !*** ./src/app/shared/shared-location-grid/shared-location-upload-grid.component .ts ***!
  \***************************************************************************************/
/*! exports provided: SharedLocationUploadGridComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharedLocationUploadGridComponent", function() { return SharedLocationUploadGridComponent; });
/* harmony import */ var _dcm_modules_upload_containers_upload_container_upload_container_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../dcm/modules/upload/containers/upload-container/upload-container.component */ "./src/app/dcm/modules/upload/containers/upload-container/upload-container.component.ts");
/* harmony import */ var _customized_shared_location_grid_customized_grid_buttons_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../customized-shared-location-grid/customized-grid-buttons.service */ "./src/app/shared/customized-shared-location-grid/customized-grid-buttons.service.ts");
/* harmony import */ var _customized_shared_location_grid_customized_shared_location_grid_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../customized-shared-location-grid/customized-shared-location-grid.component */ "./src/app/shared/customized-shared-location-grid/customized-shared-location-grid.component.ts");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! lodash */ "./node_modules/lodash/lodash.js");
/* harmony import */ var lodash__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(lodash__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! rxjs */ "./node_modules/rxjs/_esm5/index.js");
/* harmony import */ var _app_dcm_modules_upload_store_mapping_mapping_selectors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @app/dcm/modules/upload/store/mapping/mapping.selectors */ "./src/app/dcm/modules/upload/store/mapping/mapping.selectors.ts");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @app/core */ "./src/app/core/index.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.selectors */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.selectors.ts");
/* harmony import */ var _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @app/dcm/modules/upload/store/cleansing/cleansing.actions */ "./src/app/dcm/modules/upload/store/cleansing/cleansing.actions.ts");
/* harmony import */ var ng_keyboard_shortcuts__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ng-keyboard-shortcuts */ "./node_modules/ng-keyboard-shortcuts/fesm5/ng-keyboard-shortcuts.js");
/* harmony import */ var _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @app/dcm/modules/upload/services/file-import.service */ "./src/app/dcm/modules/upload/services/file-import.service.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.selectors */ "./src/app/dcm/modules/upload/store/import/import.selectors.ts");
/* harmony import */ var _ag_grid_enterprise_all_modules__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @ag-grid-enterprise/all-modules */ "./node_modules/@ag-grid-enterprise/all-modules/dist/es6/main.js");
/* harmony import */ var _app_dcm_components_header_component_sortable_header_component__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @app/dcm/components/header-component/sortable-header.component */ "./src/app/dcm/components/header-component/sortable-header.component.ts");
/* harmony import */ var _data_model__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./data-model */ "./src/app/shared/shared-location-grid/data-model.ts");
/* harmony import */ var _app_dcm_components_header_group_component_header_group_component__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @app/dcm/components/header-group-component/header-group.component */ "./src/app/dcm/components/header-group-component/header-group.component.ts");
/* harmony import */ var _app_dcm_components_header_icons_component_edit_component_header_edit_component__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @app/dcm/components/header-icons-component/edit-component/header-edit.component */ "./src/app/dcm/components/header-icons-component/edit-component/header-edit.component.ts");
/* harmony import */ var _app_dcm_components_header_icons_component_geocode_component_header_geocode_component__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @app/dcm/components/header-icons-component/geocode-component/header-geocode.component */ "./src/app/dcm/components/header-icons-component/geocode-component/header-geocode.component.ts");
/* harmony import */ var _app_dcm_components_header_icons_component_supp_component_header_supp_component__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @app/dcm/components/header-icons-component/supp-component/header-supp.component */ "./src/app/dcm/components/header-icons-component/supp-component/header-supp.component.ts");
/* harmony import */ var _app_dcm_modules_upload_models_cleansing_models_explosures_model__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @app/dcm/modules/upload/models/cleansing-models/explosures-model */ "./src/app/dcm/modules/upload/models/cleansing-models/explosures-model.ts");
/* harmony import */ var _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @app/dcm/modules/upload/services/cleansing.service */ "./src/app/dcm/modules/upload/services/cleansing.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/router */ "./node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _custom_tooltip_component__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./custom-tooltip.component */ "./src/app/shared/shared-location-grid/custom-tooltip.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_dropdown_error_filter_dropdown_error_filter_component__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_division_filter_division_filter_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_default_filter_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_quick_search_default_filtered_quick_search_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_tiv_filters_tiv_filter_component__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component.ts");
/* harmony import */ var _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! @angular/cdk/drag-drop */ "./node_modules/@angular/cdk/esm5/drag-drop.es5.js");
/* harmony import */ var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! @angular/material/expansion */ "./node_modules/@angular/material/esm5/expansion.es5.js");
/* harmony import */ var _pipes_filter_pipe__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ../pipes/filter.pipe */ "./src/app/shared/pipes/filter.pipe.ts");
/* harmony import */ var _app_dcm_modules_upload_store_import_import_actions__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! @app/dcm/modules/upload/store/import/import.actions */ "./src/app/dcm/modules/upload/store/import/import.actions.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/models/location-ref-data.const */ "./src/app/shared/popups/general-location-info-popup/models/location-ref-data.const.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/manage-column/group-column.const */ "./src/app/dcm/modules/upload/componenets/manage-column/group-column.const.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


































// import { T } from 'ng-zorro-antd';



var SharedLocationUploadGridComponent = /** @class */ (function () {
    // test
    function SharedLocationUploadGridComponent(cleansingContainer, service, importService, cleansingService, keyboard, store, cdrf, notif, 
    // private fakeServer: FakeServer,
    router) {
        var _this = this;
        this.cleansingContainer = cleansingContainer;
        this.service = service;
        this.importService = importService;
        this.cleansingService = cleansingService;
        this.keyboard = keyboard;
        this.store = store;
        this.cdrf = cdrf;
        this.notif = notif;
        this.router = router;
        // @Input() prefix = '';
        // @Input() editable = false;
        // @Input() loading = false;
        // @Input() errorsInfo$: Observable<any> = new Observable<any>();
        this.metadata = null;
        this.headers = null;
        this.exposures = null;
        // @Input() datachecks = null;
        this.editLocationButtonClick = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
        this.geocodeLocationButtonClick = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
        this.cellEdited = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
        this.data$ = new rxjs__WEBPACK_IMPORTED_MODULE_5__["BehaviorSubject"]([]);
        this.isVisibleRestor = false;
        this.previousState = null;
        this.fakeRowData = null;
        this.isOkLoadingRestor = false;
        this.lastState = null;
        this.sideBar = false;
        // (free_ver) public modules: Module[] = AllCommunityModules;
        this.modules = _ag_grid_enterprise_all_modules__WEBPACK_IMPORTED_MODULE_14__["AllModules"];
        this.currentPage = 1;
        this.lastPageLoaded = 0;
        this.eventModif = false;
        this.numRow = 0;
        this.fieldCodeId = [];
        this.headerName = [];
        this.colDef = [];
        this.numberIdChange = 1;
        this.numberIdFocusedCellChange = 1;
        this.idFocusedBack = 1;
        this.rowDataClicked1 = {};
        this.isFirstLoaded = true;
        this.pageOne = 1;
        this.pageTow = 2;
        this.pageThree = 3;
        this.pageFour = 4;
        this.pageFive = 5;
        this.pageFirst = 1;
        this.typeError = 'errors';
        this.typeWarning = 'warnings';
        this.columnWithNumber = ['tiv_amount', 'machinery_value', 'content_value', 'pd_value', 'bi_value', 'building_value', 'stock_value'];
        this.dropdownCell = ['occupancy_sub_class', 'occupancy_code', 'construction_class', 'construction_code', 'country', 'site_currency'];
        this.notify = false;
        this.isNewPage = true;
        this.oldDataNewPage = null;
        this.isLoading = false;
        this.KEY_LEFT = 37;
        this.KEY_UP = 38;
        this.KEY_RIGHT = 39;
        this.KEY_DOWN = 40;
        this.KEY_ENTER = 13;
        this.isFirstLoad = true;
        this.indicesRow = [];
        this.neValuesInRow = [];
        this.isNewRowFocused = false;
        this.newValueToSave = [];
        this.indexToSaveMultipleRow = [];
        this.colIdToSaveMultipleCol = {};
        this.firstChangeMultipleRow = true;
        this.isMultipleColToModify = false;
        this.indexRowToSave = [];
        this.indexRowModify = [];
        this.contents = {};
        this.isEnterForSave = false;
        this.countryWithStates = [];
        this.uniqueCountry = [];
        this.countryStates = {};
        this.stateWithCounties = {};
        this.uniqueState = [];
        this.listFilteredColumn = [];
        this.isVisibleComment = false;
        this.isVisiblePdBi = false;
        this.isManageColumn = false;
        this.displayByDefaultAfterCollapse = _app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_35__["DEFAULT_COLUMN_COLLAPSE"].concat(_app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_35__["DEFAULT_COLUMN"]);
        this.expandedColsLength = 0;
        this.expandedColsLengthBeforeEdit = 0;
        this.isModification = false;
        this.listModification = [];
        this.selectedDisplayColumnExpanded = [];
        this.selectedDisplayColumn = [];
        this.isFirstFocus = true;
        this.isGridEditable = true;
        this.uniqueIndexRowWithError = [];
        this.rowsSelected = 0;
        this.isRowsSelected = false;
        this.isChangeDetected = false;
        this.columnState = [];
        this.calculTiv = [
            {
                name: 'PD',
                id: 'pd_value',
                value: [],
                index: [],
                checked: false,
                color: 'grey'
            },
            {
                name: 'BI',
                id: 'bi_value',
                value: [],
                index: [],
                checked: false,
                color: 'grey'
            }
        ];
        this.groupColumnState = [];
        this.colorPdBi = false;
        this.tivInput = null;
        this.allComplete = false;
        this.filterPipe = new _pipes_filter_pipe__WEBPACK_IMPORTED_MODULE_32__["FilterPipe"]();
        this.gridOptions = {};
        this.exposureModelSub = new rxjs__WEBPACK_IMPORTED_MODULE_5__["ReplaySubject"](3);
        this.headersModelSub = new rxjs__WEBPACK_IMPORTED_MODULE_5__["ReplaySubject"](3);
        this.datacheckModelSub = new rxjs__WEBPACK_IMPORTED_MODULE_5__["ReplaySubject"](3);
        this.importData$ = this.store.select(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_13__["selectImportObjectState"]);
        this.target$ = this.store.select(_app_dcm_modules_upload_store_mapping_mapping_selectors__WEBPACK_IMPORTED_MODULE_6__["selectMappingTarget"]);
        this.loading$ = store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectCleansingLoading"]);
        this.jobId$ = store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectCleansingJobId"]);
        this.mappingId$ = store.select(_app_dcm_modules_upload_store_mapping_mapping_selectors__WEBPACK_IMPORTED_MODULE_6__["selectMappingId"]);
        this.columnState$ = store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectColumnState"]);
        this.groupColumnState$ = store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectGroupColumnState"]);
        this.columnState$.subscribe(function (colSt) {
            if (colSt !== undefined) {
                // this.columnState = this.getStateOfAllColumns(colSt)
                _this.columnState = colSt;
                // this.setStateToGrid()
            }
        });
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectFilterQuickSearch"]).subscribe(function (data) {
            _this.listFilteredColumn = [];
            if (data) {
                var contents = data.contents;
                if (data.active) {
                    _this.listFilteredColumn.push(Object.keys(contents)[0]);
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        this.groupColumnState$.subscribe(function (groupColSt) {
            if (groupColSt !== undefined && groupColSt !== null && groupColSt) {
                var colsTemp = _this.getColumnAfterExpanded(groupColSt['children']);
                if (groupColSt['expanded'] && _this.selectedDisplayColumn.length > 0) {
                    _this.expandedColsLength += 1;
                    _this.selectedDisplayColumnExpanded = colsTemp.concat(_this.selectedDisplayColumn);
                    if (!_this.isModification) {
                        _this.expandedColsLengthBeforeEdit += 1;
                    }
                }
                else {
                    if (!groupColSt['expanded']) {
                        if (_this.expandedColsLength > 0) {
                            _this.expandedColsLength -= 1;
                        }
                        if (_this.expandedColsLengthBeforeEdit > 0) {
                            _this.expandedColsLengthBeforeEdit -= 1;
                            _this.isModification = false;
                        }
                    }
                    var newColsTemp = _this.removeDefaultColumnAfterCollape(_this.displayByDefaultAfterCollapse, colsTemp);
                    var newlistCols = _this.removeColumnAfterCollape(_this.selectedDisplayColumnExpanded, newColsTemp);
                    _this.selectedDisplayColumnExpanded = newlistCols;
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        this.importData$.subscribe(function (importData) {
            _this.fileData = importData.fileData;
            _this.selectedSheet = importData.selectedSheet;
        });
        this.jobId$.subscribe(function (jobId) {
            _this.jobId = jobId;
        });
        this.mappingId$.subscribe(function (mappingId) {
            _this.mappingId = mappingId;
        });
        this.getAllData(cleansingContainer);
        this.selectAllData(store);
        this.getAllRefs(cleansingService);
        this.loadingTemplate =
            "<span class=\"ag-overlay-loading-center\">data is loading...</span>";
        this.noRowsTemplate =
            "\"<span\">no rows to show</span>\"";
        service.getEditsObserver().subscribe(function (info) {
            var line = {};
            var multiple = {};
            var selectedRowsData = _this.gridApi.getSelectedRows();
            var selectedRowsIndex = _this.gridApi.getSelectedNodes().map(function (s) { return s.childIndex; });
            Object.keys(info.line).forEach(function (col, i) {
                if (!selectedRowsData.map(function (e) { return e[col]; }).every(function (i) { return i === info.line[col]; })) {
                    line[col] = null;
                    multiple[col] = true;
                }
                else {
                    line[col] = info.line[col];
                    multiple[col] = false;
                }
            });
            if (selectedRowsIndex.length > 1 && selectedRowsIndex.includes(info.rowId)) {
                var obj = {
                    line: line,
                    backup: info.line,
                    rowId: info.rowId,
                    indices: selectedRowsIndex,
                    multiple: multiple,
                    isMultipleEdit: true
                };
                _this.editLocationButtonClick.emit(obj);
            }
            else {
                var obj = {
                    line: line,
                    backup: info.line,
                    rowId: info.rowId,
                    indices: [info.rowId],
                    multiple: multiple,
                    isMultipleEdit: false
                };
                _this.editLocationButtonClick.emit(obj);
            }
        });
        service
            .getGeocodeObserver()
            .subscribe(function (info) {
            return _this.geocodeLocationButtonClick.emit(info);
        });
        this.fileMetaData$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_7__["select"])(_app_dcm_modules_upload_store_import_import_selectors__WEBPACK_IMPORTED_MODULE_13__["selectFileData"]));
        this.tooltipShowDelay = 0;
        this.frameworkComponents = {
            sortableHeaderComponent: _app_dcm_components_header_component_sortable_header_component__WEBPACK_IMPORTED_MODULE_15__["SortableHeaderComponent"],
            headerGroupComponent: _app_dcm_components_header_group_component_header_group_component__WEBPACK_IMPORTED_MODULE_17__["HeaderGroupComponent"],
            headerEditComponent: _app_dcm_components_header_icons_component_edit_component_header_edit_component__WEBPACK_IMPORTED_MODULE_18__["HeaderEditComponent"],
            headerGeocodeComponent: _app_dcm_components_header_icons_component_geocode_component_header_geocode_component__WEBPACK_IMPORTED_MODULE_19__["HeaderGeocodeComponent"],
            headerSuppComponent: _app_dcm_components_header_icons_component_supp_component_header_supp_component__WEBPACK_IMPORTED_MODULE_20__["HeaderSuppComponent"],
            dropdownErrorFilterComponent: _app_dcm_modules_upload_componenets_cleansing_filters_dropdown_error_filter_dropdown_error_filter_component__WEBPACK_IMPORTED_MODULE_25__["DropdownErrorFilterComponent"],
            customizedSharedLocationGridComponent: _customized_shared_location_grid_customized_shared_location_grid_component__WEBPACK_IMPORTED_MODULE_2__["CustomizedSharedLocationGridComponent"],
            customTooltipComponent: _custom_tooltip_component__WEBPACK_IMPORTED_MODULE_24__["CustomTooltipComponent"],
            // partialMatchFilterComponent: PartialMatchFilterComponent,
            defaultFilterComponent: _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_default_filter_component__WEBPACK_IMPORTED_MODULE_27__["DefaultFilterComponent"],
            divisionFilterComponent: _app_dcm_modules_upload_componenets_cleansing_filters_division_filter_division_filter_component__WEBPACK_IMPORTED_MODULE_26__["DivisionFilterComponent"],
            tivFilterComponent: _app_dcm_modules_upload_componenets_cleansing_filters_tiv_filters_tiv_filter_component__WEBPACK_IMPORTED_MODULE_29__["TivFilterComponent"],
            defaultFilteredQuickSearchComponent: _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_quick_search_default_filtered_quick_search_component__WEBPACK_IMPORTED_MODULE_28__["DefaultFilteredQuickSearchComponent"]
        };
        this.defaultColDef = {
            cellStyle: {
                'background-color': 'white',
            },
            resizable: true,
            sortable: true,
            // flex: 1,
            editable: this.isGridEditable,
            scrollable: true,
            valueFormatter: numberFormatter,
            paginator: true,
            suppressCellFlash: true,
            filter: 'agTextColumnFilter',
            filterParams: { /* buttons: ['apply'] */ debounceMs: 1000 },
            headerComponentParams: {
                menuIcon: 'fa-bars'
            }
        };
        this.keyboard.add([
            {
                key: 'ctrl z',
                command: function () { return _this.showModalRestor(); }
            },
            {
                key: 'enter',
                command: function () { return _this.onEnter(); }
            }
        ]);
        this.datasource = {
            rowCount: null,
            getRows: function (params) {
                setTimeout(function () {
                    var rowsThisPage = _data_model__WEBPACK_IMPORTED_MODULE_16__["dataModel"].slice(params.startRow, params.endRow);
                    for (var i = 0; i < rowsThisPage.length; i++) {
                        var item = rowsThisPage[i];
                        var itemCopy = JSON.parse(JSON.stringify(item));
                        rowsThisPage[i] = itemCopy;
                    }
                    var lastRow = -1;
                    if (_data_model__WEBPACK_IMPORTED_MODULE_16__["dataModel"].length <= params.endRow) {
                        lastRow = _data_model__WEBPACK_IMPORTED_MODULE_16__["dataModel"].length;
                    }
                    params.successCallback(rowsThisPage, lastRow);
                }, 3000);
            }
        };
        this.components = {
            loadingRenderer: function (params) {
                if (params.value !== undefined) {
                    return params.value;
                }
                else {
                    return '<img src="assets/icons/loding.gif">';
                }
            }
        };
        this.paginationPageSize = 50;
        this.autoGroupColumnDef = { minWidth: 120 };
        this.config = {
            itemsPerPage: 5,
            currentPage: 1,
            totalItems: _app_dcm_modules_upload_models_cleansing_models_explosures_model__WEBPACK_IMPORTED_MODULE_21__["explosuresModel"].length
        };
        this.rowBuffer = 0;
        this.rowSelection = 'multiple';
        this.cacheOverflowSize = 2;
        this.maxConcurrentDatasourceRequests = 1;
        this.infiniteInitialRowCount = 15;
        this.maxBlocksInCache = 10;
        this.rowModelType = 'serverSide';
        this.rowGroupPanelShow = 'always';
        this.pivotPanelShow = 'always';
        this.icons = {
            columns: '<i class="fa fa-handshake"/>'
        };
    }
    SharedLocationUploadGridComponent.prototype.ngOnInit = function () { };
    SharedLocationUploadGridComponent.prototype.getColumnAfterExpanded = function (newcolumns) {
        var cols = [];
        for (var i = 0; i < newcolumns.length; i++) {
            var elemnts = newcolumns[i];
            cols.push(elemnts['field']);
        }
        return cols;
    };
    SharedLocationUploadGridComponent.prototype.removeColumnAfterCollape = function (oldcolumns, newcolumns) {
        var cols = [];
        for (var i = 0; i < oldcolumns.length; i++) {
            var elemnts = this.getExactColId(oldcolumns[i]);
            if (!newcolumns.includes(elemnts)) {
                cols.push(elemnts);
            }
        }
        return cols;
    };
    SharedLocationUploadGridComponent.prototype.removeDefaultColumnAfterCollape = function (defaultColumns, columns) {
        var cols = [];
        for (var i = 0; i < columns.length; i++) {
            var elemnts = columns[i];
            if (!defaultColumns.includes(elemnts)) {
                cols.push(elemnts);
            }
        }
        return cols;
    };
    SharedLocationUploadGridComponent.prototype.selectAllData = function (store) {
        var _this = this;
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectEditGrid"]).subscribe(function (editable) {
            if (editable !== undefined) {
                _this.isGridEditable = editable;
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectColumnStructure"]).subscribe(function (cols) {
            if (cols !== undefined) {
                var newTask = _this.setWorkTaskes(cols);
                _this.task = newTask;
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectCleansingHeaders"]).subscribe(function (data) {
            if (data) {
                _this.headersOriginal = data;
                _this.headersLoaded = _this.transformHeaders(data);
                _this.headersMod = _this.getListFieldCode(_this.headersLoaded);
                _this.getLoadedData();
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectCleansingData"]).subscribe(function (data) {
            if (data) {
                _this.exposureOriginal = data;
                _this.exposuresLoaded = data.exposures;
                if (data.abolute_index) {
                    _this.indexRowsLoaded = data.abolute_index;
                }
                else {
                    _this.indexRowsLoaded = data.index;
                }
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                _this.currentPage = data['current_page'];
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectCleansingErrors"]).subscribe(function (data) {
            if (data) {
                _this.datachecksLoaded = data;
                if (_this.datachecksLoaded) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        store.select(_app_dcm_modules_upload_store_cleansing_cleansing_selectors__WEBPACK_IMPORTED_MODULE_9__["selectCleansingCsMetadata"]).subscribe(function (data) {
            if (data) {
                _this.csMetadataLoaded = data;
                if (_this.csMetadataLoaded) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    };
    SharedLocationUploadGridComponent.prototype.getAllData = function (cleansingContainer) {
        var _this = this;
        cleansingContainer.headers$.subscribe(function (data) {
            if (data) {
                _this.headersOriginal = data;
                _this.headersLoaded = _this.transformHeaders(data);
                if (_this.headersLoaded) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        cleansingContainer.columnState$.subscribe(function (data) {
            if (data) {
                _this.columnState = data;
                if (_this.columnState) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        cleansingContainer.columnStructure$.subscribe(function (data) {
            if (data) {
                _this.task = _this.setWorkTaskes(data);
                if (_this.task) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        cleansingContainer.exposure$.subscribe(function (data) {
            if (data) {
                _this.exposureOriginal = data;
                _this.exposuresLoaded = data.exposures;
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                _this.currentPage = data['current_page'];
                if (data.abolute_index) {
                    _this.indexRowsLoaded = data.abolute_index;
                }
                else {
                    _this.indexRowsLoaded = data.index;
                }
                var countriesInit = _this.getInitialListOfCountry(_this.exposuresLoaded);
                _this.uniqueCountry = _this.getInitialDistinctCountry(countriesInit);
                _this.cleansingService.getCountries().subscribe(function (d) {
                    _this.countries = d['countries'];
                    var countriesObj = _this.transformElements(_this.countries);
                    _this.countriesNameLists = countriesObj.elementsNameList;
                    _this.countriesCodeLists = countriesObj.elementsCodeList;
                    _this.countriesNameCode = countriesObj.elementsNameCode;
                    _this.countriesCodeName = countriesObj.elementsCodeName;
                    _this.createCountryWithStates(_this.uniqueCountry, _this.countriesNameCode);
                    if (_this.exposuresLoaded && _this.countryWithStates) {
                        _this.getLoadedData();
                    }
                });
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        cleansingContainer.datacheck$.subscribe(function (data) {
            if (data) {
                _this.datachecksLoaded = data;
                if (_this.datachecksLoaded) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
        cleansingContainer.metadata$.subscribe(function (data) {
            if (data) {
                _this.csMetadataLoaded = data;
                if (_this.csMetadataLoaded) {
                    _this.getLoadedData();
                }
            }
        }, function () {
            _this.cdrf.detectChanges();
        });
    };
    SharedLocationUploadGridComponent.prototype.getAllRefs = function (cleansingService) {
        this.getCountries(cleansingService);
        this.getOccupancies(cleansingService);
        this.getCurrencies(cleansingService);
        this.getConstructions(cleansingService);
        this.getConstructionsCode(cleansingService);
        this.getOccupanciesSubclasses(cleansingService);
        this.getOccupanciesCodes(cleansingService);
    };
    SharedLocationUploadGridComponent.prototype.getOccupancies = function (cleansingService) {
        var _this = this;
        cleansingService.getOccupanciesClasses().subscribe(function (data) {
            _this.occupancies_classes = data.classes;
        });
    };
    SharedLocationUploadGridComponent.prototype.getOccupanciesSubclasses = function (cleansingService) {
        var _this = this;
        cleansingService.getOccupanciesSubclasses().subscribe(function (data) {
            _this.occupancies_subclasses = data.subclasses;
        });
    };
    SharedLocationUploadGridComponent.prototype.getOccupanciesCodes = function (cleansingService) {
        var _this = this;
        cleansingService.getOccupanciesCodes().subscribe(function (data) {
            _this.occupancies_codes = data.codes;
        });
    };
    SharedLocationUploadGridComponent.prototype.getConstructionsCode = function (cleansingService) {
        var _this = this;
        cleansingService.getConstructionsCode().subscribe(function (data) {
            _this.construction_codes = data.codes;
        });
    };
    SharedLocationUploadGridComponent.prototype.getCurrencies = function (cleansingService) {
        var _this = this;
        cleansingService.getCurrencies().subscribe(function (data) {
            _this.currencies = data.currencies;
        });
    };
    SharedLocationUploadGridComponent.prototype.getConstructions = function (cleansingService) {
        var _this = this;
        cleansingService.getConstructionsClasses().subscribe(function (data) {
            _this.construction_classes = data.classes;
        });
    };
    // ***** get Countries **** //
    SharedLocationUploadGridComponent.prototype.getCountries = function (cleansingService) {
        var _this = this;
        cleansingService.getCountries().subscribe(function (data) {
            _this.countries = data.countries;
            var countriesObj = _this.transformElements(_this.countries);
            _this.countriesNameLists = countriesObj.elementsNameList;
            _this.countriesCodeLists = countriesObj.elementsCodeList;
            _this.countriesNameCode = countriesObj.elementsNameCode;
            _this.countriesCodeName = countriesObj.elementsCodeName;
        });
    };
    // ***** get state **** //
    SharedLocationUploadGridComponent.prototype.getCodeOfElement = function (elementObjNameCode, nameElement) {
        return elementObjNameCode[nameElement];
    };
    SharedLocationUploadGridComponent.prototype.getCountiesByState = function (StateCode, stateNameSelected) {
        var _this = this;
        this.cleansingService.getCountiesByState(StateCode).subscribe(function (data) {
            _this.counties = data['counties'];
            var countiesObj = _this.transformElements(_this.counties);
            _this.countiesNameLists = countiesObj.elementsNameList;
            _this.countiesCodeLists = countiesObj.elementsCodeList;
            _this.countiesNameCode = countiesObj.elementsNameCode;
            _this.countiesCodeName = countiesObj.elementsCodeName;
            if (!_this.uniqueState.includes(stateNameSelected)) {
                _this.uniqueState.push(stateNameSelected);
                _this.stateWithCounties[stateNameSelected] = _this.counties;
            }
            else {
                console.log('= state with counties is already loaded =');
            }
        });
    };
    SharedLocationUploadGridComponent.prototype.getStatesByCountry = function (countryCode, countryNameSelected) {
        var _this = this;
        this.cleansingService.getStatesByCountry(countryCode).subscribe(function (data) {
            _this.states = data['states'];
            var statesObj = _this.transformElements(_this.states);
            _this.statesNameLists = statesObj.elementsNameList;
            _this.statesCodeLists = statesObj.elementsCodeList;
            _this.statesNameCode = statesObj.elementsNameCode;
            _this.statesCodeName = statesObj.elementsCodeName;
            if (_this.uniqueCountry.length > 0) {
                if (!_this.uniqueCountry.includes(countryNameSelected)) {
                    _this.uniqueCountry.push(countryNameSelected);
                    _this.createCountryWithStates(_this.uniqueCountry, _this.countriesNameCode);
                }
                else {
                    console.log('= country with state is already loaded =');
                }
            }
        });
    };
    SharedLocationUploadGridComponent.prototype.getInitialListOfCountry = function (exposuresLoaded) {
        var countriesList = [];
        if (exposuresLoaded) {
            for (var i = 0; i < exposuresLoaded.length; i++) {
                countriesList.push((exposuresLoaded[i])['country']);
            }
        }
        return countriesList;
    };
    SharedLocationUploadGridComponent.prototype.getInitialDistinctCountry = function (listOfCountry) {
        var uniqueCountry = listOfCountry.filter(onlyUnique);
        this.uniqueCountry = uniqueCountry;
        return uniqueCountry;
    };
    SharedLocationUploadGridComponent.prototype.createCountryWithStates = function (uniqueCountry, countriesNameCode) {
        var _this = this;
        if (uniqueCountry && !uniqueCountry.includes(undefined)) {
            var observablesList = [];
            for (var i = 0; i < uniqueCountry.length; i++) {
                if (countriesNameCode) {
                    var codeCountry = this.getCodeOfElement(countriesNameCode, uniqueCountry[i]);
                    observablesList.push(this.cleansingService.getStatesByCountry(codeCountry));
                }
            }
            var countryWithStatesTemp_1 = {};
            Object(rxjs__WEBPACK_IMPORTED_MODULE_5__["forkJoin"])(observablesList).subscribe(function (response) {
                for (var _i = 0, _a = Object.entries(response); _i < _a.length; _i++) {
                    var _b = _a[_i], key0 = _b[0], value0 = _b[1];
                    for (var _c = 0, _d = Object.entries(value0); _c < _d.length; _c++) {
                        var _e = _d[_c], key1 = _e[0], value1 = _e[1];
                        countryWithStatesTemp_1[uniqueCountry[key0]] = value1;
                    }
                }
                _this.countryStates = countryWithStatesTemp_1;
            });
        }
    };
    SharedLocationUploadGridComponent.prototype.getUniqueIndexRowWithError = function (datacheck) {
        var rowIndexWithError = [];
        for (var i = 0; i < datacheck.length; i++) {
            var elemnt = datacheck[i];
            for (var j = 0; j < elemnt.indexDataGrid.length; j++) {
                var element = elemnt.indexDataGrid[j];
                if (!rowIndexWithError.includes(element)) {
                    rowIndexWithError.push(element);
                }
            }
        }
        return rowIndexWithError;
    };
    SharedLocationUploadGridComponent.prototype.getLoadedData = function () {
        if (this.headersLoaded && this.exposuresLoaded) {
            this.newHeadersLoaded = this.getSelectedColumn(this.columnState, this.headersLoaded);
            this.columnDefs = this.createColumnDefs(this.newHeadersLoaded);
            // this.columnDefs = this.createColumnDefs(this.headersLoaded);
            var rowsDataC = this.createRowData(this.exposuresLoaded);
            this.rowsData = this.createRowData(this.exposuresLoaded);
            this.rowData = rowsDataC;
            if (this.columnDefs && this.rowsData && this.rowsData != null && this.columnDefs != null) {
                if (this.gridOptions.api && this.gridOptions.api != null) {
                    this.gridOptions.columnDefs = this.columnDefs;
                    this.gridOptions.api.setRowData(this.rowsData);
                }
                if (this.isFirstLoaded) {
                    this.firstRefresh(this.columnDefs, this.rowsData);
                    this.isFirstLoaded = false;
                }
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.getSelectedColumn = function (columnState, headersLoaded) {
        var newHeaders = [];
        var selectedCategorie = [];
        var selectedDisplayColumnTemp = [];
        if (columnState !== undefined && headersLoaded !== undefined) {
            for (var j = 0; j < columnState.length; j++) {
                var sLoaded = columnState[j];
                for (var i = 0; i < headersLoaded.length; i++) {
                    var hLoaded = headersLoaded[i];
                    if ((sLoaded['colId'] === hLoaded['fieldCode']) && (sLoaded['hide'] === false)) {
                        newHeaders.push(hLoaded);
                        if (!selectedCategorie.includes(hLoaded['categoryName'])) {
                            selectedCategorie.push(hLoaded['categoryName']);
                        }
                        if (!selectedDisplayColumnTemp.includes(hLoaded['fieldCode'])) {
                            selectedDisplayColumnTemp.push(hLoaded['fieldCode']);
                        }
                    }
                    else if (((sLoaded['colId'] === hLoaded['fieldCode']) && (sLoaded['hide'] === true)) && selectedCategorie.includes(hLoaded['categoryName'])) {
                        newHeaders.push(hLoaded);
                    }
                }
            }
        }
        if (this.selectedDisplayColumnExpanded.length > 0) {
            this.selectedDisplayColumn = this.selectedDisplayColumnExpanded;
        }
        else {
            this.selectedDisplayColumn = selectedDisplayColumnTemp;
        }
        return newHeaders;
    };
    /* dataFiltered(i : number) {
      let filtered = this.task[i].subtask
      filtered = this.filterPipe.transform(filtered, 'name', this.name)
      return filtered
    } */
    SharedLocationUploadGridComponent.prototype.dataFiltered = function (task) {
        var filtered = task.subtask;
        filtered = this.filterPipe.transform(filtered, 'name', this.name);
        return filtered;
    };
    SharedLocationUploadGridComponent.prototype.categoriesFilter = function (task) {
        var taskTemp = [];
        if (this.name && this.name !== '') {
            for (var j = 0; j < task.length; j++) {
                var filtered = task[j].subtask;
                filtered = this.filterPipe.transform(filtered, 'name', this.name);
                if (filtered.length > 0) {
                    // taskTemp[j] = task[j]
                    taskTemp.push(task[j]);
                }
            }
            // return task;
            return taskTemp;
        }
        else {
            return task;
        }
    };
    SharedLocationUploadGridComponent.prototype.getRowErrors = function (fieldCode, datacheckModel) {
        var rowWithErr;
        var indexWithErr;
        var datacheckMod = datacheckModel['datacheckMod'];
        var typeError = datacheckModel['typeError'];
        if (datacheckMod) {
            for (var _i = 0, _a = Object.entries(datacheckMod); _i < _a.length; _i++) {
                var _b = _a[_i], key0 = _b[0], value0 = _b[1];
                for (var _c = 0, _d = Object.entries(datacheckMod[key0]); _c < _d.length; _c++) {
                    var _e = _d[_c], key = _e[0], value = _e[1];
                    if (value === fieldCode) {
                        var rowWithErrors = datacheckMod[key0]['rowWithErrors'];
                        var indexDataGrid = datacheckMod[key0]['indexDataGrid'];
                        if (rowWithErrors && rowWithErrors.length > 0) {
                            rowWithErr = rowWithErrors;
                            indexWithErr = indexDataGrid;
                        }
                    }
                }
            }
        }
        return {
            rowWithErr: rowWithErr,
            indexWithErr: indexWithErr
        };
    };
    SharedLocationUploadGridComponent.prototype.defColoredColumn = function (headerName, fieldCode, widthColumn, columnGroupShow, datacheckOrigin, typeError, nrows) {
        var errorsModel = this.changeDataCheckModel(datacheckOrigin, typeError);
        var panned = false;
        /* if (fieldCode === 'division' || fieldCode === 'location_name') {
          panned = true;
        } */
        var columnWithNumber = this.columnWithNumber;
        var children = {
            headerName: headerName,
            field: fieldCode,
            width: widthColumn,
            expanded: true,
            enableRowGroup: true,
            enablePivot: true,
            editable: true,
            pinned: panned,
            columnGroupShow: columnGroupShow,
            floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
            floatingFilterComponentParams: {
                suppressFilterButton: true
            },
            // icons: {
            //   filter: getIcons(fieldCode)
            // },
            valueSetter: function (params) {
                params.data[fieldCode] = params.newValue;
                return true;
            },
            cellStyle: function (params) {
                // const border = '1px solid #cdcdce';
                var color = 'transparent';
                if (datacheckOrigin[typeError][fieldCode]) {
                    var indexErrL = Object.values(datacheckOrigin[typeError][fieldCode]);
                    var listError = indexErrL[0];
                    var isIndexInListOfError = isIndexInError(listError, nrows, params.node.childIndex);
                    if (isIndexInListOfError) {
                        color = 'transparent';
                        // color = 'red';
                    }
                }
                var alignValue = 'left';
                if (columnWithNumber.includes(fieldCode)) {
                    alignValue = 'right';
                }
                return {
                    'background-color': color,
                    // 'border-left': border,
                    'text-align': alignValue
                };
            },
        };
        return children;
    };
    SharedLocationUploadGridComponent.prototype.transformHeaders = function (headers) {
        var headersMod = [];
        headers.forEach(function (element) {
            var headersTemp = {
                categoryName: element.category['label'],
                fieldName: element.name,
                fieldCode: element.code,
                fieldOrder: element.inCategoryOrder,
                fieldType: element.dataType
            };
            headersMod.push(headersTemp);
        });
        return headersMod;
    };
    SharedLocationUploadGridComponent.prototype.transformElements = function (elements) {
        var elementsNameList = [];
        var elementsCodeList = [];
        var elementsNameCode = {};
        var elementsCodeName = {};
        if (elements) {
            for (var i = 0; i < elements.length; i++) {
                elementsNameList.push((elements[i])['name']);
                elementsCodeList.push((elements[i])['code']);
                elementsNameCode[(elements[i])['name']] = (elements[i])['code'];
                elementsCodeName[(elements[i])['code']] = (elements[i])['name'];
            }
        }
        return {
            elementsNameList: elementsNameList,
            elementsCodeList: elementsCodeList,
            elementsNameCode: elementsNameCode,
            elementsCodeName: elementsCodeName
        };
    };
    SharedLocationUploadGridComponent.prototype.isFirstColumn = function (params) {
        var displayedColumns = params.columnApi.getAllDisplayedColumns();
        var thisIsFirstColumn = displayedColumns[0] === params.column;
        return thisIsFirstColumn;
    };
    SharedLocationUploadGridComponent.prototype.getCurrentValueElement = function (exposuresLoaded, order, fieldCode) {
        return (exposuresLoaded[order])[fieldCode];
    };
    SharedLocationUploadGridComponent.prototype.createDropdownInCell = function (fieldCode, headerName, listes, widthColumn, columnGroupShow) {
        var panned = false;
        /* if (fieldCode === 'division' || fieldCode === 'location_name') {
          panned = true;
        } */
        var columnWithNumber = this.columnWithNumber;
        return {
            headerName: headerName,
            field: fieldCode,
            width: widthColumn,
            expanded: false,
            enableRowGroup: true,
            enablePivot: true,
            editable: true,
            panned: panned,
            columnGroupShow: columnGroupShow,
            cellRenderer: 'headerEditComponent',
            cellEditor: 'agRichSelectCellEditor',
            floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
            floatingFilterComponentParams: {
                suppressFilterButton: true
            },
            valueSetter: function (params) {
                params.data[fieldCode] = params.newValue;
                return true;
            },
            cellStyle: function (params) {
                var alignValue = 'left';
                if (columnWithNumber.includes(fieldCode)) {
                    alignValue = 'right';
                }
                return {
                    // 'border-left': '1px solid #cdcdce',
                    'text-align': alignValue
                };
            },
            cellEditorParams: {
                cellHeight: 35,
                values: listes,
            },
        };
    };
    SharedLocationUploadGridComponent.prototype.createDropdownCellWithError = function (children, list) {
        var value = {
            cellHeight: 35,
            values: list,
        };
        children['cellRenderer'] = 'headerEditComponent',
            children['cellEditor'] = 'agRichSelectCellEditor';
        children['cellEditorParams'] = value;
        return children;
    };
    SharedLocationUploadGridComponent.prototype.getDropdownCellContent = function (fieldCode) {
        if (_app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_34__["COLOMN_LISTS"].includes(fieldCode)) {
            return _app_shared_popups_general_location_info_popup_models_location_ref_data_const__WEBPACK_IMPORTED_MODULE_34__["LOCATION_REFERENCE_DATA"].get(fieldCode);
        }
        return null;
    };
    SharedLocationUploadGridComponent.prototype.createColumnDefsChildrenStructure = function (headerName, fieldCode, order) {
        var children;
        var widthColumn;
        var nrows = this.fileData.nrows;
        if (fieldCode === 'division' || fieldCode === 'location_name') {
            widthColumn = 120;
        }
        else {
            widthColumn = 147;
        }
        var columnGroupShow;
        if (this.selectedDisplayColumn.includes(fieldCode)) {
            columnGroupShow = 'close';
        }
        else {
            columnGroupShow = 'open';
        }
        if (fieldCode === 'occupancy_class' && this.occupancies_classes) {
            var listes = this.occupancies_classes;
            var columnWithNumber_1 = this.columnWithNumber;
            children = {
                headerName: headerName,
                field: fieldCode,
                width: widthColumn,
                expanded: false,
                enableRowGroup: true,
                enablePivot: true,
                editable: true,
                floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
                floatingFilterComponentParams: {
                    suppressFilterButton: true
                },
                valueSetter: function (params) {
                    params.data[fieldCode] = params.newValue;
                    return true;
                },
                cellStyle: function (params) {
                    var alignValue = 'left';
                    if (columnWithNumber_1.includes(fieldCode)) {
                        alignValue = 'right';
                    }
                    return {
                        // 'border-left': '1px solid #cdcdce',
                        'text-align': alignValue
                    };
                },
                cellRenderer: 'headerEditComponent',
                columnGroupShow: columnGroupShow,
                cellEditor: 'agRichSelectCellEditor',
                cellEditorParams: {
                    cellHeight: 35,
                    values: listes,
                },
            };
        }
        else if (this.getDropdownCellContent(fieldCode) !== null) {
            children = this.createDropdownInCell(fieldCode, headerName, this.getDropdownCellContent(fieldCode), widthColumn, columnGroupShow);
        }
        else if (fieldCode === 'country' && this.countriesNameLists) {
            var panned = false;
            /* if (fieldCode === 'division' || fieldCode === 'location_name') {
              panned = true;
            } */
            var listes = sortBy(this.countriesNameLists);
            var columnWithNumber_2 = this.columnWithNumber;
            return {
                headerName: headerName,
                field: fieldCode,
                width: widthColumn,
                expanded: false,
                enableRowGroup: true,
                enablePivot: true,
                editable: true,
                panned: panned,
                columnGroupShow: columnGroupShow,
                cellRenderer: countryCellRendererDrowpdown,
                // cellRenderer: 'headerEditComponent',
                cellEditor: 'agRichSelectCellEditor',
                floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
                floatingFilterComponentParams: {
                    suppressFilterButton: true
                },
                valueSetter: function (params) {
                    params.data[fieldCode] = params.newValue;
                    return true;
                },
                cellStyle: function (params) {
                    var alignValue = 'left';
                    if (columnWithNumber_2.includes(fieldCode)) {
                        alignValue = 'right';
                    }
                    return {
                        // 'border-left': '1px solid #cdcdce',
                        'text-align': alignValue
                    };
                },
                cellEditorParams: {
                    cellHeight: 35,
                    values: listes,
                    cellRenderer: countryCellRenderer,
                },
            };
        }
        else if (fieldCode === 'state' && this.countryStates) {
            var countryStates_1 = this.countryStates;
            var columnWithNumber_3 = this.columnWithNumber;
            children = {
                headerName: headerName,
                field: fieldCode,
                width: widthColumn,
                expanded: false,
                enableRowGroup: true,
                enablePivot: true,
                editable: true,
                columnGroupShow: columnGroupShow,
                cellRenderer: 'headerEditComponent',
                cellEditor: 'agRichSelectCellEditor',
                floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
                floatingFilterComponentParams: {
                    suppressFilterButton: true
                },
                valueSetter: function (params) {
                    params.data[fieldCode] = params.newValue;
                    return true;
                },
                cellStyle: function (params) {
                    var alignValue = 'left';
                    if (columnWithNumber_3.includes(fieldCode)) {
                        alignValue = 'right';
                    }
                    return {
                        // 'border-left': '1px solid #cdcdce',
                        'text-align': alignValue
                    };
                },
                cellEditorParams: function (params) {
                    var selectedCountry = params.data.country;
                    var allowedStates = [];
                    if (isDefined(selectedCountry)) {
                        var allowedStatesObj = mapElementToSpecifiqueObj(countryStates_1, selectedCountry);
                        allowedStates = sortBy(allowedStatesObj.elementsNameList);
                    }
                    return {
                        values: allowedStates,
                        formatValue: function (value) {
                            return value;
                            // return value + ' (' + selectedCountry + ')';
                        },
                    };
                },
            };
        }
        else if (fieldCode === 'county' && this.stateWithCounties) {
            var stateWithCounties_1 = this.stateWithCounties;
            var columnWithNumber_4 = this.columnWithNumber;
            children = {
                headerName: headerName,
                field: fieldCode,
                width: widthColumn,
                expanded: false,
                enableRowGroup: true,
                enablePivot: true,
                editable: true,
                columnGroupShow: columnGroupShow,
                cellRenderer: 'headerEditComponent',
                cellEditor: 'agRichSelectCellEditor',
                floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
                floatingFilterComponentParams: {
                    suppressFilterButton: true
                },
                valueSetter: function (params) {
                    params.data[fieldCode] = params.newValue;
                    return true;
                },
                cellStyle: function (params) {
                    var alignValue = 'left';
                    if (columnWithNumber_4.includes(fieldCode)) {
                        alignValue = 'right';
                    }
                    return {
                        // 'border-left': '1px solid #cdcdce',
                        'text-align': alignValue
                    };
                },
                cellEditorParams: function (params) {
                    var selectedState = params.data.state;
                    var allowedCounties = [];
                    if (isDefined(selectedState)) {
                        var allowedCountiesObj = mapElementToSpecifiqueObj(stateWithCounties_1, selectedState);
                        allowedCounties = sortBy(allowedCountiesObj.elementsNameList);
                    }
                    return {
                        values: allowedCounties,
                        formatValue: function (value) {
                            return value;
                            // return value + ' (' + selectedCountry + ')';
                        },
                    };
                },
            };
        }
        else {
            var panned = false;
            var borderPannedTop_1 = 'transparent';
            /* if (fieldCode === 'division' || fieldCode === 'location_name') {
              panned = true;
              borderPannedTop = '1px solid #cdcdce';
            }      */
            var columnWithNumber_5 = this.columnWithNumber;
            children = {
                headerName: headerName,
                field: fieldCode,
                width: widthColumn,
                expanded: false,
                enableRowGroup: true,
                enablePivot: true,
                editable: true,
                pinned: panned,
                valueFormatter: numberFormatter,
                columnGroupShow: columnGroupShow,
                floatingFilterComponent: getFilter(this.listFilteredColumn, fieldCode),
                floatingFilterComponentParams: {
                    suppressFilterButton: true
                },
                valueSetter: function (params) {
                    params.data[fieldCode] = params.newValue;
                    return true;
                },
                cellStyle: function (params) {
                    var alignValue = 'left';
                    if (columnWithNumber_5.includes(fieldCode)) {
                        alignValue = 'right';
                    }
                    return {
                        'text-align': alignValue,
                        'border-top': borderPannedTop_1
                    };
                }
            };
        }
        return children;
    };
    SharedLocationUploadGridComponent.prototype.createColumnDefsParentStructure = function (categoryName, children) {
        var parent = {
            headerName: categoryName,
            scrollable: true,
            collapsable: true,
            headerGroupComponent: 'headerGroupComponent',
            children: children
        };
        return parent;
    };
    SharedLocationUploadGridComponent.prototype.listCategories = function (headerModel) {
        var flags = [], output = [], l = headerModel.length;
        for (var i = 0; i < l; i++) {
            if (flags[headerModel[i].categoryName])
                continue;
            flags[headerModel[i].categoryName] = true;
            output.push(headerModel[i].categoryName);
        }
        return output;
    };
    SharedLocationUploadGridComponent.prototype.onShowAutoSideBar = function () {
        if (this.sideBar === false) {
            this.gridApi.openToolPanel('columns');
            this.sideBar = 'columns';
            return true;
        }
        else {
            this.sideBar = false;
            return false;
        }
    };
    SharedLocationUploadGridComponent.prototype.onShowSideBar = function () {
        // console.log(event);
        var isVisible = this.onShowAutoSideBar();
        if (this.gridApi.isSideBarVisible() || isVisible) {
            if (isVisible) {
                document.getElementById('mySidenav').style.width = '7px';
                document.getElementById('sideBar').style.width = '35px';
                // document.getElementById('setting').style.width = '35px';
                // document.getElementById('helps').style.width = '35px';
            }
            else {
                document.getElementById('sideBar').style.width = '47px';
                // document.getElementById('setting').style.width = '47px';
                // document.getElementById('helps').style.width = '47px';
            }
            this.refreshGrid();
            this.openToolPanel('columns');
            this.refreshGrid();
        }
    };
    SharedLocationUploadGridComponent.prototype.groupeFielByCategoryName = function (headerModels) {
        var grouped = lodash__WEBPACK_IMPORTED_MODULE_3__["mapValues"](lodash__WEBPACK_IMPORTED_MODULE_3__["groupBy"](headerModels, 'categoryName'), function (clist) { return clist.map(function (headerModel) { return lodash__WEBPACK_IMPORTED_MODULE_3__["omit"](headerModel, 'categoryName'); }); });
        return grouped;
    };
    SharedLocationUploadGridComponent.prototype.createColumnDefs = function (headerModel) {
        var columnDefsTemp;
        var linesWithErrors = this.uniqueIndexRowWithError;
        var headerCategoryList = this.listCategories(headerModel);
        var headergroupedByCategory = this.groupeFielByCategoryName(headerModel);
        var parents = [];
        for (var i = 0; i < headerCategoryList.length; i++) {
            var categoryName = headerCategoryList[i];
            var children = [];
            var childrens = [];
            for (var j = 0; j < headergroupedByCategory[headerCategoryList[i]].length; j++) {
                children.push(headergroupedByCategory[headerCategoryList[i]][j]);
                childrens.push(this.createColumnDefsChildrenStructure(children[j]['fieldName'], children[j]['fieldCode'], j));
            }
            parents.push(this.createColumnDefsParentStructure(categoryName, childrens));
        }
        var iconsAction = [
            {
                headerName: '',
                field: 'mycheckbox',
                width: 35,
                headerCheckboxSelection: true,
                checkboxSelection: true,
                resizable: false,
                sortable: false,
                filter: false,
                editable: false,
                menuTabs: false,
                scrollable: false,
                paginator: false,
                suppressMenu: true,
                suppressColumnsToolPanel: true,
                cellStyle: {
                    'border-left': '0px',
                },
                // fixed left side
                pinned: true
            },
            // unify column
            {
                headerName: '',
                field: 'indiqueError',
                valueGetter: 'node.id',
                width: 40,
                resizable: false,
                sortable: false,
                filter: false,
                menuTabs: false,
                editable: false,
                scrollable: false,
                paginator: false,
                pinned: true,
                suppressMenu: true,
                suppressColumnsToolPanel: true,
                cellStyle: function (params) {
                    var color = 'black';
                    var background = 'transparent';
                    if (isErrorInRow(linesWithErrors, Number(params.node.id))) {
                        color = 'black';
                        background = 'transparent';
                    }
                    return {
                        'border-right': '1px solid #cdcdce',
                        'border-left': '1px solid #cdcdce',
                        'background-color': background,
                        'color': color,
                        'text-align': 'left'
                    };
                }
            },
            {
                headerName: '',
                field: 'cstLoc',
                width: 84,
                resizable: false,
                sortable: false,
                filter: false,
                headerComponent: 'dropdownErrorFilterComponent',
                cellRenderer: 'customizedSharedLocationGridComponent',
                menuTabs: false,
                editable: false,
                scrollable: false,
                paginator: false,
                // fixed left side
                pinned: true,
                suppressMenu: true,
                suppressColumnsToolPanel: true,
                cellStyle: {
                    'text-align': 'right'
                },
            }
        ];
        columnDefsTemp = iconsAction;
        columnDefsTemp.push.apply(iconsAction, parents);
        return columnDefsTemp;
    };
    SharedLocationUploadGridComponent.prototype.createRowData = function (exposures) {
        var clonedExposures = exposures.map(function (x) { return Object.assign({}, x); });
        return clonedExposures;
        // return exposures;
    };
    SharedLocationUploadGridComponent.prototype.getColsIdWithError = function (datacheckMod) {
        var colsIdWithErrors = [];
        if (datacheckMod['errors']) {
            for (var _i = 0, _a = Object.entries(datacheckMod['errors']); _i < _a.length; _i++) {
                var _b = _a[_i], colsCode = _b[0], value = _b[1];
                colsIdWithErrors.push(colsCode);
            }
        }
        return colsIdWithErrors;
    };
    SharedLocationUploadGridComponent.prototype.changeDataCheckModel = function (datacheck, type) {
        var datacheckMod = datacheck[type];
        var datacheckErrorModel = [];
        if (datacheckMod) {
            for (var _i = 0, _a = Object.entries(datacheckMod); _i < _a.length; _i++) {
                var _b = _a[_i], colsCode = _b[0], typeErrWithlistIndexErr = _b[1];
                for (var _c = 0, _d = Object.entries(typeErrWithlistIndexErr); _c < _d.length; _c++) {
                    var _e = _d[_c], typeError = _e[0], listIndexErr = _e[1];
                    var listIndexErrDataGrid = this.getEquivalentIndexInDataGrid(this.indexRowsLoaded, listIndexErr);
                    datacheckErrorModel.push({
                        fieldCode: colsCode,
                        typeError: typeError,
                        indexRowDb: listIndexErr,
                        indexDataGrid: listIndexErrDataGrid,
                    });
                }
            }
        }
        return datacheckErrorModel;
    };
    SharedLocationUploadGridComponent.prototype.createDataCheckStructure = function (datacheck, type, exposuresOrigin) {
        var datacheckErrorModel = [];
        var datacheckMod;
        var exposureTransformed = this.createExposureStructure(exposuresOrigin);
        if (exposureTransformed) {
            datacheckMod = datacheck[type];
            if (datacheckMod) {
                var _loop_1 = function (colsCode, value) {
                    var typeError = void 0;
                    var columnCode;
                    if (type === 'errors') {
                        typeError = Object.keys(datacheckMod[colsCode])[0];
                        var temp = datacheckMod[colsCode];
                        columnCode = temp[typeError];
                    }
                    else if (type === 'warnings') {
                        typeError = 'warnings';
                        columnCode = datacheckMod[colsCode];
                    }
                    else {
                        return { value: null };
                    }
                    var datacheckErrorModelTemp = {};
                    var rowWithErrors = [];
                    var indexErrorDataGrid = [];
                    if (columnCode) {
                        datacheckErrorModelTemp = {};
                        var _loop_2 = function (index, value2) {
                            columnCode.forEach(function (indexColWithError) {
                                if (Number(index) === columnCode[indexColWithError]) {
                                    indexErrorDataGrid.push(Number(index));
                                    rowWithErrors.push(exposureTransformed[0][index]);
                                }
                            });
                        };
                        for (var _i = 0, _a = Object.entries(exposureTransformed[0]); _i < _a.length; _i++) {
                            var _b = _a[_i], index = _b[0], value2 = _b[1];
                            _loop_2(index, value2);
                        }
                        datacheckErrorModelTemp = {
                            fieldCode: colsCode,
                            typeError: typeError,
                            rowWithErrors: rowWithErrors,
                            indexDataGrid: indexErrorDataGrid,
                        };
                        datacheckErrorModel.push(datacheckErrorModelTemp);
                    }
                };
                for (var _i = 0, _a = Object.entries(datacheckMod); _i < _a.length; _i++) {
                    var _b = _a[_i], colsCode = _b[0], value = _b[1];
                    var state_1 = _loop_1(colsCode, value);
                    if (typeof state_1 === "object")
                        return state_1.value;
                }
            }
        }
        return datacheckErrorModel;
    };
    SharedLocationUploadGridComponent.prototype.createExposureStructure = function (exposuresOrigin) {
        var data = exposuresOrigin.exposures;
        var indexRows = exposuresOrigin.index;
        var exposureTransformed = [];
        if (data && indexRows) {
            exposureTransformed.push(this.creatKeyValue(indexRows, data));
        }
        return exposureTransformed;
    };
    SharedLocationUploadGridComponent.prototype.creatKeyValue = function (keys, values) {
        var result = {};
        keys.forEach(function (key, i) { return result[key] = values[i]; });
        return result;
    };
    SharedLocationUploadGridComponent.prototype.refreshGrid = function () {
        var params = { force: false };
        this.gridApi.refreshCells(params);
    };
    SharedLocationUploadGridComponent.prototype.firstRefresh = function (headers, exposures) {
        this.columnDefs = headers;
        this.rowsData = exposures;
        var params = { force: true };
        if (this.gridApi && this.columnDefs && this.rowsData) {
            if (this.gridOptions.api) {
                this.gridOptions.api.setColumnDefs(this.columnDefs);
                this.gridOptions.api.setRowData(this.rowsData);
            }
            this.gridApi.refreshCells(params);
        }
    };
    SharedLocationUploadGridComponent.prototype.getListFieldCode = function (headers) {
        var fieldCodeList = [];
        for (var i = 0; i < headers.length; i++) {
            var element = headers[i];
            fieldCodeList.push(element['fieldCode']);
        }
        return fieldCodeList;
    };
    SharedLocationUploadGridComponent.prototype.scramble = function () {
        var rows = this.rowsData;
        var indexRowModify = this.indexRowModify;
        var headersMod = this.headersMod;
        var fieldCodeId = this.fieldCodeId;
        var contents = this.contents;
        if (rows && indexRowModify.length > 0) {
            for (var i = 0; i < rows.length; i++) {
                var item = rows[i];
                if (indexRowModify.includes(i)) {
                    this.scrambleItem(item, headersMod, fieldCodeId, contents);
                }
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.scrambleItem = function (item, headersMod, fieldCodeId, contents) {
        if (headersMod && fieldCodeId.length > 0 && contents !== {}) {
            headersMod.forEach(function (colId) {
                if (fieldCodeId.includes(colId)) {
                    item[colId] = contents[colId];
                }
                else {
                    return;
                }
            });
        }
    };
    SharedLocationUploadGridComponent.prototype.purgeCache = function () {
        this.gridApi.purgeServerSideCache([]);
    };
    SharedLocationUploadGridComponent.prototype.refreshAfterUpdate = function () {
        // const params = { force: false };
        if (this.gridApi && this.columnDefs && this.rowsData) {
            if (this.gridOptions.api && this.gridColumnApi) {
                this.saveState();
            }
            this.gridOptions.api.setColumnDefs(this.columnDefs);
            this.gridOptions.api.setRowData(this.rowsData);
            // this.gridApi.refreshCells(params);
            if (this.gridOptions.api && this.gridColumnApi) {
                this.restoreState();
                this.adjustSizeDataGrid();
            }
        }
        this.contents = {};
        this.fieldCodeId = [];
        this.headerName = [];
        this.colDef = [];
        this.indexRowToSave = [];
        this.indexRowModify = [];
        this.firstChangeMultipleRow = true;
    };
    SharedLocationUploadGridComponent.prototype.saveState = function () {
        this.colState = this.gridColumnApi.getColumnState();
        if (this.colState && this.numberIdChange === 1) {
            for (var i = 0; i < this.colState.length; i++) {
                this.colState[i]['colId'] = this.getExactColId(this.colState[i]['colId']);
            }
        }
        this.groupState = this.gridColumnApi.getColumnGroupState();
        this.sortState = this.gridApi.getSortModel();
        this.filterState = this.gridApi.getFilterModel();
        console.log('column state saved');
    };
    SharedLocationUploadGridComponent.prototype.getStateOfAllColumns = function (colState) {
        var columnState = [];
        var firstIndexCol = 3;
        for (var i = firstIndexCol; i < colState.length; i++) {
            var elmtName = this.getExactColId(colState[i]['colId']);
            var elmtState = colState[i]['hide'];
            columnState.push({
                colId: elmtName,
                hide: elmtState
            });
        }
        return columnState;
    };
    SharedLocationUploadGridComponent.prototype.restoreState = function () {
        if (!this.colState) {
            console.log('no columns state to restore by, you must save state first');
            return;
        }
        this.numberIdChange = 2;
        this.gridColumnApi.setColumnGroupState(this.groupState);
        this.gridApi.setSortModel(this.sortState);
        // setFilter
        this.gridApi.setFilterModel(this.filterState);
        this.gridApi.setFilterModel(this.filterModel);
        console.log('column state restored');
    };
    SharedLocationUploadGridComponent.prototype.refreshAll = function (headers, exposures) {
        this.contents = {};
        this.fieldCodeId = [];
        this.headerName = [];
        this.colDef = [];
        this.columnDefs = headers;
        this.rowsData = exposures;
        var params = { force: false };
        if (this.gridApi && this.columnDefs && this.rowsData) {
            if (this.gridOptions.api) {
                this.gridOptions.api.setColumnDefs(this.columnDefs);
                this.gridOptions.api.setRowData(this.rowsData);
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.scrambleAndRefreshAll = function () {
        var params = { force: false };
        this.gridApi.refreshCells(params);
    };
    SharedLocationUploadGridComponent.prototype.onGridReady = function (params) {
        this.gridApi = params.api;
        // console.log(this.gridApi);
        this.gridColumnApi = params.columnApi;
        this.gridApi.openToolPanel('columns');
        this.lastPageLoaded = this.gridApi.paginationGetTotalPages();
        this.adjustSizeDataGrid();
        // this.setStateToGrid()
    };
    SharedLocationUploadGridComponent.prototype.focusOut = function () {
        console.log('focusOut =>>>>>');
        /* if (this.gridApi) {
          this.gridApi.deselectAll()
        } */
        if (this.gridOptions && !this.isFirstFocus) {
            this.gridOptions.api.clearFocusedCell();
            this.isFirstFocus = true;
        }
        else {
            this.isFirstFocus = false;
        }
    };
    SharedLocationUploadGridComponent.prototype.resetCalculTiv = function () {
        var tiv = this.calculTiv;
        this.tivInput = '';
        for (var i = 0; i < tiv.length; i++) {
            this.calculTiv[i].value = [];
            this.calculTiv[i].index = [];
            this.calculTiv[i].checked = false;
            this.colorPdBi = false;
        }
    };
    SharedLocationUploadGridComponent.prototype.setCheck = function (check, id) {
        for (var i = 0; i < this.calculTiv.length; i++) {
            if (this.calculTiv[i].id === id) {
                this.calculTiv[i].checked = check;
                this.colorPdBi = false;
            }
            if (!this.calculTiv[i].checked) {
                this.calculTiv[i].value = [];
                this.calculTiv[i].index = [];
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.setCheckedRows = function () {
        var indexDb = this.exposureOriginal.index;
        var allValue = this.gridApi.getSelectedRows();
        for (var i = 0; i < this.calculTiv.length; i++) {
            var indexTemp = [];
            var valueTemp = [];
            for (var j = 0; j < allValue.length; j++) {
                var element = allValue[j];
                var indexList = this.gridApi.getSelectedNodes()[j].childIndex;
                indexTemp.push(indexList);
                valueTemp.push(element);
                // this.calculTiv[i].index.push(index);
            }
            if (allValue.length > 0) {
                this.calculTiv[i].index = this.getListOfEquivalentIndexInDb(indexDb, indexTemp);
                this.calculTiv[i].value = valueTemp;
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.isChecked = function (elmt) {
        for (var i = 0; i < elmt.length; i++) {
            if (elmt[i].checked === true) {
                return true;
            }
        }
        return false;
    };
    SharedLocationUploadGridComponent.prototype.isCheckedRows = function (elmt) {
        for (var i = 0; i < elmt.length; i++) {
            if (elmt[i].value.length > 0 && elmt[i].index.length > 0) {
                return true;
            }
        }
        return false;
    };
    SharedLocationUploadGridComponent.prototype.isTivImput = function () {
        this.tivInput = document.getElementById('tivInput').value;
        if (this.tivInput !== null && this.tivInput !== '') {
            return true;
        }
        return false;
    };
    SharedLocationUploadGridComponent.prototype.getTivImput = function () {
        return document.getElementById('tivInput').value;
    };
    SharedLocationUploadGridComponent.prototype.invokeTivMethod = function ($event) {
        // if one of BD and BI checked  and tiv not empty
        // show popup (Do you confirm to change, model in last version), if ok: send a request, else initialize all value
        // else change color PD and BI to red
        this.tivInput = this.getTivImput();
        this.setCheckedRows();
        if (this.isChecked(this.calculTiv) && this.isCheckedRows(this.calculTiv) && this.isTivImput()) {
            console.log('######## popup, change color BD and BI to grey #######');
            this.colorPdBi = false;
            this.isVisiblePdBi = true;
        }
        else if (this.isChecked(this.calculTiv) && (!this.isCheckedRows(this.calculTiv) || !this.isTivImput())) {
            // this.resetCalculTiv(this.calculTiv)
            this.colorPdBi = false;
            console.log('------ No rows checked or Tiv empty ------');
        }
        else if (!this.isChecked(this.calculTiv) && this.isCheckedRows(this.calculTiv)) {
            // this.resetCalculTiv(this.calculTiv)
            this.colorPdBi = true;
            console.log('------ row checked but PD and BI No => change color PD and BI to red ------');
        }
        else {
            console.log('------ No row checked, PD and BI No checked => change color PD and BI to red ------');
            this.resetCalculTiv();
            this.colorPdBi = true;
        }
    };
    SharedLocationUploadGridComponent.prototype.invokeLinkMethod = function ($event) {
        console.log('invoke link method');
    };
    SharedLocationUploadGridComponent.prototype.invokeEditMethod = function ($event) {
        var _this = this;
        var line = {};
        var multiple = {};
        var page = this.currentPage - 1;
        var selectedRowsData = this.gridApi.getSelectedRows();
        var selectedRowsIndex = this.gridApi.getSelectedNodes().map(function (s) { return s.childIndex; });
        var original_indices = selectedRowsIndex.map(function (s) { return (_this.indexRowsLoaded[s]); });
        var original_rowId = selectedRowsIndex[0] + (page * 50);
        if (selectedRowsData.length > 0) {
            Object.keys(selectedRowsData[0]).forEach(function (col, i) {
                if (!selectedRowsData.map(function (e) { return e[col]; }).every(function (i) { return i === selectedRowsData[0][col]; })) {
                    line[col] = null;
                    multiple[col] = true;
                }
                else {
                    line[col] = selectedRowsData[0][col];
                    multiple[col] = false;
                }
            });
            if (selectedRowsIndex.length > 1) {
                var obj = {
                    line: line,
                    backup: selectedRowsData[0],
                    rowId: selectedRowsIndex[0],
                    indices: selectedRowsIndex,
                    multiple: multiple,
                    isMultipleEdit: true,
                    current_page: this.currentPage,
                    original_rowId: original_rowId,
                    original_indices: original_indices
                };
                this.editLocationButtonClick.emit(obj);
            }
            else {
                var obj = {
                    line: line,
                    backup: selectedRowsData[0],
                    rowId: selectedRowsIndex[0],
                    indices: selectedRowsIndex,
                    multiple: multiple,
                    isMultipleEdit: false,
                    current_page: this.currentPage,
                    original_rowId: original_rowId,
                    original_indices: [original_rowId]
                };
                this.editLocationButtonClick.emit(obj);
            }
        }
        // console.log(this.gridApi.getSelectedNodes());
        //   const rowIndex = this.gridApi.getSelectedNodes()[0].childIndex;
        //   this.store.dispatch(new LoadLoadPopUps({location: this.gridApi.getSelectedRows()[0]}));
        //    this.service.setNextEdit(new GridLineInfo(rowIndex, rowIndex))
        // console.log(this.gridApi.getSelectedRows());
    };
    SharedLocationUploadGridComponent.prototype.invokeDeleteMethod = function () {
        var _this = this;
        // this.gridApi.updateRowData({remove: this.gridApi.getSelectedRows()})
        if (this.gridApi.getSelectedRows().length > 0) {
            var dataList_1 = [];
            var indexList_1 = [];
            var allValue = this.gridApi.getSelectedRows();
            var indexTemp = [];
            var exposures = this.exposureOriginal;
            var selfLink_1 = this.exposureOriginal._links.self;
            for (var j = 0; j < allValue.length; j++) {
                var element = allValue[j];
                var indexList_2 = this.gridApi.getSelectedNodes()[j].childIndex;
                indexTemp.push(indexList_2);
                // this.calculTiv[i].index.push(index);
            }
            if (exposures) {
                var indexDb = exposures.index;
                var listIndex = this.getListOfEquivalentIndexInDb(indexDb, indexTemp);
                var body = {
                    is_all: false,
                    indices: listIndex
                };
                if (this.importData$) {
                    if (this.csMetadataLoaded) {
                        var jobId_1 = this.csMetadataLoaded.jobId;
                        if (jobId_1) {
                            var fileData = this.fileData;
                            var selectedSheet = this.selectedSheet;
                            this.cleansingService.deleteRow(fileData, selectedSheet, jobId_1, body).subscribe(function (isDeleted) {
                                console.log('delete ok, update metadata and check => ');
                                if (_this.gridApi) {
                                    var selectedRows = _this.getSelectedRowsInfos(_this.gridApi);
                                    dataList_1 = selectedRows.selectedRowsData;
                                    indexList_1 = selectedRows.selectedRowsIndex;
                                    _this.deleteRows(_this.gridApi, dataList_1);
                                }
                                _this.updateCsMetadata(jobId_1);
                                // this.updateCheck(fileData, selectedSheet);
                                _this.updateExposures(selfLink_1);
                            }, function (err) {
                                _this.notif.error('Delete rows failed');
                                // console.log('=Delete rows failed=')
                            });
                        }
                    }
                }
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.showModalRestor = function () {
        this.isVisibleRestor = true;
        if (this.columnDefs && this.rowsData) {
            if (this.gridOptions.api) {
                this.gridOptions.api.setColumnDefs(this.columnDefs);
                this.gridOptions.api.setRowData(this.rowsData);
            }
            this.refreshAll(this.columnDefs, this.rowsData);
        }
        this.cdrf.detectChanges();
    };
    SharedLocationUploadGridComponent.prototype.refreshAllGrid = function () {
        if (this.columnDefs && this.rowsData) {
            if (this.gridOptions.api) {
                this.gridOptions.api.setColumnDefs(this.columnDefs);
                this.gridOptions.api.setRowData(this.rowsData);
            }
            // this.refreshAll(this.columnDefs, this.rowsData);
        }
        // this.cdrf.detectChanges();
    };
    SharedLocationUploadGridComponent.prototype.getSelectedRowsInfos = function (gridApi) {
        var selectedRowsIndex = [];
        var selectedRowsData = gridApi.getSelectedRows();
        var selectedRowsNode = gridApi.getSelectedNodes();
        for (var i = 0; i < selectedRowsNode.length; i++) {
            var element = selectedRowsNode[i].childIndex;
            selectedRowsIndex.push(element);
        }
        return {
            selectedRowsData: selectedRowsData,
            selectedRowsIndex: selectedRowsIndex
        };
    };
    SharedLocationUploadGridComponent.prototype.deleteRows = function (gridApi, dataList) {
        gridApi.updateRowData({ remove: dataList });
    };
    SharedLocationUploadGridComponent.prototype.getListOfEquivalentIndexInDb = function (rowIndexDb, rowIndexDataGrid) {
        var indexDb = [];
        for (var i = 0; i < rowIndexDataGrid.length; i++) {
            var index = rowIndexDb[rowIndexDataGrid[i]];
            indexDb.push(index);
        }
        return indexDb;
    };
    SharedLocationUploadGridComponent.prototype.handleCancelRestor = function () {
        this.isVisibleRestor = false;
    };
    SharedLocationUploadGridComponent.prototype.handleOkRestor = function () {
        this.previousState = JSON.parse(JSON.stringify(this.rowsData));
        this.fakeRowData = _app_dcm_modules_upload_models_cleansing_models_explosures_model__WEBPACK_IMPORTED_MODULE_21__["explosuresModel"];
        this.isOkLoadingRestor = true;
        window.setTimeout(function () { }, 4000);
        this.isVisibleRestor = false;
        this.isOkLoadingRestor = false;
        this.cdrf.detectChanges();
    };
    // tst
    SharedLocationUploadGridComponent.prototype.onPageSizeChanged = function (newPageSize) {
        var value = document.getElementById('pageSize').value;
        this.gridApi.paginationSetPageSize(Number(value));
    };
    // tst
    SharedLocationUploadGridComponent.prototype.getIndexRow = function (event) {
        if (event)
            return event.rowIndex;
        else
            return null;
    };
    SharedLocationUploadGridComponent.prototype.openToolPanel = function (key) {
        this.gridApi.openToolPanel(key);
    };
    SharedLocationUploadGridComponent.prototype.onBtStartEditing = function (rowIndex, colKey) {
        this.gridApi.startEditingCell({
            rowIndex: rowIndex,
            colKey: colKey,
        });
    };
    SharedLocationUploadGridComponent.prototype.getEquivalentIndexInDb = function (rowIndexDataGrid, rowIndexDb) {
        return rowIndexDb[rowIndexDataGrid];
    };
    SharedLocationUploadGridComponent.prototype.getEquivalentIndexInDataGrid = function (listRowIndexDb, listRowIndexDbSpecific) {
        var indexInDataGrid = [];
        for (var _i = 0, _a = Object.entries(listRowIndexDbSpecific); _i < _a.length; _i++) {
            var _b = _a[_i], indexDg = _b[0], indexDbSp = _b[1];
            if (listRowIndexDb.includes(indexDbSp)) {
                var index = listRowIndexDb.indexOf(Number(indexDbSp));
                indexInDataGrid.push(index);
            }
        }
        return indexInDataGrid;
    };
    SharedLocationUploadGridComponent.prototype.onEnter = function () {
        console.log(' ++ enter ++ ');
        this.isEnterForSave = true;
    };
    SharedLocationUploadGridComponent.prototype.getExactColId = function (colId) {
        if (colId !== undefined) {
            var colId1 = colId.split('_1').slice(0, -1).join('_1');
            if (colId1) {
                colId = colId1;
            }
        }
        return colId;
    };
    SharedLocationUploadGridComponent.prototype.getInverseColId = function (colId) {
        if (colId !== undefined) {
            var colId1 = colId.split('_1').slice(0, -1).join('_1');
            if (colId1) {
                return colId1;
            }
        }
        return colId + '_1';
    };
    SharedLocationUploadGridComponent.prototype.onCellValueChanged = function (event) {
        // when edit on cell
        var newValue = event.newValue;
        var oldValue = event.oldValue;
        var rowIndex = event.rowIndex;
        var colId = event.column.colId;
        var colDef = event.column.colDef;
        var headerName = colDef.headerName;
        var indexRowDb = this.getEquivalentIndexInDb(rowIndex, this.indexRowsLoaded);
        if (!this.oldRowIndex || this.oldRowIndex === 0) {
            // console.log('** new row db grid**')
            this.oldRowIndex = rowIndex;
            this.indicesRow.push(indexRowDb);
        }
        if (oldValue === newValue) {
            console.log('-- No change --');
            this.isChangeDetected = false;
        }
        else if (newValue === '') {
            console.log('-- empty value not allowed --');
            this.isChangeDetected = false;
        }
        else {
            console.log('-- change detected --');
            colId = this.getExactColId(colId);
            this.newValueTemp = newValue;
            this.contents[colId] = newValue;
            this.fieldCodeId.push(colId);
            this.headerName.push(headerName);
            this.colDef.push(colDef);
            this.indexRowTemp = indexRowDb;
            this.indexRowModifyTemp = rowIndex;
            this.isChangeDetected = true;
            if (this.firstChangeMultipleRow) {
                this.newValueMultipleRow = newValue;
                this.firstChangeMultipleRow = false;
            }
            if (this.newValueMultipleRow === newValue) {
                if (this.indexToSaveMultipleRow.length > 0 && this.indexToSaveMultipleRow.includes(rowIndex)) {
                    this.colIdToSaveMultipleCol[colId] = newValue;
                    this.isMultipleColToModify = true;
                }
                this.colIdToSaveMultipleCol[colId] = newValue;
                this.indexToSaveMultipleRow.push(rowIndex);
                this.colIdToSaveMultipleRow = colId;
            }
            if (this.isNewRowFocused) {
                this.indicesRow = [];
                this.isNewRowFocused = false;
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.onRowSelected = function ($event) {
        this.rowsSelected = 0;
        this.isRowsSelected = false;
        var allValue = this.gridApi.getSelectedRows();
        this.rowsSelected = allValue.length;
        if (this.rowsSelected > 0) {
            this.isRowsSelected = true;
        }
        else {
            this.rowsSelected = 0;
            this.isRowsSelected = false;
        }
    };
    SharedLocationUploadGridComponent.prototype.onCellFocused = function ($event) {
        if ($event.column && ($event.rowIndex || $event.rowIndex === 0)) {
            var rowIndex = $event.rowIndex;
            this.focusedRowIndex = $event.rowIndex;
            this.focusedColId = $event.column.colId;
            this.newRowIndex = rowIndex;
            if (this.oldRowIndex === this.newRowIndex) {
                if (this.newValueTemp !== undefined && this.newValueTemp !== null && this.indexRowTemp !== undefined && this.indexRowTemp !== null) {
                    this.newValueToSave.push(this.newValueTemp);
                    this.indexRowToSave.push(this.indexRowTemp);
                    this.indexRowModify.push(this.indexRowModifyTemp);
                }
                this.newValueTemp = null;
                this.indexRowTemp = null;
            }
            else {
                this.oldRowIndex = rowIndex;
                this.isNewRowFocused = true;
                if (this.indexToSaveMultipleRow.length > 1 && this.colIdToSaveMultipleRow && this.newValueMultipleRow) {
                    var contents = {};
                    var indexTemp = [];
                    if (this.isMultipleColToModify) {
                        console.log('** multiple column **');
                        // multiple column but same row
                        contents = this.colIdToSaveMultipleCol;
                        indexTemp.push(this.indexToSaveMultipleRow[0]);
                    }
                    else {
                        console.log('** multiple row **');
                        // multiple row but same column
                        contents[this.colIdToSaveMultipleRow] = this.newValueMultipleRow;
                        indexTemp = this.indexToSaveMultipleRow;
                    }
                    var bodyRequest = {
                        is_all: false,
                        indices: indexTemp,
                        content: contents
                    };
                    if (this.gridOptions.api) {
                        var cell = this.gridOptions.api.getFocusedCell();
                        var allDisplayedCol = this.gridOptions.columnApi.getAllDisplayedColumns();
                        if (cell && allDisplayedCol) {
                            this.rowIdFocused = cell.rowIndex;
                            this.colIdFocused = cell.column.getColId();
                            this.colFocused = this.getColumnToShow(this.colIdFocused, allDisplayedCol);
                            this.colRangeFocused = this.getRangeColumnToShow(this.colIdFocused, allDisplayedCol);
                        }
                    }
                    this.saveUpdatedData(bodyRequest);
                    this.newValueMultipleRow = null;
                    this.firstChangeMultipleRow = true;
                    this.indexToSaveMultipleRow = [];
                    this.colIdToSaveMultipleRow = null;
                    this.isMultipleColToModify = false;
                    this.isChangeDetected = false;
                    this.newValueToSave = [];
                    this.indexRowToSave = [];
                }
                else if (this.indexRowToSave.length > 0 && this.contents !== {}) {
                    var indexRowUnique = [];
                    indexRowUnique.push(this.indexRowToSave[0]);
                    var bodyRequest = {
                        is_all: false,
                        indices: indexRowUnique,
                        content: this.contents
                    };
                    if (bodyRequest.content['country']) {
                        var countryNameSelected = bodyRequest.content['country'];
                        if (this.countriesNameCode && countryNameSelected) {
                            var codeElement = this.getCodeOfElement(this.countriesNameCode, countryNameSelected);
                            this.getStatesByCountry(codeElement, countryNameSelected);
                        }
                    }
                    if (bodyRequest.content['state']) {
                        var stateNameSelected = bodyRequest.content['state'];
                        if (this.statesNameCode && stateNameSelected) {
                            var codeElement = this.getCodeOfElement(this.statesNameCode, stateNameSelected);
                            this.getCountiesByState(codeElement, stateNameSelected);
                        }
                    }
                    if (this.gridOptions.api) {
                        var cell = this.gridOptions.api.getFocusedCell();
                        var allDisplayedCol = this.gridOptions.columnApi.getAllDisplayedColumns();
                        if (cell && allDisplayedCol) {
                            this.rowIdFocused = cell.rowIndex;
                            this.colIdFocused = cell.column.getColId();
                            this.colFocused = this.getColumnToShow(this.colIdFocused, allDisplayedCol);
                            this.colRangeFocused = this.getRangeColumnToShow(this.colIdFocused, allDisplayedCol);
                        }
                    }
                    this.saveUpdatedData(bodyRequest);
                    this.newValueToSave = [];
                    this.indexRowToSave = [];
                    this.newValueMultipleRow = null;
                    this.firstChangeMultipleRow = true;
                    this.indexToSaveMultipleRow = [];
                    this.colIdToSaveMultipleRow = null;
                    this.isMultipleColToModify = false;
                    this.isChangeDetected = false;
                }
                else {
                    // init all
                    this.newValueToSave = [];
                    this.indexRowToSave = [];
                    this.contents = {};
                    this.fieldCodeId = [];
                    this.headerName = [];
                    this.colDef = [];
                    this.newValueMultipleRow = null;
                    this.firstChangeMultipleRow = true;
                    this.indexToSaveMultipleRow = [];
                    this.colIdToSaveMultipleRow = null;
                    this.isMultipleColToModify = false;
                    this.isChangeDetected = false;
                }
            }
        }
        if (this.isFirstLoad) {
            if (this.exposureOriginal) {
                var self_1 = this.exposureOriginal._links.self;
                if (self_1) {
                    this.getUpdatedData(self_1, this.headersLoaded, false);
                }
            }
            this.isFirstLoad = false;
        }
    };
    SharedLocationUploadGridComponent.prototype.updateCsMetadata = function (jobId) {
        var _this = this;
        this.cleansingService.getUpdateCsMetadata(jobId).subscribe(function (data) {
            if (data) {
                _this.datachecksLoaded = data;
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadCsMetadata"]({ csMetadata: data }));
            }
        });
    };
    SharedLocationUploadGridComponent.prototype.updateCheck = function (fileData, selectedSheet) {
        var _this = this;
        this.cleansingService.getUpdateCheck(fileData, selectedSheet, this.currentPage).subscribe(function (data) {
            if (data) {
                _this.datachecksLoaded = data;
                // this.store.dispatch(new ActionLoadErrors({ errors: data }));
            }
        });
    };
    SharedLocationUploadGridComponent.prototype.updateExposures = function (selfLink) {
        var _this = this;
        this.cleansingService.getUpdateExposures(selfLink).subscribe(function (data) {
            if (data) {
                _this.exposureOriginal = data;
                var exposureTemp = data['exposures'];
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                _this.currentPage = data['current_page'];
                if (data['abolute_index']) {
                    _this.indexRowsLoaded = data['abolute_index'];
                }
                else {
                    _this.indexRowsLoaded = data['index'];
                }
                _this.oldDataNewPage = data['exposures'];
                _this.exposuresLoaded = exposureTemp;
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
            }
        });
    };
    SharedLocationUploadGridComponent.prototype.getStateGroupColumns = function () {
        if (this.gridColumnApi) {
            this.groupState = this.gridColumnApi.getColumnGroupState();
            /* this.displayedCenterColumns = this.gridColumnApi.getDisplayedCenterColumns();
            if(this.firstLoadManageColumn) {
              this.selectedDisplayColumnExpanded = this.getColIdExpanded(this.displayedCenterColumns);
              this.firstLoadManageColumn = false;
            } */
            if (this.listModification.length === 0) {
                this.listModification = this.getGroupExpanded(this.groupState);
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.getGroupExpanded = function (goupCols) {
        var isModifTemp = [];
        for (var i = 0; i < goupCols.length; i++) {
            var elemnts = goupCols[i];
            if (elemnts['open']) {
                isModifTemp.push({ groupId: elemnts['groupId'], open: elemnts['open'] });
            }
        }
        return isModifTemp;
    };
    SharedLocationUploadGridComponent.prototype.saveUpdatedData = function (body) {
        var _this = this;
        this.getStateGroupColumns();
        var fileData = this.fileData;
        var selectedSheet = this.selectedSheet;
        this.cleansingService.doUpdateData(this.jobId, fileData, selectedSheet, this.mappingId, body).subscribe(function (jobId) {
            if (jobId) {
                _this.updateCsMetadata(jobId['job_id']);
                // this.updateCheck(fileData, selectedSheet);
                console.log('++ update succesfully ++');
                var self_2 = _this.exposureOriginal._links.self;
                if (self_2) {
                    _this.cleansingService.getUpdateExposures(self_2).subscribe(function (data) {
                        if (data) {
                            if (!_this.isNewPage) {
                                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
                            }
                            _this.exposureOriginal = data;
                            _this.pageLast = data['last_page'];
                            _this.pageFirst = data['first_page'];
                            var exposureTemp = data['exposures'];
                            _this.currentPage = data['current_page'];
                            if (data['abolute_index']) {
                                _this.indexRowsLoaded = data['abolute_index'];
                            }
                            else {
                                _this.indexRowsLoaded = data['index'];
                            }
                            _this.oldDataNewPage = data['exposures'];
                            _this.exposuresLoaded = exposureTemp;
                            if (exposureTemp) {
                                _this.exposuresLoaded = exposureTemp;
                                _this.oldDataClickedCell = exposureTemp;
                                // to comment when using scramble() in refresh
                                _this.rowsData = _this.createRowData(exposureTemp);
                                // set selected value in manage column
                                _this.newHeadersLoaded = _this.getSelectedColumn(_this.columnState, _this.headersLoaded);
                                _this.columnDefs = _this.createColumnDefs(_this.newHeadersLoaded);
                                // this.columnDefs = this.createColumnDefs(this.headersLoaded);
                            }
                            if (_this.columnDefs && _this.rowsData) {
                                _this.expandedColsLengthBeforeEdit = _this.expandedColsLength;
                                _this.expandedColsLength = 0;
                                _this.isModification = true;
                                _this.refreshAfterUpdate();
                                _this.bringFocusBack();
                            }
                        }
                    });
                }
            }
            else {
                _this.onUpdateFailed();
            }
        }, function (err) {
            console.log('=Update cell failed=');
        } /* , () => {},
         () => {
          console.log('= inside success 4 =')
          this.bringFocusBack();
        } */);
    };
    SharedLocationUploadGridComponent.prototype.getColumnToShow = function (fieldCode, colList) {
        if (colList) {
            for (var i = 0; i < colList.length; i++) {
                if (fieldCode === colList[i]['colId'] || fieldCode === this.getExactColId(colList[i]['colId'])) {
                    return colList[i];
                }
            }
        }
        return null;
    };
    SharedLocationUploadGridComponent.prototype.getRangeColumnToShow = function (fieldCode, colList) {
        if (colList) {
            for (var i = 0; i < colList.length; i++) {
                if (fieldCode === colList[i]['colId'] || fieldCode === this.getExactColId(colList[i]['colId'])) {
                    return i;
                }
            }
        }
        return null;
    };
    SharedLocationUploadGridComponent.prototype.adjustSizeDataGrid = function () {
        if (this.gridOptions.columnApi && this.gridOptions.api) {
            var allDisplayed = this.gridOptions.columnApi.getAllDisplayedColumns();
            if (allDisplayed.length < 9) {
                this.gridOptions.api.sizeColumnsToFit();
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.bringFocusBack = function () {
        // console.log('= bringFocusBack =');
        if (this.gridOptions.api && this.rowIdFocused && this.colIdFocused && this.colFocused && this.colRangeFocused) {
            var displayedCol = this.gridOptions.columnApi.getAllDisplayedColumns()[this.colRangeFocused];
            var displayedColCenter = this.gridOptions.columnApi.getDisplayedCenterColumns()[this.colRangeFocused];
            var displayedColLeft = this.gridOptions.columnApi.getDisplayedLeftColumns()[this.colRangeFocused];
            var displayedColRight = this.gridOptions.columnApi.getDisplayedRightColumns()[this.colRangeFocused];
            // scrolls to the exact row
            this.gridOptions.api.ensureIndexVisible(this.rowIdFocused);
            // scrolls to the exact column
            this.gridOptions.api.ensureColumnVisible(displayedCol);
            this.gridOptions.api.ensureColumnVisible(displayedColCenter);
            this.gridOptions.api.ensureColumnVisible(displayedColLeft);
            this.gridOptions.api.ensureColumnVisible(displayedColRight);
            this.gridOptions.api.setFocusedCell(this.rowIdFocused, displayedCol, null);
            this.adjustSizeDataGrid();
        }
    };
    SharedLocationUploadGridComponent.prototype.onBtStartEditingCell = function () {
        // console.log('= onBtStartEditingCell =');
        if (this.gridApi && this.focusedRowIndex && this.colIdFocused) {
            // this.bringFocusBack();
            var inverseColId = this.getInverseColId(this.colIdFocused);
            this.gridOptions.api.startEditingCell({
                rowIndex: this.focusedRowIndex,
                colKey: inverseColId,
            });
            this.gridOptions.api.startEditingCell({
                rowIndex: this.focusedRowIndex,
                colKey: this.colIdFocused,
            });
        }
    };
    SharedLocationUploadGridComponent.prototype.getNewInsertData = function (gridApi) {
        var newExposures = [];
        gridApi.forEachNode(function (rowNode, index) {
            newExposures.push(rowNode.data);
        });
        return newExposures;
    };
    SharedLocationUploadGridComponent.prototype.getDataIfModifyOneRow = function (oldExposures, newExposures, indexRowsLoaded) {
        var contents = {};
        var indices = [];
        var i = 0;
        for (var _i = 0, _a = Object.entries(newExposures); _i < _a.length; _i++) {
            var _b = _a[_i], key0 = _b[0], value0 = _b[1];
            if (JSON.stringify(oldExposures[key0]) !== JSON.stringify(value0)) {
                for (var _c = 0, _d = Object.entries(value0); _c < _d.length; _c++) {
                    var _e = _d[_c], key = _e[0], valueNew = _e[1];
                    if (oldExposures[key0][key] !== valueNew) {
                        if (i === 0 || indices.includes(indexRowsLoaded[key0])) {
                            indices.push(indexRowsLoaded[key0]);
                        }
                        i = i + 1;
                        if (valueNew) {
                            contents[key] = valueNew;
                        }
                        else {
                            // the backend don't authorize empty value
                            return false;
                        }
                    }
                }
                return {
                    is_all: false,
                    indices: indices,
                    content: contents
                };
            }
        }
        return false;
    };
    SharedLocationUploadGridComponent.prototype.getDataIfModify = function (oldExposures, newExposures, indexRowsLoaded) {
        if (JSON.stringify(oldExposures) === JSON.stringify(newExposures)) {
            console.log('No modification');
            return false;
        }
        else {
            var contents = {};
            var indices = [];
            var i = 0;
            for (var _i = 0, _a = Object.entries(newExposures); _i < _a.length; _i++) {
                var _b = _a[_i], key0 = _b[0], value0 = _b[1];
                if (JSON.stringify(oldExposures[key0]) !== JSON.stringify(value0)) {
                    for (var _c = 0, _d = Object.entries(value0); _c < _d.length; _c++) {
                        var _e = _d[_c], key = _e[0], valueNew = _e[1];
                        // probleme de duplication de clé pour les memes colonnes
                        if (oldExposures[key0][key] !== valueNew) {
                            // adapted to the structure, only a modification in one line each time
                            if (i === 0 || indices.includes(indexRowsLoaded[key0])) {
                                indices.push(indexRowsLoaded[key0]);
                            }
                            i = i + 1;
                            if (valueNew) {
                                contents[key] = valueNew;
                            }
                            else {
                                return false;
                            }
                        }
                    }
                }
            }
            var modifyData = {
                is_all: false,
                indices: indices,
                content: contents
            };
            return modifyData;
        }
    };
    SharedLocationUploadGridComponent.prototype.onMakeAnUpdate = function (oldDataClickedCell, newExposures, indexRowsLoaded) {
        var _this = this;
        if (this.gridApi) {
            var isModify_1 = this.getDataIfModify(oldDataClickedCell, newExposures, indexRowsLoaded);
            if (isModify_1) {
                var exposureUpdated_1;
                if (this.importData$) {
                    this.importData$.subscribe(function (importData) {
                        var fileData = importData.fileData;
                        var selectedSheet = importData.selectedSheet;
                        exposureUpdated_1 = _this.exposureOriginal;
                        _this.cleansingService.doUpdateData(_this.jobId, fileData, selectedSheet, _this.mappingId, isModify_1).subscribe(function (jobId) {
                            if (exposureUpdated_1 && jobId) {
                                var self_3 = _this.exposureOriginal._links.self;
                                if (self_3) {
                                    _this.updateCsMetadata(jobId['job_id']);
                                    // update check
                                    // this.updateCheck(fileData, selectedSheet);
                                    // this.getUpdatedData(self, this.headersLoaded, true);
                                    _this.cleansingService.getUpdateExposures(self_3).subscribe(function (data) {
                                        if (data) {
                                            if (isModify_1) {
                                                if (!_this.isNewPage) {
                                                    _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
                                                }
                                            }
                                            _this.exposureOriginal = data;
                                            var exposureTemp = data['exposures'];
                                            if (exposureTemp) {
                                                _this.exposuresLoaded = exposureTemp;
                                                _this.oldDataClickedCell = exposureTemp;
                                                _this.rowsData = _this.createRowData(exposureTemp);
                                            }
                                            if (_this.columnDefs && _this.rowsData) {
                                                _this.refreshAfterUpdate();
                                            }
                                        }
                                    });
                                }
                            }
                            else {
                                // setTimeout(function () { return true; }, 20000);
                                _this.onUpdateFailed();
                            }
                        });
                    });
                }
            }
            else if (!this.isNewPage) {
                console.log('No modification detected!');
                if (this.exposureOriginal) {
                    var self_4 = this.exposureOriginal._links.self;
                    if (self_4) {
                        this.getUpdatedData(self_4, this.headersLoaded, false);
                    }
                }
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.onCellDoubleClicked = function (event) {
        var clickedCellValue;
        if (event.data && event.column) {
            for (var _i = 0, _a = Object.entries(event.data); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                if (key === event.column.colId) {
                    clickedCellValue = value;
                }
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.onCellClicked = function ($event) {
        var rowIndex = $event.rowIndex;
        var colId = this.getExactColId($event.column.colId);
        var data = $event.data;
        var dataList = [];
        var clickedCellValue;
        if (data && colId) {
            for (var _i = 0, _a = Object.entries(data); _i < _a.length; _i++) {
                var _b = _a[_i], key = _b[0], value = _b[1];
                if (key === colId) {
                    clickedCellValue = value;
                }
            }
        }
        this.eventModif = true;
        this.indexRow = $event.rowIndex;
        this.idRow = $event.rowIndex;
        this.dataRow = $event.data;
        // console.log(rowIndex)
        // console.log(colId)
        // console.log(clickedCellValue)
    };
    SharedLocationUploadGridComponent.prototype.onUpdateSaved = function () {
        this.notif.success('Update successfully');
    };
    SharedLocationUploadGridComponent.prototype.onUpdateFailed = function () {
        this.notif.error('Update failed');
    };
    SharedLocationUploadGridComponent.prototype.getUpdatedData = function (self, headersLoaded, isModify) {
        var _this = this;
        this.cleansingService.getUpdateExposures(self).subscribe(function (data) {
            if (data) {
                if (isModify) {
                    console.log('Need to synchronize data after modification');
                    // this.store.dispatch(new ActionLoadAllData({ data: data }));
                }
                _this.exposureOriginal = data;
                var exposureTemp = data['exposures'];
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                _this.currentPage = data['current_page'];
                if (data['abolute_index']) {
                    _this.indexRowsLoaded = data['abolute_index'];
                }
                else {
                    _this.indexRowsLoaded = data['index'];
                }
                _this.exposuresLoaded = exposureTemp;
                if (exposureTemp) {
                    _this.rowsDataOld = _this.rowsData;
                    _this.rowsData = _this.createRowData(exposureTemp);
                    // set selected value in manage column
                    _this.newHeadersLoaded = _this.getSelectedColumn(_this.columnState, _this.headersLoaded);
                    _this.columnDefs = _this.createColumnDefs(_this.newHeadersLoaded);
                    // this.columnDefs = this.createColumnDefs(headersLoaded);
                }
                if (_this.columnDefs && _this.rowsData) {
                    _this.refreshAfterUpdate();
                }
            }
        });
    };
    SharedLocationUploadGridComponent.prototype.onBtNextCell = function () {
        this.gridApi.tabToNextCell();
    };
    SharedLocationUploadGridComponent.prototype.onBtPreviousCell = function () {
        this.gridApi.tabToPreviousCell();
    };
    SharedLocationUploadGridComponent.prototype.onBtWhich = function () {
        var cellDefs = this.gridApi.getEditingCells();
        if (cellDefs.length > 0) {
            var cellDef = cellDefs[0];
            console.log('editing cell is: row = ' +
                cellDef.rowIndex +
                ', col = ' +
                cellDef.column.getId() +
                ', floating = ' +
                cellDef.rowPinned);
        }
        else {
            console.log('no cells are editing');
        }
    };
    SharedLocationUploadGridComponent.prototype.onBtStartEditingDown = function (key, char, pinned, indexRow, colId) {
        this.gridApi.startEditingCell({
            rowIndex: indexRow,
            colKey: colId,
            rowPinned: pinned,
            keyPress: key,
            charPress: char,
        });
    };
    SharedLocationUploadGridComponent.prototype.onBtStopEditing = function () {
        this.gridApi.stopEditing();
        this.cdrf.detectChanges();
    };
    SharedLocationUploadGridComponent.prototype.onCellKeyDown = function (e) {
        var keyPressed = e.event.key;
        if (this.gridApi.getEditingCells().length > 0) {
            if (keyPressed === 'ArrowLeft') {
                this.onBtStopEditing();
                this.onBtPreviousCell();
            }
            if (keyPressed === 'ArrowRight') {
                this.onBtStopEditing();
                this.onBtNextCell();
            }
            if (keyPressed === 'ArrowDown') {
                if (this.focusedRowIndex && this.focusedColId) {
                    this.focusedRowIndex = this.focusedRowIndex + 1;
                    this.onBtStopEditing();
                    this.onBtStartEditingDown(13, null, '', this.focusedRowIndex, this.focusedColId);
                }
            }
            if (keyPressed === 'ArrowUp') {
                if (this.focusedRowIndex && this.focusedColId) {
                    this.focusedRowIndex = this.focusedRowIndex - 1;
                    this.onBtStopEditing();
                    this.onBtStartEditingDown(13, null, '', this.focusedRowIndex, this.focusedColId);
                }
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.onCellKeyPress = function (e) {
        console.log(' = enter = ');
        var keyPressed = e.event.key;
        if (keyPressed === 'Enter') {
            console.log('= onCellEnterkey = ');
            this.isEnterForSave = true;
            var rowNode = e.node;
            var newSelection = !rowNode.selected;
            if (this.isChangeDetected) {
                console.log('==> change detected after onCellEnterkey : ');
                // console.log(this.indexRowToSave)
                // console.log(this.contents)
                // const body = getUpadedCell();
                if (this.indexRowToSave.length > 0 && this.contents !== {}) {
                    var indexRowUnique = [];
                    indexRowUnique.push(this.indexRowToSave[0]);
                    var bodyRequest = {
                        is_all: false,
                        indices: indexRowUnique,
                        content: this.contents
                    };
                    if (bodyRequest.content['country']) {
                        var countryNameSelected = bodyRequest.content['country'];
                        if (this.countriesNameCode && countryNameSelected) {
                            var codeElement = this.getCodeOfElement(this.countriesNameCode, countryNameSelected);
                            this.getStatesByCountry(codeElement, countryNameSelected);
                        }
                    }
                    if (bodyRequest.content['state']) {
                        var stateNameSelected = bodyRequest.content['state'];
                        if (this.statesNameCode && stateNameSelected) {
                            var codeElement = this.getCodeOfElement(this.statesNameCode, stateNameSelected);
                            this.getCountiesByState(codeElement, stateNameSelected);
                        }
                    }
                    if (this.gridOptions.api) {
                        var cell = this.gridOptions.api.getFocusedCell();
                        var allDisplayedCol = this.gridOptions.columnApi.getAllDisplayedColumns();
                        if (cell && allDisplayedCol) {
                            this.rowIdFocused = cell.rowIndex;
                            this.colIdFocused = cell.column.getColId();
                            this.colFocused = this.getColumnToShow(this.colIdFocused, allDisplayedCol);
                            this.colRangeFocused = this.getRangeColumnToShow(this.colIdFocused, allDisplayedCol);
                        }
                    }
                    this.saveUpdatedData(bodyRequest);
                    this.newValueToSave = [];
                    this.indexRowToSave = [];
                    this.newValueMultipleRow = null;
                    this.firstChangeMultipleRow = true;
                    this.indexToSaveMultipleRow = [];
                    this.colIdToSaveMultipleRow = null;
                    this.isMultipleColToModify = false;
                    this.isChangeDetected = false;
                }
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.navigateToNextCell = function (params) {
        var previousCell = params.previousCellPosition;
        var suggestedNextCell = params.nextCellPosition;
        console.log(params.key);
        switch (params.key) {
            case this.KEY_DOWN:
                var nextRowIndex1 = previousCell.rowIndex + 1;
                if (nextRowIndex1 < 0) {
                    return null;
                }
                else {
                    // this.onBtStopEditing();
                    return {
                        rowIndex: nextRowIndex1,
                        column: previousCell.column,
                        floating: previousCell.floating,
                    };
                }
            case this.KEY_UP:
                var nextRowIndex2 = previousCell.rowIndex - 1;
                var renderedRowCount = this.gridApi.getModel().getRowCount();
                if (nextRowIndex2 >= renderedRowCount) {
                    return null;
                }
                else {
                    // this.onBtStopEditing();
                    return {
                        rowIndex: nextRowIndex2,
                        column: previousCell.column,
                        floating: previousCell.floating,
                    };
                }
            case this.KEY_LEFT:
            case this.KEY_RIGHT:
                return suggestedNextCell;
        }
    };
    SharedLocationUploadGridComponent.prototype.onBtFirst = function () {
        // console.log('= onBtFirst() =');
        var newExposures = this.getNewInsertData(this.gridApi);
        if (this.oldRowDataClikedCell && this.oldInfoClickedCell && this.oldDataClickedCell && newExposures) {
            this.onMakeAnUpdate(this.oldDataClickedCell, newExposures, this.indexRowsLoaded);
        }
        if (this.firstPageData) {
            this.isNewPage = true;
            var data = this.firstPageData;
            this.exposureOriginal = data;
            this.pageLast = data['last_page'];
            this.pageFirst = data['first_page'];
            var exposureTemp = data['exposures'];
            this.currentPage = data['current_page'];
            if (data['abolute_index']) {
                this.indexRowsLoaded = data['abolute_index'];
            }
            else {
                this.indexRowsLoaded = data['index'];
            }
            this.exposuresLoaded = exposureTemp;
            this.oldDataNewPage = data['exposures'];
            this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
            if (exposureTemp) {
                this.rowsData = this.createRowData(exposureTemp);
                // set selected value in manage column
                this.newHeadersLoaded = this.getSelectedColumn(this.columnState, this.headersLoaded);
                this.columnDefs = this.createColumnDefs(this.newHeadersLoaded);
                // this.columnDefs = this.createColumnDefs(this.headersLoaded);
            }
            if (this.columnDefs && this.rowsData) {
                this.gridOptions.api.setRowData(this.rowsData);
                this.gridOptions.api.setColumnDefs(this.columnDefs);
                this.refreshAll(this.columnDefs, this.rowsData);
            }
        }
        else if (this.exposureOriginal) {
            this.isNewPage = true;
            var firstLink = this.exposureOriginal._links.first;
            if (firstLink) {
                this.currentPage = this.pageFirst;
                this.getUpdateDataNewPage(firstLink);
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.onBtLast = function () {
        // console.log('= onBtLast() =');
        var newExposures = this.getNewInsertData(this.gridApi);
        if (this.oldRowDataClikedCell && this.oldInfoClickedCell && this.oldDataClickedCell && newExposures) {
            this.onMakeAnUpdate(this.oldDataClickedCell, newExposures, this.indexRowsLoaded);
        }
        if (this.lastPageData) {
            this.isNewPage = true;
            var data = this.lastPageData;
            this.exposureOriginal = data;
            this.pageLast = data['last_page'];
            this.pageFirst = data['first_page'];
            var exposureTemp = data['exposures'];
            this.currentPage = data['current_page'];
            if (data['abolute_index']) {
                this.indexRowsLoaded = data['abolute_index'];
            }
            else {
                this.indexRowsLoaded = data['index'];
            }
            // this.indexRowsLoaded = data['index'];
            this.oldDataNewPage = data['exposures'];
            this.exposuresLoaded = exposureTemp;
            this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
            if (exposureTemp) {
                this.rowsData = this.createRowData(exposureTemp);
                // set selected value in manage column
                this.newHeadersLoaded = this.getSelectedColumn(this.columnState, this.headersLoaded);
                this.columnDefs = this.createColumnDefs(this.newHeadersLoaded);
                // this.columnDefs = this.createColumnDefs(this.headersLoaded);
            }
            if (this.columnDefs && this.rowsData) {
                this.gridOptions.api.setRowData(this.rowsData);
                // this.gridOptions.api.sizeColumnsToFit();
                this.gridOptions.columnDefs = this.columnDefs;
                this.refreshAll(this.columnDefs, this.rowsData);
            }
        }
        else if (this.exposureOriginal) {
            this.isNewPage = true;
            var link = this.exposureOriginal._links.last;
            this.currentPage = this.pageLast;
            if (link) {
                this.getUpdateDataNewPage(link);
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.getUpdateDataNewPage = function (link) {
        var _this = this;
        var fileData = this.fileData;
        var selectedSheet = this.selectedSheet;
        var jobId = this.jobId;
        this.cleansingService.getExposuresChangedPage(link).subscribe(function (data) {
            if (data) {
                // update csMetadata
                _this.updateCsMetadata(jobId);
                // update check
                // this.updateCheck(fileData, selectedSheet);
                _this.exposureOriginal = data;
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                var exposureTemp = data['exposures'];
                _this.currentPage = data['current_page'];
                if (data['abolute_index']) {
                    _this.indexRowsLoaded = data['abolute_index'];
                }
                else {
                    _this.indexRowsLoaded = data['index'];
                }
                _this.oldDataNewPage = data['exposures'];
                _this.exposuresLoaded = exposureTemp;
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
                if (exposureTemp) {
                    _this.rowsData = _this.createRowData(exposureTemp);
                    // set selected value in manage column
                    _this.newHeadersLoaded = _this.getSelectedColumn(_this.columnState, _this.headersLoaded);
                    _this.columnDefs = _this.createColumnDefs(_this.newHeadersLoaded);
                    // this.columnDefs = this.createColumnDefs(this.headersLoaded);
                }
                if (_this.columnDefs && _this.rowsData) {
                    _this.refreshAfterUpdate();
                }
                /* const self = this.exposureOriginal._links.self;
                if (self) {
                  this.getUpdatedData(self, this.headersLoaded, false);
                } */
            }
        });
    };
    SharedLocationUploadGridComponent.prototype.onBtSpecifiquePage = function (page) {
        /* const newExposures = this.getNewInsertData(this.gridApi);
        if (this.oldRowDataClikedCell && this.oldInfoClickedCell && this.oldDataClickedCell && newExposures) {
          this.onMakeAnUpdate(this.oldDataClickedCell, newExposures, this.indexRowsLoaded);
        } */
        if (this.exposureOriginal) {
            this.isNewPage = true;
            var link = this.exposureOriginal._links.first;
            this.currentPage = page;
            if (link) {
                var linkSpecifique = void 0;
                var headLink = link.split('?page=').slice(0, -1).join('?page=');
                var nrowsExtracted = link.split('&nrows=').pop();
                // i temp
                if (headLink === '') {
                    headLink = link.split('&page=').slice(0, -1).join('&page=');
                    linkSpecifique = headLink + '&page=' + page + '&nrows=' + nrowsExtracted;
                }
                else {
                    linkSpecifique = headLink + '?page=' + page + '&nrows=' + nrowsExtracted;
                }
                // f temp
                this.getUpdateDataNewPage(linkSpecifique);
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.onBtNext = function () {
        if (this.exposureOriginal) {
            this.isNewPage = true;
            var nextLink = this.exposureOriginal._links.next;
            if (nextLink) {
                this.currentPage = this.currentPage + 1;
                this.getUpdateDataNewPage(nextLink);
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.onBtPrevious = function () {
        var newExposures = this.getNewInsertData(this.gridApi);
        if (this.oldRowDataClikedCell && this.oldInfoClickedCell && this.oldDataClickedCell && newExposures) {
            this.onMakeAnUpdate(this.oldDataClickedCell, newExposures, this.indexRowsLoaded);
        }
        if (this.exposureOriginal) {
            this.isNewPage = true;
            var link = this.exposureOriginal._links.prev;
            if (link) {
                this.currentPage = this.currentPage - 1;
                this.getUpdateDataNewPage(link);
            }
        }
    };
    SharedLocationUploadGridComponent.prototype.ngAfterViewInit = function () {
    };
    SharedLocationUploadGridComponent.prototype.inFirstColumn = function (cell) {
        // cell.column is not a documented property!!
        return cell.column.colId === cell.column.parent.displayedChildren[0].colId;
    };
    SharedLocationUploadGridComponent.prototype.goToAdmin = function () {
        this.router.navigate(['dcm/administration']);
    };
    SharedLocationUploadGridComponent.prototype.onManageColumn = function () {
        this.task = this.onSortCategorie(this.task);
        this.isManageColumn = true;
    };
    SharedLocationUploadGridComponent.prototype.onSortCategorie = function (categories) {
        var sortCategories = [];
        var sortCategoriesNotInList = [];
        var index = 0;
        for (var i = 0; i < _app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_35__["CATEGORIES"].length; i++) {
            var elemnt1 = _app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_35__["CATEGORIES"][i];
            console.log(elemnt1);
            for (var j = 0; j < categories.length; j++) {
                var elemnt2 = categories[j];
                if (elemnt1 === elemnt2['code']) {
                    sortCategories[index] = elemnt2;
                    index++;
                }
                if (!_app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_35__["CATEGORIES"].includes(elemnt2['code']) && !sortCategoriesNotInList.includes(elemnt2)) {
                    sortCategoriesNotInList.push(elemnt2);
                }
            }
        }
        var newCategories = sortCategories.concat(sortCategoriesNotInList);
        return newCategories;
    };
    SharedLocationUploadGridComponent.prototype.getAllColumns = function (colState) {
        var displayedCol = [];
        for (var i = 0; i < colState.length; i++) {
            var elmtName = colState[i]['colId'];
            displayedCol.push(elmtName);
        }
        return displayedCol;
    };
    SharedLocationUploadGridComponent.prototype.setWorkTaskes = function (cols) {
        var outPut = [];
        for (var i = 0; i < cols.length; i++) {
            var subtask = [];
            var cat = cols[i];
            for (var j = 0; j < cat['subtask'].length; j++) {
                var hed = cat['subtask'][j];
                /* subtask.push({
                  name: hed['name'],
                  code: hed['code'],
                  checked: true
                }) */
                if (_app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_35__["DEFAULT_COLUMN"].includes(hed['code'])) {
                    subtask.push({
                        name: hed['name'],
                        code: hed['code'],
                        checked: true
                    });
                }
                else {
                    subtask.push({
                        name: hed['name'],
                        code: hed['code'],
                        checked: false
                    });
                }
            }
            outPut.push({
                name: cat['name'],
                code: cat['code'],
                checked: false,
                subtask: subtask
            });
        }
        return outPut;
    };
    SharedLocationUploadGridComponent.prototype.handleOkManageColumn = function () {
        this.isManageColumn = false;
        this.selectedDisplayColumnExpanded = [];
        var cols = this.task;
        var columnState = [];
        for (var i = 0; i < cols.length; i++) {
            var categories = cols[i];
            for (var j = 0; j < categories['subtask'].length; j++) {
                var column = categories['subtask'][j];
                columnState.push({
                    colId: column['code'],
                    hide: !column['checked']
                });
            }
        }
        if (isDefined(columnState)) {
            this.columnState = columnState;
            this.getLoadedData();
            // this.setStateToGrid();
            this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionColumnState"]({ columnState: this.columnState }));
        }
    };
    SharedLocationUploadGridComponent.prototype.handleCancelManageColumn = function () {
        this.isManageColumn = false;
    };
    SharedLocationUploadGridComponent.prototype.handleOutsideClick = function () {
        console.log('click outside');
    };
    SharedLocationUploadGridComponent.prototype.handleResetManageColumn = function () {
        if (this.headersOriginal) {
            var data = this.getStructureTransformColomn(this.headersOriginal);
            var initColunmState = data['columnState'];
            var columnStructure = data['columnStructure'];
            this.columnState = initColunmState;
            this.getLoadedData();
            this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionColumnState"]({ columnState: initColunmState }));
            this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionColumnStructure"]({ columnStructure: columnStructure }));
        }
        this.isManageColumn = false;
    };
    SharedLocationUploadGridComponent.prototype.getStructureTransformColomn = function (headers) {
        var headersMod = [];
        headers.forEach(function (element) {
            var headersTemp = {
                categoryName: element.category['label'],
                fieldName: element.name,
                fieldCode: element.code,
                fieldOrder: element.inCategoryOrder,
                fieldType: element.dataType
            };
            headersMod.push(headersTemp);
        });
        var outPut = [];
        var categories = [];
        for (var i = 0; i < headersMod.length; i++) {
            var elmt = headersMod[i];
            if (!categories.includes(elmt['categoryName'])) {
                categories.push(elmt['categoryName']);
            }
        }
        for (var i = 0; i < categories.length; i++) {
            var subtask = [];
            var cat = categories[i];
            for (var j = 0; j < headersMod.length; j++) {
                var hed = headersMod[j];
                if (cat === hed['categoryName']) {
                    if (_app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_35__["DEFAULT_COLUMN"].includes(hed['fieldCode'])) {
                        subtask.push({
                            name: hed['fieldName'],
                            code: hed['fieldCode'],
                            checked: true
                        });
                    }
                    else {
                        subtask.push({
                            name: hed['fieldName'],
                            code: hed['fieldCode'],
                            checked: false
                        });
                    }
                }
            }
            outPut.push({
                name: cat,
                code: cat,
                checked: false,
                subtask: subtask
            });
        }
        var cols = outPut;
        var columnState = [];
        var initColunmState = [];
        for (var i = 0; i < cols.length; i++) {
            var categories_1 = cols[i];
            for (var j = 0; j < categories_1['subtask'].length; j++) {
                var column = categories_1['subtask'][j];
                columnState.push({
                    colId: column['code'],
                    hide: !column['checked']
                });
                if (_app_dcm_modules_upload_componenets_manage_column_group_column_const__WEBPACK_IMPORTED_MODULE_35__["DEFAULT_COLUMN"].includes(column['code'])) {
                    initColunmState.push({
                        colId: column['code'],
                        hide: false
                    });
                }
                else {
                    initColunmState.push({
                        colId: column['code'],
                        hide: true
                    });
                }
            }
        }
        return { columnState: columnState, columnStructure: outPut };
    };
    SharedLocationUploadGridComponent.prototype.getOrderdColumnState = function () {
        var oldState = this.gridColumnApi.getColumnState();
        return oldState.slice(0, 3).concat(this.columnState.map(function (e) { return oldState.find(function (t) { return t.colId === e.colId; }); }));
    };
    SharedLocationUploadGridComponent.prototype.setStateToGrid = function () {
        var displayedCol = this.getDisplayedColumns(this.columnState);
        this.gridColumnApi.setColumnsVisible(displayedCol.displayedCol, true);
        this.gridColumnApi.setColumnsVisible(displayedCol.hideCol, false);
        this.gridColumnApi.setColumnState(this.getOrderdColumnState());
        this.adjustSizeDataGrid();
    };
    SharedLocationUploadGridComponent.prototype.drop = function (event, index) {
        Object(_angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_30__["moveItemInArray"])(this.task[index].subtask, event.previousIndex, event.currentIndex);
    };
    SharedLocationUploadGridComponent.prototype.handleCancelPdBi = function ($event) {
        this.isVisiblePdBi = false;
        this.resetCalculTiv();
    };
    SharedLocationUploadGridComponent.prototype.handleOkPdBi = function ($event) {
        var _this = this;
        this.isVisiblePdBi = false;
        var fileData = this.fileData;
        var selectedSheet = this.selectedSheet;
        var selfLink = this.exposureOriginal._links.self;
        // console.log('handleOkPdBi calculTiv => ')
        // console.log(this.calculTiv)
        var fileId = fileData.fileId;
        var index = [];
        var obj = {};
        for (var i = 0; i < this.calculTiv.length; i++) {
            var elmnt = this.calculTiv[i];
            obj[elmnt.name] = elmnt.checked;
            if (elmnt.checked) {
                index = elmnt.index;
            }
        }
        obj['lines'] = index;
        obj['tiv'] = this.tivInput;
        console.log(obj);
        var lines = obj['lines'];
        var tiv = obj['tiv'];
        var pd = obj['PD'];
        var bi = obj['BI'];
        this.cleansingService.ajustTiv(fileId, lines, tiv, pd, bi).subscribe(function (newFileId) {
            console.log('======> adjustTiv ok : ');
            // console.log(data)
            // const newFileId = data['file_id'];
            if (newFileId !== undefined) {
                _this.store.dispatch(new _app_dcm_modules_upload_store_import_import_actions__WEBPACK_IMPORTED_MODULE_33__["ActionUpdateFileId"]({ fileId: newFileId }));
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionUpdateOldFileId"]({ oldFileId: newFileId }));
            }
            _this.resetCalculTiv();
            _this.resetSelectedRows();
            _this.updateCsMetadata(_this.jobId);
            // this.updateCheck(fileData, selectedSheet)
            // this.getUpdateCheckAfterCalculTiv(newFileId, fileData);
            // this.updateExposures(selfLink);
            _this.getUpdateExposuresAfterCalculTiv(newFileId, fileData);
        }, function (err) {
            _this.notif.error('Calcul TIV failed');
            _this.resetCalculTiv();
        });
    };
    SharedLocationUploadGridComponent.prototype.resetSelectedRows = function () {
        this.rowsSelected = 0;
        this.isRowsSelected = false;
    };
    SharedLocationUploadGridComponent.prototype.getUpdateExposuresAfterCalculTiv = function (newFileId, fileData) {
        var _this = this;
        this.cleansingService.getUpdateExposuresAfterCalculTiv(newFileId, fileData).subscribe(function (data) {
            if (data) {
                _this.exposureOriginal = data;
                var exposureTemp = data['exposures'];
                _this.pageLast = data['last_page'];
                _this.pageFirst = data['first_page'];
                _this.currentPage = data['current_page'];
                if (data['abolute_index']) {
                    _this.indexRowsLoaded = data['abolute_index'];
                }
                else {
                    _this.indexRowsLoaded = data['index'];
                }
                _this.oldDataNewPage = data['exposures'];
                _this.exposuresLoaded = exposureTemp;
                _this.store.dispatch(new _app_dcm_modules_upload_store_cleansing_cleansing_actions__WEBPACK_IMPORTED_MODULE_10__["ActionLoadAllData"]({ data: data }));
            }
        }, function (err) { return console.log('Error for update calcul tiv'); });
    };
    SharedLocationUploadGridComponent.prototype.getUpdateCheckAfterCalculTiv = function (newFileId, fileData) {
        var _this = this;
        this.cleansingService.getUpdateCheckAfterCalculTiv(newFileId, fileData).subscribe(function (data) {
            if (data) {
                _this.datachecksLoaded = data;
                // this.store.dispatch(new ActionLoadErrors({ errors: data }));
            }
        });
    };
    // //#start
    SharedLocationUploadGridComponent.prototype.updateAllComplete = function () {
        for (var t = 0; t < this.task.length; t++) {
            var element = this.task[t];
            this.allComplete = this.task[t].subtask != null && this.task[t].subtask.every(function (t) { return t.checked; });
        }
        // this.valide(this.task);
    };
    SharedLocationUploadGridComponent.prototype.someComplete = function () {
        for (var tsk = 0; tsk < this.task.length; tsk++) {
            if (this.task[tsk].subtask == null) {
                return this.task[tsk].checked && !this.allComplete;
                // return false;
            }
            return this.task[tsk].subtask.filter(function (t) { return t.checked; }).length > 0 && !this.allComplete;
        }
    };
    SharedLocationUploadGridComponent.prototype.setAll = function (checked, checkedIndex) {
        if (this.task[checkedIndex].checked) {
            this.task[checkedIndex].checked = false;
            checked = false;
        }
        else {
            this.task[checkedIndex].checked = true;
            checked = true;
        }
        if (this.task[checkedIndex].subtask == null) {
            return;
        }
        if (this.task[checkedIndex].subtask.length > 0) {
            this.task[checkedIndex].subtask.forEach(function (t) { return t.checked = checked; });
        }
        // this.valide(this.task);
        // this.valide();
    };
    SharedLocationUploadGridComponent.prototype.setAllTree = function (checked) {
        for (var tsk = 0; tsk < this.task.length; tsk++) {
            this.allComplete = checked;
            this.task[tsk].checked = checked;
            if (this.task[tsk].subtask == null) {
                return;
            }
            this.task[tsk].subtask.forEach(function (t) { return t.checked = checked; });
        }
        // this.valide(this.task);
    };
    SharedLocationUploadGridComponent.prototype.transformForManageColumn = function (headers) {
        var outPut = [];
        var categories = this.getCategories(headers);
        for (var i = 0; i < categories.length; i++) {
            var subtask = [];
            var cat = categories[i];
            for (var j = 0; j < headers.length; j++) {
                var hed = headers[j];
                if (cat === hed['categoryName']) {
                    subtask.push({
                        name: hed['fieldName'],
                        code: hed['fieldCode'],
                        checked: true
                    });
                }
            }
            outPut.push({
                name: cat,
                code: cat,
                checked: true,
                subtask: subtask
            });
        }
        return outPut;
    };
    SharedLocationUploadGridComponent.prototype.getCategories = function (headers) {
        var categories = [];
        for (var i = 0; i < headers.length; i++) {
            var elmt = headers[i];
            if (!categories.includes(elmt['categoryName'])) {
                categories.push(elmt['categoryName']);
            }
        }
        return categories;
    };
    SharedLocationUploadGridComponent.prototype.getDisplayedColumns = function (colState) {
        var displayedCol = [];
        var hideCol = [];
        for (var i = 0; i < colState.length; i++) {
            var elmtName = colState[i]['colId'];
            var elmtState = colState[i]['hide'];
            if (elmtState) {
                hideCol.push(elmtName);
            }
            else {
                displayedCol.push(this.getInverseColId(elmtName));
            }
        }
        return { displayedCol: displayedCol, hideCol: hideCol };
    };
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewChild"])(_angular_material_expansion__WEBPACK_IMPORTED_MODULE_31__["MatAccordion"]),
        __metadata("design:type", _angular_material_expansion__WEBPACK_IMPORTED_MODULE_31__["MatAccordion"])
    ], SharedLocationUploadGridComponent.prototype, "accordion", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"])(),
        __metadata("design:type", Object)
    ], SharedLocationUploadGridComponent.prototype, "metadata", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"])(),
        __metadata("design:type", Object)
    ], SharedLocationUploadGridComponent.prototype, "headers", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"])(),
        __metadata("design:type", Object)
    ], SharedLocationUploadGridComponent.prototype, "exposures", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"])(),
        __metadata("design:type", Object)
    ], SharedLocationUploadGridComponent.prototype, "editLocationButtonClick", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"])(),
        __metadata("design:type", Object)
    ], SharedLocationUploadGridComponent.prototype, "geocodeLocationButtonClick", void 0);
    __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"])(),
        __metadata("design:type", Object)
    ], SharedLocationUploadGridComponent.prototype, "cellEdited", void 0);
    SharedLocationUploadGridComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"])({
            selector: 'anms-shared-location-upload-grid',
            template: __webpack_require__(/*! ./shared-location-upload-grid.component.html */ "./src/app/shared/shared-location-grid/shared-location-upload-grid.component.html"),
            providers: [ng_keyboard_shortcuts__WEBPACK_IMPORTED_MODULE_11__["KeyboardShortcutsService"]],
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./shared-location-grid.component.scss */ "./src/app/shared/shared-location-grid/shared-location-grid.component.scss")]
        }),
        __metadata("design:paramtypes", [_dcm_modules_upload_containers_upload_container_upload_container_component__WEBPACK_IMPORTED_MODULE_0__["UploadContainerComponent"],
            _customized_shared_location_grid_customized_grid_buttons_service__WEBPACK_IMPORTED_MODULE_1__["CustomizedSharedGridService"],
            _app_dcm_modules_upload_services_file_import_service__WEBPACK_IMPORTED_MODULE_12__["FileImportService"],
            _app_dcm_modules_upload_services_cleansing_service__WEBPACK_IMPORTED_MODULE_22__["CleansingService"],
            ng_keyboard_shortcuts__WEBPACK_IMPORTED_MODULE_11__["KeyboardShortcutsService"],
            _ngrx_store__WEBPACK_IMPORTED_MODULE_7__["Store"],
            _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectorRef"],
            _app_core__WEBPACK_IMPORTED_MODULE_8__["NotificationService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_23__["Router"]])
    ], SharedLocationUploadGridComponent);
    return SharedLocationUploadGridComponent;
}());

function getFilter(listsFilteredColumn, fieldCode) {
    var defaultFilter = 'defaultFilterComponent';
    /* if (fieldCode === 'division') {
      defaultFilter = 'divisionFilterComponent';
    } */
    /* if (fieldCode === 'tiv_amount') {
      defaultFilter = 'tivFilterComponent';
    } */
    if (listsFilteredColumn.includes(fieldCode) /*  && fieldCode !== 'division' */) {
        defaultFilter = 'defaultFilteredQuickSearchComponent';
    }
    return defaultFilter;
}
function isIndexInError(listError, nrows, childIndex) {
    // const nrows = 50;
    var errorIndexRelative = [];
    for (var i = 0; i < nrows; i++) {
        /* if (listError.includes(listError[0] + i)) {
           errorIndexRelative.push(i);
         } */
        if (listError.includes(i)) {
            errorIndexRelative.push(i);
        }
    }
    if (errorIndexRelative.includes(childIndex)) {
        return true;
    }
    return false;
}
function comparateObject(obj, list) {
    for (var _i = 0, _a = Object.entries(list); _i < _a.length; _i++) {
        var _b = _a[_i], key = _b[0], value = _b[1];
        if (JSON.stringify(value) === JSON.stringify(obj)) {
            return true;
        }
    }
    return false;
}
function onlyUnique(value, index, self) {
    return self.indexOf(value) === index;
}
function isDefined(elements) {
    var isDef = false;
    if (elements !== undefined && elements !== null && elements !== '' && elements !== {}) {
        isDef = true;
    }
    return isDef;
}
function sortBy(items) {
    var itemsSorted;
    if (items === undefined) {
        itemsSorted = [];
    }
    else {
        itemsSorted = items.slice().sort(function (a, b) { return a > b ? 1 : -1; });
    }
    return itemsSorted;
}
function mapElementToSpecifiqueObj(countryStates, selectedCountry) {
    var elements = countryStates[selectedCountry];
    var elementsNameList = [];
    var elementsCodeList = [];
    var elementsNameCode = {};
    var elementsCodeName = {};
    if (elements) {
        for (var i = 0; i < elements.length; i++) {
            elementsNameList.push((elements[i])['name']);
            elementsCodeList.push((elements[i])['code']);
            elementsNameCode[(elements[i])['name']] = (elements[i])['code'];
            elementsCodeName[(elements[i])['code']] = (elements[i])['name'];
        }
    }
    return {
        elementsNameList: elementsNameList,
        elementsCodeList: elementsCodeList,
        elementsNameCode: elementsNameCode,
        elementsCodeName: elementsCodeName
    };
}
function numberWithCommas(number) {
    return number.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',');
}
function numberFormatter(params) {
    var columnWithNumber = ['tiv_amount', 'machinery_value', 'content_value', 'pd_value', 'bi_value', 'building_value', 'stock_value'];
    if (columnWithNumber.includes(params.colDef.field)) {
        if (params.value !== null && params.value !== undefined) {
            return numberWithCommas(params.value);
        }
        return null;
    }
    return params.value;
}
function isErrorInRow(linesWithErrors, index) {
    return linesWithErrors.includes(index);
}
function countryCellRenderer(params) {
    var val = params.value;
    if (val !== undefined && countrySpecific(params.value) !== undefined) {
        val = countrySpecific(params.value);
        return "<img border='0' width='15' height='14' style='margin-bottom: 2px; margin-left: -7px; margin-right: 5px' src='assets/images/flags/" + countryFlagName(val) + ".png' /><span>" + val + "</span>";
    }
    else {
        return null;
    }
}
function countryCellRendererDrowpdown(params) {
    var val = params.value;
    if (val !== undefined && countrySpecific(params.value) !== undefined) {
        val = countrySpecific(params.value);
        return "<img border='0' width='15' height='14' style='margin-bottom: 2px; margin-left: -7px; margin-right: 5px' src='assets/images/flags/" + countryFlagName(val) + ".png' /><span><img src=\"assets/icons/sort-down.png\" alt=\"image\" style = \"width: 10px; float: right; margin-top: 7px;\" />" + val + "</span>";
    }
    else {
        return null;
    }
}
function countryFlagName(country) {
    return country.split(' ').join('-');
}
function countrySpecific(country) {
    switch (country) {
        case 'Cura�ao':
            return country = 'Curacao';
        case 'Saint Barth�lemy':
            return country = 'Saint Barthelemy';
        case '�land Islands':
            return country = 'Aland Islands';
        default:
            return country;
    }
}


/***/ }),

/***/ "./src/app/shared/shared-location-grid/shared-location-upload-grid.component.html":
/*!****************************************************************************************!*\
  !*** ./src/app/shared/shared-location-grid/shared-location-upload-grid.component.html ***!
  \****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<div *ngIf=\"notify\" id=\"id_notify_success_div\" class=\"alert-success\" style=\"float: right; z-index: 1;\r\n\"><strong>Success!</strong>\r\n  <!--<span class=\"closebtn\">&times;</span>-->\r\n</div>\r\n <!-- <div id=\"mySidenav\" class=\"sidenav body template-bg template-border radius-all\"\r\n  style=\"float: right; z-index:1; position:relative\" class=\"sidebar-class\">\r\n  <a id=\"sideBar\" (click)=\"onShowSideBar()\"><i class=\" fa fa-bars fa-fw\" aria-hidden=\"true\"></i></a>\r\n  <a (click)=\"getStateCols()\" id=\"helps\"  nz-popover nzContent=\"Field Management\" >\r\n    <i class=\"fa fa-cog fa-spin fa-fw\" aria-hidden=\"true\"  ></i>\r\n  </a>-->\r\n  <!-- <a href=\"#/dcm/upload\" id=\"setting\"><i class=\"fa fa-user fa-fw\" aria-hidden=\"true\"></i></a>\r\n  <a (click)=\"goToAdmin()\" id=\"helps\"  nz-popover nzContent=\"Field Management\" >\r\n    <i class=\"fa fa-cog fa-spin fa-fw\" aria-hidden=\"true\"  ></i>\r\n  </a>\r\n</div> -->\r\n\r\n<div style=\"display: inline-block; width: 96%; height: 100%;\" class=\"d-aggrid\">\r\n <ag-grid-angular\r\n      #agGrid\r\n      style=\"width: 100%; height: calc(100vh - 165px);\"\r\n      id=\"myGrid\"\r\n      class=\"ag-theme-balham\"\r\n      [sideBar]=\"sideBar\"\r\n      [modules]=\"modules\"\r\n      floatingFilter\r\n      [gridOptions]=\"gridOptions\"\r\n      [defaultColDef]=\"defaultColDef\"\r\n      [rowData]=\"rowData\"\r\n      [columnDefs]=\"columnDefs\"\r\n\r\n      [animateRows]=\"true\"\r\n      [frameworkComponents]=\"frameworkComponents\"\r\n      [enableRangeSelection]=\"true\"\r\n      [suppressRowClickSelection]=\"true\"\r\n        [pivotPanelShow]=\"pivotPanelShow\"\r\n        [icons]=\"icons\"\r\n      [pagination]=\"true\"\r\n      [suppressPaginationPanel]=\"true\"\r\n      [enterMovesDown]=\"true\"\r\n      [enterMovesDownAfterEdit]=\"true\"\r\n      [enableFillHandle]=\"true\"\r\n      [enableCellChangeFlash]=\"false\"\r\n      [aggregateOnlyChangedColumns]=\"true\"\r\n      [rememberGroupStateWhenNewData]=\"true\"\r\n      [components]=\"components\"\r\n      [rowBuffer]=\"rowBuffer\"\r\n      [rowSelection]=\"rowSelection\"\r\n      [paginationPageSize]=\"paginationPageSize\"\r\n      [suppressContextMenu]=\"true\"\r\n    (cellValueChanged)=\"onCellValueChanged($event)\"\r\n    (cellClicked)=\"onCellClicked($event)\"\r\n            (cellKeyDown)=\"onCellKeyDown($event)\"\r\n            (cellKeyPress)=\"onCellKeyPress($event)\"\r\n            (rowSelected)=\"onRowSelected($event)\"\r\n      (gridReady)=\"onGridReady($event)\"\r\n    (cellFocused)=\"onCellFocused($event)\"\r\n    (cellDoubleClicked)=\"onCellDoubleClicked($event)\"\r\n    \r\n      >\r\n\r\n  </ag-grid-angular>\r\n  <!-- (focusout)=\"focusOut()\" -->\r\n  <!-- (paginationChanged)=\"onPaginationChanged($event)\" -->\r\n  <!-- costomize pagination -->\r\n  <div class=\"test-header\">\r\n    <!-- indique nomber of rows selected -->\r\n    <!-- <div style=\"display: inline-block;\">\r\n      <span class=\"ms-1\" style=\"color: blue;\">\r\n        <mat-checkbox class=\"example-margin\"\r\n          [checked]=\"isRowsSelected\"\r\n          [color]=\"blue\">\r\n          {{rowsSelected}} lines selected\r\n        </mat-checkbox>\r\n      </span>\r\n    </div> -->\r\n    <div style=\"display: inline-block; margin-left: 15%;\">\r\n    <span class=\"ms-1\"><i class=\"fas fa-pen\" (click)=\"invokeEditMethod($event)\" style=\"margin-top: 15px; cursor: pointer;\"></i></span>\r\n      <span class=\"ms-1\"><i class=\"fas fa-trash\" (click)=\"invokeDeleteMethod($event)\" style=\"margin-top: 15px; cursor: pointer;\"></i></span>\r\n      <span class=\"ms-1\"><i class=\"fa fa-link\" (click)=\"invokeLinkMethod($event)\" style=\"margin-top: 15px; cursor: pointer;\"></i></span>\r\n\r\n      <input type=\"text\" placeholder=\"'TIV       %'\" id=\"tivInput\" value=\"{{tivInput}}\" style=\"display: inline-block; margin-left: 50px; color: blue; border: none; border-bottom: 1px solid blue; width: 60px; align-content: center; font-size: 13px;\">\r\n\r\n    <section class=\"example-section\" style=\"display: inline-block;\">\r\n      <ul class=\"tiv-class\">\r\n        <li *ngFor=\"let elmt of calculTiv\" style=\"display: inline-block;\">\r\n          <mat-checkbox class=\"example-margin\"\r\n          *ngIf=\"!colorPdBi\"\r\n        [checked]=\"elmt.checked\"\r\n        [color]=\"blue\"\r\n        (change)=\"setCheck($event.checked, elmt.id)\" style=\"margin-left: 30px; color: grey; font-size: 10px;\">\r\n        {{elmt.name}}\r\n      </mat-checkbox>\r\n      <mat-checkbox class=\"example-margin\"\r\n      *ngIf=\"colorPdBi\"\r\n        [checked]=\"elmt.checked\"\r\n        [color]=\"blue\"\r\n        (change)=\"setCheck($event.checked, elmt.id)\" style=\"margin-left: 30px; color: red;  font-size: 10px;\">\r\n        {{elmt.name}}\r\n      </mat-checkbox>\r\n        </li>\r\n      </ul>\r\n    </section>\r\n    <span class=\"ms-1\">\r\n      <i class=\"fas fa-save\"  (click)=\"invokeTivMethod($event)\" style=\"margin-top: 10px; cursor: pointer;\"></i>\r\n      </span>\r\n  </div>\r\n\r\n  <div style=\"display: inline-block; float: right; margin-right: 10px;\">\r\n\r\n    <ul class=\"pagination\" style=\"margin-top: 5px; display: inline-block; float: right;  margin-right: 10px;\">\r\n      <li *ngIf=\"currentPage != 1\"><a id=\"idFirst\" (click)=\"onBtFirst()\"><i class=\"fa  fa-step-backward fa-fw\" aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage == 1\"><a id=\"idFirsta\"><i id=\"idFirstOne\" class=\"fa  fa-step-backward fa-fw\"\r\n            aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage != 1\"><a id=\"idPreview\" (click)=\"onBtPrevious()\"><i class=\"fa fa-chevron-left fa-fw\"\r\n            aria-hidden=\"true\"></i></a></li>\r\n            <li *ngIf=\"currentPage == 1\"><a id=\"idPreview\"><i id=\"idPreviewOne\" class=\" fa fa-chevron-left fa-fw\"\r\n                  aria-hidden=\"true\"></i></a></li>\r\n\r\n      <li *ngIf=\"currentPage==pageFirst\">\r\n        <a id=\"idOne\" class=\"active\">{{currentPage}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage==pageFirst && pageLast - currentPage > 0\" (click)=\"onBtSpecifiquePage(currentPage + 1)\">\r\n        <a id=\"idOne\">{{currentPage + 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage==pageFirst && pageLast - currentPage - 1 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 2)\">\r\n        <a id=\"idOne\">{{currentPage + 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage==pageFirst && pageLast - currentPage - 2 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 3)\">\r\n        <a id=\"idOne\">{{currentPage + 3}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage==pageFirst && pageLast - currentPage - 3 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 4)\">\r\n        <a id=\"idOne\">{{currentPage + 4}}</a>\r\n      </li>\r\n\r\n\r\n      <li *ngIf=\"currentPage == 2\">\r\n        <a id=\"idOne\" (click)=\"onBtFirst()\">{{currentPage - 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 2\">\r\n        <a id=\"idOne\" class=\"active\">{{currentPage}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 2 && pageLast - currentPage > 0\" (click)=\"onBtSpecifiquePage(currentPage + 1)\">\r\n        <a id=\"idOne\">{{currentPage + 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 2 && pageLast - currentPage - 1 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 2)\">\r\n        <a id=\"idOne\">{{currentPage + 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 2 && pageLast - currentPage - 2 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 3)\">\r\n        <a id=\"idOne\">{{currentPage + 3}}</a>\r\n      </li>\r\n\r\n\r\n      <li *ngIf=\"currentPage == 3\" (click)=\"onBtSpecifiquePage(currentPage - 1)\">\r\n        <a id=\"idOne\">{{currentPage - 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 3\" (click)=\"onBtSpecifiquePage(currentPage - 1)\">\r\n        <a id=\"idOne\">{{currentPage - 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 3\">\r\n        <a id=\"idOne\" class=\"active\">{{currentPage}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 3 && pageLast - currentPage - 1 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 2)\">\r\n        <a id=\"idOne\">{{currentPage + 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage == 3 && pageLast - currentPage - 2 > 0\" (click)=\"onBtSpecifiquePage(currentPage + 3)\">\r\n        <a id=\"idOne\">{{currentPage + 3}}</a></li>\r\n\r\n\r\n      <li\r\n        *ngIf=\"currentPage!=pageFirst && currentPage - 3 > 0  && pageLast - currentPage != 2 && pageLast - currentPage != 1  && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\"\r\n        (click)=\"onBtSpecifiquePage(currentPage -2)\">\r\n        <a id=\"idOne\" >{{currentPage - 2}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage!=pageFirst && currentPage - 3 > 0  && pageLast - currentPage != 2 && pageLast - currentPage != 1  && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\"\r\n        (click)=\"onBtSpecifiquePage(currentPage - 1)\">\r\n        <a id=\"idOne\">{{currentPage - 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"currentPage!=pageFirst && currentPage - 3 > 0  && pageLast - currentPage != 2 && pageLast - currentPage != 1  && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\">\r\n        <a id=\"idOne\" class=\"active\">{{currentPage}}</a>\r\n      </li>\r\n\r\n      <li *ngIf=\"pageLast - currentPage - 2 > 0 && currentPage != 1 && currentPage != 2 && currentPage != 3 && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\"\r\n        (click)=\"onBtSpecifiquePage(currentPage + 1)\">\r\n        <a id=\"idOne\">{{currentPage + 1}}</a>\r\n      </li>\r\n      <li *ngIf=\"pageLast - currentPage - 2 > 0  && currentPage != 1 && currentPage != 2 && currentPage != 3 && pageLast - currentPage != 2 && pageLast - currentPage != 1 && currentPage != pageLast\"\r\n        (click)=\"onBtSpecifiquePage(currentPage + 2)\">\r\n        <a id=\"idOne\">{{currentPage + 2}}</a>\r\n      </li>\r\n\r\n        <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 2)\"><a id=\"idOne\">{{currentPage - 2}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 1)\"><a id=\"idOne\">{{currentPage - 1}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\"><a id=\"idOne\" class=\"active\">{{currentPage}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage + 1)\"><a id=\"idOne\">{{currentPage + 1}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 2 && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage + 2)\"><a id=\"idOne\">{{currentPage + 2}}</a></li>\r\n\r\n        <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\" (click)=\"onBtSpecifiquePage(currentPage - 3)\">{{currentPage - 3}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\" (click)=\"onBtSpecifiquePage(currentPage - 2)\">{{currentPage - 2}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\" (click)=\"onBtSpecifiquePage(currentPage - 1)\">{{currentPage - 1}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\" class=\"active\">{{currentPage}}</a></li>\r\n        <li *ngIf=\"pageLast - currentPage == 1 && pageLast > 4\"><a id=\"idOne\" (click)=\"onBtSpecifiquePage(currentPage + 1)\">{{currentPage + 1}}</a></li>\r\n\r\n          <li *ngIf=\"currentPage == pageLast && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 4)\"><a id=\"idOne\">{{currentPage - 4}}</a></li>\r\n          <li *ngIf=\"currentPage == pageLast && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 3)\"><a id=\"idOne\">{{currentPage - 3}}</a></li>\r\n          <li *ngIf=\"currentPage == pageLast && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 2)\"><a id=\"idOne\">{{currentPage - 2}}</a></li>\r\n          <li *ngIf=\"currentPage == pageLast && pageLast > 4\" (click)=\"onBtSpecifiquePage(currentPage - 1)\"><a id=\"idOne\">{{currentPage - 1}}</a></li>\r\n          <li *ngIf=\"currentPage == pageLast && pageLast > 4\"><a id=\"idOne\" class=\"active\">{{currentPage}}</a></li>\r\n\r\n      <li *ngIf=\"currentPage != pageLast\"><a id=\"idNext\" (click)=\"onBtNext()\"><i class=\"fa fa-chevron-right fa-fw\" aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage == pageLast\"><a id=\"idNexta\"><i id=\"idNextL\" class=\"fa fa-chevron-right fa-fw\"\r\n        aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage != pageLast\"><a id=\"idLast\" (click)=\"onBtLast()\"><i class=\"fa fa-step-forward fa-fw\" aria-hidden=\"true\"></i></a></li>\r\n      <li *ngIf=\"currentPage == pageLast\"><a id=\"idLast\"><i id=\"idLastL\" class=\"fa fa-step-forward fa-fw\"\r\n          aria-hidden=\"true\"></i></a></li>\r\n    </ul>\r\n  </div>\r\n  </div>\r\n</div>\r\n<div style=\"display: inline-block; float: right; z-index:1; position:fixed; margin-top: 7px;\">\r\n  <a (click)=\"onManageColumn()\"><mat-icon style=\" margin-right: 4px; font-size: 30px;\">menu</mat-icon></a>\r\n</div>\r\n<nz-modal\r\n[(nzVisible)]=\"isManageColumn\"\r\n[nzTitle]=\"modalTitleManageColumn\"\r\n[nzContent]=\"modalContentManageColumn\"\r\n[nzFooter]=\"modalFooterManageColumn\"\r\n(nzOnCancel)=\"handleOutsideClick()\"\r\n[nzBodyStyle]=\"{'overflow': 'scroll'}\"\r\n>\r\n<ng-template #modalTitleManageColumn>Manage Columns</ng-template>\r\n\r\n<ng-template #modalContentManageColumn style=\"overflow: scroll;\">\r\n\r\n  <div  class=\"example-list mt-20\" >  \r\n    <section class=\"example-section\">\r\n      <div class=\"search-box\">\r\n        <input #myInput class=\"form-control\" [(ngModel)]=\"name\"  style=\"height: 30px;font-size: 12px;text-align: center;padding: 0.5rem;background: #cccccc52\">\r\n        <div class=\"search-box-placeholder-wrapper\">\r\n          <mat-icon class=\"search-box-placeholder\">search</mat-icon>\r\n        </div>\r\n      </div>\r\n    </section>\r\n    <section class=\"example-section p-3\">\r\n      <mat-checkbox class=\"example-margin\" (change)=\"setAllTree($event.checked)\">Select All</mat-checkbox>\r\n    </section>\r\n \r\n    <mat-accordion class=\"example-headers-align\" multi>\r\n<mat-expansion-panel  *ngFor=\"let line of categoriesFilter(task) ; let i = index\">\r\n\r\n\r\n<mat-expansion-panel-header>\r\n<mat-panel-title>\r\n  <mat-checkbox class=\"example-margin\"\r\n        [checked]=\"allComplete\"\r\n        (click)=\"$event.stopPropagation()\" \r\n        (keydown)=\"$event.stopPropagation()\"\r\n        (change)=\"setAll($event.checked, i)\"\r\n        >\r\n      </mat-checkbox>\r\n</mat-panel-title>\r\n<mat-panel-description>\r\n  <span >\r\n    {{line.name}}\r\n  </span>\r\n \r\n</mat-panel-description>\r\n</mat-expansion-panel-header>\r\n\r\n\r\n<ul  cdkDropList class=\"example-list pl-4 pr-2\" (cdkDropListDropped)=\"drop($event,i)\">\r\n    \r\n  <li class=\"example-box pr-2 pl-2 \"    [cdkDragDisabled]=\"!subtask.checked\" [class.highlight]=\"subtask.checked\" *ngFor=\"let subtask of  dataFiltered(line)\" cdkDrag>\r\n    <mat-checkbox [(ngModel)]=\"subtask.checked\" class=\"mt-2\"\r\n                  (ngModelChange)=\"updateAllComplete()\"\r\n                  >\r\n                  <span (click)=\"onClickSheet($event, line.name, subtask.name)\" class=\"w-100 drag-content\">\r\n                    {{subtask.name}}\r\n                  </span>\r\n      \r\n    </mat-checkbox>\r\n  </li>\r\n</ul>\r\n\r\n</mat-expansion-panel>\r\n\r\n    </mat-accordion>\r\n    \r\n  \r\n  \r\n\r\n        \r\n</div>\r\n</ng-template>\r\n\r\n<ng-template #modalFooterManageColumn>\r\n  <button nz-button class=\"cancel-btn\" nzType=\"default\" (click)=\"handleCancelManageColumn()\">Cancel</button>\r\n  <button nz-button class=\"reset-btn\" (click)=\"handleResetManageColumn()\">Reset</button>\r\n  <button nz-button class=\"save-btn\" (click)=\"handleOkManageColumn()\" [nzLoading]=\"isConfirmLoading\">Save</button>\r\n</ng-template>\r\n</nz-modal>\r\n\r\n    <div *ngIf=\"laoding$|async\" style=\"margin-top: -200px;\">\r\n      <div class=\"app-loading\">\r\n        <div class=\"logo\">\r\n          <svg class=\"spinner\" viewBox=\"25 25 50 50\">\r\n            <circle class=\"path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\" stroke-width=\"2\" stroke-miterlimit=\"10\" />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    <nz-modal\r\n    [(nzVisible)]=\"isVisiblePdBi\"\r\n    [nzTitle]=\"modalTitlePb\"\r\n    [nzContent]=\"modalContentPb\"\r\n    [nzFooter]=\"modalFooterPb\"\r\n    (nzOnCancel)=\"handleCancelPdBi()\"\r\n    >\r\n    <ng-template #modalTitlePb>Confirm</ng-template>\r\n\r\n    <ng-template #modalContentPb>\r\n      <p>Do you want to save the changes?</p>\r\n    </ng-template>\r\n\r\n    <ng-template #modalFooterPb>\r\n      <button nz-button nzType=\"default\" (click)=\"handleCancelPdBi()\">Cancel</button>\r\n      <button nz-button class=\"confirm-btn\" nzType=\"primary\" (click)=\"handleOkPdBi()\" [nzLoading]=\"isConfirmLoading\">Confirm</button>\r\n    </ng-template>\r\n    </nz-modal>\r\n\r\n<nz-modal [(nzVisible)]=\"isVisibleRestor\" nzTitle=\"Modal Title\" (nzOnCancel)=\"handleCancelRestor()\"\r\n          (nzOnOk)=\"handleOkRestor()\" [nzOkLoading]=\"isOkLoadingRestor\" *ngIf=\"isVisibleRestor\">\r\n  <p>Restore initial data</p>\r\n</nz-modal>\r\n\r\n\r\n"

/***/ }),

/***/ "./src/app/shared/shared.module.ts":
/*!*****************************************!*\
  !*** ./src/app/shared/shared.module.ts ***!
  \*****************************************/
/*! exports provided: SharedModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SharedModule", function() { return SharedModule; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "./node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/forms */ "./node_modules/@angular/forms/fesm5/forms.js");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @ngx-translate/core */ "./node_modules/@ngx-translate/core/fesm5/ngx-translate-core.js");
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/button */ "./node_modules/@angular/material/esm5/button.es5.js");
/* harmony import */ var _angular_material_menu__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/menu */ "./node_modules/@angular/material/esm5/menu.es5.js");
/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/select */ "./node_modules/@angular/material/esm5/select.es5.js");
/* harmony import */ var _angular_material_tabs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/tabs */ "./node_modules/@angular/material/esm5/tabs.es5.js");
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/input */ "./node_modules/@angular/material/esm5/input.es5.js");
/* harmony import */ var _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/progress-spinner */ "./node_modules/@angular/material/esm5/progress-spinner.es5.js");
/* harmony import */ var _angular_material_chips__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/chips */ "./node_modules/@angular/material/esm5/chips.es5.js");
/* harmony import */ var _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/sidenav */ "./node_modules/@angular/material/esm5/sidenav.es5.js");
/* harmony import */ var _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material/checkbox */ "./node_modules/@angular/material/esm5/checkbox.es5.js");
/* harmony import */ var _angular_material_card__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/card */ "./node_modules/@angular/material/esm5/card.es5.js");
/* harmony import */ var _angular_material_list__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/list */ "./node_modules/@angular/material/esm5/list.es5.js");
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/icon */ "./node_modules/@angular/material/esm5/icon.es5.js");
/* harmony import */ var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material/tooltip */ "./node_modules/@angular/material/esm5/tooltip.es5.js");
/* harmony import */ var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/material/snack-bar */ "./node_modules/@angular/material/esm5/snack-bar.es5.js");
/* harmony import */ var _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/material/slide-toggle */ "./node_modules/@angular/material/esm5/slide-toggle.es5.js");
/* harmony import */ var _angular_material___WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/material/ */ "./node_modules/@angular/material/esm5/material.es5.js");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/material/sort */ "./node_modules/@angular/material/esm5/sort.es5.js");
/* harmony import */ var _ag_grid_community_angular__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @ag-grid-community/angular */ "./node_modules/@ag-grid-community/angular/main.js");
/* harmony import */ var _ag_grid_community_angular__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_ag_grid_community_angular__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @fortawesome/angular-fontawesome */ "./node_modules/@fortawesome/angular-fontawesome/fesm5/angular-fontawesome.js");
/* harmony import */ var _fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @fortawesome/fontawesome-svg-core */ "./node_modules/@fortawesome/fontawesome-svg-core/index.es.js");
/* harmony import */ var _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @fortawesome/free-solid-svg-icons */ "./node_modules/@fortawesome/free-solid-svg-icons/index.es.js");
/* harmony import */ var _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @fortawesome/free-brands-svg-icons */ "./node_modules/@fortawesome/free-brands-svg-icons/index.es.js");
/* harmony import */ var _big_input_big_input_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./big-input/big-input.component */ "./src/app/shared/big-input/big-input.component.ts");
/* harmony import */ var _big_input_big_input_action_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./big-input/big-input-action.component */ "./src/app/shared/big-input/big-input-action.component.ts");
/* harmony import */ var _angular_flex_layout__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! @angular/flex-layout */ "./node_modules/@angular/flex-layout/esm5/flex-layout.es5.js");
/* harmony import */ var _angular_cdk_table__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! @angular/cdk/table */ "./node_modules/@angular/cdk/esm5/table.es5.js");
/* harmony import */ var _grid_grid_component__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./grid/grid.component */ "./src/app/shared/grid/grid.component.ts");
/* harmony import */ var _preview_grid_preview_grid_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./preview-grid/preview-grid.component */ "./src/app/shared/preview-grid/preview-grid.component.ts");
/* harmony import */ var _shared_location_grid_shared_location_grid_component__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./shared-location-grid/shared-location-grid.component */ "./src/app/shared/shared-location-grid/shared-location-grid.component.ts");
/* harmony import */ var _customized_shared_location_grid_customized_shared_location_grid_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./customized-shared-location-grid/customized-shared-location-grid.component */ "./src/app/shared/customized-shared-location-grid/customized-shared-location-grid.component.ts");
/* harmony import */ var _location_grid_edite_location_grid_edite_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./location-grid-edite/location-grid-edite.component */ "./src/app/shared/location-grid-edite/location-grid-edite.component.ts");
/* harmony import */ var primeng_table__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! primeng/table */ "./node_modules/primeng/table.js");
/* harmony import */ var primeng_table__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(primeng_table__WEBPACK_IMPORTED_MODULE_35__);
/* harmony import */ var _toggle_header_button_toggle_header_button_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./toggle-header-button/toggle-header-button.component */ "./src/app/shared/toggle-header-button/toggle-header-button.component.ts");
/* harmony import */ var ng_zorro_antd__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ng-zorro-antd */ "./node_modules/ng-zorro-antd/fesm5/ng-zorro-antd.js");
/* harmony import */ var primeng_slider__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! primeng/slider */ "./node_modules/primeng/slider.js");
/* harmony import */ var primeng_slider__WEBPACK_IMPORTED_MODULE_38___default = /*#__PURE__*/__webpack_require__.n(primeng_slider__WEBPACK_IMPORTED_MODULE_38__);
/* harmony import */ var primeng_primeng__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! primeng/primeng */ "./node_modules/primeng/primeng.js");
/* harmony import */ var primeng_primeng__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(primeng_primeng__WEBPACK_IMPORTED_MODULE_39__);
/* harmony import */ var primeng_paginator__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! primeng/paginator */ "./node_modules/primeng/paginator.js");
/* harmony import */ var primeng_paginator__WEBPACK_IMPORTED_MODULE_40___default = /*#__PURE__*/__webpack_require__.n(primeng_paginator__WEBPACK_IMPORTED_MODULE_40__);
/* harmony import */ var _app_shared_services_geocoding_geo_coding_service__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! @app/shared/services/geocoding/geo-coding.service */ "./src/app/shared/services/geocoding/geo-coding.service.ts");
/* harmony import */ var _app_dcm_modules_upload_pipes_format_double_pipe__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! @app/dcm/modules/upload/pipes/format-double.pipe */ "./src/app/dcm/modules/upload/pipes/format-double.pipe.ts");
/* harmony import */ var _app_shared_focus_directive__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! @app/shared/focus-directive */ "./src/app/shared/focus-directive.ts");
/* harmony import */ var ngx_echarts__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ngx-echarts */ "./node_modules/ngx-echarts/fesm5/ngx-echarts.js");
/* harmony import */ var ng2_right_click_menu__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ng2-right-click-menu */ "./node_modules/ng2-right-click-menu/fesm5/ng2-right-click-menu.js");
/* harmony import */ var ng_keyboard_shortcuts__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ng-keyboard-shortcuts */ "./node_modules/ng-keyboard-shortcuts/fesm5/ng-keyboard-shortcuts.js");
/* harmony import */ var ngx_file_drop__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ngx-file-drop */ "./node_modules/ngx-file-drop/fesm5/ngx-file-drop.js");
/* harmony import */ var _app_dcm_directives_focus_directive_directive__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! @app/dcm/directives/focus-directive.directive */ "./src/app/dcm/directives/focus-directive.directive.ts");
/* harmony import */ var _customized_shared_location_grid_customized_shared_grid_component__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./customized-shared-location-grid/customized-shared-grid.component */ "./src/app/shared/customized-shared-location-grid/customized-shared-grid.component.ts");
/* harmony import */ var _app_dcm_components_header_component_sortable_header_component__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! @app/dcm/components/header-component/sortable-header.component */ "./src/app/dcm/components/header-component/sortable-header.component.ts");
/* harmony import */ var _app_dcm_components_header_group_component_header_group_component__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! @app/dcm/components/header-group-component/header-group.component */ "./src/app/dcm/components/header-group-component/header-group.component.ts");
/* harmony import */ var _app_dcm_components_header_icons_component_edit_component_header_edit_component__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! @app/dcm/components/header-icons-component/edit-component/header-edit.component */ "./src/app/dcm/components/header-icons-component/edit-component/header-edit.component.ts");
/* harmony import */ var _app_dcm_components_header_icons_component_geocode_component_header_geocode_component__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! @app/dcm/components/header-icons-component/geocode-component/header-geocode.component */ "./src/app/dcm/components/header-icons-component/geocode-component/header-geocode.component.ts");
/* harmony import */ var _app_dcm_components_header_icons_component_supp_component_header_supp_component__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! @app/dcm/components/header-icons-component/supp-component/header-supp.component */ "./src/app/dcm/components/header-icons-component/supp-component/header-supp.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_dropdown_error_filter_dropdown_error_filter_component__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/dropdown-error-filter/dropdown-error-filter.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_tiv_filters_tiv_filter_component__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/tiv-filters/tiv-filter.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_division_filter_division_filter_component__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/division-filter/division-filter.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_filter_component_example_partial_match_filter_component__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/filter-component-example/partial-match-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/filter-component-example/partial-match-filter.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_default_filter_component__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters/default-filter.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_quick_search_default_filtered_quick_search_component__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/default-filters-quick-search/default-filtered-quick-search.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_import_import_navbars_import_navbar_component__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/import/import-navbars/import-navbar.component */ "./src/app/dcm/modules/upload/componenets/import/import-navbars/import-navbar.component.ts");
/* harmony import */ var _shared_location_grid_shared_location_upload_grid_component___WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./shared-location-grid/shared-location-upload-grid.component  */ "./src/app/shared/shared-location-grid/shared-location-upload-grid.component .ts");
/* harmony import */ var _angular_material_expansion__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! @angular/material/expansion */ "./node_modules/@angular/material/esm5/expansion.es5.js");
/* harmony import */ var _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! @angular/cdk/drag-drop */ "./node_modules/@angular/cdk/esm5/drag-drop.es5.js");
/* harmony import */ var _pipes_filter_pipe__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./pipes/filter.pipe */ "./src/app/shared/pipes/filter.pipe.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/general-location-info-popup.component */ "./src/app/shared/popups/general-location-info-popup/general-location-info-popup.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_pipes_keys_pipe__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/pipes/keys.pipe */ "./src/app/shared/popups/general-location-info-popup/pipes/keys.pipe.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_cat_Analysis_Info_cat_Analysis_Info_component__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/cat-Analysis-Info/cat-Analysis-Info.component */ "./src/app/shared/popups/general-location-info-popup/cat-Analysis-Info/cat-Analysis-Info.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_general_details_general_details_component__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/general-details/general-details.component */ "./src/app/shared/popups/general-location-info-popup/general-details/general-details.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_geographical_geographical_component__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/geographical/geographical.component */ "./src/app/shared/popups/general-location-info-popup/geographical/geographical.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_insurred_values_insurred_values_component__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/insurred-values/insurred-values.component */ "./src/app/shared/popups/general-location-info-popup/insurred-values/insurred-values.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_more_info_more_info_component__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/more-info/more-info.component */ "./src/app/shared/popups/general-location-info-popup/more-info/more-info.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_mpl_mpl_component__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/mpl/mpl.component */ "./src/app/shared/popups/general-location-info-popup/mpl/mpl.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_pricing_pricing_component__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/pricing/pricing.component */ "./src/app/shared/popups/general-location-info-popup/pricing/pricing.component.ts");
/* harmony import */ var _app_shared_popups_general_location_info_popup_tand_C_tand_C_component__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! @app/shared/popups/general-location-info-popup/tand-C/tand-C.component */ "./src/app/shared/popups/general-location-info-popup/tand-C/tand-C.component.ts");
/* harmony import */ var _popups_general_location_info_popup_tand_C_deductible_item_deductible_item_component__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./popups/general-location-info-popup/tand-C/deductible-item/deductible-item.component */ "./src/app/shared/popups/general-location-info-popup/tand-C/deductible-item/deductible-item.component.ts");
/* harmony import */ var _popups_general_location_info_popup_tand_C_deductible_checkbox_deductible_checkbox_component__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./popups/general-location-info-popup/tand-C/deductible-checkbox/deductible-checkbox.component */ "./src/app/shared/popups/general-location-info-popup/tand-C/deductible-checkbox/deductible-checkbox.component.ts");
/* harmony import */ var _popups_general_location_info_popup_pipes_mondatory_pipe__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./popups/general-location-info-popup/pipes/mondatory.pipe */ "./src/app/shared/popups/general-location-info-popup/pipes/mondatory.pipe.ts");
/* harmony import */ var _popups_general_location_info_popup_pipes_item_visibility_pipe__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./popups/general-location-info-popup/pipes/item-visibility.pipe */ "./src/app/shared/popups/general-location-info-popup/pipes/item-visibility.pipe.ts");
/* harmony import */ var _shared_location_grid_custom_tooltip_component__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./shared-location-grid/custom-tooltip.component */ "./src/app/shared/shared-location-grid/custom-tooltip.component.ts");
/* harmony import */ var _popups_general_location_info_popup_pipes_unit_pipe_pipe__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./popups/general-location-info-popup/pipes/unit-pipe.pipe */ "./src/app/shared/popups/general-location-info-popup/pipes/unit-pipe.pipe.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_editor_by_type_numeric_editor_component__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/editor-by-type/numeric-editor.component */ "./src/app/dcm/modules/upload/componenets/cleansing/editor-by-type/numeric-editor.component.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_editor_by_type_doubling_editor_component__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/editor-by-type/doubling-editor.component */ "./src/app/dcm/modules/upload/componenets/cleansing/editor-by-type/doubling-editor.component.ts");
/* harmony import */ var _popups_general_location_info_popup_directive_number_input_directive__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./popups/general-location-info-popup/directive/number-input.directive */ "./src/app/shared/popups/general-location-info-popup/directive/number-input.directive.ts");
/* harmony import */ var _app_dcm_modules_upload_componenets_cleansing_filters_edit_all_edit_all_component__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! @app/dcm/modules/upload/componenets/cleansing/filters/edit-all/edit-all.component */ "./src/app/dcm/modules/upload/componenets/cleansing/filters/edit-all/edit-all.component.ts");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};


























_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_23__["library"].add(_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faBars"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faUserCircle"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faPowerOff"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faCog"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faRocket"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faPlayCircle"], _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_25__["faGithub"], _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_25__["faMediumM"], _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_25__["faTwitter"], _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_25__["faInstagram"], _fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_25__["faYoutube"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faPlus"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faEdit"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faTrash"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faTimes"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faCaretUp"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faCaretDown"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faExclamationTriangle"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faFilter"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faTasks"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faCheck"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faCross"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faSquare"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faLanguage"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faPaintBrush"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faLightbulb"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faWindowMaximize"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faStream"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faBook"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faCalculator"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faFileUpload"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faMagic"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faPlay"], _fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_24__["faStop"]);




























































var SharedModule = /** @class */ (function () {
    function SharedModule() {
    }
    SharedModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["NgModule"])({
            schemas: [
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["CUSTOM_ELEMENTS_SCHEMA"],
                _angular_core__WEBPACK_IMPORTED_MODULE_0__["NO_ERRORS_SCHEMA"]
            ],
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ReactiveFormsModule"],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateModule"],
                ngx_echarts__WEBPACK_IMPORTED_MODULE_44__["NgxEchartsModule"],
                _angular_material_button__WEBPACK_IMPORTED_MODULE_4__["MatButtonModule"],
                _angular_material_select__WEBPACK_IMPORTED_MODULE_6__["MatSelectModule"],
                ng_keyboard_shortcuts__WEBPACK_IMPORTED_MODULE_46__["KeyboardShortcutsModule"],
                _angular_material_tabs__WEBPACK_IMPORTED_MODULE_7__["MatTabsModule"],
                _ag_grid_community_angular__WEBPACK_IMPORTED_MODULE_21__["AgGridModule"].withComponents([
                    _app_dcm_components_header_component_sortable_header_component__WEBPACK_IMPORTED_MODULE_50__["SortableHeaderComponent"],
                    _app_dcm_components_header_group_component_header_group_component__WEBPACK_IMPORTED_MODULE_51__["HeaderGroupComponent"],
                    _app_dcm_components_header_icons_component_edit_component_header_edit_component__WEBPACK_IMPORTED_MODULE_52__["HeaderEditComponent"],
                    _app_dcm_components_header_icons_component_geocode_component_header_geocode_component__WEBPACK_IMPORTED_MODULE_53__["HeaderGeocodeComponent"],
                    _app_dcm_components_header_icons_component_supp_component_header_supp_component__WEBPACK_IMPORTED_MODULE_54__["HeaderSuppComponent"],
                    _app_dcm_modules_upload_componenets_cleansing_filters_dropdown_error_filter_dropdown_error_filter_component__WEBPACK_IMPORTED_MODULE_55__["DropdownErrorFilterComponent"],
                    _app_dcm_modules_upload_componenets_cleansing_filters_division_filter_division_filter_component__WEBPACK_IMPORTED_MODULE_57__["DivisionFilterComponent"],
                    _app_dcm_modules_upload_componenets_cleansing_filters_tiv_filters_tiv_filter_component__WEBPACK_IMPORTED_MODULE_56__["TivFilterComponent"],
                    _customized_shared_location_grid_customized_shared_location_grid_component__WEBPACK_IMPORTED_MODULE_33__["CustomizedSharedLocationGridComponent"],
                    _app_dcm_modules_upload_componenets_cleansing_filters_edit_all_edit_all_component__WEBPACK_IMPORTED_MODULE_85__["EditAllComponent"],
                    _app_dcm_modules_upload_componenets_cleansing_filters_filter_component_example_partial_match_filter_component__WEBPACK_IMPORTED_MODULE_58__["PartialMatchFilterComponent"],
                    _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_default_filter_component__WEBPACK_IMPORTED_MODULE_59__["DefaultFilterComponent"],
                    _shared_location_grid_custom_tooltip_component__WEBPACK_IMPORTED_MODULE_80__["CustomTooltipComponent"],
                    _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_quick_search_default_filtered_quick_search_component__WEBPACK_IMPORTED_MODULE_60__["DefaultFilteredQuickSearchComponent"],
                    _app_dcm_modules_upload_componenets_cleansing_editor_by_type_doubling_editor_component__WEBPACK_IMPORTED_MODULE_83__["DoublingEditor"],
                    _app_dcm_modules_upload_componenets_cleansing_editor_by_type_numeric_editor_component__WEBPACK_IMPORTED_MODULE_82__["NumericEditor"]
                ]),
                _angular_material_input__WEBPACK_IMPORTED_MODULE_8__["MatInputModule"],
                _angular_material_chips__WEBPACK_IMPORTED_MODULE_10__["MatChipsModule"],
                _angular_material_card__WEBPACK_IMPORTED_MODULE_13__["MatCardModule"],
                _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_12__["MatCheckboxModule"],
                _angular_material_list__WEBPACK_IMPORTED_MODULE_14__["MatListModule"],
                _angular_material_icon__WEBPACK_IMPORTED_MODULE_15__["MatIconModule"],
                _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_16__["MatTooltipModule"],
                _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_17__["MatSnackBarModule"],
                _angular_material___WEBPACK_IMPORTED_MODULE_19__["MatTableModule"],
                _angular_cdk_table__WEBPACK_IMPORTED_MODULE_29__["CdkTableModule"],
                _angular_material___WEBPACK_IMPORTED_MODULE_19__["MatPaginatorModule"],
                ngx_file_drop__WEBPACK_IMPORTED_MODULE_47__["FileDropModule"],
                _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_22__["FontAwesomeModule"],
                _angular_flex_layout__WEBPACK_IMPORTED_MODULE_28__["FlexLayoutModule"],
                primeng_table__WEBPACK_IMPORTED_MODULE_35__["TableModule"],
                primeng_slider__WEBPACK_IMPORTED_MODULE_38__["SliderModule"],
                primeng_primeng__WEBPACK_IMPORTED_MODULE_39__["DropdownModule"],
                primeng_primeng__WEBPACK_IMPORTED_MODULE_39__["MultiSelectModule"],
                ng_zorro_antd__WEBPACK_IMPORTED_MODULE_37__["NgZorroAntdModule"],
                ng2_right_click_menu__WEBPACK_IMPORTED_MODULE_45__["ShContextMenuModule"],
                primeng_paginator__WEBPACK_IMPORTED_MODULE_40__["PaginatorModule"],
                _angular_material_expansion__WEBPACK_IMPORTED_MODULE_63__["MatExpansionModule"],
                _angular_cdk_drag_drop__WEBPACK_IMPORTED_MODULE_64__["DragDropModule"]
            ],
            declarations: [
                _app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_66__["GeneralLocationInfoPopupComponent"], _app_shared_popups_general_location_info_popup_cat_Analysis_Info_cat_Analysis_Info_component__WEBPACK_IMPORTED_MODULE_68__["CatAnalysisInfoComponent"], _app_shared_popups_general_location_info_popup_general_details_general_details_component__WEBPACK_IMPORTED_MODULE_69__["GeneralDetailsComponent"], _app_shared_popups_general_location_info_popup_geographical_geographical_component__WEBPACK_IMPORTED_MODULE_70__["GeographicalComponent"], _app_shared_popups_general_location_info_popup_insurred_values_insurred_values_component__WEBPACK_IMPORTED_MODULE_71__["InsurredValuesComponent"], _app_shared_popups_general_location_info_popup_more_info_more_info_component__WEBPACK_IMPORTED_MODULE_72__["MoreInfoComponent"], _app_shared_popups_general_location_info_popup_mpl_mpl_component__WEBPACK_IMPORTED_MODULE_73__["MplComponent"], _app_shared_popups_general_location_info_popup_pricing_pricing_component__WEBPACK_IMPORTED_MODULE_74__["PricingComponent"], _app_shared_popups_general_location_info_popup_tand_C_tand_C_component__WEBPACK_IMPORTED_MODULE_75__["TandCComponent"], _app_shared_popups_general_location_info_popup_pipes_keys_pipe__WEBPACK_IMPORTED_MODULE_67__["KeysPipe"],
                _app_dcm_modules_upload_pipes_format_double_pipe__WEBPACK_IMPORTED_MODULE_42__["FormatDoublePipe"], _app_dcm_directives_focus_directive_directive__WEBPACK_IMPORTED_MODULE_48__["FocusDirectiveDirective"],
                _app_shared_focus_directive__WEBPACK_IMPORTED_MODULE_43__["FocusDirective"], _big_input_big_input_component__WEBPACK_IMPORTED_MODULE_26__["BigInputComponent"], _big_input_big_input_action_component__WEBPACK_IMPORTED_MODULE_27__["BigInputActionComponent"],
                _grid_grid_component__WEBPACK_IMPORTED_MODULE_30__["GridComponent"], _preview_grid_preview_grid_component__WEBPACK_IMPORTED_MODULE_31__["PreviewGridComponent"], _shared_location_grid_shared_location_grid_component__WEBPACK_IMPORTED_MODULE_32__["SharedLocationGridComponent"],
                _shared_location_grid_shared_location_upload_grid_component___WEBPACK_IMPORTED_MODULE_62__["SharedLocationUploadGridComponent"],
                _customized_shared_location_grid_customized_shared_location_grid_component__WEBPACK_IMPORTED_MODULE_33__["CustomizedSharedLocationGridComponent"], _location_grid_edite_location_grid_edite_component__WEBPACK_IMPORTED_MODULE_34__["LocationGridEditeComponent"], _app_dcm_modules_upload_componenets_cleansing_filters_edit_all_edit_all_component__WEBPACK_IMPORTED_MODULE_85__["EditAllComponent"],
                _toggle_header_button_toggle_header_button_component__WEBPACK_IMPORTED_MODULE_36__["ToggleHeaderButtonComponent"],
                _app_dcm_modules_upload_componenets_import_import_navbars_import_navbar_component__WEBPACK_IMPORTED_MODULE_61__["ImportNavbarComponent"], _popups_general_location_info_popup_directive_number_input_directive__WEBPACK_IMPORTED_MODULE_84__["BjOnlyNumberDirective"],
                _customized_shared_location_grid_customized_shared_grid_component__WEBPACK_IMPORTED_MODULE_49__["CustomizedSharedGridComponent"], _app_dcm_components_header_component_sortable_header_component__WEBPACK_IMPORTED_MODULE_50__["SortableHeaderComponent"], _app_dcm_components_header_group_component_header_group_component__WEBPACK_IMPORTED_MODULE_51__["HeaderGroupComponent"],
                _app_dcm_components_header_icons_component_edit_component_header_edit_component__WEBPACK_IMPORTED_MODULE_52__["HeaderEditComponent"], _app_dcm_components_header_icons_component_geocode_component_header_geocode_component__WEBPACK_IMPORTED_MODULE_53__["HeaderGeocodeComponent"], _app_dcm_components_header_icons_component_supp_component_header_supp_component__WEBPACK_IMPORTED_MODULE_54__["HeaderSuppComponent"], _app_dcm_modules_upload_componenets_cleansing_filters_dropdown_error_filter_dropdown_error_filter_component__WEBPACK_IMPORTED_MODULE_55__["DropdownErrorFilterComponent"], _app_dcm_modules_upload_componenets_cleansing_filters_division_filter_division_filter_component__WEBPACK_IMPORTED_MODULE_57__["DivisionFilterComponent"], _app_dcm_modules_upload_componenets_cleansing_filters_tiv_filters_tiv_filter_component__WEBPACK_IMPORTED_MODULE_56__["TivFilterComponent"], _app_dcm_modules_upload_componenets_cleansing_filters_filter_component_example_partial_match_filter_component__WEBPACK_IMPORTED_MODULE_58__["PartialMatchFilterComponent"], _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_default_filter_component__WEBPACK_IMPORTED_MODULE_59__["DefaultFilterComponent"], _shared_location_grid_custom_tooltip_component__WEBPACK_IMPORTED_MODULE_80__["CustomTooltipComponent"], _app_dcm_modules_upload_componenets_cleansing_editor_by_type_doubling_editor_component__WEBPACK_IMPORTED_MODULE_83__["DoublingEditor"],
                _app_dcm_modules_upload_componenets_cleansing_editor_by_type_numeric_editor_component__WEBPACK_IMPORTED_MODULE_82__["NumericEditor"], _app_dcm_modules_upload_componenets_cleansing_filters_default_filters_quick_search_default_filtered_quick_search_component__WEBPACK_IMPORTED_MODULE_60__["DefaultFilteredQuickSearchComponent"], _pipes_filter_pipe__WEBPACK_IMPORTED_MODULE_65__["FilterPipe"], _popups_general_location_info_popup_tand_C_deductible_item_deductible_item_component__WEBPACK_IMPORTED_MODULE_76__["DeductibleItemComponent"], _popups_general_location_info_popup_tand_C_deductible_checkbox_deductible_checkbox_component__WEBPACK_IMPORTED_MODULE_77__["DeductibleCheckboxComponent"], _popups_general_location_info_popup_pipes_mondatory_pipe__WEBPACK_IMPORTED_MODULE_78__["MondatoryPipe"], _popups_general_location_info_popup_pipes_item_visibility_pipe__WEBPACK_IMPORTED_MODULE_79__["ItemVisibilityPipe"], _popups_general_location_info_popup_pipes_unit_pipe_pipe__WEBPACK_IMPORTED_MODULE_81__["UnitPipePipe"]
            ],
            providers: [_app_shared_services_geocoding_geo_coding_service__WEBPACK_IMPORTED_MODULE_41__["GeoCodingService"], _popups_general_location_info_popup_pipes_unit_pipe_pipe__WEBPACK_IMPORTED_MODULE_81__["UnitPipePipe"]],
            exports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_1__["CommonModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["FormsModule"],
                ngx_file_drop__WEBPACK_IMPORTED_MODULE_47__["FileDropModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_2__["ReactiveFormsModule"],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__["TranslateModule"],
                _app_dcm_modules_upload_pipes_format_double_pipe__WEBPACK_IMPORTED_MODULE_42__["FormatDoublePipe"],
                primeng_table__WEBPACK_IMPORTED_MODULE_35__["TableModule"],
                primeng_primeng__WEBPACK_IMPORTED_MODULE_39__["MultiSelectModule"],
                primeng_slider__WEBPACK_IMPORTED_MODULE_38__["SliderModule"],
                primeng_primeng__WEBPACK_IMPORTED_MODULE_39__["DropdownModule"],
                _angular_material_button__WEBPACK_IMPORTED_MODULE_4__["MatButtonModule"],
                _angular_material_menu__WEBPACK_IMPORTED_MODULE_5__["MatMenuModule"],
                _angular_material_tabs__WEBPACK_IMPORTED_MODULE_7__["MatTabsModule"],
                _angular_material_chips__WEBPACK_IMPORTED_MODULE_10__["MatChipsModule"],
                _angular_material_input__WEBPACK_IMPORTED_MODULE_8__["MatInputModule"],
                _angular_material_progress_spinner__WEBPACK_IMPORTED_MODULE_9__["MatProgressSpinnerModule"],
                _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_12__["MatCheckboxModule"],
                _angular_material_card__WEBPACK_IMPORTED_MODULE_13__["MatCardModule"],
                _angular_material_sidenav__WEBPACK_IMPORTED_MODULE_11__["MatSidenavModule"],
                _angular_material_list__WEBPACK_IMPORTED_MODULE_14__["MatListModule"],
                _angular_material_select__WEBPACK_IMPORTED_MODULE_6__["MatSelectModule"],
                _angular_material_icon__WEBPACK_IMPORTED_MODULE_15__["MatIconModule"],
                _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_16__["MatTooltipModule"],
                _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_17__["MatSnackBarModule"],
                _angular_material_slide_toggle__WEBPACK_IMPORTED_MODULE_18__["MatSlideToggleModule"],
                _angular_material___WEBPACK_IMPORTED_MODULE_19__["MatSliderModule"],
                _angular_material___WEBPACK_IMPORTED_MODULE_19__["MatStepperModule"],
                _angular_material___WEBPACK_IMPORTED_MODULE_19__["MatBadgeModule"],
                _angular_material___WEBPACK_IMPORTED_MODULE_19__["MatTableModule"],
                _angular_cdk_table__WEBPACK_IMPORTED_MODULE_29__["CdkTableModule"],
                _angular_material___WEBPACK_IMPORTED_MODULE_19__["MatPaginatorModule"],
                _angular_material___WEBPACK_IMPORTED_MODULE_19__["MatDialogModule"],
                _angular_material_sort__WEBPACK_IMPORTED_MODULE_20__["MatSortModule"],
                _angular_material_expansion__WEBPACK_IMPORTED_MODULE_63__["MatExpansionModule"],
                _fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_22__["FontAwesomeModule"],
                _grid_grid_component__WEBPACK_IMPORTED_MODULE_30__["GridComponent"],
                ng_keyboard_shortcuts__WEBPACK_IMPORTED_MODULE_46__["KeyboardShortcutsModule"],
                _app_shared_focus_directive__WEBPACK_IMPORTED_MODULE_43__["FocusDirective"],
                _angular_flex_layout__WEBPACK_IMPORTED_MODULE_28__["FlexLayoutModule"],
                _app_dcm_directives_focus_directive_directive__WEBPACK_IMPORTED_MODULE_48__["FocusDirectiveDirective"],
                _preview_grid_preview_grid_component__WEBPACK_IMPORTED_MODULE_31__["PreviewGridComponent"],
                _shared_location_grid_shared_location_grid_component__WEBPACK_IMPORTED_MODULE_32__["SharedLocationGridComponent"],
                _shared_location_grid_shared_location_upload_grid_component___WEBPACK_IMPORTED_MODULE_62__["SharedLocationUploadGridComponent"],
                _toggle_header_button_toggle_header_button_component__WEBPACK_IMPORTED_MODULE_36__["ToggleHeaderButtonComponent"],
                ng_zorro_antd__WEBPACK_IMPORTED_MODULE_37__["NgZorroAntdModule"],
                _customized_shared_location_grid_customized_shared_grid_component__WEBPACK_IMPORTED_MODULE_49__["CustomizedSharedGridComponent"],
                ng2_right_click_menu__WEBPACK_IMPORTED_MODULE_45__["ShContextMenuModule"],
                primeng_paginator__WEBPACK_IMPORTED_MODULE_40__["PaginatorModule"],
                _app_dcm_modules_upload_componenets_import_import_navbars_import_navbar_component__WEBPACK_IMPORTED_MODULE_61__["ImportNavbarComponent"],
                _app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_66__["GeneralLocationInfoPopupComponent"]
            ],
            entryComponents: [_app_shared_popups_general_location_info_popup_general_location_info_popup_component__WEBPACK_IMPORTED_MODULE_66__["GeneralLocationInfoPopupComponent"]]
        })
    ], SharedModule);
    return SharedModule;
}());



/***/ }),

/***/ "./src/app/shared/toggle-header-button/toggle-header-button.component.css":
/*!********************************************************************************!*\
  !*** ./src/app/shared/toggle-header-button/toggle-header-button.component.css ***!
  \********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = ".mat-icon{\r\n  -webkit-transform: rotate(-90deg);\r\n      -ms-transform: rotate(-90deg);\r\n          transform: rotate(-90deg);\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2hhcmVkL3RvZ2dsZS1oZWFkZXItYnV0dG9uL3RvZ2dsZS1oZWFkZXItYnV0dG9uLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQ0FBeUI7TUFBekIsNkJBQXlCO1VBQXpCLHlCQUF5QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL3NoYXJlZC90b2dnbGUtaGVhZGVyLWJ1dHRvbi90b2dnbGUtaGVhZGVyLWJ1dHRvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC1pY29ue1xyXG4gIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7XHJcbn1cclxuIl19 */"

/***/ }),

/***/ "./src/app/shared/toggle-header-button/toggle-header-button.component.html":
/*!*********************************************************************************!*\
  !*** ./src/app/shared/toggle-header-button/toggle-header-button.component.html ***!
  \*********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = "<!--\r\n<button mat-icon-button (click)=\"toggleFocusMode()\">\r\n  <mat-icon *ngIf=\"(isheaderOpen$ | async); else down\">\r\n    chevron_right\r\n  </mat-icon>\r\n  <ng-template #down>\r\n      <mat-icon>\r\n          chevron_left\r\n        </mat-icon>\r\n  </ng-template>\r\n</button>\r\n-->\r\n"

/***/ }),

/***/ "./src/app/shared/toggle-header-button/toggle-header-button.component.ts":
/*!*******************************************************************************!*\
  !*** ./src/app/shared/toggle-header-button/toggle-header-button.component.ts ***!
  \*******************************************************************************/
/*! exports provided: ToggleHeaderButtonComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ToggleHeaderButtonComponent", function() { return ToggleHeaderButtonComponent; });
/* harmony import */ var _settings_settings_actions__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./../../settings/settings.actions */ "./src/app/settings/settings.actions.ts");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _ngrx_store__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @ngrx/store */ "./node_modules/@ngrx/store/fesm5/store.js");
/* harmony import */ var _app_settings__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @app/settings */ "./src/app/settings/index.ts");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! rxjs/operators */ "./node_modules/rxjs/_esm5/operators/index.js");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var ToggleHeaderButtonComponent = /** @class */ (function () {
    function ToggleHeaderButtonComponent(store) {
        this.store = store;
    }
    ToggleHeaderButtonComponent.prototype.ngOnInit = function () {
        this.isheaderOpen$ = this.store.pipe(Object(_ngrx_store__WEBPACK_IMPORTED_MODULE_2__["select"])(_app_settings__WEBPACK_IMPORTED_MODULE_3__["selectHeaderState"]));
    };
    ToggleHeaderButtonComponent.prototype.toggleFocusMode = function () {
        var _this = this;
        this.isheaderOpen$.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_4__["take"])(1)).subscribe(function (state) {
            _this.store.dispatch(new _settings_settings_actions__WEBPACK_IMPORTED_MODULE_0__["ActionSettingsToggleHeader"]({ open: !state }));
            _this.store.dispatch(new _settings_settings_actions__WEBPACK_IMPORTED_MODULE_0__["ActionSettingsToggleSidenav"]({ open: !state }));
        });
    };
    ToggleHeaderButtonComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"])({
            selector: 'anms-toggle-header-button',
            template: __webpack_require__(/*! ./toggle-header-button.component.html */ "./src/app/shared/toggle-header-button/toggle-header-button.component.html"),
            changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectionStrategy"].OnPush,
            styles: [__webpack_require__(/*! ./toggle-header-button.component.css */ "./src/app/shared/toggle-header-button/toggle-header-button.component.css")]
        }),
        __metadata("design:paramtypes", [_ngrx_store__WEBPACK_IMPORTED_MODULE_2__["Store"]])
    ], ToggleHeaderButtonComponent);
    return ToggleHeaderButtonComponent;
}());



/***/ }),

/***/ "./src/assets/logo.png":
/*!*****************************!*\
  !*** ./src/assets/logo.png ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__.p + "logo.png";

/***/ }),

/***/ "./src/environments/environment.ts":
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/*! exports provided: environment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "environment", function() { return environment; });
// The file contents for the current environment will overwrite these during build.
// The build system defaults to the dev environment which uses `environment.ts`, but if you do
// `ng build --env=prod` then `environment.prod.ts` will be used instead.
// The list of which env maps to which file can be found in `.angular-cli.json`.
var packageJson = __webpack_require__(/*! ../../package.json */ "./package.json");
/* const reference = {
  construction_classes: 'http://localhost:5002/references/constructions/classes',
  construction_codes: 'http://localhost:5002/references/constructions/codes', // with params classe (facultatif)
  counties: 'http://localhost:5002/references/counties', // with params state
  countries: 'http://localhost:5002/references/countries',
  currencies: 'http://localhost:5002/references/currencies',
  occupancies_classes: 'http://localhost:5002/references/occupancies/classes',
  occupancies_codes: 'http://localhost:5002/references/occupancies/codes',
  occupancies_subclasses: 'http://localhost:5002/references/occupancies/subclasses',
  states: 'http://localhost:5002/references/states', // with params country
}; */
var reference = {
    construction_classes: 'http://dcmcheckapp.azurewebsites.net/references/constructions/classes',
    construction_codes: 'http://dcmcheckapp.azurewebsites.net/references/constructions/codes',
    counties: 'http://dcmcheckapp.azurewebsites.net/references/counties',
    countries: 'http://dcmcheckapp.azurewebsites.net/references/countries',
    currencies: 'http://dcmcheckapp.azurewebsites.net/references/currencies',
    occupancies_classes: 'http://dcmcheckapp.azurewebsites.net/references/occupancies/classes',
    occupancies_codes: 'http://dcmcheckapp.azurewebsites.net/references/occupancies/codes',
    occupancies_subclasses: 'http://dcmcheckapp.azurewebsites.net/references/occupancies/subclasses',
    states: 'http://dcmcheckapp.azurewebsites.net/references/states',
};
var environment = {
    appName: 'DCM',
    envName: 'DEV',
    production: false,
    test: false,
    i18nPrefix: '',
    versions: {
        app: packageJson.version,
        angular: packageJson.dependencies['@angular/core'],
        ngrx: packageJson.dependencies['@ngrx/store'],
        material: packageJson.dependencies['@angular/material'],
        bootstrap: packageJson.dependencies.bootstrap,
        rxjs: packageJson.dependencies.rxjs,
        ngxtranslate: packageJson.dependencies['@ngx-translate/core'],
        fontAwesome: packageJson.dependencies['@fortawesome/fontawesome-free'],
        angularCli: packageJson.devDependencies['@angular/cli'],
        typescript: packageJson.devDependencies['typescript']
    },
    /* endPoints: {
  
      upload1: 'http://localhost:5000/import/',
      mapping1: 'http://localhost:5001/mapping',
      template: 'http://localhost:5001/mapping/template',
      check: 'http://localhost:5002/check',
      check_delete: 'http://localhost:5002/check/delete',
      apply_mapping: 'http://localhost:5002/check/apply_mapping',
  
      exposures: 'http://localhost:5002/check/exposures',
      map: 'http://localhost:5002/check/map',
      dashboard: 'http://localhost:5002/check/dashboard',
      cols: 'http://localhost:5002/check/read-column',
      headers: 'http://localhost:5002/check/headers',
      csmetadata: 'http://localhost:5002/check/metadata',
      check_result: 'http://localhost:5002/check/results',
      check_export: 'http://localhost:5002/check/export',
      adjust_tiv: 'http://localhost:5002/check/adjust_tiv',
      apply_modifications: ''http://localhost:5002/check/apply_modifications',
      locations: ''http://localhost:5002/check/locations',
      references: reference,
      search: 'http://localhost:5002/check/read-search',
  
      setting: 'http://localhost:5003/settings',
      validate: 'http://localhost:5003/validate',
  
      // upload1: 'http://167.99.96.85:5000/import/',
      upload: 'http://62.210.188.81:42426/dcm/files/',
      mapping: 'http://62.210.188.81:42426/dcm/mappings/',
      fields: 'http://62.210.188.81:42426/dcm/fields/',
      transform: 'http://62.210.188.81:42426/dcm/transform/',
      flow: 'http://62.210.188.81:42426/dcm/flow/',
    }*/
    endPoints: {
        upload1: 'http://dcmimportms.azurewebsites.net/import/',
        mapping1: 'http://dcmmappingapp.azurewebsites.net/mapping',
        template: 'http://dcmmappingapp.azurewebsites.net/mapping/template',
        check: 'http://dcmcheckapp.azurewebsites.net/check',
        check_delete: 'http://dcmcheckapp.azurewebsites.net/check/delete',
        apply_mapping: 'http://dcmcheckapp.azurewebsites.net/check/apply_mapping',
        add_location: 'http://dcmcheckapp.azurewebsites.net/check/add_location',
        edit_location: 'http://dcmcheckapp.azurewebsites.net/check/edit_location',
        exposures: 'http://dcmcheckapp.azurewebsites.net/check/exposures',
        map: 'http://dcmcheckapp.azurewebsites.net/check/map',
        dashboard: 'http://dcmcheckapp.azurewebsites.net/check/dashboard',
        cols: 'http://dcmcheckapp.azurewebsites.net/check/read-column',
        headers: 'http://dcmcheckapp.azurewebsites.net/check/headers',
        csmetadata: 'http://dcmcheckapp.azurewebsites.net/check/metadata',
        check_result: 'http://dcmcheckapp.azurewebsites.net/check/results',
        check_export: 'http://dcmcheckapp.azurewebsites.net/check/export',
        adjust_tiv: 'http://dcmcheckapp.azurewebsites.net/check/adjust_tiv',
        apply_modifications: 'http://dcmcheckapp.azurewebsites.net/check/apply_modifications/',
        // locations
        exposures_counts: 'http://dcmcheckapp.azurewebsites.net/check/exposures_counts',
        add_locations: 'http://dcmcheckapp.azurewebsites.net/check/add_locations',
        references: reference,
        search: 'http://dcmcheckapp.azurewebsites.net/check/read-search',
        setting: 'http://localhost:5003/settings',
        validate: 'http://localhost:5003/validate',
        // upload1: 'http://167.99.96.85:5000/import/',
        upload: 'http://62.210.188.81:42426/dcm/files/',
        mapping: 'http://62.210.188.81:42426/dcm/mappings/',
        fields: 'http://62.210.188.81:42426/dcm/fields/',
        transform: 'http://62.210.188.81:42426/dcm/transform/',
        flow: 'http://62.210.188.81:42426/dcm/flow/',
    }
};


/***/ }),

/***/ "./src/main.ts":
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "./node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/platform-browser-dynamic */ "./node_modules/@angular/platform-browser-dynamic/fesm5/platform-browser-dynamic.js");
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/app.module */ "./src/app/app.module.ts");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./environments/environment */ "./src/environments/environment.ts");




if (_environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production) {
    Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["enableProdMode"])();
}
Object(_angular_platform_browser_dynamic__WEBPACK_IMPORTED_MODULE_1__["platformBrowserDynamic"])().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_2__["AppModule"]);


/***/ }),

/***/ 0:
/*!***************************!*\
  !*** multi ./src/main.ts ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! C:\F\Jobs\dcm_front\src\main.ts */"./src/main.ts");


/***/ })

},[[0,"runtime","vendor"]]]);
//# sourceMappingURL=main.js.map