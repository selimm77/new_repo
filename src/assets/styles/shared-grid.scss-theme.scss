/*
* Deprecated: Use nova instead
*/

@import '~@angular/material/theming';

@mixin shared-grid-component-theme($theme) {
  $primary: map-get($theme, primary);
  $accent: map-get($theme, accent);
  $warn: map-get($theme, warn);
  $foreground: map-get($theme, foreground);
  $background: map-get($theme, background);

$borderRadius: 2px;
$disabledOpacity: 0.95;

//Header
$headerBorderWidth: 1px;
$headerBorderColor:  lightgrey;
$headerBgColor: mat-color($background, background);
$headerTextColor: mat-color($foreground, text, 0.95);
$headerFontWeight: normal;
$headerIconTextColor: mat-color($foreground, text);

//footer
$footerBorderWidth: 1px;
$footerBorderColor:  lightgrey;
$footerBgColor: mat-color($background, background);
$footerTextColor: mat-color($foreground, text);
$footerFontWeight: bold;
$footerIconTextColor: mat-color($foreground, text);

//Content
$contentBorderWidth: 1px;
$contentBorderColor:  lightgrey;
$contentBgColor: mat-color($background, card);
$contentTextColor: mat-color($foreground, text);

//Highlight State
$stateHighlightBorderColor: inherit;
$stateHighlightBgColor: inherit;
$stateHighlightTextColor: mat-color($accent);

//Hover State
$stateHoverBorderColor: mat-color($primary, lighter);
$stateHoverBgColor:mat-color($foreground, divider);
$stateHoverTextColor: mat-color($primary, lighter);

//Default State
$stateDefaultBorderWidth: 1px;
$stateDefaultBorderColor: transparent;
$stateDefaultBgColor: transparent;
$stateDefaultTextColor: mat-color($foreground, text, 0.5);

//Active State
$stateActiveBorderColor: transparent;
$stateActiveBgColor: mat-color($foreground, divider);
$stateActiveTextColor: mat-color($foreground, text) !important;
$stateActivefontWeight: bold;

//Focus State
$stateFocusBorderColor: #68727B;
$stateFocusBgColor: #6580A1;
$stateFocusTextColor: #ffffff;

//Error State
$stateErrorBorderColor: #9e0505;
$stateErrorBgColor: #cd0a0a;
$stateErrorTextColor: #ffffff;

//Forms
$inputBgColor: #ffffff;
$inputTextColor: #222222;
$invalidInputBorderColor: #ff0084;
$inputGroupTextColor: #ffffff;



  .ui-table {
    .ui-table-thead > tr > th
    {
      text-align: center;
      font-weight: $headerFontWeight;
    }
    .ui-table-thead > tr > th {
      background-color: $headerBgColor;
      border: 1px solid $headerBorderColor;
      color: $headerTextColor;
      font-size: 10px;
      font-weight: bold;
    }
    .ui-table-tfoot > tr > td {
        background-color: $footerBgColor;
        border: 1px solid $footerBorderColor;
        color: $footerTextColor;
    }

    .ui-table-tbody > tr {
        background-color: $contentBgColor;
        color: $contentTextColor;

        > td {
            border: 1px solid $contentBorderColor;
            background-color: inherit;

            &.empty-cell
            {
              background: mat-color($warn, lighter) !important;
            }
        }

        &.ui-state-highlight {
            background-color: $stateHighlightBgColor;
            color: $stateHighlightTextColor;
        }

        &.ui-contextmenu-selected {
            background-color: $stateHighlightBgColor;
            color: $stateHighlightTextColor;
        }
    }

    .ui-sortable-column {
        .ui-sortable-column-icon {
            color: $headerTextColor;
        }

        &.ui-state-highlight {
            background-color: $stateHighlightBgColor;
            color: $stateHighlightTextColor;

            .ui-sortable-column-icon {
                color: $stateHighlightTextColor;
            }
        }

        &:not(.ui-state-highlight):hover {
            background-color: $stateHoverBgColor;
            color: $stateHoverTextColor;

            .ui-sortable-column-icon {
                color: $stateHoverTextColor;
            }
        }
    }

    &.ui-table-hoverable-rows {
        .ui-table-tbody > tr:not(.ui-state-highlight):not(.ui-contextmenu-selected):hover {
            cursor: pointer;
            background-color: $stateHoverBgColor;
            color: $stateHoverTextColor;
        }
    }
}

@media ( max-width: 35em ) {
    .ui-table-responsive .ui-table-tbody > tr {
        border-top: 1px solid $contentBorderColor;
        border-bottom: 1px solid $contentBorderColor;
    }
}

/* Row Reorder */
.ui-table .ui-table-tbody > tr.ui-table-dragpoint-top > td {
    box-shadow: inset 0 2px 0 0 $stateHighlightBgColor;
}

.ui-table .ui-table-tbody > tr.ui-table-dragpoint-bottom > td {
    box-shadow: inset 0 -2px 0 0 $stateHighlightBgColor;
}

.ui-table .ui-paginator-bottom{
  background-color: $footerBgColor;
  border-top: 1px solid $footerBorderColor;
  color: $footerTextColor;
}

.ui-widget {
  :active {
      outline: none;
  }
}

.ui-widget-content {
  border: $contentBorderWidth solid $contentBorderColor;
  background-color: $contentBgColor;
  color: $contentTextColor;

  a {
      color: $contentTextColor;
  }
}

.ui-widget-overlay {
  background-color: mat-color($background, card);
  opacity: .90;
  filter:Alpha(Opacity=50);
}

.ui-widget:disabled {
  opacity: $disabledOpacity;
  filter: Alpha(Opacity= $disabledOpacity * 100);
  background-image: none;
  cursor: default !important;

  * {
      cursor: default !important;
  }
}

.ui-state-default {
  border: $stateDefaultBorderWidth solid $stateDefaultBorderColor;
  background-color: $stateDefaultBgColor;
  color: $stateDefaultTextColor;
  border-radius: $borderRadius;

  a {
      color: $stateDefaultTextColor ;
  }
}

.ui-state-active {
  border-color: $stateActiveBorderColor;
  background-color: $stateActiveBgColor;
  color: $stateActiveTextColor;
  font-weight: $stateActivefontWeight;

  a {
      color: $stateActiveTextColor;
  }
}

.ui-state-highlight  {
  border-color: $stateHighlightBorderColor;
  background-color: $stateHighlightBgColor;
  color: $stateHighlightTextColor;

  a {
      color: $stateHighlightTextColor;
  }
}

.ui-state-focus {
  border-color: $stateFocusBorderColor;
  background-color: $stateFocusBgColor;
  color: $stateFocusTextColor;

  a {
      color: $stateFocusTextColor;
  }
}

.ui-state-error {
  border-color: $stateErrorBorderColor;
  background-color: $stateErrorBgColor;
  color: $stateErrorTextColor;

  a {
      color: $stateErrorTextColor;
  }
}

.ui-state-hover {
  border-color: $stateHoverBorderColor;
  background-color: $stateHoverBgColor;
  color: $stateHoverTextColor;

  a {
      color: $stateHoverTextColor;
  }
}

.ui-table-search{
  width:100%;
  padding: 0.5 0.25em;
}

  .ui-table .ui-table-tbody > tr > td:focus-within{
    border: 1px solid $stateActiveBorderColor;
  }

  .ui-table .ui-table-tbody > tr:first-child{
    .ui-editing-cell
    {
      border-top-width: 1px !important;
    }
  }

  .ui-editing-cell{
    border: 2px solid mat-color($accent) !important;
    //box-shadow: 0px 0px 2px 2px rgba(185, 185, 185, 0.43137254901960786);
    box-shadow: -2px -2px 6px 1px rgba(185, 185, 185, 0.51);
    input{
      padding: 0em 0.5em;
    }
  }

  input.ui-table-search {
    border: 1px solid lightgray;
    height: 100%;
    padding: 0.25em;
    }

}
